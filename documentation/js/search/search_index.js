var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.634,1,1.11]],["body/components/AppComponent.html",[0,1.035,1,1.928,2,1.874,3,0.211,4,0.211,5,1.486,6,1.486,7,1.486,8,1.486,9,0.163,10,3.446,11,1.277,12,2.765,13,2.497,14,2.079,15,1.973,16,5.983,17,1.973,18,5.33,19,0.262,20,0.69,21,5.983,22,5.983,23,0.814,24,3.071,25,2.333,26,0.926,27,5.33,28,0.657,29,0.019,30,0.727,31,0.281,32,0.587,33,2.791,34,1.534,35,1.46,36,4.076,37,0.948,38,4.574,39,4.016,40,0.607,41,0.587,42,2.082,43,0.187,44,0.427,45,2.221,46,2.791,47,4.016,48,4.016,49,2.791,50,1.342,51,1.874,52,1.973,53,1.486,54,1.505,55,1.486,56,1.486,57,1.215,58,1.486,59,1.215,60,1.486,61,1.973,62,1.215,63,0.857,64,1.215,65,1.505,66,1.486,67,1.215,68,1.486,69,1.215,70,1.486,71,1.156,72,2.359,73,1.215,74,1.486,75,1.486,76,1.156,77,1.277,78,1.215,79,1.486,80,1.156,81,1.277,82,1.277,83,1.156,84,1.342,85,1.156,86,0.996,87,1.342,88,1.486,89,1.486,90,0.014,91,0.014]],["title/modules/AppModule.html",[92,2.549,93,2.549]],["body/modules/AppModule.html",[1,2.057,3,0.14,4,0.14,9,0.108,13,0.888,29,0.02,40,0.848,41,0.388,43,0.124,44,0.282,50,0.888,57,1.802,59,1.802,62,1.802,64,1.802,65,1.406,67,1.802,69,1.802,71,1.714,73,1.802,76,1.714,77,0.844,78,1.802,80,1.714,81,0.844,82,1.265,83,1.714,84,1.896,85,1.714,86,0.659,90,0.01,91,0.01,92,1.846,93,5.284,94,1.698,95,1.846,96,4.094,97,2.608,98,3.414,99,2.031,100,2.279,101,2.279,102,2.279,103,2.279,104,3.807,105,3.807,106,3.807,107,3.807,108,5.299,109,4.546,110,5.299,111,4.869,112,5.299,113,4.546,114,3.414,115,2.279,116,2.031,117,2.656,118,3.414,119,2.656,120,2.656,121,2.656,122,3.414,123,3.979,124,3.414,125,2.031,126,3.979,127,1.575,128,2.656,129,2.656,130,3.979,131,1.829,132,1.94,133,2.656,134,2.031,135,3.979,136,2.765,137,2.031,138,2.656,139,2.031,140,2.031,141,3.979,142,2.656,143,1.469,144,1.469,145,3.414,146,1.846,147,2.656,148,2.279,149,2.656,150,2.656,151,1.698,152,2.279,153,3.979,154,3.979,155,2.656,156,1.846,157,4.869,158,2.93,159,2.031,160,2.656,161,3.979,162,2.279,163,2.656,164,2.031,165,2.656,166,1.846,167,1.846,168,2.656,169,2.031,170,2.656,171,2.656,172,1.846,173,2.031,174,2.656,175,2.031,176,2.031,177,2.656,178,2.656,179,2.656,180,2.656,181,2.656,182,2.656]],["title/modules/AppRoutingModule.html",[92,2.549,107,2.345]],["body/modules/AppRoutingModule.html",[3,0.25,4,0.25,9,0.193,29,0.019,40,0.832,41,0.694,43,0.221,44,0.505,65,1.121,71,1.367,76,1.367,77,1.51,80,1.367,81,1.51,82,1.888,83,1.367,84,1.587,85,1.367,86,1.178,90,0.015,91,0.015,94,3.036,99,3.632,107,3.797,118,4.075,122,5.097,156,3.3,157,5.998,158,2.627,166,3.3,167,3.3,172,3.3,183,4.749,184,4.749,185,5.939,186,4.504,187,2.627,188,3.632,189,4.749,190,3.3,191,4.749,192,4.749,193,6.789,194,4.749,195,4.749,196,4.749,197,5.939,198,4.749,199,4.749,200,4.749,201,4.749,202,4.075,203,4.749,204,4.749,205,4.749,206,4.749,207,4.749,208,4.749,209,4.749,210,4.749]],["title/injectables/AuthenticationService.html",[25,1.431,211,0.783]],["body/injectables/AuthenticationService.html",[3,0.22,4,0.22,9,0.17,14,1.63,19,0.272,23,0.848,25,2.135,26,1.04,28,0.684,29,0.02,30,0.665,31,0.22,32,0.611,40,0.765,41,0.611,43,0.195,44,0.445,45,2.313,77,1.329,90,0.014,91,0.014,152,3.588,211,1.168,212,1.63,213,3.588,214,0.947,215,5.237,216,6.475,217,6.475,218,4.952,219,3.588,220,5.917,221,4.181,222,4.181,223,1.12,224,3.484,225,4.181,226,3.376,227,4.181,228,4.181,229,5.474,230,4.181,231,4.181,232,1.329,233,1.037,234,2.313,235,0.076,236,1.72,237,1.753,238,1.587,239,5.474,240,3.588,241,4.181,242,4.181,243,4.181,244,3.028,245,4.181,246,4.181,247,4.181,248,2.479,249,4.181,250,4.181,251,3.588,252,4.181,253,4.181,254,4.181,255,4.181,256,4.181,257,1.547,258,1.397,259,4.181,260,4.181,261,2.479,262,4.181,263,4.181,264,2.906,265,4.181,266,4.181]],["title/components/CalanderComponent.html",[0,0.634,57,1.11]],["body/components/CalanderComponent.html",[0,0.798,1,0.761,2,1.343,3,0.132,4,0.132,5,0.931,6,0.931,7,0.931,8,0.931,9,0.102,11,0.8,12,2.586,13,2.335,15,1.413,17,1.413,19,0.164,20,0.494,23,0.936,26,1.063,28,0.907,29,0.02,30,0.737,31,0.349,32,0.809,34,1.329,35,1.265,37,0.594,40,0.631,41,0.367,43,0.117,44,0.267,50,0.841,51,1.343,52,1.413,53,0.931,54,1.474,55,0.931,56,0.931,57,1.559,58,0.931,59,0.761,60,0.931,61,1.413,62,0.761,63,0.815,64,0.761,65,1.217,66,0.931,67,0.761,68,0.931,69,0.761,70,0.931,71,0.724,72,1.908,73,0.761,74,1.413,75,0.931,76,0.724,77,0.8,78,0.761,79,0.931,80,0.724,81,0.8,82,0.8,83,0.724,84,0.841,85,0.724,86,0.624,87,0.841,88,0.931,89,0.931,90,0.01,91,0.01,97,1.157,131,1.157,132,1.226,214,0.66,223,0.958,232,0.8,235,0.046,237,1.445,238,1.431,251,4.423,267,2.159,268,1.571,269,4.616,270,4.616,271,4.616,272,3.819,273,2.737,274,1.765,275,3.819,276,4.616,277,4.616,278,3.819,279,3.277,280,3.819,281,3.819,282,3.819,283,2.112,284,3.941,285,2.513,286,3.819,287,3.277,288,5.154,289,3.819,290,2.516,291,1.489,292,2.516,293,4.466,294,2.516,295,2.553,296,2.516,297,2.516,298,2.494,299,2.516,300,2.159,301,2.159,302,1.659,303,2.516,304,0.981,305,1.157,306,3.819,307,5.154,308,2.516,309,2.159,310,1.396,311,2.516,312,2.516,313,2.516,314,2.516,315,3.819,316,2.516,317,3.819,318,1.491,319,1.924,320,2.516,321,2.516,322,4.616,323,2.516,324,2.851,325,3.941,326,1.924,327,2.516,328,2.516,329,1.608,330,1.491,331,1.093,332,2.553,333,1.924,334,2.264,335,2.516,336,2.516,337,2.516,338,2.441,339,2.516,340,1.924,341,2.516,342,2.516,343,1.924,344,2.516,345,2.516,346,2.516,347,2.516,348,2.516,349,2.516,350,2.159,351,2.516,352,2.516,353,2.159,354,2.159,355,2.159,356,2.516,357,2.516,358,2.516,359,2.516,360,1.748,361,2.516,362,2.516,363,1.392,364,2.516,365,2.516,366,2.516,367,2.159,368,2.159,369,2.159,370,2.159,371,2.159,372,2.159,373,2.553,374,2.159,375,2.159,376,2.159,377,2.159,378,3.961,379,2.159,380,2.159,381,2.159,382,2.159,383,1.304,384,5.541,385,2.159,386,1.748,387,2.159,388,2.159,389,1.924,390,2.516,391,2.516,392,1.924,393,2.159,394,2.159,395,1.924,396,3.277,397,1.924,398,2.516,399,3.208,400,3.295,401,2.516,402,2.516,403,2.516,404,2.516,405,3.819,406,3.819,407,1.924,408,2.516,409,2.516,410,2.516]],["title/interfaces/CalanderEvent.html",[235,0.067,291,1.431]],["body/interfaces/CalanderEvent.html",[3,0.243,4,0.243,9,0.188,19,0.3,20,0.755,29,0.019,31,0.394,32,1.034,37,1.765,40,0.664,43,0.272,90,0.015,91,0.015,233,1.667,235,0.117,257,2.565,258,2.246,291,2.274,298,2.911,302,2.919,304,2.62,330,2.734,331,2.004,332,2.551,411,1.799,412,1.622,413,3.716,414,4.669,415,5.138,416,3.089,417,3.958,418,3.205,419,3.958,420,3.958]],["title/interfaces/CalanderEventColor.html",[235,0.067,418,2.549]],["body/interfaces/CalanderEventColor.html",[3,0.269,4,0.269,9,0.208,19,0.333,20,0.805,29,0.019,31,0.353,37,1.645,40,0.708,43,0.29,63,1.43,90,0.016,91,0.016,233,1.543,235,0.122,257,2.302,258,1.711,291,2.613,298,2.558,302,2.224,304,1.996,330,3.035,331,2.224,332,3.706,411,1.996,412,1.8,413,2.831,414,3.557,415,3.915,416,2.859,417,4.393,418,4.323,419,4.393,420,4.393,421,6.7]],["title/injectables/CalendarFacade.html",[211,0.783,422,2.549]],["body/injectables/CalendarFacade.html",[3,0.173,4,0.173,9,0.134,14,1.281,19,0.214,20,0.601,23,0.941,25,2.101,26,1.06,28,0.882,29,0.02,30,0.655,31,0.347,32,0.902,34,1.551,35,1.476,40,0.78,41,0.48,42,1.703,43,0.153,44,0.349,54,1.459,63,0.701,90,0.012,91,0.012,97,1.51,131,1.51,132,1.601,211,0.991,212,1.281,214,0.803,223,1.013,224,3.036,232,1.044,233,1.337,235,0.085,236,1.351,237,1.527,238,1.557,248,1.947,257,1.216,273,3.194,274,1.869,284,4.478,291,2.101,293,2.099,298,1.351,310,1.405,331,1.427,332,2.569,363,1.817,416,2.135,422,3.227,423,2.818,424,3.744,425,2.569,426,3.985,427,3.985,428,3.472,429,5.856,430,2.282,431,4.12,432,3.239,433,4.644,434,2.282,435,4.644,436,3.743,437,3.284,438,3.284,439,2.818,440,3.284,441,3.284,442,3.284,443,4.061,444,3.284,445,3.284,446,2.407,447,3.284,448,2.512,449,1.51,450,2.099,451,2.099,452,2.099,453,2.099,454,3.284,455,2.818,456,1.817,457,2.818,458,2.818,459,2.818,460,2.818,461,2.512,462,2.282,463,2.282,464,3.284,465,2.099,466,3.284,467,3.284,468,3.284,469,2.512,470,2.818,471,1.947,472,2.818,473,2.818,474,3.284,475,3.284,476,3.284,477,3.284,478,3.284,479,3.284,480,3.284,481,3.284,482,3.284,483,2.818,484,3.284,485,3.284,486,3.284,487,3.284,488,3.284,489,3.284,490,3.284,491,3.284,492,3.284,493,2.099,494,3.284,495,3.284,496,3.284,497,3.284,498,2.818,499,3.284,500,3.284,501,3.284,502,3.284,503,2.282,504,3.284,505,3.284]],["title/injectables/CalendarService.html",[211,0.783,432,2.029]],["body/injectables/CalendarService.html",[3,0.113,4,0.113,9,0.087,14,0.836,19,0.14,23,0.435,26,0.966,28,1.022,29,0.02,30,0.774,31,0.354,32,0.912,37,0.506,40,0.675,41,0.313,43,0.1,44,0.228,45,1.186,63,1.01,65,0.985,90,0.009,91,0.009,151,1.371,190,1.49,211,0.72,212,0.836,214,0.584,223,1.055,224,3.299,226,2.848,232,0.682,233,1.549,234,1.186,235,0.086,236,0.882,237,1.733,238,1.351,244,2.848,248,1.271,257,2.257,258,1.395,264,2.346,273,3.392,274,1.263,285,1.645,291,2.688,298,0.882,302,1.813,304,2.008,305,1.552,329,1.371,330,1.271,331,0.932,333,1.64,340,1.64,360,1.49,373,1.186,413,2.848,416,1.552,432,1.867,498,4.692,503,1.49,506,1.84,507,3.375,508,5.927,509,3.375,510,3.375,511,3.375,512,3.375,513,3.375,514,3.375,515,3.375,516,1.64,517,3.026,518,2.144,519,2.346,520,3.375,521,2.144,522,4.174,523,3.375,524,1.505,525,2.144,526,3.375,527,2.434,528,2.144,529,2.158,530,3.375,531,3.937,532,2.144,533,2.144,534,3.375,535,2.144,536,3.375,537,2.144,538,3.375,539,2.144,540,3.375,541,2.144,542,3.375,543,2.144,544,1.64,545,1.64,546,1.64,547,4.181,548,1.49,549,1.84,550,1.64,551,1.64,552,1.64,553,1.64,554,1.64,555,1.84,556,1.84,557,1.186,558,1.112,559,2.144,560,2.144,561,2.144,562,2.144,563,2.144,564,2.144,565,2.144,566,3.375,567,2.581,568,3.582,569,3.375,570,2.144,571,2.144,572,2.144,573,1.271,574,5.148,575,3.937,576,5.148,577,2.144,578,2.144,579,4.174,580,3.375,581,3.375,582,4.734,583,2.144,584,2.144,585,2.144,586,2.144,587,2.144,588,2.144,589,2.144,590,2.144,591,2.144,592,2.144,593,2.144,594,1.49,595,2.144,596,4.062,597,4.734,598,2.144,599,4.062,600,4.062,601,2.896,602,2.896,603,2.896,604,4.174,605,2.144,606,2.896,607,2.144,608,1.49,609,2.144,610,2.144,611,2.144,612,1.112,613,2.144,614,2.144,615,2.144,616,1.84,617,2.144,618,2.144,619,2.144,620,2.144,621,2.144,622,2.144,623,2.144,624,2.144,625,2.896,626,2.144,627,2.144,628,2.144,629,1.64,630,2.144,631,1.84,632,2.144,633,2.144,634,2.144,635,2.144,636,2.144,637,2.144,638,1.84,639,2.144,640,2.144,641,3.192,642,3.375,643,3.62,644,3.026,645,2.144,646,1.64,647,2.144,648,2.144,649,1.84,650,1.186,651,1.371,652,1.84,653,1.84,654,2.144,655,2.144,656,3.375,657,3.375,658,3.375,659,3.375,660,3.375,661,1.84,662,2.144,663,1.64,664,2.144,665,2.144,666,2.144,667,1.84,668,2.144,669,1.49,670,2.144,671,2.144]],["title/components/ClassificationComponentComponent.html",[0,0.634,59,1.11]],["body/components/ClassificationComponentComponent.html",[0,1.031,1,0.907,2,1.53,3,0.158,4,0.158,5,1.11,6,1.11,7,1.11,8,1.11,9,0.122,11,0.953,12,2.66,13,2.402,15,1.61,17,1.61,19,0.195,20,0.563,23,0.608,26,1.037,28,1.018,29,0.019,30,0.799,31,0.346,32,0.909,34,0.863,35,0.821,40,0.679,41,0.438,43,0.14,44,0.319,50,1.002,51,1.53,52,1.61,53,1.11,54,1.326,55,1.11,56,1.11,57,0.907,58,1.11,59,1.699,60,2.519,61,1.61,62,0.907,63,0.64,64,0.907,65,1.326,66,1.11,67,0.907,68,1.11,69,0.907,70,1.11,71,0.863,72,2.079,73,0.907,74,1.11,75,1.11,76,0.863,77,0.953,78,0.907,79,1.11,80,0.863,81,0.953,82,0.953,83,0.863,84,1.002,85,0.863,86,0.744,87,1.002,88,1.11,89,1.11,90,0.011,91,0.011,175,5.205,176,5.205,214,0.752,223,1.076,232,0.953,235,0.055,238,1.027,268,1.789,283,2.406,295,3.107,310,1.882,324,2.406,325,2.293,338,1.916,363,2.832,672,4.035,673,2.293,674,2.654,675,4.394,676,3.733,677,1.89,678,3.915,679,2.912,680,4.35,681,4.35,682,4.35,683,4.35,684,4.35,685,2.293,686,3.107,687,3.733,688,2.573,689,2.998,690,2.908,691,2.998,692,3.733,693,2.998,694,3.327,695,2.998,696,2.998,697,2.998,698,2.998,699,2.998,700,2.998,701,2.998,702,2.573,703,2.998,704,1.916,705,2.084,706,1.916,707,1.554,708,1.378,709,1.462,710,1.916,711,2.998,712,2.998,713,2.573,714,2.293,715,2.998,716,2.998,717,2.998,718,2.998,719,2.573,720,2.998,721,5.12,722,2.573,723,2.998,724,2.998,725,2.998,726,2.998,727,2.998,728,2.998,729,2.998,730,2.998,731,2.998,732,2.998,733,6.574]],["title/interfaces/ClassificationInterface.html",[235,0.067,708,1.686]],["body/interfaces/ClassificationInterface.html",[3,0.264,4,0.264,9,0.204,19,0.327,20,0.795,29,0.019,31,0.35,43,0.337,90,0.016,91,0.016,235,0.13,411,1.956,412,1.763,690,2.445,694,3.883,707,2.6,708,2.824,709,2.445,734,3.828,735,3.828,736,3.588,737,3.206,738,3.206,739,3.206,740,3.206,741,4.245,742,3.206,743,2.774,744,3.206,745,2.774,746,3.206,747,3.206,748,2.6]],["title/injectables/CreateGroupFacade.html",[211,0.783,749,2.549]],["body/injectables/CreateGroupFacade.html",[3,0.16,4,0.16,9,0.124,14,1.183,19,0.198,20,0.568,23,0.89,25,2.203,26,1.021,28,0.844,29,0.02,30,0.84,31,0.315,32,0.753,34,1.484,35,1.413,40,0.751,41,0.443,42,1.573,43,0.141,44,0.323,54,1.217,65,0.716,86,1.279,90,0.011,91,0.011,134,2.321,211,0.937,212,1.183,214,0.759,223,0.977,224,2.275,232,0.965,233,0.753,235,0.08,236,1.248,237,1.473,238,1.521,244,1.679,248,1.799,274,1.949,298,1.248,310,1.559,425,2.428,428,3.349,430,2.109,434,3.05,443,3.553,446,2.275,449,1.395,456,1.679,462,2.109,463,2.109,503,3.05,524,2.048,594,2.109,749,3.05,750,2.604,751,5.155,752,3.356,753,5.649,754,4.388,755,6.441,756,3.943,757,3.349,758,3.943,759,3.125,760,3.035,761,4.388,762,3.035,763,2.604,764,3.035,765,3.035,766,3.035,767,3.035,768,3.035,769,5.155,770,7.155,771,5.155,772,5.155,773,5.155,774,5.155,775,5.155,776,6.824,777,5.155,778,4.424,779,3.035,780,3.035,781,3.035,782,2.321,783,2.321,784,1.94,785,3.035,786,3.035,787,3.035,788,3.035,789,3.035,790,3.035,791,3.035,792,3.035,793,3.035,794,3.035,795,3.035,796,3.035,797,3.035,798,3.035,799,3.035,800,3.035,801,4.388,802,3.035,803,4.388,804,4.388,805,4.388,806,4.388,807,3.035,808,3.035,809,3.035,810,3.035,811,3.035,812,3.035,813,3.035,814,3.035,815,3.035,816,3.035,817,3.035,818,3.035,819,3.035,820,3.035,821,3.035,822,3.035,823,3.766,824,3.035,825,3.035,826,3.035,827,3.035,828,2.604,829,2.321,830,3.035,831,3.766]],["title/classes/EventClass.html",[44,0.39,832,2.549]],["body/classes/EventClass.html",[3,0.214,4,0.214,9,0.166,19,0.265,20,0.697,23,0.826,26,1.11,28,0.881,29,0.02,30,0.779,31,0.378,32,1,34,1.919,35,1.826,37,1.648,43,0.251,44,0.433,90,0.014,91,0.014,214,0.931,223,0.705,235,0.074,237,1.062,258,2.143,298,2.214,305,1.873,363,2.254,383,2.79,412,1.433,524,1.916,558,3.753,748,2.79,832,4.455,833,3.116,834,3.191,835,3.74,836,3.74,837,3.44,838,5.381,839,4.074,840,5.381,841,4.074,842,4.074,843,4.074,844,4.074,845,4.074,846,4.074,847,4.074,848,4.074,849,4.618,850,4.618,851,4.618,852,4.618,853,4.618,854,3.496,855,4.618,856,4.115,857,3.496,858,3.496,859,3.496,860,3.496,861,3.496,862,3.496,863,3.496,864,3.496,865,3.496,866,3.496,867,3.496,868,3.496,869,3.496]],["title/components/EventComponentComponent.html",[0,0.634,62,1.11]],["body/components/EventComponentComponent.html",[0,1.068,1,0.992,2,1.631,3,0.173,4,0.173,5,1.214,6,1.214,7,1.214,8,1.214,9,0.133,11,1.043,12,2.694,13,2.433,15,1.717,17,1.717,19,0.214,20,0.601,23,0.94,25,1.279,26,0.992,28,0.881,29,0.019,30,0.751,31,0.337,32,0.786,40,0.703,41,0.479,43,0.153,44,0.349,50,1.096,51,1.631,52,1.717,53,1.214,54,1.382,55,1.214,56,1.214,57,0.992,58,1.214,59,0.992,60,1.214,61,1.717,62,1.77,63,1.513,64,0.992,65,1.382,66,1.214,67,0.992,68,1.214,69,0.992,70,1.214,71,0.944,72,2.166,73,0.992,74,1.214,75,1.214,76,0.944,77,1.043,78,0.992,79,1.214,80,0.944,81,1.043,82,1.043,83,0.944,84,1.096,85,0.944,86,1.532,87,1.096,88,1.214,89,1.214,90,0.012,91,0.012,139,5.04,140,5.04,214,0.802,223,0.802,235,0.06,283,2.566,305,1.508,310,1.403,324,2.978,400,2.096,524,2.038,608,3.224,672,3.908,673,2.508,675,4.619,676,3.981,677,2.339,678,4.117,685,2.508,686,3.237,687,2.814,688,2.814,702,2.814,705,2.279,706,2.096,714,2.508,759,1.814,784,2.096,837,2.966,870,4.639,871,4.639,872,3.981,873,4.639,874,3.279,875,3.279,876,3.279,877,2.814,878,3.279,879,3.279,880,3.279,881,3.279,882,3.279,883,3.279,884,3.279,885,3.548,886,3.548,887,3.981,888,3.548,889,3.548,890,4.639,891,3.548,892,3.279,893,2.508,894,2.508,895,2.508,896,1.508,897,3.279,898,3.279,899,4.639]],["title/interfaces/EventInterface.html",[235,0.067,524,1.166]],["body/interfaces/EventInterface.html",[3,0.24,4,0.24,9,0.185,19,0.297,20,0.749,29,0.019,30,0.773,31,0.377,32,0.977,37,1.762,43,0.27,44,0.484,90,0.015,91,0.015,235,0.083,237,1.188,258,2.307,298,2.751,383,3.296,411,1.777,412,1.602,524,1.839,558,2.362,748,2.999,832,3.166,834,3.769,835,4.418,836,4.418,837,4.064,849,4.965,850,4.965,851,4.965,852,4.965,853,4.965,854,3.909,855,4.965,856,4.424,857,3.909,858,3.909,859,3.909,860,3.909,861,3.909,862,3.909,863,3.909,864,3.909,865,3.909,866,3.909,867,3.909,868,3.909,869,3.909]],["title/interfaces/EventPageInterface.html",[235,0.067,900,2.549]],["body/interfaces/EventPageInterface.html",[3,0.283,4,0.283,9,0.219,19,0.35,20,0.83,29,0.019,31,0.337,40,0.729,43,0.251,63,1.148,87,2.368,90,0.016,91,0.016,235,0.125,285,3.337,411,2.097,412,1.891,524,2.176,900,4.453,901,4.112,902,4.375,903,5.377,904,4.615]],["title/interfaces/GenreInterface.html",[235,0.067,745,2.029]],["body/interfaces/GenreInterface.html",[3,0.271,4,0.271,9,0.21,19,0.336,20,0.809,29,0.019,31,0.271,43,0.339,90,0.016,91,0.016,235,0.131,411,2.01,412,1.812,690,2.513,694,3.815,707,2.672,708,2.37,709,2.513,734,2.851,735,2.851,736,2.672,737,3.295,738,3.295,739,3.295,740,3.295,741,4.466,742,3.295,743,2.851,744,3.295,745,3.455,746,3.295,747,3.295,748,2.672,905,6.72]],["title/components/GroupCreateComponent.html",[0,0.634,64,1.11]],["body/components/GroupCreateComponent.html",[0,0.838,1,0.824,2,1.426,3,0.143,4,0.143,5,1.008,6,1.008,7,1.008,8,1.008,9,0.111,11,0.866,12,2.62,13,2.366,15,1.501,17,1.501,19,0.177,20,0.525,23,0.822,26,1.058,28,0.446,29,0.019,30,0.757,31,0.337,32,0.707,34,1.167,35,1.111,37,0.643,40,0.684,41,0.398,43,0.127,44,0.29,50,0.911,51,1.426,52,1.501,53,1.008,54,1.266,55,1.008,56,1.008,57,0.824,58,1.008,59,0.824,60,1.008,61,1.501,62,0.824,63,1.395,64,1.623,65,1.66,66,1.008,67,0.824,68,1.008,69,0.824,70,1.008,71,0.784,72,1.985,73,0.824,74,1.008,75,1.008,76,0.784,77,0.866,78,0.824,79,1.008,80,0.784,81,0.866,82,0.866,83,0.784,84,0.911,85,0.784,86,0.676,87,0.911,88,1.008,89,1.008,90,0.01,91,0.01,97,1.252,131,1.252,132,1.328,143,1.507,144,2.243,158,3.822,173,5.284,214,0.701,223,0.928,232,0.866,235,0.05,238,0.957,268,1.668,274,2.043,283,2.243,295,2.243,298,2.206,302,1.762,304,1.581,310,1.623,318,3.4,319,3.101,324,2.243,326,2.083,338,2.592,425,2.243,446,2.102,456,1.507,524,1.289,529,3.666,558,1.412,674,2.51,677,2.104,679,2.781,749,3.985,752,4.102,763,3.479,828,2.338,834,3.18,906,3.822,907,2.338,908,3.101,909,4.843,910,4.054,911,4.843,912,2.818,913,4.156,914,5.364,915,4.603,916,4.054,917,2.338,918,3.096,919,4.054,920,4.603,921,4.054,922,2.724,923,2.724,924,2.724,925,2.724,926,2.724,927,2.724,928,3.479,929,2.724,930,2.724,931,4.156,932,3.479,933,2.724,934,2.724,935,1.615,936,2.724,937,2.338,938,2.724,939,2.724,940,1.741,941,2.724,942,2.724,943,2.724,944,2.724,945,2.338,946,2.724,947,2.724,948,2.724,949,1.615,950,2.724,951,2.724,952,2.724,953,2.724,954,2.083,955,2.724,956,4.054,957,4.054,958,4.054,959,4.054]],["title/components/GroupDetailComponent.html",[0,0.634,67,1.11]],["body/components/GroupDetailComponent.html",[0,0.761,1,0.704,2,1.265,3,0.123,4,0.123,5,0.861,6,0.861,7,0.861,8,0.861,9,0.095,11,0.74,12,2.55,13,2.303,15,1.332,17,1.332,19,0.152,20,0.466,23,0.729,26,1.021,28,0.589,29,0.019,30,0.741,31,0.261,32,0.525,40,0.671,41,0.34,43,0.108,44,0.247,50,0.778,51,1.265,52,1.332,53,0.861,54,1.168,55,0.861,56,0.861,57,0.704,58,0.861,59,0.704,60,0.861,61,1.332,62,0.704,63,1.056,64,0.704,65,1.678,66,0.861,67,1.497,68,0.861,69,0.704,70,0.861,71,0.67,72,1.832,73,0.704,74,0.861,75,0.861,76,0.67,77,0.74,78,0.704,79,0.861,80,0.67,81,0.74,82,0.74,83,0.67,84,0.778,85,0.67,86,0.577,87,0.778,88,0.861,89,0.861,90,0.009,91,0.009,143,1.287,144,2.433,158,3.699,164,5.114,187,1.287,202,3.087,214,0.622,223,1.081,232,0.74,233,1.091,234,1.287,235,0.066,257,1.628,258,1.203,268,1.48,274,1.088,283,1.99,285,1.135,302,1.563,304,1.403,309,3.087,310,1.932,324,1.99,329,1.488,386,1.617,413,1.99,471,2.934,527,1.403,529,3.163,557,1.287,612,1.865,650,3.533,663,5.528,674,2.28,677,1.911,679,2.28,893,1.78,894,1.78,896,2.601,906,3.699,918,2.812,935,2.608,940,1.488,949,1.38,954,1.78,960,1.997,961,4.398,962,3.598,963,4.949,964,3.784,965,4.247,966,3.784,967,3.163,968,3.087,969,3.163,970,3.784,971,1.997,972,3.42,973,3.718,974,3.598,975,2.327,976,2.327,977,2.327,978,2.327,979,2.327,980,1.997,981,2.327,982,2.327,983,2.327,984,2.327,985,2.327,986,2.327,987,1.78,988,2.327,989,1.617,990,2.327,991,2.327,992,2.327,993,2.327,994,2.327,995,2.327,996,2.327,997,2.327,998,2.327,999,2.327,1000,2.327,1001,2.327,1002,2.327,1003,2.327,1004,3.087,1005,2.327,1006,3.087,1007,2.327,1008,2.327,1009,2.327,1010,1.997,1011,2.327,1012,3.774,1013,2.327,1014,2.327,1015,2.327,1016,2.327,1017,2.327,1018,2.327,1019,2.327,1020,2.327,1021,2.327,1022,1.78,1023,2.327,1024,2.327,1025,3.598,1026,3.598,1027,3.598,1028,3.598,1029,3.598,1030,2.327,1031,2.327,1032,3.598,1033,4.949,1034,6.601,1035,6.601,1036,2.751,1037,3.087,1038,3.598,1039,3.598,1040,3.087,1041,3.598,1042,3.087,1043,3.598,1044,3.598,1045,2.751,1046,3.598,1047,3.598,1048,3.087,1049,3.598,1050,3.598,1051,3.087,1052,1.78,1053,1.78,1054,2.327,1055,2.327,1056,2.327,1057,2.327]],["title/interfaces/GroupInterface.html",[235,0.067,527,1.431]],["body/interfaces/GroupInterface.html",[3,0.252,4,0.252,9,0.195,19,0.311,20,0.772,29,0.019,30,0.79,31,0.385,37,1.755,40,0.679,43,0.223,63,1.452,90,0.015,91,0.015,233,1.772,235,0.119,257,1.769,258,2.275,305,2.988,411,1.864,412,1.681,471,4.035,524,2.066,527,2.325,557,2.644,612,3.369,650,3.595,748,2.478,1022,5.204,1058,5.84,1059,4.779,1060,4.779,1061,4.779]],["title/components/GroupListComponent.html",[0,0.634,69,1.11]],["body/components/GroupListComponent.html",[0,0.981,1,1.093,2,1.745,3,0.19,4,0.19,5,1.337,6,1.337,7,1.337,8,1.337,9,0.147,11,1.149,12,2.729,13,2.465,15,1.837,17,1.837,19,0.235,26,0.877,28,0.591,29,0.019,30,0.778,31,0.298,32,0.528,40,0.565,41,0.528,43,0.168,44,0.384,50,1.208,51,1.745,52,1.837,53,1.337,54,1.51,55,1.337,56,1.337,57,1.093,58,1.337,59,1.093,60,1.337,61,1.837,62,1.093,63,1.365,64,1.093,65,1.702,66,1.337,67,1.093,68,1.337,69,1.846,70,1.337,71,1.04,72,2.259,73,1.093,74,2.098,75,1.337,76,1.04,77,1.149,78,1.093,79,1.337,80,1.04,81,1.149,82,1.149,83,1.04,84,1.208,85,1.04,86,0.897,87,1.208,88,1.337,89,1.337,90,0.013,91,0.013,158,3.376,159,4.668,214,0.858,223,0.625,235,0.066,238,0.853,283,2.746,287,4.259,295,3.136,310,1.093,324,2.746,325,3.796,399,2.511,400,2.31,407,2.763,527,2.38,557,1.999,612,2.573,906,3.376,1062,3.101,1063,5.669,1064,4.963,1065,4.963,1066,3.796,1067,5.669,1068,3.613,1069,3.613,1070,3.613,1071,3.613,1072,3.613,1073,3.613,1074,3.613,1075,4.963,1076,4.963,1077,4.963,1078,4.259,1079,3.613,1080,3.613,1081,3.613,1082,3.613,1083,2.763,1084,3.613]],["title/components/GroupPageComponent.html",[0,0.634,71,1.056]],["body/components/GroupPageComponent.html",[0,0.811,1,0.78,2,1.368,3,0.136,4,0.136,5,0.955,6,0.955,7,0.955,8,0.955,9,0.105,11,0.82,12,2.597,13,2.345,15,1.441,17,1.441,19,0.168,20,0.504,23,0.789,26,1.068,28,0.767,29,0.02,30,0.681,31,0.339,32,0.818,34,1.12,35,1.066,37,0.609,40,0.716,41,0.377,43,0.12,44,0.274,50,0.862,51,1.368,52,1.441,53,0.955,54,1.323,55,0.955,56,0.955,57,0.78,58,0.955,59,0.78,60,0.955,61,1.441,62,0.78,63,0.55,64,0.78,65,1.667,66,0.955,67,0.78,68,0.955,69,0.78,70,0.955,71,1.503,72,1.932,73,0.78,74,0.955,75,0.955,76,0.743,77,0.82,78,0.78,79,0.955,80,0.743,81,0.82,82,0.82,83,0.743,84,0.862,85,0.743,86,0.64,87,1.567,88,0.955,89,0.955,90,0.01,91,0.01,97,1.186,131,1.186,132,1.258,143,1.427,144,2.593,158,3.851,187,1.427,214,0.673,223,1.019,233,1.295,235,0.071,237,0.673,238,0.919,258,1.567,268,1.601,274,1.904,295,2.593,310,1.904,318,3.492,319,2.976,326,1.973,414,2.705,424,2.705,449,1.186,527,2.036,529,3.337,612,1.337,674,2.43,677,2.036,679,2.706,706,1.649,896,2.4,906,3.851,908,3.992,912,2.705,913,4.022,918,2.996,920,3.34,928,3.34,931,4.022,932,3.34,935,2.308,937,2.214,940,1.649,949,2.779,954,1.973,967,3.337,969,3.337,971,2.214,972,1.649,987,3.584,1004,2.214,1051,3.34,1066,3.992,1085,1.529,1086,3.892,1087,2.996,1088,2.488,1089,3.892,1090,4.687,1091,3.892,1092,3.892,1093,5.22,1094,3.894,1095,2.976,1096,3.892,1097,2.579,1098,2.214,1099,2.579,1100,2.579,1101,2.579,1102,2.214,1103,2.214,1104,2.579,1105,2.214,1106,2.214,1107,2.579,1108,2.579,1109,1.973,1110,1.973,1111,1.793,1112,2.579,1113,2.579,1114,2.579,1115,2.579,1116,2.579,1117,2.579,1118,2.214,1119,2.579,1120,2.579,1121,2.579,1122,2.579,1123,2.579,1124,2.579,1125,2.579,1126,2.579,1127,2.579,1128,2.579,1129,2.579,1130,2.579,1131,2.579,1132,2.214,1133,5.22,1134,3.892,1135,3.892,1136,2.705,1137,3.892,1138,3.892]],["title/injectables/GroupService.html",[211,0.783,757,2.175]],["body/injectables/GroupService.html",[3,0.111,4,0.111,9,0.086,14,0.82,19,0.137,23,0.426,26,0.979,28,1.036,29,0.02,30,0.841,31,0.339,32,0.925,36,1.607,37,1.465,40,0.706,41,0.307,43,0.098,44,0.223,45,1.163,63,1.088,65,1.465,90,0.008,91,0.008,151,1.344,211,0.709,212,0.82,214,0.575,223,1.073,224,3.338,226,3.141,232,0.668,233,1.66,234,1.163,235,0.085,236,0.865,237,1.725,238,1.34,244,2.999,248,1.97,257,2.418,258,1.565,264,2.309,274,1.542,291,0.82,302,1.444,304,1.296,318,1.97,329,1.344,330,1.246,331,0.913,333,1.607,340,1.607,350,1.804,360,2.309,383,1.09,392,1.607,413,1.163,414,2.863,415,1.607,416,0.966,431,2.541,432,2.59,469,1.607,471,2.776,517,2.993,519,2.863,524,1.488,527,2.714,529,2.124,531,3.9,544,2.541,545,1.607,546,1.607,547,3.151,548,1.461,549,1.804,550,1.607,551,1.607,552,1.607,553,1.607,554,1.607,555,1.804,557,1.163,558,1.09,567,1.607,575,2.541,594,2.309,596,1.804,599,1.804,600,2.851,601,1.804,602,1.804,603,1.804,606,1.804,608,1.461,612,2.427,625,1.804,629,1.607,631,2.851,638,1.804,641,4.146,643,4.146,644,2.634,646,2.541,649,1.804,650,2.279,669,1.461,704,1.344,752,2.541,757,1.97,831,1.804,834,1.97,835,1.461,836,1.461,837,1.344,885,1.607,888,1.607,889,1.607,891,1.607,896,0.966,964,2.541,966,2.541,967,2.124,970,2.541,1022,4.146,1045,1.607,1058,4.018,1139,1.804,1140,2.851,1141,3.322,1142,3.322,1143,2.541,1144,3.322,1145,2.102,1146,4.12,1147,3.254,1148,2.102,1149,3.322,1150,2.102,1151,3.322,1152,2.102,1153,3.322,1154,2.102,1155,3.322,1156,2.102,1157,2.102,1158,3.322,1159,2.102,1160,3.322,1161,2.102,1162,3.322,1163,2.102,1164,3.322,1165,2.102,1166,3.322,1167,2.102,1168,3.322,1169,2.102,1170,2.102,1171,2.102,1172,2.309,1173,1.804,1174,1.461,1175,1.804,1176,2.102,1177,2.102,1178,2.102,1179,2.102,1180,2.102,1181,2.102,1182,2.102,1183,2.102,1184,2.102,1185,2.102,1186,2.102,1187,2.102,1188,2.102,1189,2.102,1190,2.102,1191,2.102,1192,3.322,1193,2.102,1194,1.804,1195,2.102,1196,1.804,1197,2.102,1198,2.102,1199,2.102,1200,2.102,1201,3.322,1202,3.322,1203,3.322,1204,4.12,1205,2.102,1206,2.102,1207,2.102,1208,2.102,1209,2.102,1210,5.421,1211,3.322,1212,2.102,1213,2.102,1214,1.804,1215,2.102,1216,2.851,1217,2.102,1218,2.102,1219,3.536,1220,1.804,1221,2.102,1222,3.322,1223,2.102,1224,2.102,1225,2.102,1226,2.102,1227,2.102,1228,2.102,1229,4.12,1230,4.682,1231,2.102,1232,2.102,1233,4.12,1234,2.102,1235,2.102,1236,2.102,1237,3.322,1238,2.102,1239,2.102,1240,2.102,1241,2.102,1242,2.102,1243,2.102,1244,2.102,1245,2.102,1246,2.102,1247,2.102,1248,2.102,1249,2.851,1250,2.102,1251,2.102,1252,1.804,1253,2.102,1254,2.102,1255,2.102]],["title/pipes/GroupmemberPipePipe.html",[104,2.345,1256,2.029]],["body/pipes/GroupmemberPipePipe.html",[3,0.273,4,0.273,9,0.211,11,1.65,26,0.803,28,0.85,29,0.019,30,0.819,31,0.273,32,0.758,37,1.481,40,0.714,41,0.758,43,0.242,44,0.552,90,0.016,91,0.016,104,4.01,169,4.797,214,0.898,223,0.898,233,1.673,235,0.095,237,1.353,268,2.135,449,2.386,612,2.691,906,3.469,1078,5.382,1132,4.454,1256,3.469,1257,3.607,1258,4.454,1259,3.318,1260,5.19,1261,5.19,1262,4.797,1263,5.19]],["title/injectables/GrouppageFacadeService.html",[211,0.783,1094,2.549]],["body/injectables/GrouppageFacadeService.html",[3,0.167,4,0.167,9,0.129,14,1.235,19,0.206,20,0.586,23,0.918,25,2.059,26,1.079,28,0.864,29,0.02,30,0.642,31,0.351,32,0.771,34,1.754,35,1.67,37,1.496,40,0.802,41,0.463,42,1.642,43,0.148,44,0.337,54,1.069,65,1.247,90,0.011,91,0.011,97,1.456,127,1.878,131,1.456,132,1.544,211,0.966,212,1.235,214,0.783,223,1.054,226,3.506,232,1.007,233,0.786,235,0.096,236,1.303,237,1.18,238,1.575,257,1.173,258,1.513,274,1.843,291,1.235,293,2.025,310,1.598,331,1.376,332,1.752,334,1.878,416,1.456,425,2.504,428,3.416,430,2.202,432,1.752,434,2.202,443,4.212,446,2.346,448,2.423,449,1.456,450,2.025,451,2.025,452,2.025,453,2.025,456,1.752,461,2.423,462,2.202,463,2.202,465,2.893,493,2.893,527,2.059,573,3.416,669,2.202,704,2.025,756,4.039,757,3.416,782,2.423,967,2.893,1094,3.146,1111,2.202,1143,4.406,1172,2.202,1174,2.202,1264,6.044,1265,2.202,1266,4.532,1267,4.532,1268,4.532,1269,3.884,1270,3.884,1271,3.168,1272,3.168,1273,3.884,1274,3.168,1275,3.168,1276,3.884,1277,2.719,1278,2.423,1279,4.944,1280,2.719,1281,2.719,1282,2.719,1283,2.202,1284,2.719,1285,2.719,1286,2.719,1287,2.719,1288,3.168,1289,2.719,1290,2.719,1291,2.719,1292,2.719,1293,2.719,1294,2.719,1295,2.719,1296,2.719,1297,2.719,1298,3.884,1299,2.719,1300,2.719,1301,2.719]],["title/pipes/GrouppipePipe.html",[105,2.345,1256,2.029]],["body/pipes/GrouppipePipe.html",[3,0.263,4,0.263,9,0.204,11,1.591,26,0.774,28,0.819,29,0.019,30,0.806,31,0.263,32,0.731,35,1.371,40,0.755,41,0.731,43,0.233,44,0.532,90,0.016,91,0.016,105,3.922,214,0.865,223,0.865,233,1.646,235,0.112,237,1.6,257,2.271,268,2.058,305,2.82,449,2.301,527,2.767,906,3.393,1111,3.478,1220,4.294,1256,3.393,1257,3.478,1259,3.199,1262,4.691,1302,4.294,1303,6.134,1304,5.004,1305,6.134,1306,5.004,1307,5.004,1308,5.004,1309,5.004,1310,5.004,1311,5.004]],["title/interfaces/IdClassType.html",[235,0.067,690,1.788]],["body/interfaces/IdClassType.html",[3,0.271,4,0.271,9,0.21,19,0.336,20,0.809,29,0.019,31,0.368,43,0.339,90,0.016,91,0.016,235,0.131,411,2.01,412,1.812,690,3.045,694,3.709,707,3.484,708,2.37,709,2.513,734,2.851,735,2.851,736,2.672,737,3.295,738,3.295,739,3.295,740,3.295,741,4.466,742,3.295,743,2.851,744,3.295,745,2.851,746,3.295,747,3.295,748,2.672]],["title/interfaces/IdName.html",[235,0.067,694,1.902]],["body/interfaces/IdName.html",[3,0.268,4,0.268,9,0.207,19,0.332,20,0.803,29,0.019,30,0.813,31,0.327,37,1.643,43,0.338,90,0.016,91,0.016,235,0.13,258,2.235,411,1.987,412,1.792,690,2.484,694,3.697,707,2.641,708,2.343,709,2.484,734,2.819,735,2.819,736,2.641,737,3.257,738,3.257,739,3.257,740,3.257,741,4.275,742,3.257,743,2.819,744,3.257,745,2.819,746,3.257,747,3.257,748,2.641]],["title/pipes/InwatchlistPipe.html",[106,2.345,1256,2.029]],["body/pipes/InwatchlistPipe.html",[3,0.265,4,0.265,9,0.205,11,1.598,26,0.778,28,0.823,29,0.019,30,0.808,31,0.265,32,0.734,36,3.844,40,0.7,41,0.734,43,0.234,44,0.534,54,1.187,86,1.649,90,0.016,91,0.016,106,3.932,136,4.275,214,0.869,223,0.869,235,0.092,237,1.604,268,2.068,305,2.828,363,2.781,524,2.298,558,2.606,672,3.647,856,3.844,872,5.279,1252,4.314,1256,3.403,1257,3.493,1259,3.213,1262,4.704,1312,4.314,1313,6.151,1314,5.027,1315,3.844,1316,4.314]],["title/components/ListEventsComponent.html",[0,0.634,73,1.11]],["body/components/ListEventsComponent.html",[0,1.036,1,1.217,2,1.876,3,0.212,4,0.212,5,1.489,6,1.489,7,1.489,8,1.489,9,0.164,11,1.279,12,2.765,13,2.497,15,1.975,17,1.975,19,0.262,26,0.826,29,0.019,30,0.649,31,0.281,34,1.536,35,1.462,40,0.607,41,0.588,43,0.187,44,0.428,50,1.345,51,1.876,52,1.975,53,1.489,54,1.506,55,1.489,56,1.489,57,1.217,58,1.489,59,1.217,60,1.489,61,1.975,62,1.217,63,0.858,64,1.217,65,1.506,66,1.489,67,1.217,68,1.489,69,1.217,70,1.489,71,1.158,72,2.361,73,1.929,74,2.616,75,1.489,76,1.158,77,1.279,78,1.217,79,1.489,80,1.158,81,1.279,82,1.279,83,1.158,84,1.345,85,1.158,86,1.486,87,1.345,88,1.489,89,1.489,90,0.014,91,0.014,136,4.162,137,4.58,235,0.073,283,2.952,285,3.109,324,3.312,524,1.904,672,3.55,784,2.572,904,3.452,1315,3.076,1317,3.452,1318,5.988,1319,5.336,1320,4.023,1321,4.023]],["title/components/LoginPageComponent.html",[0,0.634,76,1.056]],["body/components/LoginPageComponent.html",[0,0.899,1,0.931,2,1.558,3,0.162,4,0.162,5,1.139,6,1.139,7,1.139,8,1.139,9,0.125,11,0.978,12,2.67,13,2.411,15,1.64,17,1.64,19,0.338,23,0.898,25,2.217,26,0.804,28,0.504,29,0.019,30,0.631,31,0.162,32,0.449,40,0.591,41,0.449,42,1.595,43,0.143,44,0.327,50,1.028,51,1.558,52,1.64,53,1.139,54,1.342,55,1.139,56,1.139,57,0.931,58,1.139,59,0.931,60,1.139,61,1.64,62,0.931,63,0.656,64,0.931,65,1.342,66,1.139,67,0.931,68,1.139,69,0.931,70,1.139,71,0.886,72,2.104,73,0.931,74,1.139,75,1.139,76,1.636,77,2.105,78,0.931,79,1.139,80,0.886,81,0.978,82,0.978,83,0.886,84,1.028,85,0.886,86,0.763,87,1.737,88,1.139,89,1.139,90,0.011,91,0.011,172,3.951,187,1.702,214,0.767,218,4.347,219,2.64,220,3.803,223,0.767,257,1.64,274,1.572,310,1.341,373,1.702,386,2.138,387,2.64,388,2.64,389,2.353,395,3.973,397,3.389,399,3.08,400,2.833,407,2.353,651,1.967,893,3.389,894,3.389,895,3.973,896,2.388,973,4.187,987,3.973,989,2.138,1052,3.389,1053,3.389,1085,1.824,1087,3.321,1088,2.833,1095,3.389,1109,2.353,1118,2.64,1259,3.321,1322,4.878,1323,5.685,1324,2.64,1325,3.076,1326,3.076,1327,3.076,1328,3.076,1329,3.076,1330,3.076,1331,3.803,1332,3.803,1333,4.432,1334,4.432,1335,4.432,1336,3.076,1337,4.878,1338,4.458,1339,3.076,1340,3.076,1341,4.458,1342,5.171,1343,4.432,1344,3.076,1345,3.076,1346,3.076,1347,3.076,1348,3.076,1349,3.076,1350,3.076,1351,3.076,1352,3.803,1353,3.803,1354,2.64,1355,3.076,1356,4.458,1357,3.076,1358,3.076,1359,3.803,1360,4.432,1361,3.076,1362,3.076,1363,2.353,1364,3.076,1365,5.195,1366,3.076,1367,3.076,1368,2.353,1369,3.803,1370,2.64,1371,3.076,1372,2.353,1373,3.076,1374,3.076,1375,3.076,1376,2.64,1377,3.076,1378,3.076,1379,3.076,1380,3.076,1381,4.432,1382,3.076,1383,2.64]],["title/components/NavigationComponent.html",[0,0.634,78,1.11]],["body/components/NavigationComponent.html",[0,0.991,1,1.115,2,1.769,3,0.194,4,0.194,5,1.364,6,1.364,7,1.364,8,1.364,9,0.15,11,1.171,12,2.736,13,2.471,15,1.862,17,1.862,19,0.24,20,0.651,23,0.747,24,2.818,25,2.4,26,0.997,28,0.603,29,0.019,30,0.696,31,0.302,32,0.538,33,3.981,34,1.061,35,1.01,37,0.87,40,0.652,41,0.538,43,0.172,44,0.392,50,1.232,51,1.769,52,1.862,53,1.364,54,1.453,55,1.364,56,1.364,57,1.115,58,1.364,59,1.115,60,1.364,61,1.862,62,1.115,63,0.786,64,1.115,65,1.453,66,1.364,67,1.115,68,1.364,69,1.115,70,1.364,71,1.061,72,2.278,73,1.115,74,1.364,75,1.364,76,1.061,77,1.171,78,1.862,79,1.364,80,1.061,81,1.821,82,1.171,83,1.061,84,1.914,85,1.061,86,1.421,87,1.232,88,1.364,89,1.364,90,0.013,91,0.013,187,2.038,214,0.87,218,5.085,223,0.87,268,2.069,273,2.982,310,1.522,424,4.277,674,2.969,677,2.186,679,3.19,713,3.162,877,3.162,973,4.477,989,2.561,1066,3.847,1384,3.162,1385,5.03,1386,5.727,1387,5.03,1388,5.03,1389,3.685,1390,3.685,1391,3.685,1392,3.685,1393,3.685,1394,3.685,1395,3.685,1396,3.685,1397,3.685,1398,5.03]],["title/classes/NewCalendarEvent.html",[44,0.39,436,2.345]],["body/classes/NewCalendarEvent.html",[3,0.246,4,0.246,9,0.19,19,0.305,20,0.762,23,1.305,26,1.099,28,0.766,29,0.02,30,0.569,31,0.356,32,0.683,37,1.52,40,0.733,43,0.218,44,0.498,90,0.015,91,0.015,214,1.018,223,1.018,233,1.597,235,0.107,237,1.22,238,1.105,257,1.732,291,2.295,302,2.557,304,2.295,305,2.151,331,2.033,413,3.255,416,2.151,436,3.762,449,2.151,450,2.991,453,2.991,833,3.579,1399,4.016,1400,6.753,1401,5.884,1402,5.884,1403,4.679,1404,4.679,1405,4.679,1406,4.679,1407,4.679,1408,4.679,1409,4.679,1410,4.679,1411,5.884,1412,5.884,1413,5.884,1414,4.679]],["title/injectables/NotificationService.html",[211,0.783,1147,2.549]],["body/injectables/NotificationService.html",[3,0.191,4,0.191,9,0.148,14,1.416,19,0.236,23,1.01,26,0.946,28,1.001,29,0.02,30,0.743,31,0.322,32,0.893,37,1.513,40,0.696,41,0.53,43,0.169,44,0.386,51,1.751,54,0.857,65,1.176,90,0.013,91,0.013,127,2.153,151,2.321,211,1.063,212,1.416,214,0.861,223,0.983,224,3.432,235,0.066,236,1.494,237,1.482,238,0.857,244,2.008,261,2.153,274,1.939,338,2.321,471,2.153,516,2.777,517,3.91,519,3.461,527,2.644,544,2.777,545,2.777,546,2.777,547,3.808,557,2.008,575,2.777,629,3.808,644,2.321,650,2.755,829,2.777,834,2.153,912,4.251,1010,3.116,1012,4.878,1037,3.116,1042,4.878,1147,3.461,1249,4.274,1283,4.711,1415,3.116,1416,4.98,1417,4.98,1418,4.98,1419,3.631,1420,4.98,1421,3.631,1422,4.98,1423,3.631,1424,4.98,1425,6.116,1426,3.631,1427,3.631,1428,3.631,1429,3.631,1430,3.631,1431,3.631,1432,3.631,1433,3.631,1434,3.631,1435,3.631,1436,4.98,1437,4.98,1438,4.98,1439,3.631,1440,2.777,1441,3.631,1442,3.631,1443,6.116,1444,6.116,1445,3.631,1446,5.684,1447,3.631,1448,3.116,1449,3.631,1450,3.631,1451,3.116,1452,3.116,1453,3.631,1454,3.631,1455,3.631,1456,4.98,1457,3.808,1458,4.98,1459,4.98,1460,4.98,1461,3.631,1462,3.631,1463,3.631]],["title/interfaces/PageInterface.html",[235,0.067,902,2.345]],["body/interfaces/PageInterface.html",[3,0.286,4,0.286,9,0.221,19,0.354,20,0.834,29,0.019,31,0.362,43,0.253,90,0.016,91,0.016,235,0.099,411,2.117,412,1.909,902,4.119,1372,5.255,1464,4.659,1465,5.766,1466,6.872,1467,5.429,1468,5.429,1469,5.429]],["title/components/PersonalCalenderPageComponent.html",[0,0.634,80,1.056]],["body/components/PersonalCalenderPageComponent.html",[0,0.8,1,0.764,2,1.346,3,0.133,4,0.133,5,0.934,6,0.934,7,0.934,8,0.934,9,0.103,11,0.802,12,2.587,13,2.336,15,1.417,17,1.417,19,0.164,20,0.496,23,0.776,26,1.027,28,0.845,29,0.019,30,0.71,31,0.329,32,0.754,34,1.332,35,1.267,40,0.691,41,0.369,43,0.118,44,0.268,50,0.844,51,1.346,52,1.417,53,0.934,54,1.511,55,0.934,56,0.934,57,0.764,58,0.934,59,0.764,60,0.934,61,1.417,62,0.764,63,1.295,64,0.764,65,1.219,66,0.934,67,0.764,68,0.934,69,0.764,70,0.934,71,0.727,72,1.911,73,0.764,74,0.934,75,0.934,76,0.727,77,0.802,78,0.764,79,0.934,80,1.486,81,2.163,82,2.361,83,0.727,84,0.844,85,0.727,86,0.626,87,1.546,88,0.934,89,0.934,90,0.01,91,0.01,97,1.16,131,1.16,132,1.231,143,1.396,144,2.118,166,4.674,214,0.662,223,1.01,235,0.046,237,0.998,238,1.433,268,1.575,273,2.27,274,1.562,279,3.286,285,1.867,291,2.278,293,4.093,298,1.903,301,2.166,302,2.243,304,1.804,305,1.16,310,1.836,331,1.097,363,1.396,367,2.166,368,2.166,369,2.166,370,2.166,371,2.166,372,2.166,373,2.559,374,2.166,375,2.166,376,2.166,377,2.166,378,2.166,379,2.166,380,2.166,381,2.166,382,2.166,383,1.309,385,4.431,413,2.118,416,1.76,422,3.857,426,4.431,427,3.286,436,3.548,439,3.286,450,1.614,453,1.614,455,2.166,483,2.166,594,1.754,674,2.398,677,2.01,679,2.676,829,2.928,886,2.928,917,2.166,918,2.957,935,2.742,940,1.614,949,1.497,969,3.3,1036,2.928,1048,3.286,1085,1.497,1087,2.957,1088,2.448,1098,2.166,1102,2.166,1103,2.166,1105,3.286,1106,2.166,1110,1.93,1451,3.286,1470,5.771,1471,4.763,1472,4.626,1473,4.626,1474,3.829,1475,2.524,1476,2.524,1477,2.524,1478,2.524,1479,2.166,1480,3.286,1481,2.524,1482,2.524,1483,2.524,1484,2.524,1485,2.524,1486,2.524,1487,2.524,1488,2.524,1489,2.524,1490,2.524,1491,2.524,1492,2.524,1493,2.524,1494,2.524,1495,2.524,1496,2.524,1497,2.524,1498,3.286,1499,3.829,1500,3.829,1501,3.829]],["title/injectables/SearchFacadeService.html",[211,0.783,686,2.029]],["body/injectables/SearchFacadeService.html",[3,0.119,4,0.119,9,0.092,14,0.881,19,0.147,20,0.455,23,0.713,24,1.728,25,1.683,26,1.101,28,0.988,29,0.02,30,0.733,31,0.366,32,0.881,33,1.57,34,1.824,35,1.736,37,1.15,40,0.705,41,0.33,42,1.171,43,0.105,44,0.24,46,1.57,49,2.443,54,1.246,63,0.75,86,0.872,90,0.009,91,0.009,211,0.75,212,0.881,214,0.608,223,1.116,232,0.718,233,0.561,235,0.089,236,0.929,237,0.589,238,1.617,274,1.983,295,2.694,310,1.916,334,1.339,363,1.25,373,1.945,425,1.945,428,2.888,443,4.062,446,1.823,449,1.039,456,1.25,465,1.444,493,1.444,524,1.678,548,2.443,573,2.888,677,3.117,686,1.945,690,2.573,692,1.939,705,4.966,707,1.171,708,1.039,710,3.114,719,1.939,734,2.387,736,2.237,758,3.301,759,2.694,783,1.728,784,1.444,896,1.039,902,1.444,949,2.888,1006,3.017,1136,1.57,1174,1.57,1265,1.57,1270,1.939,1278,1.728,1280,1.939,1281,1.939,1282,1.939,1316,1.939,1465,2.689,1502,3.516,1503,3.516,1504,3.017,1505,3.516,1506,3.516,1507,3.516,1508,3.516,1509,3.516,1510,3.017,1511,3.017,1512,3.725,1513,3.516,1514,3.017,1515,3.704,1516,3.516,1517,4.316,1518,3.516,1519,2.259,1520,2.259,1521,2.259,1522,2.259,1523,1.939,1524,2.259,1525,3.704,1526,2.259,1527,1.939,1528,2.259,1529,1.939,1530,2.259,1531,2.259,1532,2.259,1533,2.259,1534,1.939,1535,2.259,1536,2.259,1537,2.259,1538,2.259,1539,2.259,1540,3.516,1541,2.259,1542,2.259,1543,3.516,1544,3.516,1545,3.516,1546,3.516,1547,2.259,1548,2.259,1549,2.259,1550,2.259,1551,2.259,1552,2.259,1553,2.259,1554,2.259,1555,2.259,1556,2.259,1557,1.939,1558,2.259,1559,2.259,1560,2.259,1561,2.259,1562,2.259,1563,2.259,1564,2.259,1565,1.939,1566,2.259,1567,2.259,1568,2.259,1569,2.259,1570,1.939,1571,1.939,1572,1.939,1573,1.939,1574,2.259,1575,2.259,1576,2.259,1577,2.259,1578,2.259,1579,3.516,1580,3.516,1581,2.259,1582,2.259,1583,2.259,1584,2.259,1585,2.259,1586,2.259,1587,1.939,1588,1.939,1589,2.259,1590,2.259,1591,2.259,1592,2.259,1593,2.259,1594,2.259,1595,2.259,1596,2.259,1597,3.516,1598,2.259,1599,2.259,1600,2.259,1601,2.259,1602,3.516,1603,1.939,1604,3.516,1605,3.516,1606,2.259,1607,3.516,1608,3.516,1609,3.017,1610,4.87,1611,3.516,1612,1.939,1613,2.259,1614,2.259,1615,2.259,1616,2.259,1617,2.259,1618,2.259,1619,1.939,1620,3.017,1621,1.939,1622,2.259,1623,2.259]],["title/components/SearchPageComponent.html",[0,0.634,83,1.056]],["body/components/SearchPageComponent.html",[0,0.785,1,0.741,2,1.316,3,0.129,4,0.129,5,0.907,6,0.907,7,0.907,8,0.907,9,0.1,11,0.779,12,2.574,13,2.324,15,1.385,17,1.385,19,0.16,20,0.485,23,0.759,26,1.019,28,0.613,29,0.02,30,0.618,31,0.326,32,0.547,34,1.577,35,1.5,37,0.883,40,0.579,41,0.358,43,0.114,44,0.26,49,1.702,50,0.819,51,1.316,52,1.385,53,0.907,54,1.2,55,0.907,56,0.907,57,0.741,58,0.907,59,0.741,60,0.907,61,1.385,62,0.741,63,0.523,64,0.741,65,1.2,66,0.907,67,0.741,68,0.907,69,0.741,70,0.907,71,0.705,72,1.882,73,0.741,74,0.907,75,0.907,76,0.705,77,0.779,78,0.741,79,0.907,80,0.705,81,0.779,82,0.779,83,1.463,84,2.305,85,0.705,86,0.608,87,1.518,88,0.907,89,0.907,90,0.009,91,0.009,143,1.355,144,2.512,156,4.642,214,0.647,223,0.879,232,0.779,238,1.2,268,1.539,274,1.538,295,3.322,304,0.955,310,1.657,338,1.566,386,2.601,389,1.873,392,2.862,393,2.102,394,3.211,395,4.188,396,2.102,397,4.415,399,3.806,400,3.501,446,1.94,672,3.961,674,2.354,677,1.973,678,3.473,679,2.635,685,1.873,686,2.812,706,1.566,714,1.873,895,3.473,896,2.337,918,2.903,935,2.692,940,1.566,969,3.25,1053,1.873,1083,1.873,1085,1.452,1087,2.903,1088,2.392,1109,2.862,1110,1.873,1136,1.702,1259,3.25,1337,3.897,1338,2.102,1341,2.102,1342,4.7,1352,5.154,1353,2.102,1354,3.211,1356,2.102,1359,2.102,1368,1.873,1369,3.897,1370,2.102,1372,2.862,1376,3.897,1383,4.363,1465,2.862,1479,2.102,1504,3.211,1510,3.211,1515,3.897,1523,2.102,1525,2.102,1587,2.102,1588,2.102,1612,2.102,1624,3.742,1625,3.742,1626,3.742,1627,3.742,1628,2.449,1629,2.449,1630,2.449,1631,2.102,1632,2.102,1633,2.449,1634,2.449,1635,2.102,1636,2.449,1637,2.449,1638,2.449,1639,2.449,1640,2.449,1641,2.449,1642,2.449,1643,2.449,1644,2.449,1645,2.449,1646,2.449,1647,2.449,1648,2.449,1649,5.476,1650,2.449,1651,4.541,1652,2.449,1653,2.449,1654,2.449,1655,2.449,1656,4.541,1657,2.449,1658,2.449,1659,3.742,1660,2.449,1661,3.742,1662,3.742,1663,3.742,1664,2.449,1665,2.449,1666,2.449,1667,2.449,1668,2.449,1669,3.742,1670,2.449,1671,3.742,1672,2.449,1673,2.449,1674,2.449,1675,2.449,1676,2.449,1677,2.449,1678,2.449,1679,2.449,1680,2.449,1681,2.449,1682,2.449,1683,2.449,1684,2.449,1685,2.449,1686,2.449,1687,2.449,1688,3.742,1689,2.449,1690,2.449,1691,2.449,1692,2.449,1693,3.742,1694,2.449,1695,2.449,1696,2.449,1697,2.449,1698,2.449,1699,2.449]],["title/interfaces/SegmentInterface.html",[235,0.067,743,2.029]],["body/interfaces/SegmentInterface.html",[3,0.271,4,0.271,9,0.21,19,0.336,20,0.809,29,0.019,31,0.271,43,0.339,90,0.016,91,0.016,235,0.131,411,2.01,412,1.812,690,2.513,694,3.709,707,2.672,708,2.37,709,2.513,734,2.851,735,2.851,736,2.672,737,3.295,738,3.295,739,3.295,740,3.295,741,4.466,742,3.295,743,3.455,744,3.295,745,3.717,746,3.295,747,3.295,748,2.672,1700,6.72]],["title/injectables/TicketmasterService.html",[211,0.783,710,2.345]],["body/injectables/TicketmasterService.html",[3,0.171,4,0.171,9,0.132,14,1.264,19,0.211,20,0.596,23,0.657,26,0.988,28,0.953,29,0.02,30,0.708,31,0.346,32,0.85,34,0.933,35,0.888,37,1.263,40,0.764,41,0.473,43,0.151,44,0.345,45,1.793,54,1.451,90,0.012,91,0.012,127,1.922,148,2.782,162,2.782,187,1.793,211,0.982,212,1.264,214,0.796,223,0.925,226,3.22,232,1.03,235,0.084,236,1.333,237,1.806,238,1.374,274,2.03,285,1.58,318,2.728,329,2.072,334,1.922,383,1.68,548,3.197,704,2.072,708,1.49,709,1.58,710,2.941,722,2.782,735,1.793,736,1.68,896,2.115,900,3.197,901,2.479,912,3.197,949,2.728,973,4.565,1036,2.479,1083,2.479,1172,2.253,1173,2.782,1175,2.782,1283,4.565,1440,2.479,1511,3.948,1527,2.782,1529,2.782,1603,2.782,1701,2.782,1702,4.601,1703,5.348,1704,4.601,1705,4.601,1706,3.241,1707,5.821,1708,4.601,1709,4.601,1710,3.241,1711,3.241,1712,3.241,1713,3.241,1714,3.241,1715,4.601,1716,5.348,1717,4.601,1718,3.241,1719,3.197,1720,2.479,1721,3.241,1722,3.241,1723,3.241,1724,3.241,1725,3.241,1726,4.601,1727,3.241,1728,3.241,1729,3.241,1730,3.241,1731,3.241,1732,3.241,1733,3.241,1734,3.241,1735,3.241,1736,3.241,1737,3.241,1738,3.241,1739,3.241,1740,3.241,1741,3.241,1742,3.241,1743,3.241,1744,3.241,1745,3.241,1746,3.241,1747,3.241,1748,3.241,1749,3.241,1750,3.241,1751,3.241,1752,3.241,1753,3.241,1754,3.241,1755,3.241,1756,3.241,1757,3.241,1758,3.241,1759,3.241,1760,3.241,1761,3.241,1762,3.241,1763,3.241,1764,3.241,1765,3.241,1766,3.241,1767,3.241,1768,3.241,1769,4.601,1770,3.241,1771,3.241,1772,3.241,1773,3.241,1774,3.241,1775,3.241,1776,3.241,1777,3.241,1778,3.241,1779,3.241,1780,3.241,1781,3.241,1782,3.241,1783,3.241,1784,3.241,1785,3.241,1786,2.782,1787,3.241,1788,3.241,1789,3.241]],["title/interfaces/UserInterface.html",[233,0.91,235,0.067]],["body/interfaces/UserInterface.html",[3,0.282,4,0.282,9,0.218,19,0.349,20,0.827,29,0.019,30,0.86,31,0.36,37,1.776,43,0.249,90,0.016,91,0.016,233,1.585,234,2.96,235,0.098,258,2.365,261,4.194,411,2.087,412,1.882,1790,6.83]],["title/injectables/ViewGroupFacade.html",[211,0.783,972,2.345]],["body/injectables/ViewGroupFacade.html",[3,0.107,4,0.107,9,0.083,14,0.792,19,0.132,20,0.419,23,0.655,25,1.571,26,1.099,28,0.981,29,0.02,30,0.747,31,0.356,32,0.875,34,1.674,35,1.593,37,1.45,40,0.726,41,0.297,42,1.053,43,0.095,44,0.216,54,1.084,63,0.433,65,1.373,90,0.008,91,0.008,97,0.934,127,1.204,131,0.934,132,0.99,211,0.69,212,0.792,214,0.559,215,3.941,223,1.16,224,3.015,226,3.217,232,0.646,233,1.244,235,0.074,236,0.835,237,1.793,238,1.634,244,2.541,248,1.917,257,1.977,258,1.676,261,1.204,274,1.858,284,3.081,285,0.99,291,1.571,293,2.575,298,2.063,300,3.457,305,1.487,310,1.517,331,0.883,332,1.789,334,1.204,353,1.743,354,1.743,355,1.743,416,1.487,424,2.247,425,1.789,428,2.723,430,1.412,431,3.081,432,2.541,434,1.412,443,4.151,446,1.676,448,1.553,449,0.934,450,1.298,451,1.298,452,1.298,453,1.298,456,1.124,457,1.743,458,1.743,459,1.743,460,1.743,461,1.553,462,1.412,463,1.412,465,2.575,469,1.553,470,1.743,471,1.204,472,1.743,473,1.743,493,2.067,503,3.192,527,2.445,573,1.917,612,1.676,644,2.067,650,1.789,661,1.743,667,2.775,669,1.412,704,1.298,756,3.081,757,2.723,782,1.553,823,3.941,887,1.743,896,0.934,964,3.512,965,3.941,966,3.512,967,2.067,968,2.775,970,3.512,972,2.067,980,2.775,1111,1.412,1140,3.941,1143,3.512,1172,1.412,1174,1.412,1266,3.457,1267,3.457,1268,3.457,1269,2.775,1273,2.775,1276,2.775,1279,3.941,1283,3.893,1284,4.303,1285,1.743,1286,1.743,1287,1.743,1289,1.743,1290,1.743,1291,1.743,1292,1.743,1293,1.743,1294,1.743,1295,1.743,1296,1.743,1297,1.743,1298,2.775,1299,1.743,1300,1.743,1301,1.743,1440,1.553,1452,1.743,1471,1.743,1791,1.743,1792,4.028,1793,3.233,1794,3.233,1795,3.233,1796,3.233,1797,3.233,1798,2.031,1799,2.031,1800,2.031,1801,2.031,1802,2.031,1803,2.031,1804,2.031,1805,2.031,1806,2.031,1807,2.031,1808,1.553,1809,2.031,1810,2.031,1811,3.233,1812,2.031,1813,2.031,1814,2.031,1815,2.031,1816,2.031,1817,2.031,1818,2.031,1819,2.031,1820,2.031,1821,2.031,1822,2.031,1823,3.233,1824,2.031,1825,2.031,1826,2.031,1827,2.031,1828,2.031,1829,2.031,1830,2.031,1831,2.031,1832,2.031,1833,2.031,1834,2.031,1835,2.031,1836,2.031,1837,2.031,1838,2.031,1839,2.031,1840,2.031,1841,2.031,1842,2.031,1843,2.031,1844,2.031,1845,2.031,1846,2.031,1847,2.031,1848,2.031,1849,2.031,1850,2.031,1851,2.031,1852,2.031,1853,2.031,1854,2.031,1855,2.031,1856,2.031,1857,2.031,1858,2.031,1859,2.031,1860,2.031,1861,2.031,1862,2.031,1863,2.031,1864,2.031,1865,2.031,1866,3.233,1867,3.233,1868,3.233,1869,2.031,1870,2.031,1871,2.031,1872,2.031,1873,2.031,1874,2.031,1875,2.031,1876,2.031,1877,2.031]],["title/injectables/WatchlistFacadeService.html",[211,0.783,1878,2.549]],["body/injectables/WatchlistFacadeService.html",[3,0.213,4,0.213,9,0.164,14,1.574,19,0.263,20,0.693,23,0.818,25,2.339,26,1.078,28,0.876,29,0.02,30,0.65,31,0.336,32,0.781,33,3.718,34,1.54,35,1.466,40,0.777,41,0.59,42,2.093,43,0.188,44,0.429,45,2.233,46,2.806,49,2.806,54,0.953,63,0.862,86,1.327,90,0.014,91,0.014,211,1.142,212,1.574,214,0.925,223,1.105,232,1.284,233,1.002,235,0.098,236,1.661,238,1.263,274,1.815,310,1.932,425,2.959,428,3.787,443,3.787,446,2.773,449,1.856,456,2.233,465,2.581,493,2.581,524,1.907,573,3.787,677,2.607,758,4.091,759,3.318,783,3.088,784,2.581,1265,2.806,1277,3.465,1278,3.088,1512,4.884,1514,4.591,1534,3.465,1557,3.465,1565,3.465,1570,3.465,1571,3.465,1572,3.465,1573,3.465,1619,3.465,1620,3.465,1621,3.465,1878,3.718,1879,6.07,1880,4.037,1881,5.349,1882,4.037,1883,4.037,1884,4.037,1885,4.037]],["title/components/WatchlistPageComponent.html",[0,0.634,85,1.056]],["body/components/WatchlistPageComponent.html",[0,0.997,1,1.129,2,1.785,3,0.197,4,0.197,5,1.382,6,1.382,7,1.382,8,1.382,9,0.152,11,1.187,12,2.741,13,2.475,15,1.879,17,1.879,19,0.243,20,0.657,23,1.029,26,0.958,28,0.611,29,0.019,30,0.701,31,0.267,32,0.545,40,0.656,41,0.545,43,0.174,44,0.397,50,1.248,51,1.785,52,1.879,53,1.382,54,1.461,55,1.382,56,1.382,57,1.129,58,1.382,59,1.129,60,1.382,61,1.879,62,1.129,63,0.797,64,1.129,65,1.461,66,1.382,67,1.129,68,1.382,69,1.129,70,1.382,71,1.075,72,2.29,73,1.129,74,1.382,75,1.382,76,1.075,77,1.187,78,1.129,79,1.382,80,1.075,81,1.187,82,1.187,83,1.075,84,1.248,85,1.781,86,1.768,87,1.928,88,1.382,89,1.382,90,0.013,91,0.013,167,4.498,214,0.878,223,0.878,268,2.088,285,2.475,310,1.744,674,2.99,677,2.506,679,3.208,686,2.065,706,3.245,935,3.419,969,3.956,1085,2.214,1087,3.687,1088,3.245,1324,3.204,1631,3.204,1632,3.204,1635,3.204,1878,4.301,1886,5.554,1887,5.767,1888,3.734,1889,3.734,1890,3.734,1891,3.734,1892,3.734,1893,3.734,1894,5.076]],["title/injectables/WatchlistService.html",[211,0.783,759,2.029]],["body/injectables/WatchlistService.html",[3,0.168,4,0.168,9,0.13,14,1.248,19,0.208,23,0.649,26,0.984,28,1.041,29,0.02,30,0.795,31,0.335,32,0.929,40,0.696,41,0.467,43,0.149,44,0.34,45,1.77,63,1.453,90,0.012,91,0.012,151,2.045,211,0.973,212,1.248,214,0.788,223,1.058,224,3,226,2.937,232,1.017,233,1.713,234,1.77,235,0.083,236,1.316,237,1.658,238,1.501,244,2.937,257,1.966,258,1.524,264,2.224,274,1.924,318,3.966,383,1.659,516,2.447,517,3.7,519,3.168,524,2.243,531,4.678,550,2.447,551,2.447,552,2.447,553,2.447,554,2.447,556,2.746,558,1.659,573,1.897,608,3.168,641,4.061,643,3.486,644,2.914,646,3.486,759,2.522,834,1.897,835,2.224,836,2.224,837,2.045,885,3.486,888,3.486,889,3.486,891,3.486,1136,2.224,1194,2.746,1196,3.912,1214,2.746,1216,3.912,1315,2.447,1512,3.486,1895,2.746,1896,4.558,1897,4.558,1898,4.558,1899,4.558,1900,3.2,1901,4.558,1902,3.2,1903,4.558,1904,3.2,1905,3.2,1906,3.2,1907,3.2,1908,4.558,1909,3.2,1910,4.558,1911,3.2,1912,3.2,1913,4.558,1914,3.2,1915,3.2,1916,3.2,1917,3.2,1918,3.2,1919,3.2,1920,3.2,1921,3.2,1922,3.2,1923,3.2,1924,3.2,1925,3.2,1926,3.2,1927,3.2,1928,3.2,1929,5.31,1930,5.31,1931,3.2,1932,4.558,1933,3.2,1934,3.2,1935,4.558,1936,3.2,1937,3.2,1938,3.2,1939,3.2,1940,4.558,1941,3.2,1942,3.2,1943,3.2,1944,3.2,1945,3.2]],["title/coverage.html",[1946,4.304]],["body/coverage.html",[0,1.206,1,0.824,9,0.111,10,2.338,25,1.062,29,0.02,31,0.143,44,0.431,57,0.824,59,0.824,62,0.824,64,0.824,67,0.824,69,0.824,71,0.784,73,0.824,76,0.784,78,0.824,80,0.784,82,1.289,83,0.784,85,0.784,86,0.676,90,0.01,91,0.01,104,1.741,105,1.741,106,1.741,136,2.818,137,2.083,139,2.083,140,2.083,146,1.893,156,1.893,158,2.967,159,2.083,164,2.083,166,1.893,167,1.893,169,2.083,172,1.893,173,2.083,175,2.083,176,2.083,188,2.083,211,1.459,213,2.338,233,0.676,234,1.507,235,0.125,238,0.643,267,2.338,291,1.062,302,1.184,304,1.062,330,2.404,331,1.762,343,2.083,412,2.43,418,1.893,422,1.893,423,2.338,432,1.507,436,1.741,451,1.741,452,1.741,506,2.338,524,0.866,527,1.062,557,1.507,558,2.102,672,3.4,673,3.101,686,1.507,690,1.328,694,1.412,705,1.893,708,1.252,709,2.796,710,1.741,743,1.507,745,1.507,749,1.893,750,2.338,757,1.615,759,1.507,832,1.893,896,3.538,900,1.893,901,2.083,902,1.741,906,3.325,907,2.338,960,2.338,972,1.741,1062,2.338,1085,3.4,1094,1.893,1139,2.338,1147,1.893,1256,2.679,1258,2.338,1264,2.338,1265,3.366,1302,2.338,1312,2.338,1317,2.338,1322,2.338,1384,2.338,1399,2.338,1415,2.338,1464,2.338,1470,2.338,1701,2.338,1719,1.893,1720,3.101,1791,2.338,1878,1.893,1879,2.338,1886,2.338,1895,2.338,1946,2.338,1947,2.724,1948,2.724,1949,2.724,1950,6.011,1951,5.364,1952,4.054,1953,4.054,1954,4.843,1955,4.843,1956,2.724,1957,5.364,1958,2.724,1959,4.054,1960,4.054,1961,7.34,1962,2.338,1963,7.264,1964,5.364,1965,4.843,1966,3.101,1967,6.075,1968,2.338,1969,2.338,1970,2.338,1971,2.338,1972,2.338,1973,2.338,1974,2.338,1975,2.338,1976,2.338,1977,2.338,1978,2.338,1979,2.338,1980,2.724,1981,4.054,1982,3.101,1983,2.724,1984,2.724]],["title/dependencies.html",[95,3.068,1985,2.625]],["body/dependencies.html",[29,0.02,41,0.746,90,0.016,91,0.016,95,3.549,97,2.856,124,5.33,125,4.75,127,3.028,131,2.348,132,2.49,134,3.906,143,2.825,144,2.825,187,2.825,232,1.624,273,3.028,1986,5.107,1987,5.107,1988,5.107,1989,6.211,1990,7.345,1991,5.107,1992,5.107,1993,5.107,1994,5.107,1995,5.107,1996,5.107,1997,5.107,1998,5.107,1999,4.383,2000,5.107,2001,5.107,2002,5.107,2003,5.107,2004,5.107,2005,5.107,2006,5.107,2007,5.107]],["title/miscellaneous/enumerations.html",[2008,2.126,2009,3.788]],["body/miscellaneous/enumerations.html",[19,0.328,29,0.019,34,1.45,35,2.072,81,2.115,90,0.016,91,0.016,332,3.407,412,2.166,416,2.832,652,5.71,653,5.71,663,5.088,707,3.193,709,2.456,734,2.787,735,2.787,736,2.612,1966,3.853,2008,3.501,2009,4.323,2010,5.286,2011,5.038,2012,6.16,2013,5.038,2014,5.038,2015,5.038,2016,5.038,2017,5.038,2018,5.038,2019,5.038,2020,5.038,2021,5.038,2022,5.038,2023,5.038,2024,5.038,2025,5.038]],["title/index.html",[19,0.199,2026,3.059,2027,3.059]],["body/index.html",[9,0.168,13,1.379,29,0.017,38,3.541,43,0.192,87,1.379,90,0.014,91,0.014,116,3.156,131,1.897,145,6.01,146,3.772,190,3.772,238,0.974,240,3.541,258,1.379,261,2.447,304,1.609,360,2.868,373,2.283,517,3.877,616,5.204,651,2.638,886,4.15,908,4.638,915,4.657,945,4.657,1040,3.541,1052,3.156,1219,3.541,1331,3.541,1332,3.541,1363,3.156,1368,3.156,1448,3.541,1457,4.15,1498,3.541,1609,4.657,1719,2.868,1786,3.541,1808,3.156,1982,4.638,1999,5.204,2028,6.01,2029,4.127,2030,6.064,2031,4.127,2032,4.127,2033,4.127,2034,6.692,2035,4.127,2036,6.442,2037,4.127,2038,4.127,2039,5.427,2040,6.064,2041,6.064,2042,5.427,2043,4.127,2044,5.427,2045,6.442,2046,6.064,2047,4.127,2048,4.127,2049,5.427,2050,4.127,2051,4.127,2052,4.127,2053,4.127,2054,6.064,2055,4.127,2056,4.127,2057,4.127,2058,4.127,2059,4.127,2060,3.541,2061,6.442,2062,3.541,2063,4.127,2064,3.541,2065,3.541,2066,4.127,2067,3.541,2068,4.127,2069,3.541,2070,4.127,2071,3.541,2072,4.127,2073,3.156,2074,5.427,2075,5.427,2076,5.427,2077,4.127,2078,4.127,2079,4.127,2080,4.127,2081,4.127,2082,4.127,2083,4.127,2084,4.127,2085,4.127,2086,4.127,2087,6.064,2088,4.127,2089,4.127,2090,3.156,2091,4.127,2092,4.127]],["title/modules.html",[94,3.206]],["body/modules.html",[29,0.017,90,0.017,91,0.017,93,4.059,94,3.734,107,3.734,125,4.467,1045,4.467,2093,5.841,2094,5.841,2095,6.725,2096,5.841]],["title/overview.html",[2090,3.835]],["body/overview.html",[1,2.098,2,1.394,29,0.02,50,1.326,57,1.799,59,1.799,62,1.799,64,1.799,67,1.799,69,1.799,71,1.712,73,1.799,76,1.712,78,1.799,80,1.712,83,1.712,85,1.712,90,0.013,91,0.013,92,2.756,93,5.388,94,2.535,95,2.756,96,3.403,97,1.823,98,3.403,99,3.033,100,3.403,101,3.403,102,3.403,103,3.403,104,3.801,105,3.801,106,3.801,107,3.801,108,5.669,109,5.103,110,5.669,111,5.103,112,5.669,113,5.103,114,4.536,115,3.403,116,3.033,186,2.756,212,1.547,411,1.547,651,3.379,833,3.033,1257,2.756,2073,3.033,2090,3.033,2097,3.966,2098,5.286,2099,3.966]],["title/properties.html",[20,0.572,1985,2.625]],["body/properties.html",[20,0.768,29,0.018,90,0.017,91,0.017,1363,4.538,2100,5.934]],["title/routes.html",[186,3.485]],["body/routes.html",[29,0.017,90,0.017,91,0.017,186,4.157]],["title/miscellaneous/variables.html",[2008,2.126,2101,3.788]],["body/miscellaneous/variables.html",[19,0.19,29,0.02,31,0.374,34,2.109,35,2.008,37,0.69,46,2.032,63,1.185,65,1.008,86,1.06,90,0.011,91,0.011,146,2.968,188,3.266,190,2.968,233,1.377,237,0.762,238,1.597,261,3.776,291,1.14,298,1.203,302,1.856,304,1.666,334,3.291,343,3.266,373,1.617,383,2.214,451,2.73,452,2.73,524,1.604,527,1.666,567,3.266,568,3.665,650,2.363,651,3.226,778,3.665,989,2.032,1095,2.236,1457,3.859,1480,3.665,1719,2.968,1720,2.236,1808,2.236,1962,2.509,1966,2.236,1967,2.509,1968,4.763,1969,4.763,1970,3.665,1971,3.665,1972,3.665,1973,3.665,1974,3.665,1975,3.665,1976,3.665,1977,5.067,1978,5.292,1979,3.665,1982,3.859,2008,2.032,2010,3.665,2028,2.509,2060,2.509,2062,2.509,2064,2.509,2065,2.509,2067,2.509,2069,2.509,2071,2.509,2073,4.716,2101,2.509,2102,2.923,2103,7.159,2104,4.271,2105,2.923,2106,2.923,2107,2.923,2108,2.923,2109,2.923,2110,2.923,2111,2.923,2112,2.923,2113,2.923,2114,2.923,2115,2.923,2116,2.923,2117,2.923,2118,2.923,2119,5.047,2120,5.047,2121,5.551,2122,2.923,2123,2.923,2124,2.923,2125,2.923,2126,5.047,2127,2.923,2128,2.923,2129,2.923,2130,2.923,2131,2.923,2132,2.923,2133,2.923,2134,2.923,2135,2.923,2136,2.923,2137,2.923,2138,4.271,2139,4.271,2140,4.271,2141,4.271,2142,4.271,2143,5.904,2144,5.047,2145,4.271,2146,4.271,2147,2.923,2148,2.923,2149,2.923,2150,2.923,2151,4.271,2152,2.923,2153,5.047,2154,4.271,2155,2.923,2156,2.923,2157,2.923,2158,2.923,2159,2.923,2160,2.923,2161,4.271,2162,2.923,2163,2.923,2164,2.923,2165,2.923,2166,2.923,2167,2.923,2168,2.923,2169,2.923,2170,2.923,2171,5.551,2172,2.923,2173,2.923,2174,2.923,2175,2.923,2176,2.923,2177,2.923,2178,2.923,2179,2.923,2180,2.923,2181,2.923,2182,2.923,2183,2.923,2184,2.923,2185,2.923,2186,2.923,2187,2.923]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":896,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/LoginPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["0\">kick",{"_index":1033,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["0.0.0",{"_index":2100,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":2007,"title":{},"body":{"dependencies.html":{}}}],["0.185rem",{"_index":390,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.25rem",{"_index":391,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.31.0",{"_index":2000,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":410,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.51",{"_index":1677,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0.875rem",{"_index":1653,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0/1",{"_index":1961,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1955,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1957,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1960,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1965,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1958,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1956,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1964,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1950,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1953,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1951,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1959,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1954,"title":{},"body":{"coverage.html":{}}}],["00a2a8",{"_index":2021,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["0275d8",{"_index":2020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1",{"_index":373,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":1654,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1.5vh",{"_index":1373,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["100",{"_index":1383,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["100vw",{"_index":1683,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["104",{"_index":1676,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["114px",{"_index":1673,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["117",{"_index":405,"title":{},"body":{"components/CalanderComponent.html":{}}}],["12",{"_index":2098,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2097,"title":{},"body":{"overview.html":{}}}],["15.1.2",{"_index":1996,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1379,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["16.0.0",{"_index":1993,"title":{},"body":{"dependencies.html":{}}}],["16.1.0",{"_index":1990,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":2031,"title":{},"body":{"index.html":{}}}],["16.2.12",{"_index":1987,"title":{},"body":{"dependencies.html":{}}}],["16.2.14",{"_index":1989,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":1666,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["17",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17,30",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.0.0",{"_index":2002,"title":{},"body":{"dependencies.html":{}}}],["19,30",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:297938436292:web:f09902d21ddd4fde388991",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:xxxxxxxxxxxx:web:xxxxxxxxxxxxxxxxxxxxxxxx",{"_index":2070,"title":{},"body":{"index.html":{}}}],["1a4668",{"_index":1679,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1em",{"_index":1351,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["1px",{"_index":1658,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1s",{"_index":1694,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["2",{"_index":651,"title":{},"body":{"injectables/CalendarService.html":{},"components/LoginPageComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2*60*60*1000",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.11.8",{"_index":1998,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2005,"title":{},"body":{"dependencies.html":{}}}],["216",{"_index":406,"title":{},"body":{"components/CalanderComponent.html":{}}}],["27",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":611,"title":{},"body":{"injectables/CalendarService.html":{}}}],["297938436292",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a2568",{"_index":1350,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2em",{"_index":1362,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2px",{"_index":1354,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["2rem",{"_index":396,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["3",{"_index":2073,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30,0",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.5vh",{"_index":1364,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["4",{"_index":2078,"title":{},"body":{"index.html":{}}}],["4.16.4",{"_index":1333,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["400",{"_index":1667,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["48px",{"_index":1688,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5*60*60*1000",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":2001,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1342,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["50px",{"_index":1378,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["50vw",{"_index":1344,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["55595c",{"_index":1655,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5cb85c",{"_index":2019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5jqei2sxcubehofay9f6vyc4wa8pj6s0",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":1359,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["5vh",{"_index":1365,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["60000",{"_index":797,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["7",{"_index":2099,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":2003,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1675,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["7vh",{"_index":1366,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["8",{"_index":806,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["80vh",{"_index":1355,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["992px",{"_index":1671,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["a.segment._embedded.genres.foreach((g:any",{"_index":1748,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["absolute",{"_index":1338,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["abstractcontrol",{"_index":785,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["action",{"_index":1499,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["activatedroute",{"_index":987,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["add",{"_index":886,"title":{},"body":{"components/EventComponentComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["addcalendarevent",{"_index":507,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addcalendarevent(calendarevent",{"_index":520,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addclassification",{"_index":1508,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addclassification(e",{"_index":1519,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addclassification(e:idclasstype",{"_index":1578,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["adddoc",{"_index":546,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["adddoc(calcollection",{"_index":592,"title":{},"body":{"injectables/CalendarService.html":{}}}],["adddoc(grpcollection",{"_index":1199,"title":{},"body":{"injectables/GroupService.html":{}}}],["added",{"_index":1894,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["addevent",{"_index":870,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event",{"_index":874,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event:eventinterface",{"_index":883,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addtowatchlist",{"_index":1509,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addtowatchlist(event",{"_index":1521,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addtowatchlist(event:eventinterface",{"_index":1622,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addwatchlistevent",{"_index":1896,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["addwatchlistevent(user",{"_index":1901,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["adm",{"_index":1290,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["adm.push(grp",{"_index":1294,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["admin",{"_index":1022,"title":{},"body":{"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{}}}],["admin.id",{"_index":1198,"title":{},"body":{"injectables/GroupService.html":{}}}],["admin:user1",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin:user4",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admingroups",{"_index":1266,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["afterviewinit",{"_index":1086,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["afterviewinit,ondestroy",{"_index":1114,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["against",{"_index":1232,"title":{},"body":{"injectables/GroupService.html":{}}}],["aizasydjqng3ye8if6tcspj_pstfymizlnfvoow",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":387,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{}}}],["align:center",{"_index":1681,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["allavailable",{"_index":2018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allowed",{"_index":620,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allowed.\">confirm",{"_index":1041,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["allprom",{"_index":661,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/ViewGroupFacade.html":{}}}],["allprom.push(this.calsvc.removereservedcalevent(this.group$.value",{"_index":1860,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["allprom.push(updatedoc(caldoc",{"_index":666,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allprom:promise",{"_index":1857,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["allusermap:any",{"_index":626,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[cal[\"uid",{"_index":633,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[group.admin.id",{"_index":627,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[member.id",{"_index":630,"title":{},"body":{"injectables/CalendarService.html":{}}}],["alluuid",{"_index":1058,"title":{},"body":{"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{}}}],["alluuid:[\"user1",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alluuid:[\"user4\",\"user1",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":1219,"title":{},"body":{"injectables/GroupService.html":{},"index.html":{}}}],["amonst",{"_index":361,"title":{},"body":{"components/CalanderComponent.html":{}}}],["angular",{"_index":1999,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1986,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1988,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":1285,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["angular/common",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["angular/compiler",{"_index":1991,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1992,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/firestore",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["angular/forms",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateGroupFacade.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1994,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{},"dependencies.html":{}}}],["animation",{"_index":1692,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["ans",{"_index":1756,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.genre.push({id:g.id",{"_index":1750,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.segment.push({id:a.segment.id",{"_index":1746,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.subgenre.push({id:sg.id",{"_index":1754,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans:classificationinterface",{"_index":1742,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["anum",{"_index":478,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["anum:number",{"_index":474,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["any)._location.origin+\"/group\"+\"/\"+group.id",{"_index":1441,"title":{},"body":{"injectables/NotificationService.html":{}}}],["any)._location.origin+\"/group\"+\"/\"+this.group$.value!.id",{"_index":1855,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["any)._location.origin+\"/ticketmaster",{"_index":1727,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["api",{"_index":2045,"title":{},"body":{"index.html":{}}}],["apikey",{"_index":2060,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"index.html":{}}}],["app.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":1938,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["appid",{"_index":2069,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1717,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["appmodule",{"_index":93,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":107,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrayremove",{"_index":554,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayremove(this.eventtodbwatchlist(event",{"_index":1945,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayremove(toremove",{"_index":1236,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayremove(user.id",{"_index":1237,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion",{"_index":553,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayunion(this.eventtodbwatchlist(event",{"_index":1936,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayunion(user",{"_index":1221,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion(user.id",{"_index":1222,"title":{},"body":{"injectables/GroupService.html":{}}}],["asking",{"_index":1447,"title":{},"body":{"injectables/NotificationService.html":{}}}],["attempt",{"_index":1937,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["auth",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["authapi",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["authapi.isauthenticated().pipe",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authapi:authenticationservice",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"miscellaneous/variables.html":{}}}],["authapi:authenticationservice,private",{"_index":1393,"title":{},"body":{"components/NavigationComponent.html":{}}}],["authdomain",{"_index":2062,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":2074,"title":{},"body":{"index.html":{}}}],["authenticationservice",{"_index":25,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"coverage.html":{}}}],["authguard",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authsvc",{"_index":434,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["authsvc:authenticationservice",{"_index":461,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["availability",{"_index":1453,"title":{},"body":{"injectables/NotificationService.html":{}}}],["available",{"_index":1045,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"modules.html":{}}}],["b0d04a",{"_index":2023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backdrop",{"_index":1684,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["background",{"_index":399,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupListComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["base_url",{"_index":1854,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["baseurl",{"_index":1702,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["baseurl:string",{"_index":1725,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["before",{"_index":1454,"title":{},"body":{"injectables/NotificationService.html":{}}}],["behaviorsubject",{"_index":443,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["behaviorsubject(false",{"_index":1543,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["behaviorsubject(undefined",{"_index":1279,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject({id:\"\",email:\"\",name",{"_index":1823,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject({segment",{"_index":1540,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["behaviorsubject({size:20",{"_index":1544,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["better",{"_index":458,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["bgcolor",{"_index":421,"title":{},"body":{"interfaces/CalanderEventColor.html":{}}}],["bgcolor:calandercolor",{"_index":420,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["bgimg",{"_index":1334,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgimgstrip",{"_index":1335,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgleft",{"_index":1345,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgright",{"_index":1347,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["block",{"_index":394,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["blur(5px",{"_index":1685,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bnum",{"_index":479,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["bnum:number",{"_index":476,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["bold",{"_index":1371,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["book\",\"confirm",{"_index":1023,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["booked",{"_index":471,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["booked:false",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookedforevent",{"_index":653,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/enumerations.html":{}}}],["booking",{"_index":1042,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["books",{"_index":1455,"title":{},"body":{"injectables/NotificationService.html":{}}}],["boolean",{"_index":305,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/GroupInterface.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["bootstrap",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["border",{"_index":1352,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["bottom",{"_index":1689,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bought",{"_index":1039,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["box",{"_index":1376,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["brightness(95",{"_index":1084,"title":{},"body":{"components/GroupListComponent.html":{}}}],["browse",{"_index":2095,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":1081,"title":{},"body":{"components/GroupListComponent.html":{}}}],["btn",{"_index":1665,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bud",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.appspot.com",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.firebaseapp.com",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buddy",{"_index":1458,"title":{},"body":{"injectables/NotificationService.html":{}}}],["build",{"_index":1730,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["buto",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["c.name",{"_index":733,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["c.start",{"_index":589,"title":{},"body":{"injectables/CalendarService.html":{}}}],["c.type!==calandertype.personal",{"_index":588,"title":{},"body":{"injectables/CalendarService.html":{}}}],["cal",{"_index":1471,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["cal.some(c",{"_index":587,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calaa",{"_index":1013,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["calander",{"_index":270,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["calander.component.css",{"_index":271,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander.component.html",{"_index":272,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calandercolor",{"_index":332,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{}}}],["calandercolor.bookedforevent",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.notfreeatall",{"_index":1852,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercolor.personal",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.reservedforevent",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.somefree",{"_index":1853,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercomponent",{"_index":57,"title":{"components/CalanderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calanderevent",{"_index":291,"title":{"interfaces/CalanderEvent.html":{}},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandereventcolor",{"_index":418,"title":{"interfaces/CalanderEventColor.html":{}},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"coverage.html":{}}}],["calandertype",{"_index":416,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{}}}],["calandertype.bookedforevent",{"_index":568,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["calandertype.personal",{"_index":1480,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"miscellaneous/variables.html":{}}}],["calandertype.reservedforevent",{"_index":567,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"miscellaneous/variables.html":{}}}],["calandertype[dbcalent[\"type",{"_index":563,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calandertypecolor",{"_index":451,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandertypecolor.get(e.type)||calandercolor.default",{"_index":490,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calandertypepriority",{"_index":452,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandertypepriority.get(a.type)||0",{"_index":475,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calandertypepriority.get(b.type)||0",{"_index":477,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calc(3rem",{"_index":1661,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["calc(50",{"_index":1360,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calc(80vh",{"_index":1358,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calcollection",{"_index":574,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc",{"_index":576,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc[\"grp",{"_index":583,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar",{"_index":273,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"dependencies.html":{}}}],["calendar.service",{"_index":1177,"title":{},"body":{"injectables/GroupService.html":{}}}],["calendar/${cal.id",{"_index":662,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar/${calendarevent.id",{"_index":642,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent",{"_index":522,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.detail",{"_index":581,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.end",{"_index":580,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.groupid",{"_index":584,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.groupname",{"_index":585,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.start",{"_index":579,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.type",{"_index":582,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.user.id",{"_index":578,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarfacade",{"_index":422,"title":{"injectables/CalendarFacade.html":{}},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["calendarondisplay",{"_index":1472,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["calendarservice",{"_index":432,"title":{"injectables/CalendarService.html":{}},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["calender",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["calevent",{"_index":498,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{}}}],["calevent.groupid",{"_index":569,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.groupname",{"_index":571,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.start",{"_index":607,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type",{"_index":566,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type==calandertype.bookedforevent",{"_index":637,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type==calandertype.reservedforevent",{"_index":636,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevents",{"_index":467,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calevents.map",{"_index":481,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calevents.sort((a,b)=>{//sort",{"_index":468,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calls",{"_index":615,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calsvc",{"_index":431,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["calupdateprom",{"_index":1871,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["canactivate:[authguard",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivate:[authguard]},//for",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalize",{"_index":1668,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["carry",{"_index":591,"title":{},"body":{"injectables/CalendarService.html":{}}}],["cat",{"_index":1502,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["cat$:behaviorsubject",{"_index":1560,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["catch((err:error",{"_index":947,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["catch(err",{"_index":594,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["catch(err=>rej(err",{"_index":502,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["catch(rej",{"_index":1941,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["catcherror",{"_index":1721,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["catcherror((err)=>throwerror(\"network",{"_index":1788,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["cb",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ccc",{"_index":1660,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["center",{"_index":388,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{}}}],["change",{"_index":340,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["changed",{"_index":347,"title":{},"body":{"components/CalanderComponent.html":{}}}],["changepage",{"_index":1510,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changepage(pgnum",{"_index":1523,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changepage(pgnum:number",{"_index":1612,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changes",{"_index":309,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{}}}],["check",{"_index":360,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"index.html":{}}}],["checkup",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chooose",{"_index":956,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["choose",{"_index":957,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["chosegroup",{"_index":1091,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group",{"_index":1097,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group:groupinterface",{"_index":1128,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen",{"_index":1089,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen.name",{"_index":1138,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen:groupinterface",{"_index":1115,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cid",{"_index":1503,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["cid$:behaviorsubject",{"_index":1558,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["clash",{"_index":508,"title":{},"body":{"injectables/CalendarService.html":{}}}],["clash(event",{"_index":523,"title":{},"body":{"injectables/CalendarService.html":{}}}],["class",{"_index":44,"title":{"classes/EventClass.html":{},"classes/NewCalendarEvent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["class/newcalendarevent",{"_index":455,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["classes",{"_index":833,"title":{},"body":{"classes/EventClass.html":{},"classes/NewCalendarEvent.html":{},"overview.html":{}}}],["classification",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["classification:eventemitter",{"_index":712,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["classificationcomponentcomponent",{"_index":59,"title":{"components/ClassificationComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classificationemitter",{"_index":1624,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationemitter:eventemitter",{"_index":1639,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationinterface",{"_index":708,"title":{"interfaces/ClassificationInterface.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["classinput",{"_index":1625,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classinput:string",{"_index":1636,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classtype",{"_index":707,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":2030,"title":{},"body":{"index.html":{}}}],["click",{"_index":1451,"title":{},"body":{"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["clicked",{"_index":344,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clickeddate",{"_index":288,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clipboard",{"_index":1284,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["clipboard:clipboard",{"_index":1831,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["clone",{"_index":2037,"title":{},"body":{"index.html":{}}}],["close",{"_index":914,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["closeresult",{"_index":911,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["cloud",{"_index":2079,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cmicount==group.alluuid.length)return",{"_index":1851,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["code",{"_index":729,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["collection",{"_index":545,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collection(this.fs",{"_index":575,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collectiondata",{"_index":549,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectiondata(q",{"_index":599,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectionreference",{"_index":547,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["color",{"_index":400,"title":{},"body":{"components/CalanderComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupListComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["command",{"_index":2091,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2052,"title":{},"body":{"index.html":{}}}],["common/calander/calander.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["common/navigation/navigation.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["complete",{"_index":1611,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["completed",{"_index":2053,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["component'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["component.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.css",{"_index":675,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.html",{"_index":676,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts",{"_index":673,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:13",{"_index":687,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:14",{"_index":873,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:16",{"_index":702,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:19",{"_index":688,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:23",{"_index":875,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:26",{"_index":699,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:29",{"_index":695,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:32",{"_index":701,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:35",{"_index":691,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:39",{"_index":697,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component/classification",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["component/event",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component:grouppagecomponent",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:loginpagecomponent",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:personalcalenderpagecomponent",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:searchpagecomponent",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:watchlistpagecomponent",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":1722,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["concert",{"_index":1444,"title":{},"body":{"injectables/NotificationService.html":{}}}],["config",{"_index":2049,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":1452,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmation",{"_index":1012,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["confirmed",{"_index":650,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["confirmed:string",{"_index":1061,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["confirmgoing",{"_index":963,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["confirmgroupbooking",{"_index":964,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmgroupbooking(group",{"_index":1149,"title":{},"body":{"injectables/GroupService.html":{}}}],["confirmgroupevent",{"_index":1140,"title":{},"body":{"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmgroupevent(group",{"_index":1151,"title":{},"body":{"injectables/GroupService.html":{}}}],["congratulations",{"_index":1461,"title":{},"body":{"injectables/NotificationService.html":{}}}],["console",{"_index":2075,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":1861,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["console.log(\"logout",{"_index":1330,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log(\"signout",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(cmicount+\"/\"+group.alluuid.length",{"_index":1850,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["console.log(result",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(watchlist",{"_index":790,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["console.log(x",{"_index":1762,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["const",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CalendarService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["constructor(auth",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["constructor(authapi",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["constructor(authsvc",{"_index":430,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["constructor(calsvc",{"_index":1145,"title":{},"body":{"injectables/GroupService.html":{}}}],["constructor(e",{"_index":839,"title":{},"body":{"classes/EventClass.html":{}}}],["constructor(e:eventinterface",{"_index":854,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["constructor(fs",{"_index":516,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(grp",{"_index":971,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["constructor(http",{"_index":1706,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(public",{"_index":713,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/NavigationComponent.html":{}}}],["constructor(searchfacade",{"_index":685,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["constructor(toastr",{"_index":917,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["constructor(watchlistfacade",{"_index":1888,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["constructor(watchlistsvc",{"_index":1880,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["contact",{"_index":1462,"title":{},"body":{"injectables/NotificationService.html":{}}}],["container",{"_index":1680,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["contains\",user.id",{"_index":1207,"title":{},"body":{"injectables/GroupService.html":{}}}],["content",{"_index":912,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{}}}],["content:ngbmodal",{"_index":937,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["convertreservedtobooked",{"_index":509,"title":{},"body":{"injectables/CalendarService.html":{}}}],["convertreservedtobooked(grp",{"_index":526,"title":{},"body":{"injectables/CalendarService.html":{}}}],["converttolistofstrings",{"_index":1092,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members",{"_index":1099,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members:userinterface",{"_index":1131,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttongbdate",{"_index":278,"title":{},"body":{"components/CalanderComponent.html":{}}}],["converttongbdate(d",{"_index":297,"title":{},"body":{"components/CalanderComponent.html":{}}}],["converttongbdate(d:date",{"_index":352,"title":{},"body":{"components/CalanderComponent.html":{}}}],["copied",{"_index":1002,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["copy",{"_index":2055,"title":{},"body":{"index.html":{}}}],["copyinvitelink",{"_index":965,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["coverage",{"_index":1946,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":908,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"index.html":{}}}],["create'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["create.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["create.component.css",{"_index":909,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.html",{"_index":910,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts",{"_index":907,"title":{},"body":{"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:15",{"_index":934,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:16",{"_index":933,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:17",{"_index":929,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:18",{"_index":927,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:19",{"_index":922,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:22",{"_index":921,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:27",{"_index":930,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:31",{"_index":925,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:36",{"_index":924,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:46",{"_index":926,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:51",{"_index":923,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create/group",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["created",{"_index":945,"title":{},"body":{"components/GroupCreateComponent.html":{},"index.html":{}}}],["createevent",{"_index":426,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["createevent(newcalevent",{"_index":435,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["creategroup",{"_index":752,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["creategroup(name",{"_index":1153,"title":{},"body":{"injectables/GroupService.html":{}}}],["creategroup(selectedevent",{"_index":761,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["creategroupfacade",{"_index":749,"title":{"injectables/CreateGroupFacade.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["creation",{"_index":828,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{}}}],["cs.foreach((a",{"_index":1744,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["cs:any",{"_index":1740,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["css",{"_index":1650,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["current",{"_index":1398,"title":{},"body":{"components/NavigationComponent.html":{}}}],["currently",{"_index":1218,"title":{},"body":{"injectables/GroupService.html":{}}}],["currentuser",{"_index":424,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["currentuser$:behaviorsubject",{"_index":1830,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["currentuser:string",{"_index":1392,"title":{},"body":{"components/NavigationComponent.html":{}}}],["currentuser?:userinterface",{"_index":1116,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cursor",{"_index":893,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["cursor:pointer",{"_index":1080,"title":{},"body":{"components/GroupListComponent.html":{}}}],["custom",{"_index":384,"title":{},"body":{"components/CalanderComponent.html":{}}}],["d",{"_index":300,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d.getdate",{"_index":355,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d.getmonth()+1",{"_index":354,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d9534f",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d:date",{"_index":801,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["data",{"_index":602,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["data.foreach(cal",{"_index":604,"title":{},"body":{"injectables/CalendarService.html":{}}}],["data.foreach(grp",{"_index":1208,"title":{},"body":{"injectables/GroupService.html":{}}}],["data===undefined",{"_index":1214,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["data['saved'].foreach((event",{"_index":1933,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["database",{"_index":2080,"title":{},"body":{"index.html":{}}}],["date",{"_index":298,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["date()).gettimezoneoffset",{"_index":796,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(2024",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(d.gettime",{"_index":804,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(date.year",{"_index":376,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date(dbevent['enddate']?.todate",{"_index":1928,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(dbevent['startdate']?.todate",{"_index":1926,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(e.dates?.end",{"_index":1772,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(e.dates?.start.datetime",{"_index":1770,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(end.year",{"_index":380,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date(grp.event.enddate",{"_index":817,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(grp.event.startdate",{"_index":815,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(start.gettime",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start.year",{"_index":371,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date(start2.gettime",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start3.gettime",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(this.start",{"_index":1414,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["date.day",{"_index":378,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date.month",{"_index":377,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date:'medium",{"_index":890,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["date:\\'medium",{"_index":899,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["date:ngbdate",{"_index":368,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["dateclicked",{"_index":1474,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["dateclicked(date",{"_index":1475,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["datecolor",{"_index":284,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["datedate:date",{"_index":375,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["dates",{"_index":343,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":385,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["day.faded",{"_index":408,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.focused",{"_index":398,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.range",{"_index":402,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day:hover",{"_index":403,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dbcalent",{"_index":533,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"detail",{"_index":562,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"end\"].todate",{"_index":561,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"grp\"][\"id",{"_index":570,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"grp\"][\"name",{"_index":572,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"id",{"_index":559,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"start\"].todate",{"_index":560,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbevent",{"_index":1905,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['details",{"_index":1924,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['enddate",{"_index":1927,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['id",{"_index":1920,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['images",{"_index":1923,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['location",{"_index":1922,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['name",{"_index":1921,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['startdate",{"_index":1925,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbgroup",{"_index":1157,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"admin",{"_index":1187,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"alluuid",{"_index":1191,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"booked",{"_index":1190,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"confirmed",{"_index":1189,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].end.todate",{"_index":1183,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].id",{"_index":1180,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].name",{"_index":1181,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].start.todate",{"_index":1182,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"][\"details",{"_index":1184,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"][\"imageurls",{"_index":1185,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"][\"locations",{"_index":1186,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"id",{"_index":1178,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"members",{"_index":1188,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"name",{"_index":1179,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtocalendarevent",{"_index":510,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtocalendarevent(dbcalent",{"_index":530,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtogroupinterface",{"_index":1141,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtogroupinterface(dbgroup",{"_index":1155,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbwatchlisttoevent",{"_index":1897,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbwatchlisttoevent(dbevent",{"_index":1903,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["ddff00",{"_index":1380,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["debouncetime",{"_index":703,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["debouncetime(500",{"_index":716,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["declarations",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":1054,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["decorators",{"_index":319,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/ListEventsComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["del",{"_index":1862,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["delay",{"_index":1723,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["delete",{"_index":1036,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["deletedoc",{"_index":555,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["deletedoc(caldoc).then(birdbird",{"_index":647,"title":{},"body":{"injectables/CalendarService.html":{}}}],["deletedoc(grpdoc).then(_",{"_index":1240,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteevent",{"_index":427,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e",{"_index":439,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e:calanderevent",{"_index":494,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["deletegroup",{"_index":966,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["deletegroup(group",{"_index":1158,"title":{},"body":{"injectables/GroupService.html":{}}}],["denied",{"_index":1203,"title":{},"body":{"injectables/GroupService.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["destroy",{"_index":428,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["detail",{"_index":413,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["detail'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["detail.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["detail.component.css",{"_index":961,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.html",{"_index":962,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts",{"_index":960,"title":{},"body":{"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:18",{"_index":974,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":985,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":982,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":983,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":978,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":981,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":977,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":979,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:58",{"_index":984,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:63",{"_index":976,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:69",{"_index":975,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail/group",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail:\"dental",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"doctors",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"school",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:string",{"_index":1410,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["details",{"_index":834,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["details:\"fake",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details:e.description",{"_index":1774,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["details:new",{"_index":775,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["details:string",{"_index":851,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["directive",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["display",{"_index":392,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"components/SearchPageComponent.html":{}}}],["doc",{"_index":551,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["doc(this.fs",{"_index":641,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata",{"_index":550,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata(grpdoc",{"_index":1212,"title":{},"body":{"injectables/GroupService.html":{}}}],["docdata(watchdoc).subscribe(data",{"_index":1931,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["document",{"_index":1939,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["documentation",{"_index":1947,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":531,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["documentreference",{"_index":544,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["download",{"_index":2033,"title":{},"body":{"index.html":{}}}],["dp",{"_index":275,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dp:ngbdatepicker|undefined",{"_index":346,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dynamic",{"_index":1995,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":363,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"classes/EventClass.html":{},"pipes/InwatchlistPipe.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["e.detail",{"_index":1048,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.details",{"_index":863,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.end",{"_index":1501,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e.end.getmonth()+1,e.end.getdate",{"_index":488,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e.end|date:\"medium",{"_index":1050,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e.id",{"_index":856,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"pipes/InwatchlistPipe.html":{}}}],["e.id)return",{"_index":1582,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["e.images",{"_index":861,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.location",{"_index":859,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.start",{"_index":1500,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e.start.getmonth()+1,e.start.getdate",{"_index":485,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e.start|date:\"medium",{"_index":1049,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e.user.name",{"_index":1047,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e1",{"_index":1968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2",{"_index":1969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e6e6e6",{"_index":401,"title":{},"body":{"components/CalanderComponent.html":{}}}],["e:calanderevent",{"_index":482,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e?.enddate",{"_index":867,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e?.startdate",{"_index":865,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e[1",{"_index":366,"title":{},"body":{"components/CalanderComponent.html":{}}}],["earlier",{"_index":2054,"title":{},"body":{"index.html":{}}}],["ed",{"_index":1779,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ed:date",{"_index":1771,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["efcb00",{"_index":2022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["em",{"_index":916,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["em!:eventemitter",{"_index":938,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["email",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/NotificationService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["emaillist",{"_index":1436,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emaillist.push(member.email",{"_index":1438,"title":{},"body":{"injectables/NotificationService.html":{}}}],["enable",{"_index":2077,"title":{},"body":{"index.html":{}}}],["end",{"_index":302,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end.day",{"_index":382,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["end.month",{"_index":381,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["end2",{"_index":1970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end3",{"_index":1971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end:end",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end2",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end3",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:ngbdate",{"_index":1487,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end:ngbdate):boolean",{"_index":369,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["end:string",{"_index":1409,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["enddate",{"_index":835,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["enddate:(!number.isnan(ed.valueof",{"_index":1778,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["enddate:date",{"_index":379,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["enddate:new",{"_index":778,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["enddate:ngbdate",{"_index":486,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["enddate?:date",{"_index":853,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["ends",{"_index":623,"title":{},"body":{"injectables/CalendarService.html":{}}}],["enum",{"_index":740,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["enumerations",{"_index":2009,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/calenderenum",{"_index":417,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["env",{"_index":2041,"title":{},"body":{"index.html":{}}}],["environments/env",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":1126,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["err.code",{"_index":1201,"title":{},"body":{"injectables/GroupService.html":{}}}],["err===\"group",{"_index":830,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["error",{"_index":949,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["error$:eventemitter",{"_index":1559,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["error(\"cal",{"_index":590,"title":{},"body":{"injectables/CalendarService.html":{}}}],["error(\"group",{"_index":823,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["error(\"invalid",{"_index":504,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["error:(err",{"_index":1006,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["event!:eventinterface",{"_index":880,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["event\",\"calender",{"_index":1496,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["event.details",{"_index":889,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.enddate",{"_index":891,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.id",{"_index":1194,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.images",{"_index":1196,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.location",{"_index":888,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.name",{"_index":885,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.startdate",{"_index":608,"title":{},"body":{"injectables/CalendarService.html":{},"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event:calanderevent",{"_index":419,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["event:eventinterface",{"_index":1059,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["event:n",{"_index":810,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["event:this.formbuilder.group",{"_index":771,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["eventclass",{"_index":832,"title":{"classes/EventClass.html":{}},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"coverage.html":{}}}],["eventcomponentcomponent",{"_index":62,"title":{"components/EventComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventemitter",{"_index":295,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["eventinput",{"_index":1504,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["eventinput$:behaviorsubject",{"_index":1555,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["eventinput:string",{"_index":1637,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinputemitter",{"_index":1626,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinputemitter:eventemitter",{"_index":1640,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinterface",{"_index":524,"title":{"interfaces/EventInterface.html":{}},"body":{"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventpageinterface",{"_index":900,"title":{"interfaces/EventPageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["events",{"_index":285,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"interfaces/EventPageInterface.html":{},"components/GroupDetailComponent.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{}}}],["events!:calanderevent[];//should",{"_index":336,"title":{},"body":{"components/CalanderComponent.html":{}}}],["events'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["events.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["events.component.css",{"_index":1318,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.html",{"_index":1319,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts",{"_index":1317,"title":{},"body":{"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events.component.ts:10",{"_index":1321,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts:9",{"_index":1320,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events/inwatchlist.pipe",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["events/inwatchlist.pipe.ts",{"_index":1312,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"coverage.html":{}}}],["events/inwatchlist.pipe.ts:9",{"_index":1314,"title":{},"body":{"pipes/InwatchlistPipe.html":{}}}],["events/list",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events:eventinterface",{"_index":904,"title":{},"body":{"interfaces/EventPageInterface.html":{},"components/ListEventsComponent.html":{}}}],["events:undefined",{"_index":1760,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["eventtodbwatchlist",{"_index":1898,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event",{"_index":1906,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event:eventinterface",{"_index":1912,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["everyone",{"_index":1044,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["evt",{"_index":768,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["evt.enddate",{"_index":808,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["evt.name",{"_index":958,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["evt.startdate",{"_index":802,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["exports",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":741,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["extension",{"_index":2084,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":2083,"title":{},"body":{"index.html":{}}}],["f0ad4e",{"_index":2017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade.service",{"_index":706,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["facade.service.ts",{"_index":1265,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"coverage.html":{}}}],["facade.service.ts:104",{"_index":1524,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:12",{"_index":1884,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:127",{"_index":1535,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:13",{"_index":1881,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:132",{"_index":1522,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:15",{"_index":1883,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:16",{"_index":1547,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:17",{"_index":1548,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:18",{"_index":1282,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:19",{"_index":1280,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:20",{"_index":1542,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:21",{"_index":1278,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:22",{"_index":1281,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:23",{"_index":1270,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:24",{"_index":1541,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:25",{"_index":1518,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:29",{"_index":1882,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:31",{"_index":1538,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:32",{"_index":1277,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:34",{"_index":1531,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:38",{"_index":1526,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:39",{"_index":1275,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:42",{"_index":1271,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:45",{"_index":1272,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:46",{"_index":1530,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:54",{"_index":1528,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:61",{"_index":1520,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:63",{"_index":1274,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:69",{"_index":1533,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:74",{"_index":1536,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade/grouppage",{"_index":1113,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["facade/personalcalendarfacade",{"_index":1481,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["facade/search",{"_index":1635,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["facade/viewgroupfacade",{"_index":1112,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["facade/watchlist",{"_index":1890,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["false",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{}}}],["fan",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fascase",{"_index":1014,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["fff",{"_index":1656,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["fields",{"_index":619,"title":{},"body":{"injectables/CalendarService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":1083,"title":{},"body":{"components/GroupListComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["filter((x:any",{"_index":1736,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["firebase",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firebase/auth",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebaseconfig",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firestore",{"_index":517,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["firestoreerror",{"_index":1170,"title":{},"body":{"injectables/GroupService.html":{}}}],["first",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["first:from(this.calsvc.addcalendarevent",{"_index":1247,"title":{},"body":{"injectables/GroupService.html":{}}}],["fit",{"_index":1765,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["fixed",{"_index":1682,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["following",{"_index":2047,"title":{},"body":{"index.html":{}}}],["following.export",{"_index":2059,"title":{},"body":{"index.html":{}}}],["font",{"_index":1369,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["for(var",{"_index":1581,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["forkjoin",{"_index":1171,"title":{},"body":{"injectables/GroupService.html":{}}}],["formbuilder",{"_index":755,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["formcontrol",{"_index":776,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["formsmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule,reactiveformsmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1216,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["from(this.authsvc.getcurrentuser()).pipe",{"_index":1286,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["fs",{"_index":519,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["fullscreen:true",{"_index":952,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["further",{"_index":1040,"title":{},"body":{"components/GroupDetailComponent.html":{},"index.html":{}}}],["g",{"_index":1808,"title":{},"body":{"injectables/ViewGroupFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["g._embedded.subgenres.foreach((sg:any",{"_index":1752,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["g.event.name",{"_index":1076,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.members",{"_index":1077,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.name",{"_index":1075,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g1",{"_index":1972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["g2",{"_index":1973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":2029,"title":{},"body":{"index.html":{}}}],["genre",{"_index":734,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["genre:[]};//must",{"_index":1743,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["genre:idname",{"_index":738,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["genreinterface",{"_index":745,"title":{"interfaces/GenreInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["genres",{"_index":1700,"title":{},"body":{"interfaces/SegmentInterface.html":{}}}],["genres:genreinterface",{"_index":744,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["getauth",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["getcalendar",{"_index":511,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getcalendar(user",{"_index":534,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getclassification",{"_index":1511,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["getclassification(kw",{"_index":1527,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["getclassification(kw:string",{"_index":1574,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["getclassification(kw:string):observable",{"_index":1732,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getcurrentuser",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["getcurrentuser():promise",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["geteventsquery",{"_index":1704,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query",{"_index":1711,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query:any):observable",{"_index":1781,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getfirestore",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["getgroup",{"_index":1793,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroup(id",{"_index":1804,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroup(id:string",{"_index":1838,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupbyid",{"_index":1142,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupbyid(groupid",{"_index":1160,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupcalander",{"_index":1794,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalander(g",{"_index":1806,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalander(g:groupinterface",{"_index":1842,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalendar",{"_index":512,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroupcalendar(group",{"_index":536,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroups",{"_index":1143,"title":{},"body":{"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["getgroups(user",{"_index":1162,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgrpbyid",{"_index":1269,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["getgrpbyid(id",{"_index":1273,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["getstartdate",{"_index":1795,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getstartdate(d",{"_index":1811,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getting",{"_index":2026,"title":{"index.html":{}},"body":{}}],["getwatchlist",{"_index":1512,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["getwatchlist(user",{"_index":1908,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["go",{"_index":1448,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["going",{"_index":663,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gold",{"_index":898,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["google",{"_index":1332,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["googleauthprovider",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["googleimg",{"_index":1361,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["googlesignin",{"_index":1323,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["gradient(#ffff75,#ffff99,#ddff00",{"_index":1375,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["graph",{"_index":2096,"title":{},"body":{"modules.html":{}}}],["group",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/variables.html":{}}}],["group!:groupinterface",{"_index":988,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["group(s",{"_index":1133,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["group.admin",{"_index":628,"title":{},"body":{"injectables/CalendarService.html":{}}}],["group.admin.name",{"_index":1446,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(member.id",{"_index":1437,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(user.id",{"_index":1238,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.event.enddate",{"_index":1248,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.event.name||'concert",{"_index":1460,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.name||'the",{"_index":1443,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.startdate",{"_index":625,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["group.event.startdate!.todatestring",{"_index":1449,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.id",{"_index":638,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["group.members.foreach(member",{"_index":629,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["group.name",{"_index":1249,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["group/${group.id",{"_index":1230,"title":{},"body":{"injectables/GroupService.html":{}}}],["group/${groupid",{"_index":1211,"title":{},"body":{"injectables/GroupService.html":{}}}],["group:groupinterface",{"_index":1833,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["groupbyid",{"_index":1267,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["groupcalendar",{"_index":1792,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["groupclicked",{"_index":1067,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupcreatecomponent",{"_index":64,"title":{"components/GroupCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdetailcomponent",{"_index":67,"title":{"components/GroupDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdoc",{"_index":1193,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupdoc).then((docref",{"_index":1200,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupid",{"_index":414,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["groupid:string",{"_index":1117,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["groupinterface",{"_index":527,"title":{"interfaces/GroupInterface.html":{}},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouplistcomponent",{"_index":69,"title":{"components/GroupListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupmemberpipe",{"_index":1078,"title":{},"body":{"components/GroupListComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["groupmemberpipepipe",{"_index":104,"title":{"pipes/GroupmemberPipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groupmemberstatus",{"_index":2012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["groupname",{"_index":415,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/GroupService.html":{}}}],["grouppagecomponent",{"_index":71,"title":{"components/GroupPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grouppagefacadeservice",{"_index":1094,"title":{"injectables/GrouppageFacadeService.html":{}},"body":{"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"coverage.html":{}}}],["grouppipe",{"_index":1303,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["grouppipepipe",{"_index":105,"title":{"pipes/GrouppipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":1066,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{}}}],["groups!:groupinterface",{"_index":1072,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupservice",{"_index":757,"title":{"injectables/GroupService.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["grp",{"_index":529,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["grp.admin.id",{"_index":1293,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["grp.alluuid.includes(user.id",{"_index":1226,"title":{},"body":{"injectables/GroupService.html":{}}}],["grp.booked",{"_index":1228,"title":{},"body":{"injectables/GroupService.html":{}}}],["grp.confirmed",{"_index":655,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.event",{"_index":826,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.enddate",{"_index":816,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.images",{"_index":820,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.location",{"_index":818,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.name",{"_index":664,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.event.startdate",{"_index":814,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.group$.value?.event?.details",{"_index":1029,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.enddate|date:'medium",{"_index":1031,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.enddate|date:\\'medium\\'}}invite",{"_index":1057,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.location",{"_index":1028,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.name",{"_index":1027,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.startdate|date:'medium",{"_index":1030,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.startdate|date:\\'medium",{"_index":1056,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.id",{"_index":1025,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.name",{"_index":1026,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$|async)!.admin.name",{"_index":1034,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.id",{"_index":657,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.name",{"_index":665,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp:any",{"_index":812,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grpcal",{"_index":1821,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grpcal.map(e=>e.user.id).includes(user.id",{"_index":1244,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpcal.sort((a,b)=>{//sort",{"_index":1847,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grpcollection",{"_index":1192,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpdoc",{"_index":1210,"title":{},"body":{"injectables/GroupService.html":{}}}],["grps.foreach(grp",{"_index":1292,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["grpsvc",{"_index":756,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["grpupdateprom",{"_index":1873,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["guards/auth.guard",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["header",{"_index":1703,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["height",{"_index":395,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["height:80vh",{"_index":1336,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hello",{"_index":1445,"title":{},"body":{"injectables/NotificationService.html":{}}}],["help",{"_index":2087,"title":{},"body":{"index.html":{}}}],["here",{"_index":338,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"injectables/NotificationService.html":{},"components/SearchPageComponent.html":{}}}],["highest",{"_index":472,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["hovereddate",{"_index":276,"title":{},"body":{"components/CalanderComponent.html":{}}}],["html",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["http",{"_index":1709,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["httpclient",{"_index":1707,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["httpclientmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1716,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["https://app.ticketmaster.com/discovery/v2",{"_index":1731,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["https://picsum.photos/id/1/900/500",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://picsum.photos/id/2/900/500",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.user.id))].length",{"_index":1849,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["id",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdName.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["id\"}).subscribe(data",{"_index":1213,"title":{},"body":{"injectables/GroupService.html":{}}}],["id'}).subscribe",{"_index":601,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["id'}).subscribe(data",{"_index":659,"title":{},"body":{"injectables/CalendarService.html":{}}}],["id.appspot.com",{"_index":2066,"title":{},"body":{"index.html":{}}}],["id.firebaseapp.com",{"_index":2063,"title":{},"body":{"index.html":{}}}],["id:\"evt1",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"evt2",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp1",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp2",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1id",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:[\"\",validators.required",{"_index":772,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["id:e.id",{"_index":1773,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["id:string",{"_index":747,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["id:string|null",{"_index":1122,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["idclasstype",{"_index":690,"title":{"interfaces/IdClassType.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["identifier",{"_index":1948,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":600,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["idname",{"_index":694,"title":{"interfaces/IdName.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["ie",{"_index":692,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["if(!a?.segment?.id",{"_index":1745,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!g?.id",{"_index":1749,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!group.event.enddate",{"_index":634,"title":{},"body":{"injectables/CalendarService.html":{}}}],["if(!sg?.id",{"_index":1753,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!x",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(a.start",{"_index":1848,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["if(changes[\"events",{"_index":348,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(evt.enddate",{"_index":807,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(evt.startdate",{"_index":800,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(grp.event.startdate>=grp.event.enddate",{"_index":822,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(i.id",{"_index":1316,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"injectables/SearchFacadeService.html":{}}}],["if(isadmin",{"_index":1309,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["if(n",{"_index":1615,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["if(this.currentuser",{"_index":496,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["if(this.isinside(e[0][0],date,e[0][1",{"_index":365,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(x",{"_index":1601,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["ignore",{"_index":2051,"title":{},"body":{"index.html":{}}}],["iif",{"_index":1172,"title":{},"body":{"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["image",{"_index":1657,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["images",{"_index":836,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["images:[\"https://picsum.photos/id/0/900/500",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images:e.images.map((img:any)=>img.url",{"_index":1775,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["images:string",{"_index":850,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["images:this.formbuilder.array",{"_index":774,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["imageurls",{"_index":1195,"title":{},"body":{"injectables/GroupService.html":{}}}],["implements",{"_index":268,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["import",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["important",{"_index":1662,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["imports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incompatible",{"_index":824,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["increase",{"_index":613,"title":{},"body":{"injectables/CalendarService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["inequalities",{"_index":617,"title":{},"body":{"injectables/CalendarService.html":{}}}],["infinite",{"_index":1696,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["initialise",{"_index":573,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["initialise(id",{"_index":1814,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["initialise(id:string",{"_index":1832,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["initialize",{"_index":753,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["initializeapp",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(firebaseconfig",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(firebaseconfig)).html\">providefirebaseapp",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["initializecalender",{"_index":429,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["inject",{"_index":327,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(authenticationservice",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(ngbcalendar",{"_index":315,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(router",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":211,"title":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"overview.html":{}}}],["inline",{"_index":393,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["input",{"_index":324,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["inputs",{"_index":283,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["install",{"_index":2034,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2032,"title":{},"body":{"index.html":{}}}],["interface",{"_index":235,"title":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["interface.ts",{"_index":412,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["interface.ts:11",{"_index":842,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:12",{"_index":845,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:13",{"_index":844,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:14",{"_index":843,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:15",{"_index":841,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:16",{"_index":846,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:17",{"_index":840,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:27",{"_index":848,"title":{},"body":{"classes/EventClass.html":{}}}],["interface/calanderevent",{"_index":331,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["interfaces",{"_index":411,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/calander",{"_index":450,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/clasification",{"_index":1549,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["interfaces/enums/calenderenum",{"_index":453,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/event",{"_index":784,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["interfaces/group",{"_index":1111,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/page",{"_index":1551,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["interfaces/user",{"_index":449,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["invalid",{"_index":1867,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["invite",{"_index":1032,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["inwatchlist",{"_index":872,"title":{},"body":{"components/EventComponentComponent.html":{},"pipes/InwatchlistPipe.html":{}}}],["inwatchlist!:boolean",{"_index":879,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["inwatchlistpipe",{"_index":106,"title":{"pipes/InwatchlistPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/InwatchlistPipe.html":{},"coverage.html":{},"overview.html":{}}}],["isadmin",{"_index":1305,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["isadmin:boolean",{"_index":1308,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["isauth",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isequals",{"_index":838,"title":{},"body":{"classes/EventClass.html":{}}}],["isequals(other",{"_index":847,"title":{},"body":{"classes/EventClass.html":{}}}],["isequals(other:eventclass):boolean",{"_index":868,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["isinside",{"_index":279,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isinside(start",{"_index":301,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isinside(start:ngbdate",{"_index":367,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isvalid",{"_index":1400,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["join",{"_index":1051,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["joined",{"_index":1135,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["joingroup",{"_index":967,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["joingroup(groupid",{"_index":1164,"title":{},"body":{"injectables/GroupService.html":{}}}],["joingroup(id",{"_index":1276,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["joining",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["key",{"_index":2046,"title":{},"body":{"index.html":{}}}],["key.export",{"_index":2048,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":1697,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["keyof",{"_index":564,"title":{},"body":{"injectables/CalendarService.html":{}}}],["keys",{"_index":362,"title":{},"body":{"components/CalanderComponent.html":{}}}],["keyword",{"_index":2058,"title":{},"body":{"index.html":{}}}],["keyword:kw}}).pipe",{"_index":1735,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["kickuser",{"_index":968,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["kickuser(user",{"_index":980,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["kickuser(user:userinterface",{"_index":997,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kw",{"_index":1529,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["kw.length",{"_index":1738,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["lah",{"_index":255,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lastclickeddate",{"_index":277,"title":{},"body":{"components/CalanderComponent.html":{}}}],["latest",{"_index":1843,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["left",{"_index":1356,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["left:0",{"_index":1346,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["left:50",{"_index":1340,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["legend",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["libraries",{"_index":2038,"title":{},"body":{"index.html":{}}}],["limited",{"_index":610,"title":{},"body":{"injectables/CalendarService.html":{}}}],["line",{"_index":1368,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"index.html":{}}}],["linear",{"_index":1695,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["link",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailComponent.html":{}}}],["list",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":1063,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.html",{"_index":1064,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts",{"_index":1062,"title":{},"body":{"components/GroupListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":1068,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:11",{"_index":1069,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:12",{"_index":1071,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list/group",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/GroupListComponent.html":{},"coverage.html":{}}}],["listernere",{"_index":337,"title":{},"body":{"components/CalanderComponent.html":{}}}],["listeventscomponent",{"_index":73,"title":{"components/ListEventsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listof",{"_index":341,"title":{},"body":{"components/CalanderComponent.html":{}}}],["loadedevents",{"_index":1505,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loadedevents$:behaviorsubject",{"_index":1556,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loading",{"_index":1649,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["loadingevents",{"_index":1506,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loadingevents$:behaviorsubject",{"_index":1554,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["location",{"_index":837,"title":{},"body":{"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["location.reload",{"_index":996,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["location:[\"seatle",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:[\"singpoare",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:e._embedded?.venues.map((v:any)=>v.name",{"_index":1776,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["location:string",{"_index":849,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["location:this.formbuilder.array",{"_index":773,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["locations",{"_index":1197,"title":{},"body":{"injectables/GroupService.html":{}}}],["login",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["loginbtn",{"_index":1349,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginbtn:active",{"_index":1357,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["logingoogle",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpagecomponent",{"_index":76,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{}}}],["look",{"_index":1498,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["m.name",{"_index":1035,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["made",{"_index":1134,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["mail",{"_index":1429,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mailcol",{"_index":1428,"title":{},"body":{"injectables/NotificationService.html":{}}}],["maildoc",{"_index":1430,"title":{},"body":{"injectables/NotificationService.html":{}}}],["map",{"_index":334,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["map((x:any",{"_index":1739,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["master",{"_index":1609,"title":{},"body":{"injectables/SearchFacadeService.html":{},"index.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1678,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["mean",{"_index":460,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["means",{"_index":1433,"title":{},"body":{"injectables/NotificationService.html":{}}}],["measurementid",{"_index":2071,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":1669,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["meeting",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":631,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["member.id",{"_index":1235,"title":{},"body":{"injectables/GroupService.html":{}}}],["membergroups",{"_index":1268,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["members",{"_index":612,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/ViewGroupFacade.html":{}}}],["members\",\"group",{"_index":1011,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["members.map((x)=>x.name",{"_index":1132,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["members:[user1",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:[user2",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:userinterface",{"_index":1060,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["mergemap",{"_index":1173,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["mergemap((grpcal:calanderevent",{"_index":1243,"title":{},"body":{"injectables/GroupService.html":{}}}],["message",{"_index":1425,"title":{},"body":{"injectables/NotificationService.html":{}}}],["message:any",{"_index":1427,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messagingsenderid",{"_index":2067,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["methods",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["milliseconds",{"_index":799,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["min",{"_index":1670,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["miscellaneous",{"_index":2008,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modalservice",{"_index":919,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["modalservice:ngbmodal",{"_index":941,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["mode",{"_index":2082,"title":{},"body":{"index.html":{}}}],["module",{"_index":92,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2088,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":618,"title":{},"body":{"injectables/CalendarService.html":{}}}],["n",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistFacadeService.html":{}}}],["n)=>this.isauth",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["n.page",{"_index":1616,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["n.push(e",{"_index":1583,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["n.startdate",{"_index":803,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["n:any",{"_index":793,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["n:idclasstype",{"_index":1579,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["nadm",{"_index":1291,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["nadm.push(grp",{"_index":1295,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["name:\"becca",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"go",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"john",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"rick",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"superbowl",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"taylor",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"tom",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"ts",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:a.segment.name",{"_index":1747,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:e.name",{"_index":722,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/TicketmasterService.html":{}}}],["name:e.name,type:classtype.genre",{"_index":725,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:e.name,type:classtype.subgenre",{"_index":727,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:g.name",{"_index":1751,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:sg.name",{"_index":1755,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:string",{"_index":748,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["navigate",{"_index":2076,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":286,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigateto!:ngbdate",{"_index":335,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigation",{"_index":1385,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["navigation.component.css",{"_index":1386,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":1387,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":78,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navstuff",{"_index":913,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["network",{"_index":1618,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["network/firebase/authentication/authentication.service",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["network/firebase/firestore/calendar.service",{"_index":448,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/group.service",{"_index":782,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/watchlist.service",{"_index":783,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["network/ticketmaster/ticketmaster.service",{"_index":1550,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["new",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcalendarevent",{"_index":436,"title":{"classes/NewCalendarEvent.html":{}},"body":{"injectables/CalendarFacade.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["newcalevent",{"_index":438,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newcalevent.isvalid",{"_index":497,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newcalevent.tocalendarevent(this.currentuser",{"_index":499,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newevent",{"_index":1473,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["newgroupform",{"_index":751,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["next",{"_index":1004,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["next:(n",{"_index":1614,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["next:(x",{"_index":1600,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["ng",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1093,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["ngbcalendar",{"_index":328,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbcarouselmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbdate",{"_index":293,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["ngbdate(d.getfullyear",{"_index":353,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["ngbdate(e.end.getfullyear",{"_index":487,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdate(e.start.getfullyear",{"_index":484,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdate(x.end.getfullyear",{"_index":1488,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate(x.start.getfullyear",{"_index":1485,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate,ngbdate",{"_index":480,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdatepicker",{"_index":317,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbmodal",{"_index":920,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngbmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbnav",{"_index":931,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":280,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngonchanges(changes",{"_index":306,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngondestroy",{"_index":969,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["ngoninit",{"_index":679,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["ngoninit(){//given",{"_index":990,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["ngx",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"dependencies.html":{}}}],["node.js",{"_index":2035,"title":{},"body":{"index.html":{}}}],["none",{"_index":1053,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["notfreeatall",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notgoing",{"_index":2025,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noti",{"_index":1146,"title":{},"body":{"injectables/GroupService.html":{}}}],["notification.service",{"_index":1176,"title":{},"body":{"injectables/GroupService.html":{}}}],["notificationservice",{"_index":1147,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["now",{"_index":1137,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["npm",{"_index":2036,"title":{},"body":{"index.html":{}}}],["null",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{}}}],["number",{"_index":1465,"title":{},"body":{"interfaces/PageInterface.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["number.isnan(sd.valueof",{"_index":1777,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["number:0",{"_index":1546,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["number:number",{"_index":1469,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["object",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs",{"_index":1298,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["obs.error(\"group",{"_index":1215,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(result",{"_index":606,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["obs.next(this.dbtogroupinterface(data",{"_index":1217,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(user!==null",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["obs.next(watchlist",{"_index":1932,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["obs.subscribe(grp",{"_index":1300,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["observable",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["observable(obs",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["of(1).pipe(switchmap(()=>forkjoin",{"_index":1246,"title":{},"body":{"injectables/GroupService.html":{}}}],["of(rtn",{"_index":1780,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["offset",{"_index":798,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["onaddclassification",{"_index":680,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onaddclassification(ie",{"_index":689,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onaddclassification(ie:idclasstype",{"_index":728,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onchanges",{"_index":269,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclick",{"_index":1065,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group",{"_index":1070,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group:groupinterface",{"_index":1073,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclickdate",{"_index":281,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date",{"_index":311,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date:ngbdate",{"_index":356,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ondestroy",{"_index":935,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["one",{"_index":1136,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["ongenre",{"_index":681,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["ongenre(e",{"_index":693,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["ongenre(e:idname",{"_index":724,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["oninit",{"_index":674,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["onremoveclassfication",{"_index":682,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onremoveclassfication(ie",{"_index":696,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onremoveclassfication(ie:idclasstype",{"_index":731,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment",{"_index":683,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e",{"_index":698,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e:idname",{"_index":720,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre",{"_index":684,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e",{"_index":700,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e:idname",{"_index":726,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["opacity",{"_index":1381,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["open",{"_index":915,"title":{},"body":{"components/GroupCreateComponent.html":{},"index.html":{}}}],["openmodalemitter",{"_index":1090,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["other.id",{"_index":869,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["out",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":325,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupListComponent.html":{}}}],["outputs",{"_index":287,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupListComponent.html":{}}}],["overview",{"_index":2090,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.number",{"_index":1604,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["p:pageinterface",{"_index":1602,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["package",{"_index":1985,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":389,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":1087,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.html",{"_index":1088,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts",{"_index":1085,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1324,"title":{},"body":{"components/LoginPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:12",{"_index":1889,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["page.component.ts:13",{"_index":1632,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:14",{"_index":1633,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:15",{"_index":1634,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:17",{"_index":1631,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:18",{"_index":1109,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:19",{"_index":1106,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:20",{"_index":1110,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:21",{"_index":1105,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:22",{"_index":1107,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:23",{"_index":1096,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:24",{"_index":1325,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:25",{"_index":1479,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:27",{"_index":1108,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:28",{"_index":1478,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:29",{"_index":1629,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:31",{"_index":1103,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:35",{"_index":1477,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:36",{"_index":1104,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:40",{"_index":1101,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:42",{"_index":1628,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:43",{"_index":1102,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:45",{"_index":1630,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:51",{"_index":1476,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:57",{"_index":1098,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:62",{"_index":1100,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page/classification",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["page/event",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["page/group",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"coverage.html":{}}}],["page/groupmember",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["page/grouppipe.pipe.ts",{"_index":1302,"title":{},"body":{"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe.ts:9",{"_index":1306,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["page/list",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/personal",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["page/search",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["page/watchlist",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page:pageinterface",{"_index":903,"title":{},"body":{"interfaces/EventPageInterface.html":{}}}],["page:undefined",{"_index":1759,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["pageinfo",{"_index":1507,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["pageinfo$:behaviorsubject",{"_index":1561,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["pageinterface",{"_index":902,"title":{"interfaces/PageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"interfaces/PageInterface.html":{},"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["parameter",{"_index":505,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["params.get('id",{"_index":1123,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["params:query}).pipe",{"_index":1784,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["params:{apikey:ticketmasterapi",{"_index":1734,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["paste",{"_index":2057,"title":{},"body":{"index.html":{}}}],["path",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group/:id",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"login",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"personalcalender",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"search",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"watchlist",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patriots",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":1202,"title":{},"body":{"injectables/GroupService.html":{}}}],["personal",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["personal:calandertype",{"_index":1482,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["personalcalenderpagecomponent",{"_index":80,"title":{"components/PersonalCalenderPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pgnum",{"_index":1525,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["pipe",{"_index":1256,"title":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{}},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"coverage.html":{}}}],["pipe(switchmap(()=>of(void",{"_index":1251,"title":{},"body":{"injectables/GroupService.html":{}}}],["pipe.pipe",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe.pipe.ts",{"_index":1258,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["pipe.pipe.ts:9",{"_index":1261,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["pipes",{"_index":1257,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1262,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{}}}],["platformlocation",{"_index":1283,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["please",{"_index":1450,"title":{},"body":{"injectables/NotificationService.html":{}}}],["pointer",{"_index":894,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["popperjs/core",{"_index":1997,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":1337,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["priority",{"_index":473,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["private",{"_index":274,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["prod",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["prod.ts",{"_index":1982,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1729,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["proj",{"_index":2061,"title":{},"body":{"index.html":{}}}],["project",{"_index":2028,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":2064,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["promise((res",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise((res,rej",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["promise(res",{"_index":644,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["promise.all([calupdateprom,grpupdateprom]).then(_",{"_index":1875,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["promise.all(allprom).then(_",{"_index":667,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/ViewGroupFacade.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"properties.html":{}}}],["protection",{"_index":1231,"title":{},"body":{"injectables/GroupService.html":{}}}],["provideanimations",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["provideauth",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provideauth(()=>getauth",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2056,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["providefirebaseapp",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore(()=>getfirestore",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["provider).then((result",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":677,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["pull",{"_index":648,"title":{},"body":{"injectables/CalendarService.html":{}}}],["pulling",{"_index":622,"title":{},"body":{"injectables/CalendarService.html":{}}}],["q",{"_index":596,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["queries",{"_index":1588,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["query",{"_index":548,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["query(calcollection",{"_index":597,"title":{},"body":{"injectables/CalendarService.html":{}}}],["query(grpcollection",{"_index":1205,"title":{},"body":{"injectables/GroupService.html":{}}}],["query.apikey",{"_index":1782,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["query:any",{"_index":1553,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["queryparams",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radial",{"_index":1374,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["radius",{"_index":1353,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["radius:0",{"_index":1663,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["range",{"_index":457,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["reactiveformsmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":1790,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["redirectto:'/search",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":2092,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":339,"title":{},"body":{"components/CalanderComponent.html":{}}}],["regarding",{"_index":1463,"title":{},"body":{"injectables/NotificationService.html":{}}}],["regards",{"_index":342,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rej(\"eh",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rej(\"group",{"_index":1204,"title":{},"body":{"injectables/GroupService.html":{}}}],["rej(\"user",{"_index":1227,"title":{},"body":{"injectables/GroupService.html":{}}}],["rej(err",{"_index":595,"title":{},"body":{"injectables/CalendarService.html":{}}}],["rej(new",{"_index":503,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["rej.code",{"_index":1942,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["relative",{"_index":1672,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["remove",{"_index":887,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["removecalendarevent",{"_index":513,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removecalendarevent(calendarevent",{"_index":538,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removeclassification",{"_index":1513,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeclassification(ie",{"_index":1532,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeclassification(ie:idclasstype",{"_index":1585,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeevent",{"_index":871,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event",{"_index":876,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event:eventinterface",{"_index":881,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removefromgroup",{"_index":1144,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromgroup(group",{"_index":1166,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromwatchlist",{"_index":1514,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["removefromwatchlist(event",{"_index":1534,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["removefromwatchlist(event:eventinterface",{"_index":1619,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["removereservedcalevent",{"_index":514,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removereservedcalevent(grp",{"_index":540,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removewatchlistevent",{"_index":1899,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["removewatchlistevent(user",{"_index":1910,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["replaysubject",{"_index":322,"title":{},"body":{"components/CalanderComponent.html":{}}}],["request",{"_index":1037,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["requesting",{"_index":1442,"title":{},"body":{"injectables/NotificationService.html":{}}}],["res",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["res(user",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reserved",{"_index":649,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["reserved/booked",{"_index":635,"title":{},"body":{"injectables/CalendarService.html":{}}}],["reservedforevent",{"_index":652,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/enumerations.html":{}}}],["reset",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":603,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["result.push(calevent",{"_index":640,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtocalendarevent(cal,user",{"_index":605,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtogroupinterface(grp",{"_index":1209,"title":{},"body":{"injectables/GroupService.html":{}}}],["results",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["returnevents",{"_index":1705,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["returnevents(x",{"_index":1713,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["returnevents(x:any):observable",{"_index":1757,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["returns",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["returnurl",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgb(2",{"_index":404,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(0,0,0,0.3",{"_index":1686,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["rgba(2",{"_index":409,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(26",{"_index":1674,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["right:0",{"_index":1348,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["rotate(0deg",{"_index":1698,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["rotate(360deg",{"_index":1699,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["rotation",{"_index":1693,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["route",{"_index":1095,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["route:activatedroute",{"_index":1118,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["router",{"_index":973,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{}}}],["router.navigate(['login",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router:router",{"_index":989,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":186,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1079,"title":{},"body":{"components/GroupListComponent.html":{}}}],["row:hover",{"_index":1082,"title":{},"body":{"components/GroupListComponent.html":{}}}],["rtn.events",{"_index":1767,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn.page",{"_index":1761,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn:any",{"_index":1758,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn:subscription",{"_index":465,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["run",{"_index":2086,"title":{},"body":{"index.html":{}}}],["running",{"_index":2085,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["s",{"_index":1539,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["save",{"_index":959,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["saved",{"_index":1935,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["sd",{"_index":1769,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["search",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["searchevent",{"_index":1515,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["searchevent(){//this",{"_index":1587,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["searchfacade",{"_index":678,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["searchfacade:searchfacadeservice",{"_index":714,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["searchfacadeservice",{"_index":686,"title":{"injectables/SearchFacadeService.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["searchpagecomponent",{"_index":83,"title":{"components/SearchPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sec",{"_index":1651,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["second:from(updatedoc(grpdoc",{"_index":1250,"title":{},"body":{"injectables/GroupService.html":{}}}],["segment",{"_index":735,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["segment:idname",{"_index":737,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["segmentinterface",{"_index":743,"title":{"interfaces/SegmentInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["select",{"_index":1052,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"index.html":{}}}],["selectedevent",{"_index":763,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{}}}],["selectedevent.images",{"_index":821,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["selectedevent.location",{"_index":819,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["selectedevent?:eventinterface",{"_index":939,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["send",{"_index":1434,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendbookingconfirmation",{"_index":1416,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendbookingconfirmation(group",{"_index":1420,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest",{"_index":1417,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest(group",{"_index":1422,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail",{"_index":1418,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail(to",{"_index":1424,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendgroupconfirmation",{"_index":970,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["sendgroupconfirmation(group",{"_index":1168,"title":{},"body":{"injectables/GroupService.html":{}}}],["sent",{"_index":1010,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["set",{"_index":2040,"title":{},"body":{"index.html":{}}}],["setbgcolor",{"_index":282,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date",{"_index":313,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date:ngbdate):string",{"_index":359,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setdoc",{"_index":556,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/WatchlistService.html":{}}}],["setdoc(watchdoc,update).then(_",{"_index":1943,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["setgroupcalandercolor",{"_index":1796,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["setgroupcalandercolor(grpcal",{"_index":1819,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["shadow",{"_index":1377,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["sign",{"_index":1331,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["signinwithpopup",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithpopup(this.auth",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["simplechanges",{"_index":307,"title":{},"body":{"components/CalanderComponent.html":{}}}],["size",{"_index":1372,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PageInterface.html":{},"components/SearchPageComponent.html":{}}}],["size:number",{"_index":1467,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["sizing",{"_index":1691,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["slt",{"_index":1652,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["solid",{"_index":1659,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["somefree",{"_index":2016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sort",{"_index":470,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["spinner",{"_index":1687,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["split",{"_index":614,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/.../auth.guard.ts",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../calenderenum.ts",{"_index":2010,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../clasification",{"_index":2011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../env",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../groupstatus.ts",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../testdata.ts",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/class/newcalendarevent.ts",{"_index":1399,"title":{},"body":{"classes/NewCalendarEvent.html":{},"coverage.html":{}}}],["src/app/class/newcalendarevent.ts:16",{"_index":1405,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:22",{"_index":1407,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:6",{"_index":1404,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:7",{"_index":1403,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:8",{"_index":1402,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/common/calander/calander.component.ts",{"_index":267,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{}}}],["src/app/common/calander/calander.component.ts:15",{"_index":294,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:16",{"_index":290,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:17",{"_index":292,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:19",{"_index":296,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:20",{"_index":321,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:23",{"_index":323,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:24",{"_index":316,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:25",{"_index":289,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:31",{"_index":308,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:42",{"_index":299,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:45",{"_index":312,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:49",{"_index":314,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:60",{"_index":303,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts",{"_index":1384,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/common/navigation/navigation.component.ts:11",{"_index":1388,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts:12",{"_index":1391,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts:15",{"_index":1390,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts:18",{"_index":1389,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/facade/creategroupfacade",{"_index":936,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["src/app/facade/creategroupfacade.ts",{"_index":750,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"coverage.html":{}}}],["src/app/facade/creategroupfacade.ts:17",{"_index":780,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:18",{"_index":781,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:19",{"_index":779,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:30",{"_index":760,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:39",{"_index":765,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:47",{"_index":764,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:62",{"_index":767,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:79",{"_index":762,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/grouppage",{"_index":1264,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"coverage.html":{}}}],["src/app/facade/personalcalendarfacade.ts",{"_index":423,"title":{},"body":{"injectables/CalendarFacade.html":{},"coverage.html":{}}}],["src/app/facade/personalcalendarfacade.ts:17",{"_index":447,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:18",{"_index":445,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:19",{"_index":444,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:20",{"_index":433,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:28",{"_index":441,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:31",{"_index":442,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:61",{"_index":440,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:65",{"_index":437,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/search",{"_index":705,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["src/app/facade/viewgroupfacade",{"_index":986,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["src/app/facade/viewgroupfacade.ts",{"_index":1791,"title":{},"body":{"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["src/app/facade/viewgroupfacade.ts:102",{"_index":1820,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:111",{"_index":1800,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:116",{"_index":1801,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:134",{"_index":1817,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:148",{"_index":1816,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:156",{"_index":1812,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:162",{"_index":1810,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:170",{"_index":1818,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:182",{"_index":1798,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:19",{"_index":1829,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:199",{"_index":1799,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:20",{"_index":1825,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:21",{"_index":1824,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:22",{"_index":1827,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:23",{"_index":1822,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:24",{"_index":1828,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:25",{"_index":1826,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:26",{"_index":1797,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:37",{"_index":1815,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:42",{"_index":1802,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:45",{"_index":1803,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:48",{"_index":1805,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:56",{"_index":1809,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:74",{"_index":1807,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/watchlist",{"_index":1879,"title":{},"body":{"injectables/WatchlistFacadeService.html":{},"coverage.html":{}}}],["src/app/group",{"_index":906,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/calander",{"_index":330,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/interfaces/clasification",{"_index":709,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/enums/calenderenum",{"_index":333,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["src/app/interfaces/enums/calenderenum.ts",{"_index":1966,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/enums/groupstatus.ts",{"_index":2024,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/event",{"_index":558,"title":{},"body":{"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/interfaces/eventpage",{"_index":901,"title":{},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/interfaces/group",{"_index":557,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/interfaces/page",{"_index":1464,"title":{},"body":{"interfaces/PageInterface.html":{},"coverage.html":{}}}],["src/app/interfaces/testdata.ts",{"_index":1967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/user",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"interfaces/UserInterface.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/login",{"_index":1322,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service",{"_index":877,"title":{},"body":{"components/EventComponentComponent.html":{},"components/NavigationComponent.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:10",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:15",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:25",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:33",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:52",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts",{"_index":506,"title":{},"body":{"injectables/CalendarService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:13",{"_index":518,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:131",{"_index":543,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:146",{"_index":539,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:157",{"_index":528,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:17",{"_index":532,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:183",{"_index":541,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:37",{"_index":521,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:69",{"_index":535,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:86",{"_index":525,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:90",{"_index":537,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts",{"_index":1139,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:116",{"_index":1165,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:144",{"_index":1167,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:16",{"_index":1148,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:175",{"_index":1159,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:184",{"_index":1169,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:188",{"_index":1152,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:20",{"_index":1156,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:222",{"_index":1150,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:44",{"_index":1154,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:79",{"_index":1163,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:99",{"_index":1161,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts",{"_index":1415,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:16",{"_index":1426,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:35",{"_index":1423,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:53",{"_index":1421,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:9",{"_index":1419,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service",{"_index":878,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts",{"_index":1895,"title":{},"body":{"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:10",{"_index":1900,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:14",{"_index":1907,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:33",{"_index":1904,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:48",{"_index":1909,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:67",{"_index":1902,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:88",{"_index":1911,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service",{"_index":711,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts",{"_index":1701,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:15",{"_index":1708,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:24",{"_index":1718,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:29",{"_index":1710,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:53",{"_index":1714,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:78",{"_index":1712,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/personal",{"_index":1470,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["src/app/search",{"_index":672,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["src/app/watchlist",{"_index":1886,"title":{},"body":{"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["src/environments",{"_index":2043,"title":{},"body":{"index.html":{}}}],["src/environments/env",{"_index":1720,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stadium",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":304,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start,enddate",{"_index":489,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["start.day",{"_index":374,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["start.month",{"_index":372,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["start2",{"_index":1974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start3",{"_index":1975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start:ngbdate",{"_index":483,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["start:start",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start2",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start3",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:string",{"_index":1408,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["startdate",{"_index":383,"title":{},"body":{"components/CalanderComponent.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["startdate:date",{"_index":370,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["startdate:new",{"_index":777,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["startdate?:date",{"_index":852,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["started",{"_index":2027,"title":{"index.html":{}},"body":{}}],["startwith",{"_index":1552,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["startwith(undefined",{"_index":1599,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["state",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.url",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1949,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1018,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["storagebucket",{"_index":2065,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdName.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(evt",{"_index":794,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["style",{"_index":1367,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["sub",{"_index":1223,"title":{},"body":{"injectables/GroupService.html":{}}}],["sub.unsubscribe",{"_index":1225,"title":{},"body":{"injectables/GroupService.html":{}}}],["subgenre",{"_index":736,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["subgenre:idname",{"_index":739,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subgenres",{"_index":905,"title":{},"body":{"interfaces/GenreInterface.html":{}}}],["subgenres:idname",{"_index":746,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subject",{"_index":454,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["subs",{"_index":425,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["subs:subscription",{"_index":456,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["subscribe",{"_index":719,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["subscribe((d:ngbdate)=>this.onclickdate(d",{"_index":351,"title":{},"body":{"components/CalanderComponent.html":{}}}],["subscription",{"_index":446,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["subscriptions",{"_index":1627,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["subscriptions:subscription",{"_index":1638,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["success",{"_index":829,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["success\",\"calender",{"_index":1493,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["successfully",{"_index":1435,"title":{},"body":{"injectables/NotificationService.html":{}}}],["support",{"_index":2093,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2094,"title":{},"body":{"modules.html":{}}}],["swift",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap",{"_index":704,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["switchmap((group:groupinterface)=>this.calsvc.getgroupcalendar(group).pipe",{"_index":1845,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["switchmap((user:userinterface)=>from(this.grpsvc.joingroup(id",{"_index":1287,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["switchmap((x:string",{"_index":717,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["switchmap(this.returnevents",{"_index":1789,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["table",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":329,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["take(1",{"_index":350,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{}}}],["taken",{"_index":831,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{}}}],["tap",{"_index":1174,"title":{},"body":{"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["tap((grpcal:calanderevent",{"_index":1846,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["tap((x:boolean",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap((x:classificationinterface",{"_index":1576,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["technically",{"_index":1432,"title":{},"body":{"injectables/NotificationService.html":{}}}],["temp",{"_index":658,"title":{},"body":{"injectables/CalendarService.html":{}}}],["temp.unsubscribe",{"_index":660,"title":{},"body":{"injectables/CalendarService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["test",{"_index":2081,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1785,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["text",{"_index":386,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["then(_=>res",{"_index":501,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["then(doc",{"_index":593,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.admingroups$.next(adm",{"_index":1296,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.auth.authstateready().then(_",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.displayname",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.email",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.uid",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.logingoogle().then(_",{"_index":1326,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.logout().then(_",{"_index":1329,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.onauthstatechanged((user",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.signout",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authapi.getcurrentuser().then((u",{"_index":1620,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.authapi.getcurrentuser().then((u)=>this.currentuser",{"_index":1394,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authapi.getcurrentuser().then((x:userinterface",{"_index":1571,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.authapi.isauthenticated().subscribe",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authapi.logout",{"_index":1396,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authsvc.getcurrentuser().then((u:userinterface)=>new",{"_index":811,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.authsvc.getcurrentuser().then(u=>this.currentuser$.next(u",{"_index":1837,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.authsvc.getcurrentuser().then(user",{"_index":463,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.baseurl",{"_index":1726,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.cal.createevent(this.newevent).then(_",{"_index":1494,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cal.deleteevent(e).then(_",{"_index":1491,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cal.destroy",{"_index":1484,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cal.initializecalender",{"_index":1483,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.calendar$.next(calevents",{"_index":491,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.addcalendarevent(calevent",{"_index":500,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.convertreservedtobooked(this.group$.value",{"_index":1872,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.calsvc.getcalendar(user).subscribe",{"_index":466,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.getgroupcalendar(group).pipe",{"_index":1242,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.calsvc.removecalendarevent(e",{"_index":495,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.removereservedcalevent(this.group$.value",{"_index":1864,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.cat$.next(x",{"_index":1577,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cat$.next({segment",{"_index":1567,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.chosegroup(group",{"_index":1125,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.chosen",{"_index":1129,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.cid$.next",{"_index":1569,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.next(n",{"_index":1584,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.next(n.filter((c)=>c.id!=ie.id",{"_index":1586,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value",{"_index":1580,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.genre).map((x)=>x.id",{"_index":1592,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.segment).map((x)=>x.id",{"_index":1590,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.subgenre).map((x)=>x.id",{"_index":1594,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.clash(group.event,calevent",{"_index":639,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.classification.pipe",{"_index":715,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.clickeddate.next(date",{"_index":358,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.clipboard.copy(base_url",{"_index":1856,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.close",{"_index":946,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.currentuser",{"_index":464,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.currentuser$.value",{"_index":1877,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.datecolor",{"_index":364,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.datecolor$.next(datecolor",{"_index":492,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.dbtocalendarevent(cal",{"_index":632,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.detail",{"_index":1413,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.details",{"_index":862,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.end",{"_index":1412,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.enddate",{"_index":866,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.error$.next({error:err,title:\"ticket",{"_index":1608,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.next",{"_index":1568,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.next(s",{"_index":1563,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.value",{"_index":1596,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.formbuilder.group",{"_index":769,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.getcalendar(calendarevent.user).pipe(take(1)).subscribe(cal",{"_index":586,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.getcurrentuser",{"_index":1834,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.getgroup(id",{"_index":1835,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.getgroupbyid(groupid).subscribe(grp",{"_index":1224,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.getgroupcalander(group",{"_index":1836,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.getgroups",{"_index":1288,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["this.getwatchlist",{"_index":1565,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.group",{"_index":992,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.group$.next(group",{"_index":1841,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value",{"_index":1866,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value!).confirmed.foreach(userid",{"_index":1858,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value.alluuid.length",{"_index":1869,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value.confirmed.length",{"_index":1868,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.groupbyid$.next(grp",{"_index":1301,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.groupclicked.emit(group",{"_index":1074,"title":{},"body":{"components/GroupListComponent.html":{}}}],["this.grp.confirmgroupbooking().then(_",{"_index":1015,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.confirmgroupevent().pipe(take(1)).subscribe",{"_index":1019,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.copyinvitelink",{"_index":1000,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.creategroup(this.selectedevent!).then(_",{"_index":943,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.grp.deletegroup().then(_",{"_index":993,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.destroy",{"_index":954,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["this.grp.getgrpbyid(id).subscribe",{"_index":1124,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.initialise",{"_index":1119,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.initialise(this.group.id",{"_index":991,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.initialize",{"_index":950,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.grp.joingroup(this.groupid).subscribe({error:(err)=>this.toastr.error(err,\"join",{"_index":1120,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.joingroup(this.grp.group$.value!.id).subscribe",{"_index":1003,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.kickuser(user).then(_",{"_index":998,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.sendgroupconfirmation().then(_",{"_index":1008,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grpsvc.confirmgroupbooking(this.group$.value",{"_index":1874,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.confirmgroupevent(this.group$.value",{"_index":1876,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.creategroup(grp.name",{"_index":825,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.grpsvc.deletegroup(this.group$.value!).then(_",{"_index":1863,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(g.id).pipe",{"_index":1844,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(id",{"_index":1299,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(id).subscribe(group",{"_index":1840,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroups(user).subscribe(grps",{"_index":1289,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.removefromgroup(this.group$.value",{"_index":1865,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.sendgroupconfirmation(this.group$.value!).then(_",{"_index":1870,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.http.get(this.baseurl+\"/\"+\"classifications.json",{"_index":1733,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.http.get(this.baseurl+\"/events.json",{"_index":1783,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.id",{"_index":855,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.images",{"_index":860,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.isinside(start,date,end",{"_index":1490,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.lastclickeddate.next(date",{"_index":357,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.lastclickeddate.pipe",{"_index":349,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.loadedevents$.next(n.events",{"_index":1617,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.loadedevents$.next(x.events",{"_index":1606,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.loadingevents$.next(false",{"_index":1610,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.loadingevents$.next(true",{"_index":1607,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.location",{"_index":858,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.membergroups$.next(nadm",{"_index":1297,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.modalservice.dismissall",{"_index":953,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.modalservice.open(this.content,{centered:true",{"_index":951,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.name",{"_index":857,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.navstuff?.select(2",{"_index":1130,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.newgroupform",{"_index":791,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.newgroupform.patchvalue",{"_index":809,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.newgroupform.value",{"_index":813,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.noti.sendbookingconfirmation(group).then(_",{"_index":1255,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.noti.sendconfirmationrequest(group",{"_index":1241,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.onaddclassification({id:e.id",{"_index":721,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.pageinfo$.next(p",{"_index":1605,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.platformlocation",{"_index":1440,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.query",{"_index":1566,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.genreid",{"_index":1591,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.keyword",{"_index":1595,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.page",{"_index":1597,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.segmentid",{"_index":1589,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.subgenreid",{"_index":1593,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.removecalendarevent(this.dbtocalendarevent(data[0",{"_index":670,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1121,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1328,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.router.navigate([\"login",{"_index":1397,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.navigate(['/group",{"_index":995,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.router.navigatebyurl",{"_index":1327,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.searchevent",{"_index":1564,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.searchfacade.addclassification(ie",{"_index":730,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.addtowatchlist(event",{"_index":884,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.searchfacade.changepage(pgnum",{"_index":1647,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.destroy",{"_index":1641,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.error$.subscribe",{"_index":1645,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.getclassification(x",{"_index":718,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.initialise",{"_index":1643,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.removeclassification(ie",{"_index":732,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.removefromwatchlist(event",{"_index":882,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.searchfacade.searchevent",{"_index":1648,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.selectedevent",{"_index":955,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.sendemail(emaillist,{subject",{"_index":1459,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.start",{"_index":1411,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.startdate",{"_index":864,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.subs.foreach((e)=>e.unsubscribe",{"_index":462,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.subs.foreach((x)=>x.unsubscribe",{"_index":1570,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.subs.push",{"_index":1839,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.subs.push(rtn",{"_index":493,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.subs.push(this.em.subscribe(()=>this.open",{"_index":942,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.subs.push(this.watchlistsvc.getwatchlist(user).subscribe(watchlist",{"_index":788,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.subscriptions.foreach(s=>s.unsubscribe",{"_index":1642,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.subscriptions.push",{"_index":1644,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.tmapi.getclassification(kw).pipe",{"_index":1575,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.tmapi.geteventsquery(this.query).pipe",{"_index":1598,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.tmapi.geteventsquery(this.query).pipe(startwith(undefined)).subscribe",{"_index":1613,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.toastr.error(err,\"cannot",{"_index":1024,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.error(err,\"group",{"_index":1127,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.toastr.error(err,\"joined",{"_index":1007,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.error(err.message,\"calender",{"_index":1497,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.toastr.error(err.message,\"group",{"_index":948,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.toastr.error(n.error,n.title",{"_index":1646,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.toastr.info(\"link",{"_index":1001,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(\"created",{"_index":1495,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.toastr.success(\"delete",{"_index":1492,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.toastr.success(\"email",{"_index":1009,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(\"going",{"_index":1020,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(\"you",{"_index":1016,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(this.group.name,\"delete",{"_index":994,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(this.group.name,\"joined",{"_index":1005,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(this.grp.newgroupform.value.name?this.grp.newgroupform.value.name:\"\",\"group",{"_index":944,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.toastr.success(user.name,\"kicked",{"_index":999,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.watchlist$.next(n",{"_index":1573,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.watchlist$.next(watchlist",{"_index":789,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.watchlistfacade.destroy",{"_index":1892,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.watchlistfacade.initialise",{"_index":1893,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.watchlistsvc.addwatchlistevent(u,event",{"_index":1623,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.watchlistsvc.getwatchlist(x).subscribe",{"_index":1572,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.watchlistsvc.removewatchlistevent(u,event",{"_index":1621,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["throw(rej",{"_index":1944,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["throwerror",{"_index":1175,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["throwerror(\"no",{"_index":1764,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["throwerror(()=>\"user",{"_index":1245,"title":{},"body":{"injectables/GroupService.html":{}}}],["ticket",{"_index":1457,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ticketbuddy",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ticketmaster",{"_index":2044,"title":{},"body":{"index.html":{}}}],["ticketmasterapi",{"_index":1719,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ticketmasterservice",{"_index":710,"title":{"injectables/TicketmasterService.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["tickets",{"_index":1456,"title":{},"body":{"injectables/NotificationService.html":{}}}],["time",{"_index":469,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["timeout",{"_index":1724,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["timeout(5000",{"_index":1787,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["title=\"tickets",{"_index":1038,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["tmapi",{"_index":1517,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["to.length",{"_index":1431,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toastr",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"dependencies.html":{}}}],["toastr:toastrservice",{"_index":940,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["toastrmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":918,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["tocalendarevent",{"_index":1401,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["tocalendarevent(user",{"_index":1406,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["top",{"_index":895,"title":{},"body":{"components/EventComponentComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["top:0",{"_index":1339,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["toremove",{"_index":1233,"title":{},"body":{"injectables/GroupService.html":{}}}],["totalelements",{"_index":1466,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["totalelements:0",{"_index":1545,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["totalelements:number",{"_index":1468,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["transform",{"_index":1259,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["transform(e",{"_index":1313,"title":{},"body":{"pipes/InwatchlistPipe.html":{}}}],["transform(members",{"_index":1260,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(members:userinterface",{"_index":1263,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(value",{"_index":1304,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["transform(value:groupinterface",{"_index":1307,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["translate",{"_index":1341,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["transparent",{"_index":1690,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["trigger",{"_index":1786,"title":{},"body":{"injectables/TicketmasterService.html":{},"index.html":{}}}],["true",{"_index":1252,"title":{},"body":{"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{}}}],["tslib",{"_index":2004,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:calandertype.personal",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type:classtype",{"_index":742,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["type:classtype.segment",{"_index":723,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["typeof",{"_index":565,"title":{},"body":{"injectables/CalendarService.html":{}}}],["tzoffset",{"_index":795,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["tzoffset)).toisostring().slice(0",{"_index":805,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["u).then(_",{"_index":827,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["u.name",{"_index":1395,"title":{},"body":{"components/NavigationComponent.html":{}}}],["uid",{"_index":577,"title":{},"body":{"injectables/CalendarService.html":{}}}],["unavailable",{"_index":1046,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["uncomment",{"_index":1728,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["undefined",{"_index":318,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["under",{"_index":2042,"title":{},"body":{"index.html":{}}}],["underline",{"_index":1055,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["up",{"_index":616,"title":{},"body":{"injectables/CalendarService.html":{},"index.html":{}}}],["update",{"_index":643,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["update).then(_",{"_index":646,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["update[\"confirmed",{"_index":1239,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatecalendarevent",{"_index":515,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatecalendarevent(calendarevent",{"_index":542,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updated",{"_index":1017,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["updatedoc",{"_index":552,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["updatedoc(caldoc",{"_index":645,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatedoc(grpdoc",{"_index":1229,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatedoc(watchdoc",{"_index":1940,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["updateeventinput",{"_index":1516,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateeventinput(s",{"_index":1537,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateeventinput(s:string",{"_index":1562,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateform",{"_index":754,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updateform(evt",{"_index":766,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updateform(evt:eventinterface",{"_index":792,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updatepromise",{"_index":1253,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatepromise.then(_",{"_index":1254,"title":{},"body":{"injectables/GroupService.html":{}}}],["ur@brother.com",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@father.com",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@mother.com",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@sister.com",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":1439,"title":{},"body":{"injectables/NotificationService.html":{}}}],["use",{"_index":2089,"title":{},"body":{"index.html":{}}}],["user",{"_index":257,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["user)).then(_",{"_index":671,"title":{},"body":{"injectables/CalendarService.html":{}}}],["user.id",{"_index":669,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["user1",{"_index":1976,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user2",{"_index":1977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user3",{"_index":1978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user4",{"_index":1979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user:userinterface",{"_index":1220,"title":{},"body":{"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{}}}],["user:{name:\"john",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":1859,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["userinterface",{"_index":233,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/SearchFacadeService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinterface|undefined",{"_index":1234,"title":{},"body":{"injectables/GroupService.html":{}}}],["username",{"_index":1043,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["using",{"_index":2039,"title":{},"body":{"index.html":{}}}],["validationerrors",{"_index":786,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["validators",{"_index":787,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["validators.required",{"_index":770,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.filter((e:groupinterface)=>e.admin.id!=user.id",{"_index":1311,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["value.filter((e:groupinterface)=>e.admin.id==user.id",{"_index":1310,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["var",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["variable",{"_index":1963,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2101,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1363,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{},"properties.html":{}}}],["version:hover",{"_index":1382,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["via",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["viewchild",{"_index":326,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild(\"dp",{"_index":345,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild('content",{"_index":928,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild('dp",{"_index":320,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild(ngbnav",{"_index":932,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewgroupfacade",{"_index":972,"title":{"injectables/ViewGroupFacade.html":{}},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["void",{"_index":310,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["waiting",{"_index":1021,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["watchdoc",{"_index":1929,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["watchlist$:behaviorsubject",{"_index":1557,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["watchlist.push(this.dbwatchlisttoevent(event",{"_index":1934,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist/${user.id",{"_index":1930,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist:eventinterface",{"_index":1315,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"injectables/WatchlistService.html":{}}}],["watchlistbtn",{"_index":892,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["watchlistbtnpositive",{"_index":897,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["watchlistevent",{"_index":1913,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.details",{"_index":1917,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.enddate",{"_index":1919,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.images",{"_index":1916,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.location",{"_index":1915,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.name",{"_index":1914,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.startdate",{"_index":1918,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistfacade",{"_index":1887,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["watchlistfacade:watchlistfacadeservice",{"_index":1891,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["watchlistfacadeservice",{"_index":1878,"title":{"injectables/WatchlistFacadeService.html":{}},"body":{"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["watchlistpagecomponent",{"_index":85,"title":{"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["watchlistservice",{"_index":759,"title":{"injectables/WatchlistService.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["watchlistservice,private",{"_index":1885,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["watchlistsvc",{"_index":758,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["web",{"_index":2050,"title":{},"body":{"index.html":{}}}],["weight",{"_index":1370,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["where(\"alluuid\",\"array",{"_index":1206,"title":{},"body":{"injectables/GroupService.html":{}}}],["where(\"end",{"_index":624,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"grp.id",{"_index":656,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"start",{"_index":621,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid",{"_index":668,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"==\",user.id",{"_index":598,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"in",{"_index":654,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"in\",group.alluuid",{"_index":609,"title":{},"body":{"injectables/CalendarService.html":{}}}],["white",{"_index":407,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupListComponent.html":{},"components/LoginPageComponent.html":{}}}],["width",{"_index":397,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["wrn",{"_index":1664,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["wtf",{"_index":459,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["x",{"_index":1715,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x._embedded",{"_index":1766,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x._embedded.classifications",{"_index":1741,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.end.getmonth()+1,x.end.getdate",{"_index":1489,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["x.events.map((e:any",{"_index":1768,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.page",{"_index":1603,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["x.page.totalelements",{"_index":1763,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.page.totalelements>0",{"_index":1737,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.start.getmonth()+1,x.start.getdate",{"_index":1486,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["xxxxx",{"_index":2072,"title":{},"body":{"index.html":{}}}],["xxxxxxxxxxxx",{"_index":2068,"title":{},"body":{"index.html":{}}}],["y4q5tlebgb",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1813,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["z",{"_index":1343,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["zone.js",{"_index":2006,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ticketbuddy'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from './network/firebase/authentication/authentication.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ticketbuddy';\n  isAuth = false;\n  constructor(private authApi:AuthenticationService){\n    this.authApi.isAuthenticated().subscribe(\n      (n)=>this.isAuth = n\n    );\n  }\n}\n\n    \n\n    \n        \n\t\n \n\n\n  \n\t\n\t\t\n\t\n\n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t   \t\t\t\t  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nGrouppipePipe\n\nGrouppipePipe\n\nAppModule -->\n\nGrouppipePipe->AppModule\n\n\n\n\n\nInwatchlistPipe\n\nInwatchlistPipe\n\nAppModule -->\n\nInwatchlistPipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CalanderComponent\n                        \n                        \n                            ClassificationComponentComponent\n                        \n                        \n                            EventComponentComponent\n                        \n                        \n                            GroupCreateComponent\n                        \n                        \n                            GroupDetailComponent\n                        \n                        \n                            GroupListComponent\n                        \n                        \n                            GroupPageComponent\n                        \n                        \n                            GroupmemberPipePipe\n                        \n                        \n                            GrouppipePipe\n                        \n                        \n                            InwatchlistPipe\n                        \n                        \n                            ListEventsComponent\n                        \n                        \n                            LoginPageComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PersonalCalenderPageComponent\n                        \n                        \n                            SearchPageComponent\n                        \n                        \n                            WatchlistPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(firebaseConfig)).html\">provideFirebaseApp(() => initializeApp(firebaseConfig))\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ListEventsComponent } from './search-page/list-events/list-events.component';\nimport { EventComponentComponent } from './search-page/event-component/event-component.component';\n\n\nimport { ToastrModule } from 'ngx-toastr';\n\n// Firebase\nimport { firebaseConfig } from '../environments/env-prod'\nimport { provideFirebaseApp, initializeApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { getAuth, provideAuth } from '@angular/fire/auth';\n\nimport { provideAnimations, BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { GroupListComponent } from './group-page/group-list/group-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GrouppipePipe } from './group-page/grouppipe.pipe';\nimport { GroupDetailComponent } from './group-page/group-detail/group-detail.component';\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { CalanderComponent } from './common/calander/calander.component';\n\nimport { GroupmemberPipePipe } from './group-page/groupmember-pipe.pipe';\nimport { NavigationComponent } from './common/navigation/navigation.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { GroupCreateComponent } from './group-page/group-create/group-create.component';\nimport { ClassificationComponentComponent } from './search-page/classification-component/classification-component.component';\nimport { InwatchlistPipe } from './search-page/list-events/inwatchlist.pipe';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ListEventsComponent,\n        EventComponentComponent,\n        SearchPageComponent,\n        GroupPageComponent,\n        GroupListComponent,\n        GrouppipePipe,\n        GroupDetailComponent,\n        PersonalCalenderPageComponent,\n        WatchlistPageComponent,\n        GroupmemberPipePipe,\n        CalanderComponent,\n        NavigationComponent,\n        LoginPageComponent,\n        GroupCreateComponent,\n        ClassificationComponentComponent,\n        InwatchlistPipe\n    ],\n    providers: [provideAnimations()],\n    bootstrap: [AppComponent],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        NgbCarouselModule,\n        FormsModule,\n        ReactiveFormsModule,\n        // Firebase\n        provideFirebaseApp(() => initializeApp(firebaseConfig)),\n        provideAuth(()=>getAuth()),\n        provideFirestore(()=>getFirestore()),\n        \n        BrowserAnimationsModule,\n        ToastrModule.forRoot()\n\n    ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport {authGuard} from \"./guards/auth.guard\";\nconst routes: Routes = [\n  {path:\"personalcalender\", component:PersonalCalenderPageComponent, canActivate:[authGuard]},\n  {path:\"search\", component:SearchPageComponent, canActivate:[authGuard]},\n  {path:\"group\", component:GroupPageComponent, canActivate:[authGuard]},\n  {path:\"group/:id\", component:GroupPageComponent, canActivate:[authGuard]},//for joining via link\n  {path:\"watchlist\", component:WatchlistPageComponent, canActivate:[authGuard]},\n  {path:\"login\", component:LoginPageComponent},\n  {path:'', redirectTo:'/search', pathMatch:'full'}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                loginGoogle\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/authentication/authentication.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginGoogle\n                        \n                    \n                \n            \n            \n                \nloginGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Auth, GoogleAuthProvider} from '@angular/fire/auth';\nimport { signInWithPopup } from 'firebase/auth';\nimport { Observable } from 'rxjs';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  \n  constructor(private auth: Auth) { \n  \n  }\n  loginGoogle(): Promise {\n    return new Promise((res)=>{\n      let provider = new GoogleAuthProvider();\n      signInWithPopup(this.auth, provider).then((result)=>{\n        console.log(result);\n        res();\n      });\n    });\n  }\n\n  logOut(): Promise {\n    return new Promise((res)=>{\n      this.auth.signOut();\n      console.log(\"signout\")\n      res();\n    });\n  }\n\n  getCurrentUser():Promise{\n\n    return new Promise((res,rej)=>{\n      this.auth.authStateReady().then(_=>{\n        if (this.auth.currentUser === null) {\n          rej(\"eh buto login first lah cb\");\n          return;\n        }\n        let user =  {\n          id: this.auth.currentUser.uid,\n          name: this.auth.currentUser.displayName,\n          email: this.auth.currentUser.email\n        };\n        res(user);\n      })\n    })\n   \n  }\n\n  isAuthenticated(): Observable{\n    return new Observable(obs=>{\n      this.auth.onAuthStateChanged((user)=>{\n        obs.next(user!==null);\n      })\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalanderComponent.html":{"url":"components/CalanderComponent.html","title":"component - CalanderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalanderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/calander/calander.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calander\n            \n\n\n\n            \n                styleUrls\n                ./calander.component.css\n            \n\n\n\n            \n                templateUrl\n                ./calander.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                    \n                                    Private\n                                dp\n                            \n                            \n                                hoveredDate\n                            \n                            \n                                lastClickedDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToNgbDate\n                            \n                            \n                                    Private\n                                isInside\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onClickDate\n                            \n                            \n                                setBGColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateColor\n                            \n                            \n                                events\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickedDate\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/calander/calander.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dateColor\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateTo\n                    \n                \n                \n                    \n                        Type :     NgbDate\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickedDate\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToNgbDate\n                        \n                    \n                \n            \n            \n                \nconvertToNgbDate(d: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInside\n                        \n                    \n                \n            \n            \n                \n                        \n                    isInside(start: NgbDate, date: NgbDate, end: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickDate\n                        \n                    \n                \n            \n            \n                \nonClickDate(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBGColor\n                        \n                    \n                \n            \n            \n                \nsetBGColor(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgbCalendar)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        dp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDatepicker | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dp')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoveredDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDate | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastClickedDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild, inject} from '@angular/core';\nimport { NgbCalendar, NgbDate, NgbDatepicker } from '@ng-bootstrap/ng-bootstrap';\nimport { ReplaySubject, take } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor } from 'src/app/interfaces/enums/calenderenum';\n\n@Component({\n  selector: 'app-calander',\n  templateUrl: './calander.component.html',\n  styleUrls: ['./calander.component.css']\n})\nexport class CalanderComponent implements OnChanges{\n\t//list of events \n\t//then a map for date -> CalanderColor\n\t@Input() navigateTo!:NgbDate;\n\t@Input() dateColor!: [[NgbDate, NgbDate], CalanderColor][];\n\t@Input() events!:CalanderEvent[];//should have a listernere here so when events refresh will change the clickedDate output\n\t//return the listof event with regards to dates clicked \n\t@Output() clickedDate = new EventEmitter();\n\t@ViewChild(\"dp\") private dp:NgbDatepicker|undefined;\n\t\n\t//here the output will be changed if this calander is for \n\tlastClickedDate = new ReplaySubject();\n  \tcalendar = inject(NgbCalendar);\n\thoveredDate: NgbDate | null = null;\n\tconstructor(){\n\n\t}\n\t\n\t\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif(changes[\"events\"]){\n\t\t\tthis.lastClickedDate.pipe(\n\t\t\t\ttake(1),\n\t\t\t).subscribe((d:NgbDate)=>this.onClickDate(d));\n\t\t}\n\t\n\t}\n\n\t\n\t\n\tconvertToNgbDate(d:Date){\n\t\treturn new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n\t}\n\tonClickDate(date:NgbDate){\n\t\tthis.lastClickedDate.next(date);\n\t\tthis.clickedDate.next(date);\n\t}\n\tsetBGColor(date:NgbDate):string{\n\t\t//check amonst all keys in dateColor map\n\t\tfor( var e of this.dateColor){\n\t\t\tif(this.isInside(e[0][0],date,e[0][1])){\n\t\t\t\treturn e[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn \"\"\n\t}\n\t\n\tprivate isInside(start:NgbDate, date:NgbDate, end:NgbDate):boolean{\n\t\tvar startDate:Date = new Date(start.year, start.month - 1, start.day);\n\t\tvar dateDate:Date = new Date(date.year, date.month - 1, date.day);\n\t\tvar endDate:Date = new Date(end.year, end.month - 1, end.day);\n\t\t\n\t\treturn startDate\n    \n\n    \n        \n\n\n\n\n\t\n\t\t{{ date.day }}\n\t\n\n    \n\n    \n                \n                    ./calander.component.css\n                \n                .custom-day {\n    text-align: center;\n    padding: 0.185rem 0.25rem;\n    display: inline-block;\n    height: 2rem;\n    width: 2rem;\n}\n.custom-day.focused {\n    background-color: #e6e6e6;\n}\n.custom-day.range,\n.custom-day:hover {\n    background-color: rgb(2, 117, 216);\n    color: white;\n}\n.custom-day.faded {\n    background-color: rgba(2, 117, 216, 0.5);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ date.day }}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalanderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEvent.html":{"url":"interfaces/CalanderEvent.html","title":"interface - CalanderEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            detail\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         CalanderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n    groupId?: string,\n    groupName?: string\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEventColor.html":{"url":"interfaces/CalanderEventColor.html","title":"interface - CalanderEventColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEventColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bgColor\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bgColor:         CalanderColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         CalanderEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n    groupId?: string,\n    groupName?: string\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarFacade.html":{"url":"injectables/CalendarFacade.html","title":"injectable - CalendarFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/PersonalCalendarFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar$\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                dateColor$\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                destroy\n                            \n                            \n                                initializeCalender\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, calSvc: CalendarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent(newCalEvent: NewCalendarEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newCalEvent\n                                            \n                                                            NewCalendarEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeCalender\n                        \n                    \n                \n            \n            \n                \ninitializeCalender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { NewCalendarEvent } from \"../class/NewCalendarEvent\"\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarFacade {\n    private subs:Subscription[] = [];\n    currentUser?: UserInterface;\n    calendar$: BehaviorSubject = new BehaviorSubject([]);\n    dateColor$: BehaviorSubject = new BehaviorSubject([]); //should be date range better // wtf does this mean\n\n    constructor(\n        private authSvc:AuthenticationService,\n        private calSvc: CalendarService\n    ) {\n        \n    }\n    destroy(){\n        this.subs.forEach((e)=>e.unsubscribe());\n    }\n    initializeCalender(){\n        this.authSvc.getCurrentUser().then(user=>{\n            this.currentUser  = user;\n            var rtn:Subscription = this.calSvc.getCalendar(user).subscribe(\n            calEvents=>{\n                \n                calEvents.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n                    var aNum:number = CalanderTypePriority.get(a.type)||0;\n                    var bNum:number = CalanderTypePriority.get(b.type)||0;\n                    return aNum-bNum;\n                });\n                \n                let dateColor: [[NgbDate,NgbDate], CalanderColor][] = calEvents.map(\n                    (e:CalanderEvent)=>{\n                        var start:NgbDate = new NgbDate(e.start.getFullYear() , e.start.getMonth()+1,e.start.getDate());\n                        var endDate:NgbDate = new NgbDate(e.end.getFullYear() , e.end.getMonth()+1,e.end.getDate());\n                        return [[start,endDate], CalanderTypeColor.get(e.type)||CalanderColor.Default]\n                    }\n                );\n                \n                \n                this.calendar$.next(calEvents);\n                this.dateColor$.next(dateColor);\n            });\n            \n            this.subs.push(rtn);\n        });\n\n    }\n \n    deleteEvent(e:CalanderEvent): Promise{\n        return this.calSvc.removeCalendarEvent(e);\n    }\n\n    createEvent(newCalEvent: NewCalendarEvent): Promise{\n        return new Promise((res,rej)=>{\n            if(this.currentUser && newCalEvent.isValid()){\n                let calEvent = newCalEvent.toCalendarevent(this.currentUser);\n\n                this.calSvc.addCalendarEvent(calEvent)\n                    .then(_=>res())\n                    .catch(err=>rej(err));\n\n                \n            }\n            else {\n                rej(new Error(\"invalid-parameter\"));\n            }\n        })\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarService.html":{"url":"injectables/CalendarService.html","title":"injectable - CalendarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/calendar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCalendarEvent\n                            \n                            \n                                clash\n                            \n                            \n                                convertReservedToBooked\n                            \n                            \n                                    Private\n                                dbToCalendarEvent\n                            \n                            \n                                getCalendar\n                            \n                            \n                                getGroupCalendar\n                            \n                            \n                                removeCalendarEvent\n                            \n                            \n                                removeReservedCalEvent\n                            \n                            \n                                updateCalendarEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/calendar.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCalendarEvent\n                        \n                    \n                \n            \n            \n                \naddCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clash\n                        \n                    \n                \n            \n            \n                \nclash(event: EventInterface, calEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                calEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertReservedToBooked\n                        \n                    \n                \n            \n            \n                \nconvertReservedToBooked(grp: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                grp\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToCalendarEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToCalendarEvent(dbCalEnt: DocumentData | , user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbCalEnt\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderEvent\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalendar\n                        \n                    \n                \n            \n            \n                \ngetCalendar(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupCalendar\n                        \n                    \n                \n            \n            \n                \ngetGroupCalendar(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCalendarEvent\n                        \n                    \n                \n            \n            \n                \nremoveCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReservedCalEvent\n                        \n                    \n                \n            \n            \n                \nremoveReservedCalEvent(grp: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                grp\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCalendarEvent\n                        \n                    \n                \n            \n            \n                \nupdateCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, and, deleteDoc, setDoc} from '@angular/fire/firestore';\nimport { Observable, take } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderType } from 'src/app/interfaces/enums/calenderenum';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n\n  constructor(private fs: Firestore) { }\n\n  private dbToCalendarEvent(dbCalEnt: DocumentData | DocumentData & {id: string;}, user: UserInterface): CalanderEvent \n  { \n\n    let calEvent: CalanderEvent = { \n      id: dbCalEnt[\"id\"],\n      user: user, \n      start: dbCalEnt[\"start\"].toDate(), \n      end: dbCalEnt[\"end\"].toDate(), \n      detail: dbCalEnt[\"detail\"], \n      type: CalanderType[dbCalEnt[\"type\"] as keyof typeof CalanderType] \n    } \n    \n    if (calEvent.type == CalanderType.ReservedForEvent || calEvent.type == CalanderType.BookedForEvent){\n      calEvent.groupId = dbCalEnt[\"grp\"][\"id\"];\n      calEvent.groupName = dbCalEnt[\"grp\"][\"name\"];\n    }\n\n    return calEvent;\n  } \n\n  addCalendarEvent(calendarEvent: CalanderEvent): Promise{\n\n    // Initialise\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let calDoc: any = {\n      uid: calendarEvent.user.id,\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n    if (calendarEvent.type == CalanderType.ReservedForEvent || calendarEvent.type == CalanderType.BookedForEvent)\n      calDoc[\"grp\"] = {\n        id: calendarEvent.groupId,\n        name: calendarEvent.groupName\n      };\n\n    return new Promise((res,rej)=>{\n      this.getCalendar(calendarEvent.user).pipe(take(1)).subscribe(cal=>{\n        // check clash with events\n        const clash = cal.some(c => (c.type!==CalanderType.Personal && calendarEvent.start  c.start));\n        if (clash)\n          return rej(new Error(\"cal-event-clash\"));\n  \n        // no clash carry on\n        addDoc(calCollection, calDoc)\n        .then(doc => res()).\n        catch(err => rej(err));\n      });\n    });\n  }\n\n  getCalendar(user: UserInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, where(\"uid\",\"==\",user.id));\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            result.push(this.dbToCalendarEvent(cal,user));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n\tclash(event: EventInterface, calEvent: CalanderEvent): boolean {\n\t\treturn calEvent.start = event.startDate!;\n\t}\n\n  getGroupCalendar(group: GroupInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, and(\n      where(\"uid\",\"in\",group.allUUID), //Limited to 29 members, can increase if we split the calls up.\n      // inequalities on multiple fields not allowed\n      // where(\"start\", \"=\", start)\n      // pulling only calendar events that ends after the start of the event\n      where(\"end\", \">\" , group.event.startDate)\n    ));\n\n    let allUserMap:any = {}\n    allUserMap[group.admin.id] = group.admin;\n    group.members.forEach(member => {\n      allUserMap[member.id] = member;\n    });\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            let calEvent = this.dbToCalendarEvent(cal, allUserMap[cal[\"uid\"]]);\n\n            if(!group.event.endDate || !group.event.startDate)\n              return;\n\n            // Reserved/Booked for the group\n            if ((calEvent.type==CalanderType.ReservedForEvent || calEvent.type==CalanderType.BookedForEvent) && calEvent.groupId == group.id)\n              return;\n\n            // Clash with group date\n\t\t\t\t\t\tif (this.clash(group.event,calEvent))\n              result.push(calEvent);\n          });\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  updateCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    let update = {\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n    return new Promise(res=>{\n      updateDoc(calDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n  \n  removeCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    return new Promise(res=>{\n      deleteDoc(calDoc).then(birdbird=>{\n        res();\n      })\n    });\n  }\n\n\t// 1. Pull all \"Reserved\" calendar event of all who has confirmed\n\t// 2. Change type from \"ReservedForEvent\" to \"BookedForEvent\" & update detail\n  convertReservedToBooked(grp: GroupInterface): Promise{\n    return new Promise(res=>{\n      let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n      let q = query(calCollection, and(\n        where(\"uid\",\"in\", grp.confirmed),\n        where(\"grp.id\", \"==\" , grp.id)\n      ));\n      let temp = collectionData(q, {idField: 'id'}).subscribe(data=>{\n\t\t\t\ttemp.unsubscribe();\n\t\t\t\tlet allProm: Promise[] = [];\n\t\t\t\tdata.forEach(cal=>{\n\t\t\t\t\tlet calDoc = doc(this.fs, `calendar/${cal.id}`);\n\t\t\t\t\tlet update = {\n\t\t\t\t\t\ttype: CalanderType.BookedForEvent,\n\t\t\t\t\t\tdetail: `Going to ${grp.event.name} with ${grp.name}.`\n\t\t\t\t\t}\n\t\t\t\t\tallProm.push(updateDoc(calDoc, update));\n\t\t\t\t});\n\t\t\t\tPromise.all(allProm).then(_=>{\n\t\t\t\t\treturn res();\n\t\t\t\t});\n\t\t\t});\n    });\n  }\n\n\n  removeReservedCalEvent(grp: GroupInterface, user: UserInterface): Promise{\n    return new Promise(res=>{\n      let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n      let q = query(calCollection, and(\n        where(\"uid\",\"==\", user.id),\n        where(\"grp.id\", \"==\" , grp.id)\n      ));\n      let temp = collectionData(q, {idField: 'id'}).subscribe(data=>{\n\t\t\t\ttemp.unsubscribe();\n\t\n        this.removeCalendarEvent(this.dbToCalendarEvent(data[0], user)).then(_=>{\n          return res();\n        });\n\t\t\t});\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassificationComponentComponent.html":{"url":"components/ClassificationComponentComponent.html","title":"component - ClassificationComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassificationComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/classification-component/classification-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classification-component\n            \n\n\n\n            \n                styleUrls\n                ./classification-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./classification-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAddClassification\n                            \n                            \n                                onGenre\n                            \n                            \n                                onRemoveClassfication\n                            \n                            \n                                onSegment\n                            \n                            \n                                onSubGenre\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                classification\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/classification-component/classification-component.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        classification\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/classification-component/classification-component.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClassification\n                        \n                    \n                \n            \n            \n                \nonAddClassification(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGenre\n                        \n                    \n                \n            \n            \n                \nonGenre(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveClassfication\n                        \n                    \n                \n            \n            \n                \nonRemoveClassfication(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSegment\n                        \n                    \n                \n            \n            \n                \nonSegment(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubGenre\n                        \n                    \n                \n            \n            \n                \nonSubGenre(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/classification-component/classification-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { debounceTime, switchMap } from 'rxjs';\nimport { SearchFacadeService } from 'src/app/facade/search-facade.service';\nimport { ClassType, ClassificationInterface, IdClassType, IdName } from 'src/app/interfaces/clasification-interface';\nimport { TicketmasterService } from 'src/app/network/ticketmaster/ticketmaster.service';\n\n@Component({\n  selector: 'app-classification-component',\n  templateUrl: './classification-component.component.html',\n  styleUrls: ['./classification-component.component.css']\n})\nexport class ClassificationComponentComponent implements OnInit{\n  @Input() classification:EventEmitter = new EventEmitter();\n  \n  \n  constructor(public searchFacade:SearchFacadeService){\n    \n  }\n  ngOnInit(){\n    this.classification.pipe(\n      debounceTime(500),\n      switchMap((x:string)=> this.searchFacade.getClassification(x)\n      )\n    ).subscribe();\n  }\n  onSegment(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name, type:ClassType.Segment});\n  }\n  onGenre(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name,type:ClassType.Genre});\n  }\n  onSubGenre(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name,type:ClassType.Subgenre});\n  }\n  onAddClassification(ie:IdClassType){\n    //code here\n    this.searchFacade.addClassification(ie);\n  }\n  onRemoveClassfication(ie:IdClassType){\n    \n    this.searchFacade.removeClassification(ie);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    {{c.name}}\n    {{c.name}}\n    {{c.name}}\n\n\n\n    {{c.name}}\n\n    \n\n    \n                \n                    ./classification-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{c.name}}    {{c.name}}    {{c.name}}    {{c.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClassificationComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationInterface.html":{"url":"interfaces/ClassificationInterface.html","title":"interface - ClassificationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            segment\n                                        \n                                \n                                \n                                        \n                                            subGenre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segment:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subGenre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateGroupFacade.html":{"url":"injectables/CreateGroupFacade.html","title":"injectable - CreateGroupFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateGroupFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/CreateGroupFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newGroupForm\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroup\n                            \n                            \n                                destroy\n                            \n                            \n                                initialize\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, formBuilder: FormBuilder, grpSvc: GroupService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/CreateGroupFacade.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(selectedEvent: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedEvent\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n            \n                \nupdateForm(evt: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newGroupForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n\t\tname:['', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['', Validators.required],\n\t\t\tdetails:new FormControl(\"\", Validators.required),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { WatchlistService } from \"../network/firebase/firestore/watchlist.service\"\n\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { EventInterface } from \"../interfaces/event-interface\"\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { AbstractControl, FormBuilder, FormControl, ValidationErrors, Validators } from '@angular/forms';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateGroupFacade {\n\n\tprivate subs:Subscription[] = [];\n    watchlist$: BehaviorSubject = new BehaviorSubject([]);\n\tnewGroupForm = this.formBuilder.group({\n\t\tname:['', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['', Validators.required],\n\t\t\tdetails:new FormControl(\"\", Validators.required),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t});\n\n    constructor(\n        private authSvc: AuthenticationService,\n\t\tprivate formBuilder: FormBuilder,\n        private grpSvc: GroupService,\n        private watchlistSvc: WatchlistService\n    ) {\n  \t}\n  \tinitialize(){\n\t\tthis.authSvc.getCurrentUser().then(user=>{\n\t\t\tthis.subs.push(this.watchlistSvc.getWatchlist(user).subscribe(watchlist=>{\n\t\t\t\tthis.watchlist$.next(watchlist);\n\t\t\t\tconsole.log(watchlist);\n\t\t\t}));\n\t\t});\n\t}\n\tdestroy(){\n\t\tthis.subs.forEach((e)=>e.unsubscribe());\n\t\tthis.newGroupForm = this.formBuilder.group({\n\t\t\tname:['', Validators.required],\n\t\t\tevent:this.formBuilder.group({\n\t\t\t\tid:[\"\",Validators.required],\n\t\t\t\tlocation:this.formBuilder.array([]),\n\t\t\t\timages:this.formBuilder.array([]),\n\t\t\t\tname:['', Validators.required],\n\t\t\t\tdetails:new FormControl(\"\", Validators.required),\n\t\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t\t})\n\t\t});\n\t}\n\tupdateForm(evt:EventInterface){\n\t\tvar n:any = structuredClone(evt);\n\t\tvar tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds \n\t\t\n\t\tif(evt.startDate){\n\t\t\tlet d:Date = evt.startDate;\n\t\t\tn.startDate = (new Date(d.getTime() - tzoffset)).toISOString().slice(0, -8);\n\t\t} \n\t\tif(evt.endDate){\n\t\t\tlet d:Date = evt.endDate;\n\t\t\tn.startDate = (new Date(d.getTime() - tzoffset)).toISOString().slice(0, -8);\n\t\t} \n\t\tthis.newGroupForm.patchValue({\n\t\t\tevent:n\n\t\t});\n\t}\n\n  \tcreateGroup(selectedEvent: EventInterface): Promise{\n\t\treturn this.authSvc.getCurrentUser().then((u:UserInterface)=>new Promise((res,rej)=>{\n\t\t\tvar grp:any = this.newGroupForm.value;\n\t\t\tgrp.event.startDate = new Date(grp.event.startDate);\n\t\t\tgrp.event.endDate = new Date(grp.event.endDate);\n\t\t\tgrp.event.location = selectedEvent.location;\n\t\t\tgrp.event.images = selectedEvent.images;\n\t\t\tif(grp.event.startDate>=grp.event.endDate) return rej(new Error(\"group-date-incompatible\"));\t\t\t\n\t\t\tthis.grpSvc.createGroup(grp.name, grp.event as EventInterface, u).then(_=>{\n\n\t\t\t\treturn res(); // Group creation success;\n\t\t\t}).catch(err=>{\n\n\t\t\t\tif (err===\"group-name-taken\"){\n\t\t\t\t\treturn rej(new Error(\"group-name-taken\"));\n\t\t\t\t}\n\t\t\t})\n\t\t}))\n\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventClass.html":{"url":"classes/EventClass.html","title":"class - EventClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                    Optional\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                images\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEquals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: EventInterface)\n                    \n                \n                        \n                            \n                                Defined in src/app/interfaces/event-interface.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        EventInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isEquals\n                        \n                    \n                \n            \n            \n                \nisEquals(other: EventClass)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interfaces/event-interface.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            EventClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\nexport class EventClass {\n    id: string=\"\";\n    name:string=\"\";\n    location:string[]=[];\n    images:string[]=[];\n    details:string=\"\";\n    startDate?:Date;\n    endDate?:Date;\n    constructor(e:EventInterface){\n        this.id = e.id;\n        this.name = e.id;\n        this.location = e.location;\n        this.images = e.images;\n        this.details = e.details;\n        this.startDate = e?.startDate;\n        this.endDate = e?.endDate;\n    }\n    isEquals(other:EventClass):boolean{\n        return other.id == this.id;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventComponentComponent.html":{"url":"components/EventComponentComponent.html","title":"component - EventComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/event-component/event-component.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-component\n            \n\n\n\n            \n                styleUrls\n                ./event-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                removeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                inWatchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/event-component/event-component.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inWatchlist\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEvent\n                        \n                    \n                \n            \n            \n                \naddEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEvent\n                        \n                    \n                \n            \n            \n                \nremoveEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/event-component/event-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { EventInterface } from '../../interfaces/event-interface';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\nimport { WatchlistService } from 'src/app/network/firebase/firestore/watchlist.service';\nimport { SearchFacadeService } from 'src/app/facade/search-facade.service';\n\n@Component({\n  selector: 'app-event-component',\n  templateUrl: './event-component.component.html',\n  styleUrls: ['./event-component.component.css']\n})\nexport class EventComponentComponent {\n  @Input() inWatchlist!:boolean;\n  @Input() event!:EventInterface;\n  constructor(\n    public searchFacade:SearchFacadeService\n  ){}\n  \n  removeEvent(event:EventInterface){\n    this.searchFacade.removeFromWatchList(event);\n  }\n\n  addEvent(event:EventInterface){\n    this.searchFacade.addToWatchList(event);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            \n                \n                \n            \n        \n          \n                          \n    \n    \n      \n        {{event.name}}\n        \n          Add to watchlist\n          \n        \n        \n          Remove from watchlist\n          \n        \n      \n      Location: {{event.location}}\n      {{event.details}}\n      \n      \n      {{event.startDate | date:'medium'}}\n\n       - {{event.endDate | date:'medium'}}\n      \n      \n  \n    \n\n    \n                \n                    ./event-component.component.css\n                \n                .watchlistBtn{\n    cursor: pointer;\n    top: 0;\n}\n\n\n.watchlistBtnPositive {\n    color: gold;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                              {{event.name}}                  Add to watchlist                                    Remove from watchlist                              Location: {{event.location}}      {{event.details}}                  {{event.startDate | date:\\'medium\\'}}       - {{event.endDate | date:\\'medium\\'}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventInterface.html":{"url":"interfaces/EventInterface.html","title":"interface - EventInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            details\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\nexport class EventClass {\n    id: string=\"\";\n    name:string=\"\";\n    location:string[]=[];\n    images:string[]=[];\n    details:string=\"\";\n    startDate?:Date;\n    endDate?:Date;\n    constructor(e:EventInterface){\n        this.id = e.id;\n        this.name = e.id;\n        this.location = e.location;\n        this.images = e.images;\n        this.details = e.details;\n        this.startDate = e?.startDate;\n        this.endDate = e?.endDate;\n    }\n    isEquals(other:EventClass):boolean{\n        return other.id == this.id;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventPageInterface.html":{"url":"interfaces/EventPageInterface.html","title":"interface - EventPageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventPageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/eventpage-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            events\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events:         EventInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         PageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { PageInterface } from \"./page-interface\";\n\nexport interface EventPageInterface {\n    page:PageInterface,\n    events:EventInterface[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenreInterface.html":{"url":"interfaces/GenreInterface.html","title":"interface - GenreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GenreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            subgenres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        subgenres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subgenres:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCreateComponent.html":{"url":"components/GroupCreateComponent.html","title":"component - GroupCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-create/group-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-create\n            \n\n\n\n            \n                styleUrls\n                ./group-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeResult\n                            \n                            \n                                    \n                                    Private\n                                content\n                            \n                            \n                                    Public\n                                grp\n                            \n                            \n                                    \n                                    Private\n                                navStuff\n                            \n                            \n                                    Optional\n                                selectedEvent\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                em\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService, modalService: NgbModal, grp: CreateGroupFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-create/group-create.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        CreateGroupFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        em\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-create/group-create.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModal | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateGroupFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        navStuff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbNav | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgbNav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { CreateGroupFacade } from 'src/app/facade/CreateGroupFacade';\nimport { Subscription } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-group-create',\n  templateUrl: './group-create.component.html',\n  styleUrls: ['./group-create.component.css']\n})\nexport class GroupCreateComponent implements OnInit{\n\tprivate subs:Subscription[] = [];\n\t@ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n\t@ViewChild('content') private content:NgbModal | undefined; \n\t\tcloseResult = '';\n\t@Input() em!:EventEmitter;\n\n\n\tselectedEvent?:EventInterface;\n\t\n\tconstructor(\n\t\tprivate toastr:ToastrService,\n\t\tprivate modalService:NgbModal,\n\t\tpublic grp: CreateGroupFacade\n\t){}\n\n\t\n\tngOnInit(){\n\t\t\n\t\tthis.subs.push(this.em.subscribe(()=>this.open()));\n\t}\n\n\tcreateGroup(){\n\t\tthis.grp.createGroup(this.selectedEvent!).then(_=>{\n\t\t\tthis.toastr.success(this.grp.newGroupForm.value.name?this.grp.newGroupForm.value.name:\"\",\"Group Created\");\n\t\t\tthis.close();\n\t\t}).catch((err:Error)=>{\n\t\t\tthis.toastr.error(err.message,\"Group Creation Error\");\n\t\t})\n\t}\n\n\n\topen() {\n\t\tthis.grp.initialize();\n\t\tthis.modalService.open(this.content,{centered:true, fullscreen:true});\n\t}\n\n\tclose(){\n\t\tthis.modalService.dismissAll();\n\t\tthis.grp.destroy();\n\t\tthis.selectedEvent = undefined;\n\t}\n\t\n\t\n}\n\n    \n\n    \n        \n\t\n\t\tNew Group\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t  Group Name\n\t\t\t  \n\t\t\t\t\n\t\t\t  \n\t\t\t\n\t\t\t\n\t\t\t\tChooose Event\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tCHOOSE HERE\n\t\t\t\t\t{{evt.name}}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t  \n\t\t\t  \n\t\t\t\n\t\t\t\tEvent Details\n\t\t\t\t\n\t\t\t\t\tEvent Name\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEvent details\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tStart Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEnd Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\n\t\t\tSave\n\t\t  \n\t\n\t\n\n\n\n\n    \n\n    \n                \n                    ./group-create.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tNew Group\t\t\t\t\t\t\t\t\t\t\t\t  Group Name\t\t\t  \t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\tChooose Event\t\t\t\t\t\t\t\t\t\t\t\t\tCHOOSE HERE\t\t\t\t\t{{evt.name}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t  \t\t\t\t\t\t\tEvent Details\t\t\t\t\t\t\t\t\tEvent Name\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEvent details\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tStart Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEnd Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t\t\tSave\t\t  \t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupDetailComponent.html":{"url":"components/GroupDetailComponent.html","title":"component - GroupDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-detail/group-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-detail\n            \n\n\n\n            \n                styleUrls\n                ./group-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                grp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGoing\n                            \n                            \n                                confirmGroupbooking\n                            \n                            \n                                copyInviteLink\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendGroupConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grp: ViewGroupFacade, toastr: ToastrService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        ViewGroupFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-detail/group-detail.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGoing\n                        \n                    \n                \n            \n            \n                \nconfirmGoing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupbooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupbooking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyInviteLink\n                        \n                    \n                \n            \n            \n                \ncopyInviteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewGroupFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\nimport { ViewGroupFacade } from 'src/app/facade/ViewGroupFacade'\nimport { take } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-group-detail',\n  templateUrl: './group-detail.component.html',\n  styleUrls: ['./group-detail.component.css']\n})\nexport class GroupDetailComponent implements OnInit, OnDestroy{\n  @Input() group!:GroupInterface;\n\n  constructor(\n    public grp: ViewGroupFacade,\n    private toastr:ToastrService,\n    private router:Router\n  ){}\n  ngOnDestroy(): void {\n    this.grp.destroy();\n  }\n  \n  ngOnInit(){//given the events of that group\n    this.grp.initialise(this.group.id, this.group);\n  }\n\n  deleteGroup(){\n    this.grp.deleteGroup().then(_=>{\n      this.toastr.success(this.group.name,\"Delete Group\");\n      this.router.navigate(['/group'])\n      location.reload();\n    })\n  }\n  kickUser(user:UserInterface){\n    this.grp.kickUser(user).then(_=>{\n      this.toastr.success(user.name,\"Kicked User\");\n    })\n  }\n  copyInviteLink() {\n    if (this.grp.copyInviteLink())\n      this.toastr.info(\"Link copied!\");\n  }\n  joinGroup(){\n    this.grp.joinGroup(this.grp.group$.value!.id).subscribe({\n     next:()=>{\n      this.toastr.success(this.group.name,\"Joined Group\");\n     },error:(err)=>{\n      this.toastr.error(err,\"Joined Group Error\");\n     } \n    }) \n  }\n  sendGroupConfirmation(){\n    this.grp.sendGroupConfirmation().then(_=>{\n      this.toastr.success(\"Email Sent to Members\",\"Group Confirmation\");\n    })\n  }\n  confirmGroupbooking(){\n    //calaa fascase\n    this.grp.confirmGroupbooking().then(_=>{\n      this.toastr.success(\"You have updated the status of this event to booked\", \"Booked\");\n    })\n  }\n  confirmGoing(){\n    this.grp.confirmGroupEvent().pipe(take(1)).subscribe({\n      next:()=>{\n        this.toastr.success(\"Going for this event waiting for admin to book\",\"Confirm Going\");\n      },\n      error:(err)=>{\n        this.toastr.error(err,\"Cannot got for event\");\n        \n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \n\n    ID: {{grp.group$.value?.id}}\n\n\n    {{grp.group$.value?.name}}\n\n\n    {{grp.group$.value?.event?.name}}\n\n\n    BOOKED\n\n\n    {{grp.group$.value?.event?.location}}\n\n\n    {{grp.group$.value?.event?.details}}\n\n\n    {{grp.group$.value?.event?.startDate|date:'medium'}} - {{grp.group$.value?.event?.endDate|date:'medium'}}\n\n\nInvite Link\n\n\n\n\n\n\n    \n        I will be going!\n    \n    \n        \n            \n                \n                    \n                        Name\n                        Going\n                        0\">Kick\n                    \n                \n                \n                     \n                    \n                        \n                        {{(grp.group$|async)!.admin.name}}\n                        \n                        \n                            \n                                {{(grp.group$|async)!.admin.name}} has not confirmed that they are going.\n                                \n                            \n                            \n                                {{(grp.group$|async)!.admin.name}} is going!\n                                \n                                \n                            \n                        \n                        \n                        0\">\n                    \n                     \n                    \n                        \n                        {{ m.name }} \n                        \n                        \n                            \n                                {{m.name}} has not confirmed that they are going.\n                                \n                            \n                            \n                                {{m.name}} is going!\n                                \n                                \n                            \n                        \n                        \n                        0\">Kick\n                          \n                \n            \n        \n        \n            Delete Group\n            Request confirmation\n             0\" title=\"Tickets bought for all members who have confirmed! No further changes will be allowed.\">Confirm booking\n        \n    \n\n\n    \n        I will be going!\n    \n    \n        \n            \n                \n                    \n                        Username\n                        Going\n                    \n                \n                \n                    \n                        \n                        {{(grp.group$|async)!.admin.name}}\n                        \n                        \n                            \n                                {{(grp.group$|async)!.admin.name}} has not confirmed that they are going.\n                                \n                            \n                            \n                                {{(grp.group$|async)!.admin.name}} is going!\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                        {{ m.name }} \n                        \n                        \n                            \n                                {{m.name}} has not confirmed that they are going.\n                                \n                            \n                            \n                                {{m.name}} is going!\n                                \n                                \n                            \n                        \n                          \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n    Everyone is available!\n     0\">\n        \n            \n                Name\n                Unavailable because\n                Start\n                End\n            \n        \n        \n           \n                {{e.user.name}}\n                {{e.detail}}\n                {{e.start|date:\"medium\"}}\n                {{e.end|date:\"medium\"}}     \n           \n           \n        \n    \n\n\n\n\n    JOIN GROUP\n\n\n\n\n    \n\n    \n                \n                    ./group-detail.component.css\n                \n                .invite{\n    cursor: pointer;\n    user-select: none;\n    text-decoration: underline;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ID: {{grp.group$.value?.id}}    {{grp.group$.value?.name}}    {{grp.group$.value?.event?.name}}    BOOKED    {{grp.group$.value?.event?.location}}    {{grp.group$.value?.event?.details}}    {{grp.group$.value?.event?.startDate|date:\\'medium\\'}} - {{grp.group$.value?.event?.endDate|date:\\'medium\\'}}Invite Link            I will be going!                                                                                        Name                        Going                        0\">Kick                                                                                                                                             {{(grp.group$|async)!.admin.name}}                                                                                                            {{(grp.group$|async)!.admin.name}} has not confirmed that they are going.                                                                                                                        {{(grp.group$|async)!.admin.name}} is going!                                                                                                                                                                    0\">                                                                                                             {{ m.name }}                                                                                                             {{m.name}} has not confirmed that they are going.                                                                                                                        {{m.name}} is going!                                                                                                                                                                    0\">Kick                                                                                  Delete Group            Request confirmation             0\" title=\"Tickets bought for all members who have confirmed! No further changes will be allowed.\">Confirm booking                        I will be going!                                                                                        Username                        Going                                                                                                                        {{(grp.group$|async)!.admin.name}}                                                                                                            {{(grp.group$|async)!.admin.name}} has not confirmed that they are going.                                                                                                                        {{(grp.group$|async)!.admin.name}} is going!                                                                                                                                                                                                            {{ m.name }}                                                                                                             {{m.name}} has not confirmed that they are going.                                                                                                                        {{m.name}} is going!                                                                                                                                                                                              Everyone is available!     0\">                                    Name                Unavailable because                Start                End                                                       {{e.user.name}}                {{e.detail}}                {{e.start|date:\"medium\"}}                {{e.end|date:\"medium\"}}                                           JOIN GROUP'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/group-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            allUUID\n                                        \n                                \n                                \n                                        \n                                            booked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allUUID:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        booked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        booked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         EventInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         UserInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { UserInterface } from \"./user-interface\";\n\nexport interface GroupInterface {\n    id: string;\n    name:string;\n    event:EventInterface;\n    admin: UserInterface;\n    members:UserInterface[];\n    confirmed:string[];\n    booked: boolean;\n    allUUID: string[]; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupListComponent.html":{"url":"components/GroupListComponent.html","title":"component - GroupListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-list/group-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-list\n            \n\n\n\n            \n                styleUrls\n                ./group-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groups\n                    \n                \n                \n                    \n                        Type :         GroupInterface[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-list/group-list.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Component({\n  selector: 'app-group-list',\n  templateUrl: './group-list.component.html',\n  styleUrls: ['./group-list.component.css']\n})\nexport class GroupListComponent {\n  @Input() groups!:GroupInterface[];\n  @Output() groupClicked = new EventEmitter();\n  onClick(group:GroupInterface){\n    this.groupClicked.emit(group);\n  }\n\n  \n}\n\n    \n\n    \n        \n\n\n\t\n\t\t\n\t\t\tName\n\t\t\tEvent\n\t\t\tMembers\n\t\t\n\t\n\t\n\t\t\t\n\t\t\t\t{{ g.name }}\n\t\t\t\t{{ g.event.name }}\n\t\t\t\t{{ g.members |groupmemberPipe}}\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./group-list.component.css\n                \n                .event-row {\n    cursor:pointer;\n    background-color: var(--bs-white);\n}\n\n\n.event-row:hover {\n    filter: brightness(95%);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\tName\t\t\tEvent\t\t\tMembers\t\t\t\t\t\t\t\t\t\t\t{{ g.name }}\t\t\t\t{{ g.event.name }}\t\t\t\t{{ g.members |groupmemberPipe}}\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupPageComponent.html":{"url":"components/GroupPageComponent.html","title":"component - GroupPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-page\n            \n\n\n\n            \n                styleUrls\n                ./group-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chosen\n                            \n                            \n                                    \n                                    Private\n                                content\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                groupID\n                            \n                            \n                                    Public\n                                grp\n                            \n                            \n                                    \n                                    Private\n                                navStuff\n                            \n                            \n                                openModalEmitter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                choseGroup\n                            \n                            \n                                convertToListofStrings\n                            \n                            \n                                joinGroup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grp: GrouppageFacadeService, route: ActivatedRoute, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        GrouppageFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        choseGroup\n                        \n                    \n                \n            \n            \n                \nchoseGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToListofStrings\n                        \n                    \n                \n            \n            \n                \nconvertToListofStrings(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chosen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModal | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GrouppageFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        navStuff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbNav | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgbNav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { ViewGroupFacade } from '../facade/ViewGroupFacade';\nimport { ToastrService } from 'ngx-toastr';\nimport { GrouppageFacadeService } from '../facade/grouppage-facade.service';\n\n@Component({\n  selector: 'app-group-page',\n  templateUrl: './group-page.component.html',\n  styleUrls: ['./group-page.component.css']\n})\n\nexport class GroupPageComponent implements OnInit, AfterViewInit,OnDestroy{\n  \n  @ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n  @ViewChild('content') private content:NgbModal | undefined; \n  openModalEmitter = new EventEmitter();\n  chosen:GroupInterface | undefined;\n  currentUser?:UserInterface;\n  groupID:string =\"\";\n\n\n  constructor(\n    public grp: GrouppageFacadeService,\n    private route:ActivatedRoute,\n    private toastr:ToastrService \n  ){}\n  ngOnDestroy(): void {\n    \n    this.grp.destroy();\n  }\n\n  ngOnInit(): void {\n    this.grp.initialise();\n  }\n  \n  joinGroup(){\n    this.grp.joinGroup(this.groupID).subscribe({error:(err)=>this.toastr.error(err,\"Join Group Error\")});\n  }\n  ngAfterViewInit(): void {\n    this.route.paramMap.subscribe(params=>{\n      var id:string|null;\n      id =  params.get('id');\n      if (id){\n        this.grp.getGrpById(id).subscribe({\n          next: (group) => this.choseGroup(group),\n          error: (err) => this.toastr.error(err,\"Group ID Error\")\n        })\n      }\n    });\n\n\n  }\n  choseGroup(group:GroupInterface){\n    this.chosen = group;\n    this.navStuff?.select(2);\n  }\n\n  convertToListofStrings(members:UserInterface[]){\n    return members.map((x)=>x.name);\n  }\n  \n  \n}\n\n    \n\n    \n        \n\n\n  \n    Groups\n    \n      \n        \n          \n        \n        \n            JOIN\n        \n      \n      \n        Create Group\n      \n      0\">\n        Group(s) you made\n        \n      \n      0\">\n        Group(s) you joined\n        \n      \n      \n        You are not in any groups, create one now!\n      \n    \n  \n  \n    {{chosen.name}}\n    \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./group-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Groups                                                        JOIN                            Create Group            0\">        Group(s) you made                    0\">        Group(s) you joined                            You are not in any groups, create one now!                  {{chosen.name}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/group.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGroupBooking\n                            \n                            \n                                confirmGroupEvent\n                            \n                            \n                                createGroup\n                            \n                            \n                                    Private\n                                dbToGroupInterface\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                getGroupById\n                            \n                            \n                                getGroups\n                            \n                            \n                                joinGroup\n                            \n                            \n                                removeFromGroup\n                            \n                            \n                                sendGroupConfirmation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(calSvc: CalendarService, fs: Firestore, noti: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/group.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noti\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupBooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupBooking(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupEvent\n                        \n                    \n                \n            \n            \n                \nconfirmGroupEvent(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(name: string, event: EventInterface, admin: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                admin\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToGroupInterface\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToGroupInterface(dbGroup: DocumentData | )\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbGroup\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupById\n                        \n                    \n                \n            \n            \n                \ngetGroupById(groupId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(groupId: string, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromGroup\n                        \n                    \n                \n            \n            \n                \nremoveFromGroup(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, deleteDoc, FirestoreError} from '@angular/fire/firestore';\nimport { Observable, forkJoin, from, iif, mergeMap, of, switchMap, take, tap, throwError } from 'rxjs';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { NotificationService } from './notification.service';\nimport { CalanderType } from 'src/app/interfaces/enums/calenderenum';\nimport { CalendarService } from './calendar.service';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  constructor(private calSvc: CalendarService, private fs: Firestore, private noti: NotificationService) { }\n\n  private dbToGroupInterface(dbGroup: DocumentData | DocumentData & {id: string;}): GroupInterface\n  {\n    let grp: GroupInterface = {\n      id: dbGroup[\"id\"],\n      name: dbGroup[\"name\"],\n      event: {\n        id: dbGroup[\"event\"].id,\n        name: dbGroup[\"event\"].name,\n        startDate: dbGroup[\"event\"].start.toDate(),\n        endDate: dbGroup[\"event\"].end.toDate(),\n        details: dbGroup[\"event\"][\"details\"],\n        images: dbGroup[\"event\"][\"imageUrls\"],\n        location: dbGroup[\"event\"][\"locations\"]\n      },\n      admin: dbGroup[\"admin\"],\n      members: dbGroup[\"members\"],\n      confirmed: dbGroup[\"confirmed\"],\n      booked: dbGroup[\"booked\"],\n      allUUID: dbGroup[\"allUUID\"]\n    }\n\n    return grp;\n  }\n\n  createGroup(name: string, event: EventInterface, admin: UserInterface): Promise\n  {\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n\n    let groupDoc = {\n      name: name,\n      event: {\n        id: event.id,\n        name: event.name,\n        start: event.startDate,\n        end: event.endDate,\n        details: event.details,\n        imageUrls: event.images,\n        locations: event.location\n      },\n      admin: admin,\n      members: [],\n      confirmed: [],\n      booked: false,\n      allUUID: [admin.id]\n    }\n\n    \n\n    return new Promise((res,rej)=>{\n      addDoc(grpCollection, groupDoc).then((docRef: DocumentReference)=>{\n        \n        res();\n      }).catch(err =>{\n        if (err.code === \"permission-denied\")\n          rej(\"group-name-taken\");\n      })\n    })\n  }\n\n  getGroups(user: UserInterface): Observable\n  {\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n    let q = query(grpCollection, where(\"allUUID\",\"array-contains\",user.id));\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: GroupInterface[] = [];\n          data.forEach(grp=>{\n            result.push(this.dbToGroupInterface(grp));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n\n\n  getGroupById(groupId: string): Observable\n  {\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n\n    return new Observable(obs=>{\n      docData(grpDoc, {idField: \"id\"}).subscribe(data=>{\n        if (data===undefined){\n          obs.error(\"Group not found\");\n          return;\n        } \n        obs.next(this.dbToGroupInterface(data));\n      });\n    });\n\n  }\n\n  // Currently does not check if user is already in group\n  joinGroup(groupId: string, user:UserInterface): Promise\n  {\n\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n    let update = {\n      members: arrayUnion(user),\n      allUUID: arrayUnion(user.id),\n    }\n    \n    return new Promise((res,rej)=>{\n\n      let sub = this.getGroupById(groupId).subscribe(grp=>{\n        sub.unsubscribe();\n        if (grp.allUUID.includes(user.id))\n          return rej(\"User already in group\");\n        if (grp.booked)\n          return rej(\"Group is already booked\");\n\n        updateDoc(grpDoc, update).then(_=>{\n          res();\n        }).catch(err =>{\n          if (err.code === \"permission-denied\")\n            rej(\"Group Not Found\");\n        })\n      })\n    })\n  }\n\n  removeFromGroup(group: GroupInterface, user: UserInterface): Promise\n  {\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    \n    // Protection against display name change\n    let toRemove: UserInterface|undefined = undefined;\n    group.members.forEach(member=>{\n      if (member.id === user.id){\n        toRemove = member;\n        return;\n      }\n    })\n\n    return new Promise(res=>{\n      // Check if user is a member in group\n      if (toRemove === undefined) res();\n      \n      let update: any = {\n        members: arrayRemove(toRemove),\n        allUUID: arrayRemove(user.id),\n      }\n\n      if (group.confirmed.includes(user.id))\n        update[\"confirmed\"] = arrayRemove(user.id);\n\n      updateDoc(grpDoc, update).then(_=>{\n        res();\n      })\n    })\n  }\n\n  deleteGroup(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    return new Promise(res=>{\n      deleteDoc(grpDoc).then(_=>{\n        res();\n      })\n    });\n  }\n\n  sendGroupConfirmation(group: GroupInterface): Promise{\n    return this.noti.sendConfirmationRequest(group);\n  }\n\n  confirmGroupEvent(group: GroupInterface, user: UserInterface): Observable{\n    \n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {confirmed: arrayUnion(user.id)};\n    return this.calSvc.getGroupCalendar(group).pipe(\n      take(1),\n      mergeMap((grpCal:CalanderEvent[])=>\n        iif(\n          ()=> grpCal.map(e=>e.user.id).includes(user.id), \n          throwError(()=>\"User not available at that time\"), \n          of(1).pipe(switchMap(()=>forkJoin(\n            {first:from(this.calSvc.addCalendarEvent({\n              user: user,\n              start: group.event.startDate!,\n              end: group.event.endDate!,\n              detail: `Reserved for ${group.name}.`,\n              type: CalanderType.ReservedForEvent,\n              groupId: group.id,\n              groupName: group.name\n            })), second:from(updateDoc(grpDoc, update))}\n\n          ).pipe(switchMap(()=>of(void 0))))\n          \n          )\n          ,\n        )\n      )\n    );\n\n\n\n\n  }\n\n  confirmGroupBooking(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {booked: true};\n\n    return new Promise(res=>{\n\n      let updatePromise = updateDoc(grpDoc, update);\n\n\n      updatePromise.then(_=>{\n        this.noti.sendBookingConfirmation(group).then(_=>{\n          res();\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupmemberPipePipe.html":{"url":"pipes/GroupmemberPipePipe.html","title":"pipe - GroupmemberPipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupmemberPipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/groupmember-pipe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        groupmemberPipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/groupmember-pipe.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     String[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Pipe({\n  name: 'groupmemberPipe'\n})\nexport class GroupmemberPipePipe implements PipeTransform {\n\n  transform(members:UserInterface[]): String[] {\n    return members.map((x)=>x.name);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GrouppageFacadeService.html":{"url":"injectables/GrouppageFacadeService.html","title":"injectable - GrouppageFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GrouppageFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/grouppage-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminGroups$\n                            \n                            \n                                group$\n                            \n                            \n                                groupById$\n                            \n                            \n                                memberGroups$\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                getGroups\n                            \n                            \n                                getGrpById\n                            \n                            \n                                initialise\n                            \n                            \n                                joinGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, grpSvc: GroupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/grouppage-facade.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrpById\n                        \n                    \n                \n            \n            \n                \ngetGrpById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialise\n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/grouppage-facade.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/grouppage-facade.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupById$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/grouppage-facade.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/grouppage-facade.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/grouppage-facade.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { GroupInterface } from \"../interfaces/group-interface\"\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { PlatformLocation } from '@angular/common';\nimport { BehaviorSubject, Observable, Subscription, from, iif, map, of, switchMap, tap } from 'rxjs';\nimport { CalanderEvent } from \"../interfaces/calander-interface/CalanderEvent-interface\"\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrouppageFacadeService {\n  private subs:Subscription[] = [];\n    group$: BehaviorSubject = new BehaviorSubject(undefined);\n   \n    adminGroups$: BehaviorSubject = new BehaviorSubject([]);\n    memberGroups$: BehaviorSubject = new BehaviorSubject([]);\n    groupById$: BehaviorSubject = new BehaviorSubject(undefined);\n\n    constructor(\n        private authSvc:AuthenticationService, \n        private grpSvc: GroupService\n    ) {\n\n    \n  }\n  joinGroup(id: string): Observable {\n    return from(this.authSvc.getCurrentUser()).pipe(\n        switchMap((user:UserInterface)=>from(this.grpSvc.joinGroup(id, user)))\n    );\n    \n\n}\n  initialise(){\n    this.getGroups();\n  }\n  destroy(){\n    this.subs.forEach((e)=>e.unsubscribe());\n  }\n  getGroups(){\n    this.authSvc.getCurrentUser().then(user=>{\n        \n        var rtn:Subscription = this.grpSvc.getGroups(user).subscribe(grps=>{\n            let adm: GroupInterface[] = [];\n            let nadm: GroupInterface[] = [];\n            grps.forEach(grp=>{\n                if (grp.admin.id === user.id)\n                    adm.push(grp);\n                else \n                    nadm.push(grp);\n            });     \n            this.adminGroups$.next(adm);\n            this.memberGroups$.next(nadm);\n        })\n        this.subs.push(rtn);\n    });\n  }\n  getGrpById(id: string): Observable{\n    let obs: Observable = this.grpSvc.getGroupById(id);\n    var rtn:Subscription = obs.subscribe(grp=>{\n        this.groupById$.next(grp);\n    });\n    this.subs.push(rtn);\n    return obs;\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GrouppipePipe.html":{"url":"pipes/GrouppipePipe.html","title":"pipe - GrouppipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GrouppipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/grouppipe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        grouppipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: GroupInterface[], user: UserInterface, isAdmin: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/grouppipe.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            GroupInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isAdmin\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Pipe({\n  name: 'grouppipe'\n})\nexport class GrouppipePipe implements PipeTransform {\n  transform(value:GroupInterface[], user:UserInterface, isAdmin:boolean): GroupInterface[]{\n    if(isAdmin )return value.filter((e:GroupInterface)=>e.admin.id==user.id);\n    return  value.filter((e:GroupInterface)=>e.admin.id!=user.id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdClassType.html":{"url":"interfaces/IdClassType.html","title":"interface - IdClassType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdClassType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ClassType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClassType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdName.html":{"url":"interfaces/IdName.html","title":"interface - IdName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/InwatchlistPipe.html":{"url":"pipes/InwatchlistPipe.html","title":"pipe - InwatchlistPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  InwatchlistPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search-page/list-events/inwatchlist.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        inwatchlist\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(e: EventInterface, watchlist: EventInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/list-events/inwatchlist.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                watchlist\n                                            \n                                                            EventInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\n\n@Pipe({\n  name: 'inwatchlist'\n})\nexport class InwatchlistPipe implements PipeTransform {\n\n  transform(e: EventInterface, watchlist:EventInterface[]): boolean {\n    for( var i of watchlist){\n      if(i.id == e.id) return true;\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListEventsComponent.html":{"url":"components/ListEventsComponent.html","title":"component - ListEventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListEventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/list-events/list-events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-events\n            \n\n\n\n            \n                styleUrls\n                ./list-events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        watchlist\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component ,Input } from '@angular/core';\nimport {EventInterface} from '../../interfaces/event-interface';\n@Component({\n  selector: 'app-list-events',\n  templateUrl: './list-events.component.html',\n  styleUrls: ['./list-events.component.css']\n})\nexport class ListEventsComponent {\n  @Input() events:EventInterface[]=[];\n  @Input() watchlist:EventInterface[] = [];\n  \n}\n\n    \n\n    \n        \n      \n          \n                  \n                    \n          \n      \n\n    \n\n    \n                \n                    ./list-events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListEventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n\n\n            \n                styleUrls\n                ./login-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/login-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        googleSignIn\n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  constructor(\n    private auth: AuthenticationService,\n    private router:Router,\n    private route:ActivatedRoute\n  ) {}\n  \n  googleSignIn(){\n    this.auth.loginGoogle().then(_=>{\n      this.router.navigateByUrl( this.route.snapshot.queryParams['returnUrl'] || '/');\n    })\n  }\n\n  logOut(){\n    this.auth.logOut().then(_=>{\n      console.log(\"logout\");\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    Sign in with Google\n\n\n\n    4.16.4\n\n    \n\n    \n                \n                    ./login-page.component.css\n                \n                .bgImg, .bgImgStrip{\n    height:80vh;\n    position: absolute;\n    top:0;\n}\n\n.bgImg {\n    left:50%;\n    transform: translate(-50%);\n    z-index: -1;\n}\n\n.bgImgStrip {\n    z-index: -2;\n    width: 50vw;\n}\n\n.bgLeft {left:0;}\n.bgRight {right:0;}\n\n.loginBtn{\n    background-color: #2A2568;\n    color: white;\n    position: absolute;\n    padding: 1em;\n    border-radius: 2px;\n    top: 80vh;\n    left: 50%;\n    transform: translate(-50%);\n    cursor: pointer;\n    user-select: none;\n}\n\n.loginBtn:active {\n    top: calc(80vh + 5px);\n    left: calc(50% + 5px);\n}\n\n.googleImg {\n    height: 2em;\n}\n\n.version {\n    /* Position*/\n    position: absolute;\n    top: 31.5vh;\n    width: 5vh;\n    height: 5vh;\n    left: calc(50% - 7vh);\n    transform: translate(-50%);\n\n    /* Style */\n    text-align: center;\n    line-height: 5vh;\n    border-radius: 50%;\n    font-weight: bold;\n    font-size: 1.5vh;\n    background: radial-gradient(#ffff75,#ffff99,#ddff00);\n    box-shadow: 0 0 50px 15px #ddff00;\n    opacity: 0;\n    cursor: pointer;\n    user-select: none;\n}\n\n.version:hover {\n    opacity: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Sign in with Google    4.16.4'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/navigation/navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authApi\n                            \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/navigation/navigation.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/navigation/navigation.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/navigation/navigation.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/navigation/navigation.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/common/navigation/navigation.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit{\n  currentUser:string = \"\";\n  constructor(public authApi:AuthenticationService,private router:Router){\n\n  }\n  ngOnInit(){\n    this.authApi.getCurrentUser().then((u)=>this.currentUser = u.name)\n  }\n  logout(){\n    this.authApi.logOut();\n    this.router.navigate([\"login\"]);\n  }\n}\n\n    \n\n    \n        \n    {{currentUser}}\n    \n      \n    \n  \n    \n      \n        \n          Search (current)\n        \n        \n          Groups\n        \n        \n            Personal Calendar\n        \n        \n            Watchlist\n        \n        \n      \n        \n      \n      Logout\n    \n  \n    \n\n    \n                \n                    ./navigation.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{currentUser}}                                            Search (current)                          Groups                            Personal Calendar                            Watchlist                                          Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewCalendarEvent.html":{"url":"classes/NewCalendarEvent.html","title":"class - NewCalendarEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewCalendarEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/class/NewCalendarEvent.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detail\n                            \n                            \n                                end\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                            \n                                toCalendarevent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/class/NewCalendarEvent.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        detail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/class/NewCalendarEvent.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCalendarevent\n                        \n                    \n                \n            \n            \n                \ntoCalendarevent(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/class/NewCalendarEvent.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderEvent\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderType } from '../interfaces/enums/calenderenum';\nimport { UserInterface } from '../interfaces/user-interface';\n\nexport class NewCalendarEvent{\n    start:string;\n    end:string;\n    detail:string;\n\n    constructor(){\n        this.start = \"\";\n        this.end = \"\";\n        this.detail = \"\";\n    }\n\n    isValid() {\n        if (this.start && this.end && this.detail)\n            return new Date(this.start) \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendBookingConfirmation\n                            \n                            \n                                sendConfirmationRequest\n                            \n                            \n                                    Private\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/notification.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendBookingConfirmation\n                        \n                    \n                \n            \n            \n                \nsendBookingConfirmation(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendConfirmationRequest\n                        \n                    \n                \n            \n            \n                \nsendConfirmationRequest(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(to: string[], message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PlatformLocation } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference} from '@angular/fire/firestore';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(\n    private fs: Firestore, \n    private platformLocation: PlatformLocation) { }\n\n\n  private sendEmail(to: string[], message:any): Promise{\n    let mailCol: CollectionReference = collection(this.fs, \"mail\");\n    let mailDoc = {\n      to: to,\n      message: message\n    }\n    return new Promise(res=>{\n      if (to.length{\n        // technically this is not success yet\n        // this means \"request to send email has been successfully sent\"\n        res();\n      });\n    })\n  }\n\n  sendConfirmationRequest(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      if (!group.confirmed.includes(member.id))\n        emailList.push(member.email);\n    });\n    var url = (this.platformLocation as any)._location.origin+\"/group\"+\"/\"+group.id;\n    let content = `\n    Requesting confirmation for ${group.event.name||'the concert'}!\n    \n    Hello! ${group.admin.name} is asking for your confirmation to go to ${group.event.name||'the concert'} with ${group.name} on ${group.event.startDate!.toDateString()}.\n    Please click here to confirm your availability before ${group.admin.name} books the tickets!\n    -Ticket Buddy\n    `\n\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Confirmation`, html: content})\n  }\n\n  sendBookingConfirmation(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      if (group.confirmed.includes(member.id))\n        emailList.push(member.email);\n    });\n\n    let content = `\n    Booking confirmed for ${group.event.name||'the concert'}!\n    \n    Congratulations! ${group.name} has booked the tickets for ${group.event.name||'the concert'}.\n    Contact ${group.admin.name} for details regarding the booking!\n    - Ticket Buddy\n    `\n\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Booking Confirmed!`, html: content})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageInterface.html":{"url":"interfaces/PageInterface.html","title":"interface - PageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/page-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            totalElements\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PageInterface {\n    size:number;\n    totalElements:number;\n    number:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalCalenderPageComponent.html":{"url":"components/PersonalCalenderPageComponent.html","title":"component - PersonalCalenderPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonalCalenderPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/personal-calender-page/personal-calender-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personal-calender-page\n            \n\n\n\n            \n                styleUrls\n                ./personal-calender-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./personal-calender-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cal\n                            \n                            \n                                calendarOnDisplay\n                            \n                            \n                                newEvent\n                            \n                            \n                                personal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                dateClicked\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                    Private\n                                isInside\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService, cal: CalendarFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cal\n                                                  \n                                                        \n                                                                        CalendarFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateClicked\n                        \n                    \n                \n            \n            \n                \ndateClicked(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInside\n                        \n                    \n                \n            \n            \n                \n                        \n                    isInside(start: NgbDate, date: NgbDate, end: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalendarFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarOnDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewCalendarEvent\n\n                    \n                \n                \n                    \n                        Default value : new NewCalendarEvent()\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderType\n\n                    \n                \n                \n                    \n                        Default value : CalanderType.Personal\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport {CalanderType} from \"../interfaces/enums/calenderenum\";\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarFacade } from '../facade/PersonalCalendarFacade';\nimport { NewCalendarEvent } from '../class/NewCalendarEvent';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-personal-calender-page',\n  templateUrl: './personal-calender-page.component.html',\n  styleUrls: ['./personal-calender-page.component.css'],\n\n})\nexport class PersonalCalenderPageComponent implements OnInit, OnDestroy{\n\n  calendarOnDisplay: CalanderEvent[] = [];\n  personal:CalanderType = CalanderType.Personal;\n  newEvent: NewCalendarEvent = new NewCalendarEvent();\n  \n  constructor(\n    private toastr:ToastrService,\n    public cal: CalendarFacade\n  ){}\n  \n  ngOnInit(): void {\n    this.cal.initializeCalender();\n  }\n  ngOnDestroy(): void {\n    this.cal.destroy();\n  }\n  \n  private isInside(start:NgbDate, date:NgbDate, end:NgbDate):boolean{\n\t\tvar startDate:Date = new Date(start.year, start.month - 1, start.day);\n\t\tvar dateDate:Date = new Date(date.year, date.month - 1, date.day);\n\t\tvar endDate:Date = new Date(end.year, end.month - 1, end.day);\n\t\t\n\t\treturn startDate{\n      var start:NgbDate = new NgbDate(x.start.getFullYear() , x.start.getMonth()+1,x.start.getDate());\n      var end:NgbDate = new NgbDate(x.end.getFullYear() , x.end.getMonth()+1,x.end.getDate());\n      return this.isInside(start,date,end);\n    });\n  }\n\n  deleteEvent(e: CalanderEvent){\n    this.cal.deleteEvent(e).then(_=>{\n      this.toastr.success(\"delete event success\",\"Calender Event Success\");\n    })\n  }\n\n  createEvent(){\n    \n    this.cal.createEvent(this.newEvent).then(_=>{\n      this.toastr.success(\"Created Personal Event\",\"Calender Event Success\");\n    }).catch(err=>{\n      this.toastr.error(err.message,\"Calender Event Error\");\n    })\n  }\n}\n\n  \n\n    \n\n    \n        \n\n    Personal Calendar\n    (Click on a day to look at events on that day.)\n    \n        \n    \n\n\n    \n        \n            \n                Event Detail\n                Start\n                End\n                Action\n            \n        \n        \n           \n                {{e.detail}}\n                {{e.start}}\n                {{e.end}}\n                Delete\n                \n           \n           \n            \n            \n            \n            Add\n            \n           \n        \n    \n\n    \n\n    \n                \n                    ./personal-calender-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Personal Calendar    (Click on a day to look at events on that day.)                                                        Event Detail                Start                End                Action                                                       {{e.detail}}                {{e.start}}                {{e.end}}                Delete                                                                                      Add                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalCalenderPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFacadeService.html":{"url":"injectables/SearchFacadeService.html","title":"injectable - SearchFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/search-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cat$\n                            \n                            \n                                    Public\n                                cid$\n                            \n                            \n                                    Public\n                                error$\n                            \n                            \n                                    Public\n                                eventInput$\n                            \n                            \n                                    Public\n                                loadedEvents$\n                            \n                            \n                                    Public\n                                loadingEvents$\n                            \n                            \n                                    Public\n                                pageInfo$\n                            \n                            \n                                    Private\n                                query\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                    Public\n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClassification\n                            \n                            \n                                addToWatchList\n                            \n                            \n                                changePage\n                            \n                            \n                                destroy\n                            \n                            \n                                getClassification\n                            \n                            \n                                    Private\n                                getWatchList\n                            \n                            \n                                initialise\n                            \n                            \n                                removeClassification\n                            \n                            \n                                removeFromWatchList\n                            \n                            \n                                searchEvent\n                            \n                            \n                                updateEventInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, tmApi: TicketmasterService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/search-facade.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tmApi\n                                                  \n                                                        \n                                                                        TicketmasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClassification\n                        \n                    \n                \n            \n            \n                \naddClassification(e: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToWatchList\n                        \n                    \n                \n            \n            \n                \naddToWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getWatchList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWatchList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialise\n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassification\n                        \n                    \n                \n            \n            \n                \nremoveClassification(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromWatchList\n                        \n                    \n                \n            \n            \n                \nremoveFromWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEventInput\n                        \n                    \n                \n            \n            \n                \nupdateEventInput(s: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                s\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cat$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({segment:[], genre:[], subGenre:[]})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cid$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventInput$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedEvents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadingEvents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({size:20, totalElements:0, number:0})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { EventInterface } from '../interfaces/event-interface';\n\nimport { ClassType, ClassificationInterface, IdClassType } from '../interfaces/clasification-interface';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { TicketmasterService } from '../network/ticketmaster/ticketmaster.service';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\nimport { PageInterface } from '../interfaces/page-interface';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { BehaviorSubject, Subscription, map, of, startWith, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchFacadeService {\n  private query:any = {};\n  private subs:Subscription[] = [];\n  public loadingEvents$:BehaviorSubject = new BehaviorSubject(false);\n  public eventInput$:BehaviorSubject = new BehaviorSubject(\"\");\n  public loadedEvents$:BehaviorSubject = new BehaviorSubject([]);\n  public watchlist$:BehaviorSubject = new BehaviorSubject([]);\n  public cid$:BehaviorSubject = new BehaviorSubject([]); \n  public error$:EventEmitter = new EventEmitter();\n  public cat$:BehaviorSubject = new BehaviorSubject({segment:[], genre:[], subGenre:[]});\n  public pageInfo$:BehaviorSubject = new BehaviorSubject({size:20, totalElements:0, number:0});\n  \n  constructor( private authApi:AuthenticationService,\n    private tmApi: TicketmasterService,\n    private watchlistSvc: WatchlistService) {\n  }\n  updateEventInput(s:string){\n    this.eventInput$.next(s);\n  }\n  initialise(){\n    this.searchEvent();\n    this.getWatchList();\n  }\n  destroy(){\n    this.query = {};\n    this.cat$.next({segment:[], genre:[], subGenre:[]});\n    this.eventInput$.next(\"\");\n    this.cid$.next([]);\n\n    this.subs.forEach((x)=>x.unsubscribe());\n  }\n  private getWatchList(){\n    this.authApi.getCurrentUser().then((x:UserInterface)=>{\n      var rtn:Subscription = this.watchlistSvc.getWatchlist(x).subscribe(\n        (n)=> this.watchlist$.next(n)\n      );\n      this.subs.push(rtn);\n    });\n  }\n  getClassification(kw:string){\n    return this.tmApi.getClassification(kw).pipe(\n      tap((x:ClassificationInterface)=>{\n        this.cat$.next(x);\n      })\n    );\n  }\n  addClassification(e:IdClassType){\n    var n:IdClassType[] = this.cid$.value;\n    for(var i of n){\n      if(i.id == e.id)return;\n    }\n    n.push(e);\n    this.cid$.next(n);\n  }\n  removeClassification(ie:IdClassType){\n    var n:IdClassType[] = this.cid$.value;\n    this.cid$.next(n.filter((c)=>c.id!=ie.id));\n  }\n \n  searchEvent(){//this one got the queries\n    this.query.segmentId = this.cid$.value.filter((c)=>c.type==ClassType.Segment).map((x)=>x.id);\n    this.query.genreId = this.cid$.value.filter((c)=>c.type==ClassType.Genre).map((x)=>x.id);\n    this.query.subGenreId = this.cid$.value.filter((c)=>c.type==ClassType.Subgenre).map((x)=>x.id);\n    this.query.keyword = this.eventInput$.value;\n    this.query.page = 0;\n    this.tmApi.getEventsQuery(this.query).pipe(\n      startWith(undefined)\n    ).subscribe(\n      {next:(x)=>{\n        if(x){\n          var p:PageInterface = x.page;\n          p.number +=1;\n          this.pageInfo$.next(p);\n          this.loadedEvents$.next(x.events);\n        } else {\n          this.loadingEvents$.next(true);\n        }\n      },\n      error:(err)=>{\n        this.error$.next({error:err,title:\"Ticket Master Error\"});\n        this.loadingEvents$.next(false);\n      },\n      complete:()=>{\n        this.loadingEvents$.next(false);\n        \n      }\n  });\n \n  }\n  changePage(pgNum:number){\n    this.query.page = pgNum-1;\n    this.tmApi.getEventsQuery(this.query).pipe(startWith(undefined)).subscribe({\n      next:(n)=>{\n        if(n){\n          var p:PageInterface = n.page;\n          p.number = pgNum;\n          this.pageInfo$.next(p);\n          this.loadedEvents$.next(n.events);\n        }else{\n          \n          this.loadingEvents$.next(true);\n        }          \n      },\n      error:(err)=>{\n        this.error$.next({error:err,title:\"Ticket Master Network Error\"});\n        this.loadingEvents$.next(false);\n      },\n      complete:()=>{\n        this.loadingEvents$.next(false);\n      }\n    });\n  }\n  removeFromWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.removeWatchlistEvent(u,event);\n    });\n  }\n  addToWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.addWatchlistEvent(u,event);\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchPageComponent.html":{"url":"components/SearchPageComponent.html","title":"component - SearchPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/search-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-page\n            \n\n\n\n            \n                styleUrls\n                ./search-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classificationEmitter\n                            \n                            \n                                classInput\n                            \n                            \n                                eventInput\n                            \n                            \n                                eventInputEmitter\n                            \n                            \n                                    Public\n                                searchFacade\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/search-page.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classificationEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventInputEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { SearchFacadeService } from '../facade/search-facade.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent implements OnInit, OnDestroy{\n  classInput:string = \"\";\n  eventInput:string = \"\";\n  private subscriptions:Subscription[] = [];\n  \n  classificationEmitter:EventEmitter = new EventEmitter();\n  eventInputEmitter:EventEmitter = new EventEmitter();\n  constructor(\n    public searchFacade:SearchFacadeService,\n    private toastr:ToastrService\n  ){\n\n  }\n  ngOnDestroy(): void {\n    this.searchFacade.destroy();\n    this.subscriptions.forEach(s=>s.unsubscribe());\n  }\n  ngOnInit(){\n    \n    this.searchFacade.initialise();\n    this.subscriptions.push(\n      this.searchFacade.error$.subscribe(\n        (n)=>{\n          this.toastr.error(n.error,n.title)\n        }\n      )\n    );\n    \n  }\n  \n  changePage(pgNum:number){\n    this.searchFacade.changePage(pgNum);\n  }\n  searchEvent(){//this one got the queries\n    this.searchFacade.searchEvent();\n  }\n  \n\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    Search\n                \n                \n            \n        \n    \n\n\n\n\n\n\n   \n 0\">\n    \n        \n    \n\n\n\n    \n        \n        Loading...\n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./search-page.component.css\n                \n                /*search box css start here*/\n.search-sec{\n    padding: 2rem;\n}\n.search-slt{\n    display: block;\n    width: 100%;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    color: #55595c;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n.wrn-btn{\n    width: 100%;\n    font-size: 16px;\n    font-weight: 400;\n    text-transform: capitalize;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n@media (min-width: 992px){\n    .search-sec{\n        position: relative;\n        top: -114px;\n        background: rgba(26, 70, 104, 0.51);\n    }\n}\n\n@media (max-width: 992px){\n    .search-sec{\n        background: #1A4668;\n    }\n}\n\n.loading-container {\n    text-align:center;\n    position: fixed;\n    width: 100vw;\n    height: 100%;\n    top: 0;\n    backdrop-filter: blur(5px);\n    background-color: rgba(0,0,0,0.3);\n    color: #FFF;\n}\n\n.loading{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n}\n\n.loading-spinner {\n    width: 48px;\n    height: 48px;\n    border: 5px solid #FFF;\n    border-bottom-color: transparent;\n    border-radius: 50%;\n    display: inline-block;\n    box-sizing: border-box;\n    animation: rotation 1s linear infinite;\n}\n\n@keyframes rotation {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n    } \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                    Search                                                            0\">                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentInterface.html":{"url":"interfaces/SegmentInterface.html","title":"interface - SegmentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:         GenreInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GenreInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketmasterService.html":{"url":"injectables/TicketmasterService.html","title":"injectable - TicketmasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketmasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/ticketmaster/ticketmaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseurl\n                            \n                            \n                                header\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClassification\n                            \n                            \n                                getEventsQuery\n                            \n                            \n                                    Private\n                                returnEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, platformLocation: PlatformLocation, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventsQuery\n                        \n                    \n                \n            \n            \n                \ngetEventsQuery(query: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    returnEvents(x: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { PlatformLocation } from '@angular/common';\n\nimport { ticketMasterApi } from 'src/environments/env-prod';\nimport { Observable, catchError, concatMap, delay, filter, iif, map, mergeMap, of, switchMap, take, throwError, timeout } from 'rxjs';\nimport { EventPageInterface } from 'src/app/interfaces/eventpage-interface';\nimport { ClassificationInterface } from 'src/app/interfaces/clasification-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketmasterService {\n  private baseurl:string;\n  constructor(private http: HttpClient,\n    private platformLocation: PlatformLocation,\n    private router: Router) {\n      this.baseurl = (this.platformLocation as any)._location.origin+\"/ticketmaster\";\n      // uncomment for production build\n      // this.baseurl = \"https://app.ticketmaster.com/discovery/v2\";\n    }\n    \n    header = \n      new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n\n    getClassification(kw:string):Observable{\n      return this.http.get(this.baseurl+\"/\"+\"classifications.json\", {params:{apikey:ticketMasterApi, keyword:kw}}).pipe(\n        filter((x:any)=>{\n          return x.page.totalElements>0 && kw.length > 0;\n        }),\n        map((x:any)=>{\n          var cs:any[] = x._embedded.classifications;\n          var ans:ClassificationInterface = {segment:[], subGenre:[], genre:[]};//must\n          cs.forEach((a)=>{\n            if(!a?.segment?.id) return;\n            ans.segment.push({id:a.segment.id, name:a.segment.name});\n            a.segment._embedded.genres.forEach((g:any)=> {\n              if(!g?.id) return;\n              ans.genre.push({id:g.id, name:g.name});\n              g._embedded.subgenres.forEach((sg:any)=>{\n                if(!sg?.id) return;\n                ans.subGenre.push({id:sg.id, name:sg.name});\n              });\n            });\n          });\n          return ans;\n        })\n      );\n    }\n    private returnEvents(x:any):Observable{\n      var rtn:any = {page:undefined, events:undefined};\n      rtn.page = x.page;\n      console.log(x);\n      if (x.page.totalElements == 0){\n\n        return throwError(\"No events that fit this query\")\n      }\n      x = x._embedded;\n      rtn.events = x.events.map((e:any)=>{\n        var sd = new Date(e.dates?.start.dateTime);\n        var ed:Date = new Date(e.dates?.end);\n        \n        return {\n          id:e.id, details:e.description, \n          images:e.images.map((img:any)=>img.url),\n          location:e._embedded?.venues.map((v:any)=>v.name), \n          name:e.name,\n          startDate: (!Number.isNaN(sd.valueOf()))? sd: undefined, \n          endDate:(!Number.isNaN(ed.valueOf()))? ed: undefined\n        };\n      });\n      \n      return of(rtn as EventPageInterface)\n    }\n    getEventsQuery(query:any):Observable{\n      query.apikey = ticketMasterApi;\n      return this.http.get(this.baseurl+\"/events.json\", {params:query}).pipe(\n        //delete this after testing, this is to trigger error\n        timeout(5000),\n        catchError((err)=>throwError(\"network error\")),\n        switchMap(this.returnEvents)\n      )\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    readonly id: string;\n    readonly name: string;\n    readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewGroupFacade.html":{"url":"injectables/ViewGroupFacade.html","title":"injectable - ViewGroupFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViewGroupFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/ViewGroupFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminGroups$\n                            \n                            \n                                currentUser$\n                            \n                            \n                                dateColor$\n                            \n                            \n                                group$\n                            \n                            \n                                groupById$\n                            \n                            \n                                groupCalendar$\n                            \n                            \n                                memberGroups$\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGroupbooking\n                            \n                            \n                                confirmGroupEvent\n                            \n                            \n                                copyInviteLink\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                destroy\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                getGroup\n                            \n                            \n                                getGroupCalander\n                            \n                            \n                                getGroups\n                            \n                            \n                                getGrpById\n                            \n                            \n                                getStartDate\n                            \n                            \n                                initialise\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                sendGroupConfirmation\n                            \n                            \n                                    Private\n                                setGroupCalanderColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, calSvc: CalendarService, clipboard: Clipboard, grpSvc: GroupService, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/ViewGroupFacade.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipboard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupbooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupbooking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:182\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupEvent\n                        \n                    \n                \n            \n            \n                \nconfirmGroupEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:199\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyInviteLink\n                        \n                    \n                \n            \n            \n                \ncopyInviteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroup\n                        \n                    \n                \n            \n            \n                \ngetGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupCalander\n                        \n                    \n                \n            \n            \n                \ngetGroupCalander(g: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrpById\n                        \n                    \n                \n            \n            \n                \ngetGrpById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStartDate\n                        \n                    \n                \n            \n            \n                \ngetStartDate(d?: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NgbDate\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialise\n                        \n                    \n                \n            \n            \n                \ninitialise(id: string, group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:170\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGroupCalanderColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGroupCalanderColor(grpCal: CalanderEvent[], group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                grpCal\n                                            \n                                                            CalanderEvent[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderColor\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({id:\"\",email:\"\",name:\"\"})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupById$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupCalendar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { GroupInterface } from \"../interfaces/group-interface\"\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { PlatformLocation } from '@angular/common';\nimport { BehaviorSubject, Observable, Subscription, from, iif, map, of, switchMap, tap } from 'rxjs';\nimport { CalanderEvent } from \"../interfaces/calander-interface/CalanderEvent-interface\"\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewGroupFacade {\n\n  \tprivate subs:Subscription[] = [];\n    group$: BehaviorSubject = new BehaviorSubject(undefined);\n    dateColor$: BehaviorSubject = new BehaviorSubject([]); //should be date range better // wtf does this mean\n    groupCalendar$: BehaviorSubject = new BehaviorSubject([]);\n    adminGroups$: BehaviorSubject = new BehaviorSubject([]);\n    memberGroups$: BehaviorSubject = new BehaviorSubject([]);\n    groupById$: BehaviorSubject = new BehaviorSubject(undefined);\n    currentUser$:BehaviorSubject = new BehaviorSubject({id:\"\",email:\"\",name:\"\"});\n    constructor(\n        private authSvc:AuthenticationService, \n        private calSvc: CalendarService,\n        private clipboard:Clipboard,\n        private grpSvc: GroupService,\n        private platformLocation: PlatformLocation,\n    ) {\n\n    \n  }\n    initialise(id:string, group:GroupInterface){\n        this.getCurrentUser();\n    this.getGroup(id);\n    this.getGroupCalander(group);\n    }\n    destroy(){\n        this.subs.forEach((e)=>e.unsubscribe());\n    }\n    getCurrentUser(){\n        return this.authSvc.getCurrentUser().then(u=>this.currentUser$.next(u));\n    }\n    getGroup(id:string){       \n        this.subs.push(\n            this.grpSvc.getGroupById(id).subscribe(group=>{\n                this.group$.next(group);\n            })\n        ); \n            \n    }\n    getGroups(){\n        this.authSvc.getCurrentUser().then(user=>{\n            \n            var rtn:Subscription = this.grpSvc.getGroups(user).subscribe(grps=>{\n                let adm: GroupInterface[] = [];\n                let nadm: GroupInterface[] = [];\n                grps.forEach(grp=>{\n                    if (grp.admin.id === user.id)\n                        adm.push(grp);\n                    else \n                        nadm.push(grp);\n                });     \n                this.adminGroups$.next(adm);\n                this.memberGroups$.next(nadm);\n            })\n            this.subs.push(rtn);\n        });\n    }\n    getGroupCalander(g:GroupInterface){\n        // Get latest group\n        var rtn:Subscription = this.grpSvc.getGroupById(g.id).pipe(\n            switchMap((group:GroupInterface)=>this.calSvc.getGroupCalendar(group).pipe(\n                tap((grpCal:CalanderEvent[])=>{\n                    grpCal.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n                        if(a.start i.user.id))].length;\n        console.log(cmiCount+\"/\"+group.allUUID.length);\n        if (cmiCount==group.allUUID.length)return CalanderColor.NotFreeAtAll\n        return CalanderColor.SomeFree\n        \n    }\n\n    copyInviteLink(): boolean {\n        var base_url = (this.platformLocation as any)._location.origin+\"/group\"+\"/\"+this.group$.value!.id;\n        return this.clipboard.copy(base_url);\n    }\n\n    deleteGroup(): Promise {\n        return new Promise(res=>{\n            let allProm:Promise[] = [];\n            // Remove cal events if they are confirm\n            (this.group$.value!).confirmed.forEach(userID=>{\n                let user: UserInterface = {id: userID, email: \"\", name: \"\"}\n                allProm.push(this.calSvc.removeReservedCalEvent(this.group$.value!, user));\n            })\n\n            Promise.all(allProm).then(_=>{\n                console.log(\"all del\");\n                this.grpSvc.deleteGroup(this.group$.value!).then(_=>{\n                    return res();\n                })\n            });\n        })\n    }\n\n    kickUser(user: UserInterface): Promise {\n        let allProm = [\n            this.calSvc.removeReservedCalEvent(this.group$.value!, user),\n            this.grpSvc.removeFromGroup(this.group$.value!, user)\n        ]\n        return new Promise(res=>{\n            Promise.all(allProm).then(_=>{\n                return res();\n            })\n        })\n\n\n    }\n\n    joinGroup(id: string): Observable {\n        return from(this.authSvc.getCurrentUser()).pipe(\n            switchMap((user:UserInterface)=>from(this.grpSvc.joinGroup(id, user)))\n        );\n        \n    \n    }\n\n    getStartDate(d?: Date): NgbDate{\n        if (!d)\n            d = new Date();\n        return new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n    }\n\n    getGrpById(id: string): Observable{\n        let obs: Observable = this.grpSvc.getGroupById(id);\n        var rtn:Subscription = obs.subscribe(grp=>{\n            this.groupById$.next(grp);\n        });\n        this.subs.push(rtn);\n        return obs;\n    }\n    sendGroupConfirmation(): Promise{\n        //groupInterface\n        return new Promise((res,rej)=>{\n            if (!this.group$.value)\n                return rej(new Error(\"Group invalid.\"));\n            if (this.group$.value.confirmed.length === this.group$.value.allUUID.length)\n                return rej(new Error(\"Group all members confirmed\"));\n            this.grpSvc.sendGroupConfirmation(this.group$.value!).then(_=>{\n                return res();\n            });\n        });\n    }   \n    confirmGroupbooking(): Promise{\n        //groupInterface\n        return new Promise((res,rej)=>{\n            if (!this.group$.value)\n                return rej(new Error(\"Group invalid.\"));\n            if (this.group$.value.confirmed.length === 0)\n                return rej(new Error(\"Group no members confirmed\"));\n            let calUpdateProm = this.calSvc.convertReservedToBooked(this.group$.value);\n            let grpUpdateProm = this.grpSvc.confirmGroupBooking(this.group$.value!)\n\n            Promise.all([calUpdateProm,grpUpdateProm]).then(_=>{\n                return res();\n            })\n        });\n        \n    }\n\n    confirmGroupEvent(): Observable{\n        return this.grpSvc.confirmGroupEvent(this.group$.value!, this.currentUser$.value);\n       \n    }\n\t\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistFacadeService.html":{"url":"injectables/WatchlistFacadeService.html","title":"injectable - WatchlistFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/watchlist-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subs\n                            \n                            \n                                    Public\n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                getWatchList\n                            \n                            \n                                initialise\n                            \n                            \n                                removeFromWatchList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(watchlistSvc: WatchlistService, authApi: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/watchlist-facade.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/watchlist-facade.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchList\n                        \n                    \n                \n            \n            \n                \ngetWatchList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/watchlist-facade.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialise\n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/watchlist-facade.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromWatchList\n                        \n                    \n                \n            \n            \n                \nremoveFromWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/watchlist-facade.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/watchlist-facade.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/watchlist-facade.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { EventInterface } from '../interfaces/event-interface';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistFacadeService {\n  public watchlist$:BehaviorSubject = new BehaviorSubject([]);\n  private subs:Subscription[] = [];\n  constructor(private watchlistSvc: WatchlistService,private authApi:AuthenticationService) {}\n  removeFromWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.removeWatchlistEvent(u,event);\n    });\n  }\n  \n  getWatchList(){\n    this.authApi.getCurrentUser().then((x:UserInterface)=>{\n      var rtn:Subscription = this.watchlistSvc.getWatchlist(x).subscribe(\n        (n)=> this.watchlist$.next(n)\n      );\n      this.subs.push(rtn);\n    });\n  }\n  initialise(){\n    this.getWatchList();\n  }\n  destroy(){\n    this.subs.forEach((x)=>x.unsubscribe());\n  }\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WatchlistPageComponent.html":{"url":"components/WatchlistPageComponent.html","title":"component - WatchlistPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WatchlistPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/watchlist-page/watchlist-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-watchlist-page\n            \n\n\n\n            \n                styleUrls\n                ./watchlist-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./watchlist-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                watchlistFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(watchlistFacade: WatchlistFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        watchlistFacade\n                                                  \n                                                        \n                                                                        WatchlistFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/watchlist-page/watchlist-page.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/watchlist-page/watchlist-page.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        watchlistFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WatchlistFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SearchFacadeService } from '../facade/search-facade.service';\nimport { WatchlistFacadeService } from '../facade/watchlist-facade.service';\n\n@Component({\n  selector: 'app-watchlist-page',\n  templateUrl: './watchlist-page.component.html',\n  styleUrls: ['./watchlist-page.component.css']\n})\nexport class WatchlistPageComponent implements OnDestroy, OnInit{\n  constructor(\n    public watchlistFacade:WatchlistFacadeService){}\n  ngOnDestroy(): void {\n      this.watchlistFacade.destroy();\n  }\n\n  ngOnInit(){\n    this.watchlistFacade.initialise();  \n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n\n    \n    \n    \n        You have no events added to your watchlist.\n    \n\n\n    \n\n    \n                \n                    ./watchlist-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    You have no events added to your watchlist.    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WatchlistPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistService.html":{"url":"injectables/WatchlistService.html","title":"injectable - WatchlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/watchlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addWatchlistEvent\n                            \n                            \n                                    Private\n                                dbwatchlistToEvent\n                            \n                            \n                                    Private\n                                eventToDbWatchlist\n                            \n                            \n                                getWatchlist\n                            \n                            \n                                removeWatchlistEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/watchlist.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addWatchlistEvent\n                        \n                    \n                \n            \n            \n                \naddWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbwatchlistToEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbwatchlistToEvent(dbEvent: DocumentData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbEvent\n                                            \n                                                        DocumentData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         EventInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventToDbWatchlist\n                        \n                    \n                \n            \n            \n                \n                        \n                    eventToDbWatchlist(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchlist\n                        \n                    \n                \n            \n            \n                \ngetWatchlist(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeWatchlistEvent\n                        \n                    \n                \n            \n            \n                \nremoveWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { Firestore, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, setDoc} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistService {\n\n  constructor(private fs: Firestore) { }\n\n  private eventToDbWatchlist(event:EventInterface): any{\n    let watchListEvent: any = {id: event.id}\n\n    if (event.name !== undefined)\n      watchListEvent.name = event.name\n    if (event.location !== undefined)\n      watchListEvent.location = event.location\n    if (event.images !== undefined)\n      watchListEvent.images = event.images\n    if (event.details !== undefined)\n      watchListEvent.details = event.details\n    if (event.startDate !== undefined)\n      watchListEvent.startDate = event.startDate\n    if (event.endDate !== undefined)\n      watchListEvent.endDate = event.endDate\n\n    return watchListEvent;\n  }\n\n  private dbwatchlistToEvent(dbEvent: DocumentData ): EventInterface{\n    let event: EventInterface = {\n      id: dbEvent['id'],\n      name: dbEvent['name'],\n      location: dbEvent['location'],\n      images: dbEvent['images'],\n      details: dbEvent['details'],\n      startDate: dbEvent['startDate']? new Date(dbEvent['startDate']?.toDate()): undefined,\n      endDate: dbEvent['endDate']? new Date(dbEvent['endDate']?.toDate()): undefined\n    }\n    \n\n    return event\n  }\n\n  getWatchlist(user: UserInterface): Observable{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n\n    return new Observable(obs=>{\n      docData(watchDoc).subscribe(data=>{\n        let watchlist:EventInterface[] = [];\n        if (data===undefined){\n          obs.next(watchlist);\n          return;\n        } \n        data['saved'].forEach((event: DocumentData)=>{\n          \n          watchlist.push(this.dbwatchlistToEvent(event))\n        })\n        obs.next(watchlist);\n      });\n    });\n  }\n\n  addWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    \n    let update = {saved: arrayUnion(this.eventToDbWatchlist(event))}\n    \n    // Attempt to append to document, if not found, initialise a new one.\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      }).catch(rej=>{\n        if (rej.code == \"not-found\"){\n          setDoc(watchDoc,update).then(_=>{\n            res();\n          })\n        } else {\n          throw(rej);\n        }\n      })\n    })\n  }\n\n  removeWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    let update = {saved: arrayRemove(this.eventToDbWatchlist(event))}\n\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/class/NewCalendarEvent.ts\n            \n            class\n            NewCalendarEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/common/calander/calander.component.ts\n            \n            component\n            CalanderComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/common/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/facade/CreateGroupFacade.ts\n            \n            injectable\n            CreateGroupFacade\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/facade/PersonalCalendarFacade.ts\n            \n            injectable\n            CalendarFacade\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/facade/ViewGroupFacade.ts\n            \n            injectable\n            ViewGroupFacade\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/facade/grouppage-facade.service.ts\n            \n            injectable\n            GrouppageFacadeService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/facade/search-facade.service.ts\n            \n            injectable\n            SearchFacadeService\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/facade/watchlist-facade.service.ts\n            \n            injectable\n            WatchlistFacadeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/group-page/group-create/group-create.component.ts\n            \n            component\n            GroupCreateComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/group-page/group-detail/group-detail.component.ts\n            \n            component\n            GroupDetailComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/group-page/group-list/group-list.component.ts\n            \n            component\n            GroupListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/group-page/group-page.component.ts\n            \n            component\n            GroupPageComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/group-page/groupmember-pipe.pipe.ts\n            \n            pipe\n            GroupmemberPipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/group-page/grouppipe.pipe.ts\n            \n            pipe\n            GrouppipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEvent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEventColor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            ClassificationInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            GenreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdClassType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdName\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            SegmentInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypePriority\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            class\n            EventClass\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            interface\n            EventInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/eventpage-interface.ts\n            \n            interface\n            EventPageInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/group-interface.ts\n            \n            interface\n            GroupInterface\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/page-interface.ts\n            \n            interface\n            PageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            dates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            watchlist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user-interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/network/firebase/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/calendar.service.ts\n            \n            injectable\n            CalendarService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/watchlist.service.ts\n            \n            injectable\n            WatchlistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/network/ticketmaster/ticketmaster.service.ts\n            \n            injectable\n            TicketmasterService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/personal-calender-page/personal-calender-page.component.ts\n            \n            component\n            PersonalCalenderPageComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/search-page/classification-component/classification-component.component.ts\n            \n            component\n            ClassificationComponentComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/search-page/event-component/event-component.component.ts\n            \n            component\n            EventComponentComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/inwatchlist.pipe.ts\n            \n            pipe\n            InwatchlistPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/list-events.component.ts\n            \n            component\n            ListEventsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/search-page/search-page.component.ts\n            \n            component\n            SearchPageComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/watchlist-page/watchlist-page.component.ts\n            \n            component\n            WatchlistPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            ticketMasterApi\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.12\n        \n            @angular/cdk : ^16.2.14\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/fire : ^16.0.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @ng-bootstrap/ng-bootstrap : ^15.1.2\n        \n            @popperjs/core : ^2.11.8\n        \n            angular-calendar : ^0.31.0\n        \n            bootstrap : ^5.2.3\n        \n            ngx-toastr : ^18.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CalanderColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderType   (src/.../calenderenum.ts)\n                        \n                        \n                            ClassType   (src/.../clasification-interface.ts)\n                        \n                        \n                            GroupMemberStatus   (src/.../GroupStatus.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n            \n                \n                    \n                        \n                        CalanderColor\n                    \n                \n                        \n                            \n                                 NotFreeAtAll\n                            \n                        \n                        \n                            \n                                Value : #d9534f\n                            \n                        \n                        \n                            \n                                 SomeFree\n                            \n                        \n                        \n                            \n                                Value : #f0ad4e\n                            \n                        \n                        \n                            \n                                 AllAvailable\n                            \n                        \n                        \n                            \n                                Value : #5cb85c\n                            \n                        \n                        \n                            \n                                 Default\n                            \n                        \n                        \n                            \n                                Value : #0275D8\n                            \n                        \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : #00a2a8\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : #efcb00\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : #b0d04a\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CalanderType\n                    \n                \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : Personal\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : ReservedForEvent\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : BookedForEvent\n                            \n                        \n            \n        \n\n    src/app/interfaces/clasification-interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ClassType\n                    \n                \n                        \n                            \n                                 Segment\n                            \n                        \n                        \n                            \n                                 Genre\n                            \n                        \n                        \n                            \n                                 Subgenre\n                            \n                        \n            \n        \n\n    src/app/interfaces/enums/GroupStatus.ts\n    \n        \n            \n                \n                    \n                        \n                        GroupMemberStatus\n                    \n                \n                        \n                            \n                                 Going\n                            \n                        \n                        \n                            \n                                Value : Going\n                            \n                        \n                        \n                            \n                                 NotGoing\n                            \n                        \n                        \n                            \n                                Value : Not Going\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTicketbuddy\nThis project was generated with Angular CLI version 16.1.5.\nInstallation\n\nDownload and install Node.js and npm.\nClone the project.\nInstall libraries using npm install\n\nSet up\nCreate a file 'env-prod.ts' under './src/environments'.\n1. Ticketmaster\n\nGet an API key from Ticketmaster.\nAdd the following line into env-prod.ts with the ticket master api key.export const ticketMasterApi = \"your-ticket-master-api-key\";\n\n2. Firebase config\n\nCreate a new Firebase project.\nAdd Firebase to your Web App.\nIgnore any npm install commands, this is already completed earlier.\nCopy the firebaseConfig provided.\nPaste the config into env-prod.ts with the export keyword. It should look like the following.export const firebaseConfig = {  apiKey: \"your-proj-api-key\",  authDomain: \"your-proj-id.firebaseapp.com\",  projectId: \"your-proj-id\",  storageBucket: \"your-proj-id.appspot.com\",  messagingSenderId: \"XXXXXXXXXXXX\",  appId: \"1:XXXXXXXXXXXX:web:XXXXXXXXXXXXXXXXXXXXXXXX\",  measurementId: \"G-XXXXX\"};\n\n3. Firebase Authentication set up\n\nOpen firebase console, navigate to the project created earlier.\nSelect Authentication. \nEnable Google as a sign-in provider.\n\n4. Firebase Firestore set up\n\nOpen firebase console, navigate to the project created earlier.\nCreate Cloud Firestore database in test mode.\nUnder Extensions, install the \"Trigger Email from Firestore\" extension.\n\nRunning the project\nRun the project using npm start\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nGrouppipePipe\n\nGrouppipePipe\n\nAppModule -->\n\nGrouppipePipe->AppModule\n\n\n\n\n\nInwatchlistPipe\n\nInwatchlistPipe\n\nAppModule -->\n\nInwatchlistPipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            CalanderTypeColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderTypePriority   (src/.../calenderenum.ts)\n                        \n                        \n                            dates   (src/.../testdata.ts)\n                        \n                        \n                            e1   (src/.../testdata.ts)\n                        \n                        \n                            e2   (src/.../testdata.ts)\n                        \n                        \n                            end   (src/.../testdata.ts)\n                        \n                        \n                            end2   (src/.../testdata.ts)\n                        \n                        \n                            end3   (src/.../testdata.ts)\n                        \n                        \n                            firebaseConfig   (src/.../env-prod.ts)\n                        \n                        \n                            g1   (src/.../testdata.ts)\n                        \n                        \n                            g2   (src/.../testdata.ts)\n                        \n                        \n                            start   (src/.../testdata.ts)\n                        \n                        \n                            start2   (src/.../testdata.ts)\n                        \n                        \n                            start3   (src/.../testdata.ts)\n                        \n                        \n                            ticketMasterApi   (src/.../env-prod.ts)\n                        \n                        \n                            user1   (src/.../testdata.ts)\n                        \n                        \n                            user2   (src/.../testdata.ts)\n                        \n                        \n                            user3   (src/.../testdata.ts)\n                        \n                        \n                            user4   (src/.../testdata.ts)\n                        \n                        \n                            watchlist   (src/.../testdata.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authApi:AuthenticationService = inject(AuthenticationService);\n  const router:Router = inject(Router);\n  return authApi.isAuthenticated().pipe(\n    tap((x:boolean)=>{\n      if(!x){\n        router.navigate(['login'], {queryParams: {returnUrl: state.url }});\n        \n      }\n      \n    })\n  );\n  \n}\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CalanderTypeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, CalanderColor.BookedForEvent],\n    [CalanderType.ReservedForEvent, CalanderColor.ReservedForEvent],\n    [CalanderType.Personal, CalanderColor.Personal]  \n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CalanderTypePriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, 1],\n    [CalanderType.ReservedForEvent, 2],\n    [CalanderType.Personal, 3]  \n])\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/testdata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start, \n    end:end, \n    detail:\"Doctors Appointment\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start2, \n    end:end2, \n    detail:\"School project meeting\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start3, \n    end:end3, \n    detail:\"Dental Checkup\", \n    type:CalanderType.Personal}\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt1\", name:\"Superbowl\", location:[\"Seatle stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event\", startDate: new Date(2024, 3, 27, 17,30), endDate:new Date(2024, 3, 27, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt2\", name:\"Taylor Swift\", location:[\"Singpoare Stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event 2\", startDate: new Date(2024, 3, 17, 17,30), endDate:new Date(2024, 3, 17, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start3.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp1\", name:\"TS fan group\", \n    event: e2, admin:user1, members:[user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp2\", name:\"GO Patriots Group\", \n    event: e1, admin:user4, members:[user1, user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user4\",\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(2024, 2, 27, 3 ,30,0)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 5*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"john\", email: \"ur@mother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"becca\", email: \"ur@father.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Tom\", email: \"ur@sister.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Rick\", email: \"ur@brother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : [e1, e2]\n                    \n                \n\n\n        \n    \n\n    src/environments/env-prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiKey: \"AIzaSyDjqnG3Ye8IF6TcSPj_psTFYMizlnFvoOw\",\n    authDomain: \"ticket-bud.firebaseapp.com\",\n    projectId: \"ticket-bud\",\n    storageBucket: \"ticket-bud.appspot.com\",\n    messagingSenderId: \"297938436292\",\n    appId: \"1:297938436292:web:f09902d21ddd4fde388991\",\n    measurementId: \"G-Y4Q5TLEBGB\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketMasterApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"5Jqei2SXCUbEHOfAy9F6vyC4wA8Pj6s0\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
