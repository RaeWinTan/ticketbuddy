var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.42,1,0.931]],["body/components/AppComponent.html",[0,0.671,1,1.59,2,1.574,3,0.249,4,0.22,5,1.245,6,1.245,7,1.245,8,1.245,9,0.22,10,3.14,11,1.105,12,2.385,13,2.247,14,2.625,15,1.671,16,5.592,17,1.671,18,4.954,19,0.279,20,0.912,21,5.592,22,5.592,23,0.982,24,1.701,25,2.003,26,1.168,27,4.954,28,0.82,29,0.023,30,0.84,31,0.335,32,0.679,33,1.701,34,1.774,35,1.671,36,4.215,37,0.871,38,4.215,39,3.691,40,0.693,41,0.636,42,2.11,43,0.249,44,0.679,45,1.701,46,1.701,47,3.691,48,3.691,49,2.777,50,1.105,51,1.574,52,1.671,53,1.245,54,1.899,55,1.245,56,1.245,57,0.982,58,1.245,59,0.982,60,1.245,61,1.671,62,0.982,63,0.871,64,0.982,65,1.411,66,1.245,67,0.982,68,1.245,69,0.982,70,1.245,71,0.925,72,2.016,73,0.982,74,1.245,75,1.245,76,0.925,77,1.042,78,0.982,79,1.245,80,0.925,81,1.042,82,1.042,83,0.925,84,1.105,85,0.925,86,0.982,87,1.105,88,1.245,89,1.245,90,0.016,91,0.016]],["title/modules/AppModule.html",[92,2.376,93,2.376]],["body/modules/AppModule.html",[1,1.71,3,0.166,4,0.147,9,0.147,13,0.781,29,0.024,40,0.983,41,0.423,43,0.166,44,0.452,50,0.736,57,1.491,59,1.491,62,1.491,64,1.491,65,1.323,67,1.491,69,1.491,71,1.405,73,1.491,76,1.405,77,0.694,78,1.491,80,1.405,81,0.694,82,1.046,83,1.405,84,1.488,85,1.405,86,0.654,90,0.012,91,0.012,92,1.668,93,4.89,94,1.524,95,1.668,96,3.795,97,2.629,98,3.152,99,1.849,100,2.09,101,2.09,102,2.09,103,2.09,104,3.476,105,3.476,106,3.476,107,4.947,108,4.225,109,4.947,110,4.534,111,4.947,112,4.225,113,3.152,114,2.09,115,1.849,116,2.457,117,3.152,118,2.457,119,2.457,120,2.457,121,3.152,122,3.705,123,3.152,124,1.849,125,3.705,126,1.668,127,2.457,128,2.457,129,3.705,130,1.828,131,1.963,132,2.457,133,1.849,134,3.705,135,1.849,136,1.849,137,2.457,138,1.849,139,1.849,140,3.705,141,3.152,142,1.849,143,2.457,144,2.09,145,2.457,146,2.457,147,1.524,148,2.09,149,3.705,150,3.705,151,2.457,152,1.668,153,4.534,154,2.631,155,1.849,156,2.457,157,3.705,158,2.09,159,2.457,160,1.849,161,2.457,162,1.668,163,1.668,164,2.457,165,1.849,166,2.457,167,2.457,168,1.668,169,1.849,170,2.457,171,1.849,172,1.849,173,2.457,174,2.457,175,2.457,176,2.457]],["title/modules/AppRoutingModule.html",[92,2.376,106,2.171]],["body/modules/AppRoutingModule.html",[3,0.298,4,0.264,9,0.264,29,0.023,40,0.968,41,0.761,43,0.298,44,0.813,65,1.043,71,1.107,76,1.107,77,1.247,80,1.107,81,1.247,82,1.572,83,1.107,84,1.323,85,1.107,86,1.175,90,0.018,91,0.018,94,2.74,99,3.323,106,3.454,117,3.757,121,4.737,152,2.999,153,5.615,154,2.34,162,2.999,163,2.999,168,2.999,177,4.416,178,4.416,179,5.568,180,4.141,181,2.524,182,3.323,183,4.416,184,3.757,185,4.416,186,4.416,187,6.402,188,4.416,189,4.416,190,4.416,191,5.568,192,4.416,193,4.416,194,4.416,195,3.757,196,3.757,197,4.416,198,4.416,199,4.416,200,4.416,201,4.416,202,4.416,203,4.416,204,4.416]],["title/injectables/AuthenticationService.html",[25,1.253,205,1.253]],["body/injectables/AuthenticationService.html",[3,0.26,4,0.23,9,0.23,14,2.041,19,0.292,23,1.025,25,1.826,26,1.321,28,0.856,29,0.023,30,0.766,31,0.26,32,0.709,40,0.884,41,0.664,43,0.26,44,0.709,45,1.775,77,1.088,90,0.016,91,0.016,148,3.278,205,1.826,206,2.041,207,3.278,208,1.204,209,5.713,210,6.08,211,6.08,212,4.575,213,3.278,214,5.528,215,3.853,216,3.853,217,1.435,218,3.923,219,3.853,220,3.545,221,3.853,222,3.853,223,5.098,224,3.853,225,3.853,226,1.9,227,1.025,228,1.9,229,0.037,230,2.202,231,2.009,232,1.785,233,5.098,234,3.853,235,3.853,236,3.853,237,3.853,238,3.163,239,3.853,240,3.853,241,3.853,242,3.278,243,3.853,244,3.853,245,2.899,246,3.853,247,3.853,248,3.278,249,3.853,250,3.853,251,1.663,252,1.56,253,3.853,254,3.853,255,2.899,256,3.853,257,3.853,258,2.616,259,3.853,260,3.853]],["title/components/CalanderComponent.html",[0,0.42,57,0.931]],["body/components/CalanderComponent.html",[0,0.508,1,0.601,2,1.104,3,0.153,4,0.135,5,0.762,6,0.762,7,0.762,8,0.762,9,0.135,11,0.676,12,2.217,13,2.088,15,1.172,17,1.172,19,0.171,20,0.64,23,1.127,26,1.361,28,1.205,29,0.023,30,0.876,31,0.426,32,0.998,34,1.517,35,1.428,37,0.533,40,0.718,41,0.389,43,0.153,44,0.416,50,0.676,51,1.104,52,1.172,53,0.762,54,1.631,55,0.762,56,0.762,57,1.265,58,0.762,59,0.601,60,0.762,61,1.172,62,0.601,63,0.82,64,0.601,65,1.123,66,0.762,67,0.601,68,0.762,69,0.601,70,0.762,71,0.566,72,1.604,73,0.601,74,1.172,75,0.762,76,0.566,77,0.638,78,0.601,79,0.762,80,0.566,81,0.638,82,0.638,83,0.566,84,0.676,85,0.566,86,0.601,87,0.676,88,0.762,89,0.762,90,0.011,91,0.011,97,1.114,130,1.114,131,1.197,208,0.82,217,1.28,226,1.114,229,0.022,231,1.631,232,1.343,245,3.579,261,1.922,262,1.601,263,4.235,264,4.235,265,4.235,266,3.475,267,2.876,268,1.966,269,3.475,270,4.235,271,4.235,272,2.956,273,2.956,274,3.475,275,3.475,276,3.475,277,3.475,278,1.841,279,3.579,280,2.52,281,3.475,282,2.615,283,4.756,284,3.475,285,2.259,286,1.601,287,2.259,288,4.945,289,2.259,290,2.421,291,2.259,292,1.922,293,2.023,294,2.259,295,1.7,296,1.922,297,3.682,298,2.956,299,2.956,300,2.259,301,2.156,302,2.259,303,1.407,304,2.259,305,0.915,306,3.475,307,4.756,308,2.259,309,2.259,310,1.612,311,2.259,312,2.259,313,2.259,314,2.259,315,3.475,316,2.259,317,3.475,318,1.291,319,1.7,320,2.259,321,2.259,322,4.235,323,2.259,324,2.52,325,3.579,326,1.7,327,2.259,328,2.259,329,1.922,330,1.291,331,1.197,332,2.421,333,1.7,334,2.615,335,2.259,336,2.259,337,2.259,338,2.36,339,2.259,340,1.7,341,2.259,342,2.259,343,1.7,344,2.259,345,2.259,346,2.259,347,2.259,348,2.259,349,2.259,350,1.922,351,2.259,352,2.259,353,1.922,354,1.922,355,1.922,356,2.259,357,2.259,358,2.259,359,2.259,360,1.7,361,2.259,362,2.259,363,1.534,364,2.259,365,2.259,366,2.259,367,1.922,368,1.922,369,2.259,370,2.956,371,5.134,372,2.259,373,1.922,374,2.259,375,2.259,376,1.7,377,2.259,378,2.259,379,1.7,380,2.259,381,1.922,382,1.7,383,2.956,384,1.7,385,2.259,386,3.187,387,3.579,388,2.259,389,2.259,390,2.259,391,2.259,392,3.475,393,3.475,394,1.922,395,2.259,396,2.259,397,2.259]],["title/interfaces/CalanderEvent.html",[229,0.034,286,1.612]],["body/interfaces/CalanderEvent.html",[3,0.304,4,0.268,9,0.268,19,0.34,20,1.037,29,0.023,31,0.477,32,1.037,37,1.598,40,0.788,43,0.381,90,0.018,91,0.018,227,1.715,229,0.06,251,2.864,252,2.61,286,2.595,293,2.425,303,2.61,305,2.61,330,2.572,331,2.383,332,2.572,398,1.611,399,1.517,400,3.999,401,3.684,402,3.827,403,3.055,404,3.827,405,3.827]],["title/interfaces/CalanderEventColor.html",[229,0.034,403,2.376]],["body/interfaces/CalanderEventColor.html",[3,0.327,4,0.289,9,0.289,19,0.366,20,1.084,29,0.023,31,0.429,37,1.391,40,0.824,43,0.398,63,1.5,90,0.019,91,0.019,227,1.567,229,0.062,251,2.542,252,1.959,286,2.927,293,2.109,303,1.959,305,1.959,330,2.765,331,2.562,332,3.631,398,1.732,399,1.631,400,3.001,401,3.367,402,4.115,403,4,404,4.115,405,4.115,406,6.351]],["title/injectables/CalendarService.html",[205,1.253,407,2.171]],["body/injectables/CalendarService.html",[3,0.174,4,0.154,9,0.154,14,1.364,19,0.195,23,0.685,26,1.234,28,1.312,29,0.024,30,0.888,31,0.427,32,1.087,37,0.608,40,0.826,41,0.444,43,0.174,44,0.474,45,1.186,65,0.608,90,0.012,91,0.012,147,1.597,205,1.374,206,1.364,208,0.906,217,1.346,218,3.538,220,3.374,226,1.27,227,1.572,228,1.27,229,0.044,230,1.472,231,1.877,232,1.61,238,2.846,251,2.461,252,1.554,258,2.606,267,3.452,268,1.547,280,1.364,286,3.051,293,0.922,303,2.059,305,2.059,330,1.472,331,1.364,333,1.937,400,2.846,401,2.194,407,2.381,408,2.19,409,3.837,410,3.837,411,3.837,412,3.837,413,3.837,414,3.837,415,1.748,416,3.452,417,2.575,418,2.606,419,3.837,420,2.575,421,4.587,422,3.837,423,4.092,424,2.575,425,2.575,426,3.837,427,2.575,428,3.837,429,2.059,430,2.575,431,3.837,432,2.575,433,3.837,434,2.575,435,2.888,436,1.937,437,1.937,438,3.826,439,1.748,440,2.19,441,1.937,442,1.937,443,1.937,444,1.937,445,1.937,446,2.19,447,2.19,448,1.364,449,2.575,450,2.575,451,2.575,452,2.575,453,2.575,454,2.575,455,2.575,456,4.587,457,3.452,458,4.587,459,2.575,460,2.575,461,3.837,462,3.837,463,3.837,464,3.837,465,3.115,466,2.575,467,2.575,468,3.265,469,3.837,470,2.575,471,3.265,472,3.265,473,3.265,474,3.265,475,3.265,476,3.837,477,2.575,478,3.265,479,2.575,480,2.575,481,2.575,482,1.472,483,2.575,484,2.575,485,2.575,486,2.575,487,2.575,488,2.575,489,2.575,490,2.575,491,2.575,492,2.575,493,2.575,494,2.575,495,2.575,496,2.575,497,1.937,498,2.575,499,1.937,500,2.575,501,2.575,502,2.575,503,2.575,504,2.888,505,2.575,506,2.575,507,2.888,508,3.837,509,1.748,510,2.575,511,1.937,512,2.575]],["title/components/ClassificationComponentComponent.html",[0,0.42,59,0.931]],["body/components/ClassificationComponentComponent.html",[0,0.669,1,0.726,2,1.272,3,0.184,4,0.163,5,0.92,6,0.92,7,0.92,8,0.92,9,0.163,11,0.817,12,2.288,13,2.156,15,1.35,17,1.35,19,0.206,20,0.737,23,0.726,26,1.289,28,1.162,29,0.023,30,0.875,31,0.407,32,0.962,34,1.434,35,1.35,40,0.731,41,0.47,43,0.184,44,0.873,45,1.257,50,0.817,51,1.272,52,1.35,53,0.92,54,1.661,55,0.92,56,0.92,57,0.726,58,0.92,59,1.391,60,2.159,61,1.35,62,0.726,63,0.644,64,0.726,65,1.234,66,0.92,67,0.726,68,0.92,69,0.726,70,0.92,71,0.684,72,1.763,73,0.726,74,0.92,75,0.92,76,0.684,77,0.77,78,0.726,79,0.92,80,0.684,81,0.77,82,0.77,83,0.684,84,0.817,85,0.684,86,0.726,87,0.817,88,0.92,89,0.92,90,0.013,91,0.013,171,4.739,172,4.739,208,0.945,217,1.234,226,1.345,229,0.026,231,0.867,232,1.34,262,1.845,278,2.122,282,3.013,290,3.328,310,1.99,324,2.122,325,3.013,363,3.222,513,3.908,514,2.052,515,2.944,516,4.037,517,3.407,518,4.004,519,2.77,520,4.004,521,4.004,522,4.004,523,4.004,524,2.727,525,2.944,526,4.004,527,2.32,528,2.32,529,2.32,530,2.727,531,2.727,532,2.968,533,2.727,534,2.727,535,2.727,536,2.727,537,2.727,538,1.845,539,1.975,540,2.122,541,1.975,542,2.727,543,2.727,544,1.345,545,1.257,546,1.257,547,2.727,548,2.727,549,2.727,550,2.727,551,2.727,552,2.727,553,2.727,554,2.727,555,2.727,556,2.727,557,2.727,558,2.712,559,2.727,560,4.745,561,2.32,562,2.727,563,2.727,564,2.727,565,2.727,566,2.727,567,4.004,568,4.004,569,3.407,570,3.407,571,3.407,572,3.244,573,3.407,574,4.953]],["title/interfaces/ClassificationInterface.html",[229,0.034,538,1.612]],["body/interfaces/ClassificationInterface.html",[3,0.317,4,0.28,9,0.28,19,0.355,20,1.063,29,0.023,31,0.423,43,0.462,90,0.018,91,0.018,229,0.065,398,1.677,399,1.58,532,3.502,538,2.661,539,3.225,540,3.464,541,3.225,544,2.31,545,2.158,546,2.158,575,2.906,576,2.906,577,2.906,578,2.906,579,3.885,580,2.906,581,2.482,582,2.906,583,2.482,584,2.906,585,2.906,586,2.482]],["title/components/EventComponentComponent.html",[0,0.42,62,0.931]],["body/components/EventComponentComponent.html",[0,0.701,1,0.818,2,1.387,3,0.208,4,0.183,5,1.037,6,1.037,7,1.037,8,1.037,9,0.183,11,0.921,12,2.329,13,2.194,15,1.473,17,1.473,19,0.233,23,1.162,24,1.417,25,1.818,26,1.22,28,1.128,29,0.023,30,0.877,31,0.395,32,0.934,33,1.417,40,0.773,41,0.53,43,0.208,44,0.566,46,1.417,50,0.921,51,1.387,52,1.473,53,1.037,54,1.757,55,1.037,56,1.037,57,0.818,58,1.037,59,0.818,60,1.037,61,1.473,62,1.471,63,1.586,64,0.818,65,1.305,66,1.037,67,0.818,68,1.037,69,0.818,70,1.037,71,0.771,72,1.864,73,0.818,74,1.037,75,1.037,76,0.771,77,0.868,78,0.818,79,1.037,80,0.771,81,0.868,82,0.868,83,0.771,84,0.921,85,0.771,86,1.553,87,0.921,88,1.037,89,1.037,90,0.014,91,0.014,138,4.564,139,4.564,208,1.031,217,1.031,229,0.03,268,1.473,278,2.313,301,1.907,310,1.662,324,2.69,513,3.763,514,2.313,516,4.32,517,3.715,528,2.616,529,3.715,587,4.366,588,4.366,589,4.366,590,3.448,591,2.929,592,2.172,593,3.074,594,3.074,595,3.074,596,3.074,597,2.088,598,2.088,599,2.616,600,3.074,601,3.074,602,3.074,603,4.366,604,3.074,605,3.074,606,3.074,607,3.285,608,2.965,609,3.285,610,3.285,611,3.285,612,4.366,613,3.285,614,3.285,615,4.366,616,4.366]],["title/interfaces/EventInterface.html",[229,0.034,592,1.253]],["body/interfaces/EventInterface.html",[3,0.314,4,0.278,9,0.278,19,0.352,20,1.058,29,0.023,30,0.938,31,0.468,32,1.2,37,1.683,43,0.314,90,0.018,91,0.018,229,0.045,252,2.641,293,2.335,398,1.665,399,1.568,586,2.464,592,2.059,608,4.239,617,2.885,618,3.873,619,4.697,620,4.697,621,3.568,622,4.65,623,4.65,624,4.65,625,4.65,626,4.65]],["title/interfaces/EventPageInterface.html",[229,0.034,627,2.376]],["body/interfaces/EventPageInterface.html",[3,0.341,4,0.301,9,0.301,19,0.382,20,1.113,29,0.023,31,0.409,40,0.846,43,0.341,63,1.193,87,2.009,90,0.019,91,0.019,229,0.063,280,3.429,398,1.809,399,1.704,592,2.318,627,4.106,628,3.801,629,4.015,630,5.051,631,3.801]],["title/interfaces/GenreInterface.html",[229,0.034,583,1.854]],["body/interfaces/GenreInterface.html",[3,0.326,4,0.288,9,0.288,19,0.365,20,1.082,29,0.023,31,0.326,43,0.465,90,0.019,91,0.019,229,0.066,398,1.728,399,1.627,532,3.439,538,2.223,539,2.38,540,2.556,541,2.38,544,2.38,545,2.223,546,2.223,575,2.993,576,2.993,577,2.993,578,2.993,579,4.098,580,2.993,581,2.556,582,2.993,583,3.116,584,2.993,585,2.993,586,2.556,632,6.344]],["title/components/GroupCreateComponent.html",[0,0.42,64,0.931]],["body/components/GroupCreateComponent.html",[0,0.482,1,0.553,2,1.035,3,0.14,4,0.124,5,0.7,6,0.7,7,0.7,8,0.7,9,0.124,11,0.622,12,2.182,13,2.056,15,1.098,17,1.098,19,0.157,20,0.599,23,0.866,24,0.957,25,1.438,26,1.325,28,0.723,29,0.023,30,0.896,31,0.394,32,0.964,33,0.957,34,1.438,35,1.354,37,0.49,40,0.793,41,0.358,43,0.14,44,0.382,46,0.957,50,0.622,51,1.035,52,1.098,53,0.7,54,1.664,55,0.7,56,0.7,57,0.553,58,0.7,59,0.553,60,0.7,61,1.098,62,0.553,63,1.376,64,1.21,65,1.54,66,0.7,67,0.553,68,0.7,69,0.553,70,0.7,71,0.521,72,1.533,73,0.553,74,0.7,75,0.7,76,0.521,77,0.586,78,0.553,79,0.7,80,0.521,81,0.586,82,0.586,83,0.521,84,0.622,85,0.521,86,1.068,87,0.622,88,0.7,89,0.7,90,0.01,91,0.01,97,1.024,130,1.024,131,1.1,133,1.563,154,3.396,169,4.822,208,0.769,217,1.166,227,0.866,228,1.024,229,0.032,231,0.66,232,1.283,262,1.5,268,2.05,278,1.725,290,1.861,293,1.628,303,1.318,305,1.318,310,1.879,318,2.599,319,2.45,324,1.725,326,1.563,515,2.491,519,2.409,590,2.727,591,2.409,592,1.876,598,1.41,599,1.767,617,1.288,618,2.82,633,3.396,634,1.767,635,2.45,636,4.015,637,3.255,638,4.015,639,2.211,640,2.02,641,3.416,642,4.015,643,3.255,644,4.546,645,3.868,646,4.546,647,3.255,648,3.255,649,4.937,650,3.021,651,2.599,652,3.255,653,3.868,654,2.077,655,2.077,656,2.077,657,2.077,658,2.077,659,2.077,660,2.077,661,2.077,662,2.077,663,2.077,664,2.77,665,2.077,666,2.077,667,3.416,668,2.77,669,2.077,670,3.255,671,4.546,672,5.67,673,3.255,674,3.255,675,3.255,676,3.255,677,3.255,678,5.476,679,3.255,680,2.77,681,2.077,682,2.077,683,2.077,684,2.077,685,1.767,686,1.767,687,2.077,688,1.767,689,1.41,690,2.077,691,2.077,692,2.077,693,2.077,694,1.767,695,2.077,696,1.41,697,1.767,698,2.077,699,1.563,700,2.077,701,2.077,702,2.077,703,2.077,704,2.077,705,2.077,706,2.077,707,3.255,708,2.077,709,3.255,710,2.077,711,2.077,712,2.077,713,2.077,714,2.077,715,2.077,716,2.077,717,2.077,718,2.077,719,2.077,720,2.077,721,2.077,722,2.077,723,2.077,724,1.767,725,2.077,726,2.077,727,2.077,728,2.077,729,2.077,730,1.767,731,2.077,732,2.77,733,3.255,734,3.255,735,3.255]],["title/components/GroupDetailComponent.html",[0,0.42,67,0.931]],["body/components/GroupDetailComponent.html",[0,0.494,1,0.575,2,1.067,3,0.146,4,0.129,5,0.729,6,0.729,7,0.729,8,0.729,9,0.129,11,0.647,12,2.198,13,2.071,15,1.132,17,1.132,19,0.164,20,0.618,23,0.893,24,0.995,25,1.475,26,1.336,28,0.915,29,0.023,30,0.756,31,0.399,32,0.758,33,0.995,34,1.801,35,1.696,40,0.859,41,0.372,43,0.146,44,0.398,46,0.995,50,0.647,51,1.067,52,1.132,53,0.729,54,1.476,55,0.729,56,0.729,57,0.575,58,0.729,59,0.575,60,0.729,61,1.132,62,0.575,63,1.097,64,0.575,65,1.562,66,0.729,67,1.236,68,0.729,69,0.575,70,0.729,71,0.542,72,1.566,73,0.575,74,0.729,75,0.729,76,0.542,77,0.61,78,0.575,79,0.729,80,0.542,81,0.61,82,0.61,83,0.542,84,0.647,85,0.542,86,0.575,87,0.647,88,0.729,89,0.729,90,0.011,91,0.011,97,1.066,126,1.467,130,1.066,131,1.145,154,3.423,160,4.861,196,2.856,208,0.793,217,1.312,227,1.236,228,1.066,229,0.04,231,1.067,232,0.61,245,3.099,251,0.932,262,1.547,268,1.696,272,2.856,278,1.779,279,2.526,280,2.821,286,1.898,288,3.099,292,1.838,293,1.801,295,1.625,303,1.36,305,1.36,310,1.914,324,1.779,330,1.235,331,1.145,332,2.354,333,1.625,353,1.838,354,1.838,355,1.838,400,2.881,401,1.235,407,2.881,429,1.36,448,1.145,504,2.526,515,2.555,519,2.182,558,2.354,598,1.467,621,1.919,633,3.423,640,2.083,650,3.099,651,2.655,685,1.838,696,1.467,736,1.838,737,4.118,738,3.357,739,2.856,740,4.118,741,3.504,742,3.099,743,3.357,744,4.118,745,3.504,746,5.03,747,4.728,748,3.357,749,2.16,750,2.16,751,2.16,752,2.16,753,2.16,754,2.16,755,2.16,756,2.16,757,2.16,758,2.16,759,2.16,760,2.16,761,3.357,762,2.16,763,2.16,764,1.467,765,2.16,766,2.16,767,2.16,768,1.838,769,2.16,770,2.16,771,2.16,772,2.16,773,1.838,774,1.838,775,1.838,776,1.838,777,2.16,778,2.16,779,2.16,780,1.838,781,2.16,782,2.16,783,2.16,784,2.16,785,2.16,786,2.16,787,2.16,788,2.16,789,2.16,790,2.16,791,1.838,792,1.838,793,3.785,794,1.838,795,1.467,796,1.838,797,1.838,798,1.838,799,2.16,800,2.16,801,2.16,802,2.16,803,2.856,804,3.357,805,2.16,806,2.16,807,4.644,808,4.644,809,3.357,810,2.856,811,3.357,812,2.856,813,2.856,814,2.856,815,2.856,816,2.16]],["title/interfaces/GroupInterface.html",[229,0.034,429,1.417]],["body/interfaces/GroupInterface.html",[3,0.293,4,0.259,9,0.259,19,0.328,20,1.013,29,0.023,30,0.909,31,0.47,32,1.013,37,1.656,40,0.77,43,0.293,63,1.502,90,0.018,91,0.018,227,1.785,229,0.059,251,1.872,252,2.576,293,2.44,301,3.752,398,1.553,399,1.463,429,2.229,448,2.298,482,3.456,586,2.298,592,2.165,795,4.319,817,4.786,818,5.411,819,4.106,820,4.337,821,4.337,822,4.337]],["title/components/GroupListComponent.html",[0,0.42,69,0.931]],["body/components/GroupListComponent.html",[0,0.643,1,0.903,2,1.487,3,0.229,4,0.202,5,1.144,6,1.144,7,1.144,8,1.144,9,0.202,11,1.016,12,2.36,13,2.224,15,1.578,17,1.578,19,0.257,26,1.119,28,0.754,29,0.023,30,0.805,31,0.362,32,0.624,40,0.654,41,0.585,43,0.229,44,0.624,50,1.016,51,1.487,52,1.578,53,1.144,54,1.834,55,1.144,56,1.144,57,0.903,58,1.144,59,0.903,60,1.144,61,1.578,62,0.903,63,0.801,64,0.903,65,1.614,66,1.144,67,0.903,68,1.144,69,1.536,70,1.144,71,0.851,72,1.946,73,0.903,74,1.806,75,1.144,76,0.851,77,0.958,78,0.903,79,1.144,80,0.851,81,0.958,82,0.958,83,0.851,84,1.016,85,0.851,86,0.903,87,1.016,88,1.144,89,1.144,90,0.015,91,0.015,154,3.058,155,4.343,208,1.104,217,0.801,229,0.033,232,0.958,278,2.479,282,3.52,290,3.061,310,1.291,324,2.479,325,3.52,429,2.337,448,1.798,482,2.674,633,3.058,823,2.886,824,5.354,825,4.678,826,4.678,827,3.52,828,5.354,829,3.393,830,3.393,831,3.393,832,3.393,833,3.393,834,3.393,835,3.393,836,4.678,837,4.678,838,4.678,839,4.678,840,4.678,841,3.98]],["title/components/GroupPageComponent.html",[0,0.42,71,0.877]],["body/components/GroupPageComponent.html",[0,0.528,1,0.639,2,1.157,3,0.246,4,0.143,5,0.81,6,0.81,7,0.81,8,0.81,9,0.143,11,0.719,12,2.241,13,2.111,15,1.228,17,1.228,19,0.182,20,0.67,23,0.969,24,1.107,25,1.576,26,1.351,28,0.977,29,0.023,30,0.793,31,0.411,32,0.971,33,1.107,34,1.576,35,1.484,37,0.567,40,0.807,41,0.414,42,1.373,43,0.162,44,0.442,46,1.107,50,0.719,51,1.157,52,1.228,53,0.81,54,1.677,55,0.81,56,0.81,57,0.639,58,0.81,59,0.639,60,0.81,61,1.228,62,0.639,63,0.567,64,0.639,65,1.556,66,0.81,67,0.639,68,0.81,69,0.639,70,0.81,71,1.231,72,1.656,73,0.639,74,0.81,75,0.81,76,0.602,77,0.678,78,0.639,79,0.81,80,0.602,81,0.678,82,0.678,83,0.602,84,0.719,85,0.602,86,0.639,87,1.318,88,0.81,89,0.81,90,0.012,91,0.012,97,1.185,130,1.185,131,1.273,141,2.043,154,3.462,181,1.373,208,0.86,217,1.246,227,1.306,229,0.035,231,0.763,232,1.028,252,0.973,262,1.678,268,2.053,290,2.515,310,2.114,318,3.175,319,2.741,326,1.807,338,2.473,363,1.631,429,2.137,482,1.373,499,2.741,515,2.73,519,2.601,558,1.373,633,3.462,635,2.741,639,2.473,640,2.26,641,3.743,650,3.31,651,2.807,653,3.099,664,3.099,667,3.743,668,3.099,686,2.043,689,1.631,742,3.694,815,3.099,817,2.741,827,3.694,842,1.373,843,4.399,844,2.73,845,2.26,846,3.642,847,3.099,848,4.399,849,3.642,850,3.642,851,4.91,852,2.741,853,3.743,854,3.099,855,2.402,856,2.402,857,2.402,858,2.402,859,2.402,860,2.402,861,2.402,862,1.807,863,1.631,864,1.807,865,1.807,866,2.043,867,2.043,868,2.043,869,1.49,870,2.402,871,2.402,872,2.402,873,2.402,874,2.043,875,2.402,876,2.402,877,2.402,878,2.402,879,2.402,880,2.402,881,2.402,882,2.402,883,2.402,884,2.402,885,2.402,886,3.642,887,3.642,888,2.043,889,2.402,890,2.402,891,2.402,892,2.043,893,3.642]],["title/injectables/GroupService.html",[205,1.253,651,2]],["body/injectables/GroupService.html",[3,0.132,4,0.116,9,0.116,14,1.032,19,0.147,23,0.518,26,1.248,28,1.327,29,0.024,30,0.983,31,0.404,32,1.099,36,1.656,37,1.382,40,0.747,41,0.336,43,0.132,44,0.358,45,0.897,63,1.13,65,1.348,90,0.01,91,0.01,147,1.208,205,1.108,206,1.032,208,0.73,217,1.382,218,3.878,220,2.969,226,0.96,227,1.682,228,0.96,229,0.037,230,1.113,231,1.931,232,1.612,238,3.543,242,1.656,251,2.578,252,1.776,258,2.101,268,1.479,293,0.697,303,0.788,305,0.788,318,1.769,340,1.465,360,2.328,379,1.465,415,1.322,416,2.978,418,2.101,423,3.601,429,2.667,435,2.328,436,1.465,437,1.465,438,2.897,439,1.322,440,1.656,441,1.465,442,1.465,443,1.465,444,1.465,445,1.465,446,1.656,448,1.032,457,2.328,465,3.46,468,1.656,471,1.656,472,2.632,473,1.656,474,1.656,475,1.656,478,1.656,482,2.507,497,1.465,499,2.328,504,1.465,507,4.02,509,3.46,511,3.3,592,1.571,607,1.465,608,1.322,609,1.465,610,1.465,611,1.465,613,1.465,617,1.208,618,1.92,619,1.465,620,1.465,621,1.113,645,2.632,651,1.769,730,1.656,732,1.656,741,2.632,742,2.328,793,1.465,795,2.614,817,3.834,818,3.731,819,2.614,847,2.632,894,1.656,895,3.094,896,3.094,897,3.094,898,3.094,899,3.094,900,3.094,901,3.094,902,3.85,903,2.978,904,1.947,905,3.094,906,1.947,907,3.094,908,1.947,909,3.094,910,1.947,911,1.947,912,3.094,913,1.947,914,3.094,915,1.947,916,3.094,917,1.947,918,3.094,919,1.947,920,3.094,921,1.947,922,3.094,923,1.947,924,3.094,925,1.947,926,1.947,927,1.947,928,3.094,929,1.947,930,1.947,931,1.947,932,1.947,933,1.947,934,1.947,935,1.947,936,1.947,937,1.947,938,1.947,939,1.947,940,1.947,941,1.947,942,1.947,943,1.947,944,1.947,945,1.947,946,3.094,947,1.947,948,1.656,949,1.947,950,1.656,951,1.947,952,1.947,953,1.947,954,1.947,955,1.947,956,1.947,957,1.947,958,1.947,959,1.947,960,1.947,961,1.947,962,1.947,963,1.947,964,5.342,965,3.094,966,1.947,967,1.947,968,1.656,969,1.947,970,1.656,971,1.947,972,1.947,973,1.947,974,1.656,975,1.947,976,3.094,977,4.786,978,4.786,979,1.947,980,1.947,981,3.85,982,1.947,983,1.947,984,1.947,985,1.947,986,3.094,987,1.947,988,3.094,989,1.947,990,1.947,991,1.947,992,1.947,993,1.947,994,1.947,995,1.656,996,1.947,997,1.947,998,1.947,999,1.947,1000,1.947,1001,1.947,1002,1.947,1003,1.947,1004,1.947,1005,1.947,1006,1.947,1007,1.947]],["title/pipes/GroupmemberPipePipe.html",[104,2.171,1008,2.171]],["body/pipes/GroupmemberPipePipe.html",[3,0.328,4,0.29,9,0.29,11,1.456,26,1.015,28,1.08,29,0.023,30,0.957,31,0.328,32,0.894,37,1.395,40,0.826,41,0.838,43,0.328,44,0.894,90,0.019,91,0.019,104,3.666,165,4.446,208,1.148,217,1.148,227,1.694,229,0.047,231,1.545,262,2.24,482,2.778,633,3.13,841,5.026,869,3.016,892,4.135,1008,3.666,1009,3.657,1010,4.135,1011,3.301,1012,4.861,1013,4.861,1014,5.026,1015,4.861]],["title/pipes/GrouppipePipe.html",[105,2.171,1008,2.171]],["body/pipes/GrouppipePipe.html",[3,0.316,4,0.279,9,0.279,11,1.399,26,0.976,28,1.038,29,0.023,30,0.94,31,0.316,32,0.86,35,1.576,40,0.875,41,0.805,43,0.316,44,0.86,90,0.018,91,0.018,105,3.578,208,1.103,217,1.103,227,1.664,229,0.056,231,1.833,251,2.489,262,2.153,301,3.578,429,2.717,633,3.056,868,3.975,869,2.899,974,3.975,1008,3.578,1009,3.516,1011,3.173,1014,4.906,1016,3.975,1017,5.767,1018,4.672,1019,5.767,1020,4.672,1021,4.672,1022,4.672,1023,4.672,1024,4.672,1025,4.672]],["title/interfaces/IdClassType.html",[229,0.034,545,1.612]],["body/interfaces/IdClassType.html",[3,0.326,4,0.288,9,0.288,19,0.365,20,1.082,29,0.023,31,0.446,43,0.465,90,0.019,91,0.019,229,0.066,398,1.728,399,1.627,532,3.34,538,2.223,539,2.38,540,2.556,541,2.38,544,3.13,545,2.71,546,2.223,575,2.993,576,2.993,577,2.993,578,2.993,579,4.098,580,2.993,581,2.556,582,2.993,583,2.556,584,2.993,585,2.993,586,2.556]],["title/interfaces/IdName.html",[229,0.034,532,1.726]],["body/interfaces/IdName.html",[3,0.322,4,0.284,9,0.284,19,0.361,20,1.074,29,0.023,30,0.948,31,0.394,37,1.553,43,0.464,90,0.019,91,0.019,229,0.065,252,2.555,398,1.706,399,1.607,532,3.328,538,2.195,539,2.35,540,2.524,541,2.35,544,2.35,545,2.195,546,2.195,575,2.956,576,2.956,577,2.956,578,2.956,579,3.915,580,2.956,581,2.524,582,2.956,583,2.524,584,2.956,585,2.956,586,2.524]],["title/components/ListEventsComponent.html",[0,0.42,73,0.931]],["body/components/ListEventsComponent.html",[0,0.672,1,0.984,2,1.576,3,0.25,4,0.221,5,1.247,6,1.247,7,1.247,8,1.247,9,0.221,11,1.108,12,2.385,13,2.248,15,1.673,17,1.673,19,0.28,26,1.036,29,0.023,30,0.745,31,0.335,34,1.776,35,1.673,37,0.873,40,0.694,41,0.637,43,0.25,44,0.681,50,1.108,51,1.576,52,1.673,53,1.247,54,1.901,55,1.247,56,1.247,57,0.984,58,1.247,59,0.984,60,1.247,61,1.673,62,0.984,63,0.873,64,0.984,65,1.412,66,1.247,67,0.984,68,1.247,69,0.984,70,1.247,71,0.927,72,2.017,73,1.591,74,2.249,75,1.247,76,0.927,77,1.044,78,0.984,79,1.247,80,0.927,81,1.044,82,1.044,83,0.927,84,1.108,85,0.927,86,1.489,87,1.108,88,1.247,89,1.247,90,0.016,91,0.016,135,4.212,136,4.212,229,0.036,278,2.628,280,3.169,324,2.966,513,3.473,592,1.776,597,2.511,631,2.783,1026,3.146,1027,5.597,1028,4.96,1029,3.698,1030,3.698,1031,2.783]],["title/components/LoginPageComponent.html",[0,0.42,76,0.877]],["body/components/LoginPageComponent.html",[0,0.605,1,0.808,2,1.375,3,0.205,4,0.181,5,1.024,6,1.024,7,1.024,8,1.024,9,0.181,11,0.909,12,2.325,13,2.19,15,1.459,17,1.459,19,0.382,23,1.151,25,1.968,26,1.053,28,0.674,29,0.023,30,0.758,31,0.205,32,0.559,40,0.705,41,0.523,42,1.735,43,0.205,44,0.559,50,0.909,51,1.375,52,1.459,53,1.024,54,1.747,55,1.024,56,1.024,57,0.808,58,1.024,59,0.808,60,1.024,61,1.459,62,0.808,63,0.717,64,0.808,65,1.298,66,1.024,67,0.808,68,1.024,69,0.808,70,1.024,71,0.761,72,1.854,73,0.808,74,1.024,75,1.024,76,1.378,77,1.794,78,0.808,79,1.024,80,0.761,81,0.857,82,0.857,83,0.761,84,0.909,85,0.761,86,0.808,87,1.51,88,1.024,89,1.024,90,0.014,91,0.014,168,3.732,181,1.735,208,1.022,212,4.136,213,2.583,214,3.681,217,1.022,251,1.31,268,1.7,310,1.647,376,2.284,382,2.284,384,2.284,386,2.284,387,3.256,394,2.583,572,1.883,842,1.735,844,3.128,845,2.685,852,3.256,853,4.29,863,2.061,874,2.583,1011,2.938,1032,4.676,1033,5.496,1034,4.372,1035,3.036,1036,2.284,1037,2.284,1038,3.036,1039,3.036,1040,3.036,1041,3.036,1042,3.036,1043,4.327,1044,4.327,1045,4.327,1046,4.327,1047,3.036,1048,3.681,1049,4.327,1050,3.036,1051,3.036,1052,4.327,1053,5.042,1054,4.327,1055,2.284,1056,3.036,1057,3.036,1058,3.036,1059,3.036,1060,3.036,1061,3.036,1062,3.036,1063,3.036,1064,2.583,1065,3.036,1066,2.583,1067,3.681,1068,3.036,1069,4.327,1070,3.036,1071,3.036,1072,3.036,1073,2.583,1074,3.036,1075,3.036,1076,4.327,1077,3.036,1078,3.036,1079,3.036]],["title/components/NavigationComponent.html",[0,0.42,78,0.931]],["body/components/NavigationComponent.html",[0,0.665,1,0.964,2,1.554,3,0.245,4,0.216,5,1.221,6,1.221,7,1.221,8,1.221,9,0.216,11,1.085,12,2.379,13,2.242,15,1.65,17,1.65,19,0.274,23,0.964,24,1.669,25,1.983,26,1.022,28,0.805,29,0.023,30,0.832,31,0.245,32,0.666,33,1.669,40,0.775,41,0.624,43,0.245,44,0.666,45,1.669,50,1.085,51,1.554,52,1.65,53,1.221,54,1.885,55,1.221,56,1.221,57,0.964,58,1.221,59,0.964,60,1.221,61,1.65,62,0.964,63,0.855,64,0.964,65,1.4,66,1.221,67,0.964,68,1.221,69,0.964,70,1.221,71,0.908,72,2,73,0.964,74,1.221,75,1.221,76,0.908,77,1.022,78,1.578,79,1.221,80,0.908,81,1.564,82,1.022,83,0.908,84,1.659,85,0.908,86,1.474,87,1.085,88,1.221,89,1.221,90,0.016,91,0.016,181,2.07,208,1.155,212,4.803,217,0.855,267,3.321,310,1.378,598,2.459,827,3.68,1034,4.661,1037,2.725,1080,3.081,1081,4.891,1082,5.538,1083,4.891,1084,3.622,1085,3.622,1086,3.622,1087,3.622,1088,3.622,1089,3.68,1090,4.161,1091,4.891]],["title/injectables/NotificationService.html",[205,1.253,903,2.376]],["body/injectables/NotificationService.html",[3,0.236,4,0.209,9,0.209,14,1.853,19,0.265,23,0.931,26,1.221,28,1.299,29,0.023,30,0.878,31,0.395,32,1.076,37,1.445,40,0.761,41,0.603,43,0.236,44,0.644,45,1.611,51,1.518,65,1.128,90,0.015,91,0.015,147,2.17,205,1.711,206,1.853,208,1.128,217,1.284,218,3.919,229,0.034,230,1.999,231,1.729,232,0.987,238,2.17,268,1.835,293,2.093,338,2.375,415,2.375,416,3.969,418,3.243,429,2.618,435,2.632,436,2.632,437,2.632,438,3.594,448,1.853,457,2.632,465,2.375,497,3.594,618,2.17,639,3.969,803,4.064,819,3.694,903,3.243,1089,3.594,1090,4.064,1092,2.975,1093,4.776,1094,4.776,1095,4.776,1096,3.497,1097,4.776,1098,3.497,1099,4.776,1100,3.497,1101,4.776,1102,5.845,1103,3.497,1104,3.497,1105,3.497,1106,3.497,1107,3.497,1108,3.497,1109,4.776,1110,4.776,1111,4.776,1112,5.845,1113,5.845,1114,3.497,1115,3.497,1116,4.776,1117,3.497,1118,3.497,1119,3.497,1120,3.497,1121,3.497,1122,4.776,1123,3.497,1124,3.497,1125,4.776,1126,4.776,1127,3.497,1128,3.497,1129,3.497,1130,3.497,1131,3.497,1132,3.497]],["title/interfaces/PageInterface.html",[229,0.034,629,2.171]],["body/interfaces/PageInterface.html",[3,0.338,4,0.298,9,0.298,19,0.378,20,1.106,29,0.023,31,0.452,43,0.338,90,0.019,91,0.019,229,0.048,297,4.889,398,1.79,399,1.686,629,3.728,1133,4.253,1134,5.482,1135,6.443,1136,6.443,1137,4.999,1138,4.999,1139,4.999,1140,4.999]],["title/components/PersonalCalenderPageComponent.html",[0,0.42,80,0.877]],["body/components/PersonalCalenderPageComponent.html",[0,0.485,1,0.559,2,1.043,3,0.142,4,0.125,5,0.708,6,0.708,7,0.708,8,0.708,9,0.125,11,0.629,12,2.186,13,2.06,15,1.107,17,1.107,19,0.159,20,0.604,23,0.874,24,0.967,25,1.448,26,1.328,28,1.016,29,0.023,30,0.791,31,0.419,32,1.17,33,0.967,34,1.448,35,1.364,37,0.955,40,0.769,41,0.362,42,1.2,43,0.142,44,0.604,46,0.967,49,2.471,50,0.629,51,1.043,52,1.107,53,0.708,54,1.859,55,0.708,56,0.708,57,0.559,58,0.708,59,0.559,60,0.708,61,1.107,62,0.559,63,1.172,64,0.559,65,1.08,66,0.708,67,0.559,68,0.708,69,0.559,70,0.708,71,0.526,72,1.542,73,0.559,74,0.708,75,0.708,76,0.526,77,0.593,78,0.559,79,0.708,80,1.146,81,1.607,82,1.991,83,0.526,84,0.629,85,0.526,86,0.559,87,1.211,88,0.708,89,0.708,90,0.01,91,0.01,97,1.035,130,1.035,131,1.112,162,4.362,208,0.775,217,1.172,227,0.874,229,0.032,231,1.285,232,1.291,262,1.513,268,1.107,273,2.793,279,2.471,280,1.74,286,2.425,288,3.043,293,1.176,296,1.786,297,3.573,298,2.793,299,2.793,301,1.302,303,1.852,305,1.852,310,1.889,331,1.112,332,1.877,363,1.425,367,1.786,368,1.786,370,1.786,400,2.837,401,1.877,407,2.837,509,2.229,515,2.509,519,2.423,558,1.2,614,2.471,635,1.58,640,2.037,689,1.425,696,1.425,724,1.786,739,2.793,745,3.44,764,1.425,768,1.786,773,1.786,774,1.786,775,1.786,776,1.786,780,1.786,791,1.786,792,1.786,793,3.734,794,1.786,795,1.425,796,1.786,797,1.786,798,1.786,810,3.89,812,2.793,813,2.793,814,2.793,842,1.2,844,2.509,845,2.037,862,1.58,864,1.58,865,1.58,869,1.302,1036,1.58,1141,5.464,1142,3.283,1143,4.573,1144,3.283,1145,3.283,1146,3.283,1147,2.099,1148,2.099,1149,2.099,1150,2.099,1151,2.099,1152,2.099,1153,2.099,1154,2.099,1155,2.099,1156,2.099,1157,2.099,1158,1.58,1159,2.099,1160,2.099,1161,2.099,1162,2.099,1163,1.58,1164,2.099,1165,2.099,1166,2.099,1167,2.099,1168,2.099,1169,2.099,1170,2.099,1171,2.099,1172,2.099,1173,2.099,1174,2.099,1175,2.099,1176,2.099,1177,2.099,1178,2.099,1179,2.099,1180,2.099,1181,1.786,1182,2.099,1183,2.099,1184,1.786,1185,2.099,1186,3.283,1187,2.099,1188,2.099,1189,2.099,1190,2.099,1191,2.099,1192,2.099,1193,2.099,1194,2.099,1195,2.099,1196,2.099,1197,2.099,1198,2.099,1199,2.099,1200,2.099,1201,2.099,1202,2.099,1203,2.099,1204,2.099,1205,2.099,1206,2.099,1207,2.099,1208,3.283]],["title/components/SearchPageComponent.html",[0,0.42,83,0.877]],["body/components/SearchPageComponent.html",[0,0.467,1,0.527,2,0.997,3,0.134,4,0.118,5,0.668,6,0.668,7,0.668,8,0.668,9,0.118,11,0.593,12,2.161,13,2.037,15,1.058,17,1.058,19,0.15,20,0.577,23,0.835,24,0.913,25,1.395,26,1.339,28,0.984,29,0.023,30,0.772,31,0.419,32,1.026,33,0.913,34,1.926,35,1.814,37,0.919,40,0.78,41,0.341,42,1.132,43,0.134,44,0.717,46,0.913,49,1.491,50,0.593,51,0.997,52,1.058,53,0.668,54,1.534,55,0.668,56,0.668,57,0.527,58,0.668,59,0.527,60,0.668,61,1.058,62,0.527,63,0.468,64,0.527,65,1.046,66,0.668,67,0.527,68,0.668,69,0.527,70,0.668,71,0.497,72,1.494,73,0.527,74,0.668,75,0.668,76,0.497,77,0.559,78,0.527,79,0.668,80,0.497,81,0.559,82,0.559,83,1.11,84,1.901,85,0.497,86,1.036,87,1.166,88,0.668,89,0.668,90,0.01,91,0.01,152,4.39,208,0.741,217,1.212,227,0.835,229,0.043,232,1.25,268,1.313,290,3.074,297,2.13,305,0.802,310,1.954,338,2.13,373,1.685,376,1.491,379,1.491,381,1.685,382,2.93,383,1.685,384,3.332,386,3.332,387,2.36,439,2.13,513,4.011,519,2.346,525,2.748,527,3.313,544,0.977,545,2.365,558,2.226,569,2.669,570,2.669,571,2.669,572,2.748,573,2.669,574,2.669,590,2.644,591,2.346,592,1.123,597,1.345,629,1.946,640,1.946,689,1.345,696,1.345,699,1.491,842,1.132,844,2.416,845,1.946,854,1.685,862,1.491,863,1.345,864,1.491,865,1.491,866,1.685,867,1.685,869,1.229,888,1.685,995,1.685,1011,1.345,1031,1.491,1036,2.36,1048,1.685,1055,1.491,1064,3.313,1066,2.669,1067,1.685,1073,1.685,1134,2.669,1184,1.685,1209,3.137,1210,3.137,1211,3.137,1212,3.137,1213,3.137,1214,3.137,1215,3.137,1216,3.137,1217,3.768,1218,3.137,1219,3.137,1220,3.894,1221,1.981,1222,1.981,1223,1.981,1224,1.981,1225,1.981,1226,1.981,1227,1.981,1228,3.137,1229,1.981,1230,1.981,1231,1.981,1232,1.981,1233,1.981,1234,1.981,1235,1.981,1236,1.685,1237,1.981,1238,1.981,1239,1.981,1240,1.981,1241,1.981,1242,1.981,1243,1.981,1244,1.981,1245,1.685,1246,1.981,1247,1.981,1248,1.981,1249,1.981,1250,1.981,1251,1.981,1252,1.981,1253,1.981,1254,1.981,1255,3.137,1256,3.137,1257,3.894,1258,3.137,1259,3.137,1260,3.894,1261,3.137,1262,1.981,1263,1.981,1264,1.981,1265,1.685,1266,1.981,1267,1.981,1268,1.981,1269,1.981,1270,1.981,1271,1.981,1272,1.981,1273,1.685,1274,1.981,1275,1.981,1276,2.36,1277,1.981,1278,1.981,1279,3.894,1280,1.981,1281,3.137,1282,3.894,1283,1.981,1284,1.981,1285,1.981,1286,1.981,1287,1.981,1288,1.981,1289,1.981,1290,1.981,1291,1.981,1292,3.137,1293,3.137,1294,3.137,1295,1.981,1296,1.981,1297,1.981,1298,1.981,1299,1.981,1300,1.981,1301,3.137,1302,1.981,1303,3.137,1304,1.981,1305,1.981,1306,1.981,1307,1.981,1308,1.981,1309,1.981,1310,1.981,1311,1.981]],["title/interfaces/SegmentInterface.html",[229,0.034,581,1.854]],["body/interfaces/SegmentInterface.html",[3,0.326,4,0.288,9,0.288,19,0.365,20,1.082,29,0.023,31,0.326,43,0.465,90,0.019,91,0.019,229,0.066,398,1.728,399,1.627,532,3.34,538,2.223,539,2.38,540,2.556,541,2.38,544,2.38,545,2.223,546,2.223,575,2.993,576,2.993,577,2.993,578,2.993,579,4.098,580,2.993,581,3.116,582,2.993,583,3.361,584,2.993,585,2.993,586,2.556,1312,6.344]],["title/injectables/TicketmasterService.html",[205,1.253,525,2.171]],["body/injectables/TicketmasterService.html",[3,0.186,4,0.164,9,0.164,14,1.459,19,0.208,20,0.742,23,0.733,26,1.261,28,1.167,29,0.024,30,0.79,31,0.408,32,0.967,34,0.986,35,0.929,37,1.127,40,0.866,41,0.475,43,0.186,44,0.507,45,1.269,54,2.039,90,0.013,91,0.013,126,1.87,144,2.343,158,2.343,181,1.575,205,1.445,206,1.459,208,0.952,217,1.24,220,3.259,226,1.359,229,0.039,230,1.575,231,2.111,232,1.704,268,1.886,293,1.709,295,2.073,318,3.003,329,2.343,334,2.073,350,3.432,439,1.87,525,2.503,538,1.269,539,1.359,541,1.359,546,1.269,558,2.306,561,3.432,621,2.306,627,3.241,628,2.073,639,2.739,747,5.135,1034,4.542,1217,4.06,1273,3.432,1276,2.073,1313,2.343,1314,4.034,1315,4.772,1316,4.034,1317,4.034,1318,4.034,1319,2.754,1320,5.253,1321,4.034,1322,4.034,1323,2.754,1324,2.754,1325,2.754,1326,2.754,1327,2.754,1328,2.754,1329,2.754,1330,2.754,1331,4.772,1332,4.034,1333,2.754,1334,3.035,1335,2.073,1336,2.754,1337,2.754,1338,2.754,1339,2.754,1340,2.754,1341,2.754,1342,2.754,1343,2.754,1344,4.034,1345,2.754,1346,2.754,1347,2.754,1348,2.754,1349,4.772,1350,2.754,1351,2.754,1352,2.754,1353,2.754,1354,2.754,1355,2.754,1356,2.754,1357,2.754,1358,2.754,1359,2.754,1360,2.754,1361,2.754,1362,2.754,1363,2.754,1364,2.754,1365,2.754,1366,2.754,1367,2.754,1368,2.754,1369,4.034,1370,2.754,1371,2.754,1372,2.754,1373,2.754,1374,4.034,1375,2.754,1376,4.034,1377,4.034,1378,4.034,1379,4.034,1380,4.034,1381,4.034,1382,4.034,1383,5.253,1384,4.034,1385,4.034,1386,4.034,1387,4.034,1388,4.034,1389,4.034,1390,4.034,1391,4.034,1392,4.034,1393,4.034,1394,4.034,1395,2.754,1396,2.754,1397,2.754,1398,2.754,1399,2.754,1400,2.754]],["title/interfaces/UserInterface.html",[227,0.931,229,0.034]],["body/interfaces/UserInterface.html",[3,0.34,4,0.3,9,0.3,19,0.38,20,1.109,29,0.022,30,1.006,31,0.436,37,1.685,43,0.34,90,0.019,91,0.019,227,1.604,228,2.479,229,0.049,252,2.712,255,5.039,398,1.8,399,1.695,1401,6.457]],["title/components/WatchlistPageComponent.html",[0,0.42,85,0.877]],["body/components/WatchlistPageComponent.html",[0,0.637,1,0.889,2,1.471,3,0.226,4,0.199,5,1.126,6,1.126,7,1.126,8,1.126,9,0.199,11,1,12,2.355,13,2.219,15,1.561,17,1.561,19,0.253,20,0.852,23,1.231,24,1.539,25,1.902,26,1.198,28,0.742,29,0.023,30,0.798,31,0.359,32,0.615,33,1.539,34,1.657,35,1.561,37,0.789,40,0.802,41,0.576,42,1.909,43,0.226,44,0.615,46,1.539,50,1,51,1.471,52,1.561,53,1.126,54,1.822,55,1.126,56,1.126,57,0.889,58,1.126,59,0.889,60,1.126,61,1.561,62,0.889,63,0.789,64,0.889,65,1.353,66,1.126,67,0.889,68,1.126,69,0.889,70,1.126,71,0.837,72,1.933,73,0.889,74,1.126,75,1.126,76,0.837,77,0.943,78,0.889,79,1.126,80,0.837,81,0.943,82,0.943,83,0.837,84,1,85,1.437,86,1.78,87,1.59,88,1.126,89,1.126,90,0.015,91,0.015,163,4.088,208,1.093,217,0.789,229,0.032,268,1.561,280,2.452,310,1.271,519,3.037,590,3.606,591,3.037,592,1.657,597,2.268,631,2.513,694,2.842,697,2.842,699,2.513,842,1.909,844,3.295,845,2.871,863,2.268,1031,2.513,1236,2.842,1402,5.122,1403,4.628,1404,3.34,1405,3.34,1406,3.34,1407,3.34]],["title/injectables/WatchlistService.html",[205,1.253,591,1.854]],["body/injectables/WatchlistService.html",[3,0.196,4,0.173,9,0.173,14,1.538,19,0.22,23,0.773,26,1.243,28,1.322,29,0.024,30,0.922,31,0.402,32,1.095,40,0.799,41,0.5,43,0.196,44,0.534,45,1.338,63,1.511,90,0.013,91,0.013,147,1.801,205,1.501,206,1.538,208,0.99,217,1.348,218,3.341,220,3.051,226,1.432,227,1.728,228,1.432,229,0.041,230,1.66,231,1.891,232,1.68,238,3.051,251,2.122,252,1.697,258,1.972,268,2.007,318,3.59,415,1.972,416,3.657,418,2.846,423,4.297,441,2.185,442,2.185,443,2.185,444,2.185,445,2.185,447,2.47,465,2.846,507,3.701,509,2.846,511,3.154,591,2.221,592,2.381,607,3.154,608,1.972,609,3.154,610,3.154,611,3.154,613,3.154,617,1.801,618,1.801,619,2.185,620,2.185,621,1.66,688,2.47,948,2.47,950,3.566,968,2.47,970,3.566,1265,2.47,1408,2.47,1409,4.191,1410,4.191,1411,4.191,1412,4.191,1413,4.191,1414,2.903,1415,4.191,1416,2.903,1417,4.191,1418,2.903,1419,2.903,1420,2.903,1421,2.903,1422,4.191,1423,2.903,1424,4.191,1425,2.903,1426,2.903,1427,4.191,1428,2.903,1429,2.903,1430,2.903,1431,2.903,1432,2.903,1433,2.903,1434,2.903,1435,2.903,1436,2.903,1437,2.903,1438,2.903,1439,2.903,1440,2.903,1441,2.903,1442,2.903,1443,4.918,1444,4.918,1445,2.903,1446,4.191,1447,2.903,1448,2.903,1449,4.191,1450,2.903,1451,2.903,1452,2.903,1453,2.903,1454,2.903,1455,4.191,1456,2.903,1457,2.903,1458,2.903,1459,2.903,1460,2.903]],["title/coverage.html",[1461,4.065]],["body/coverage.html",[0,0.799,1,0.707,9,0.159,10,2.26,25,0.951,29,0.023,31,0.179,57,0.707,59,0.707,62,0.707,64,0.707,67,0.707,69,0.707,71,0.666,73,0.707,76,0.666,78,0.707,80,0.666,82,1.109,83,0.666,85,0.666,86,0.707,90,0.013,91,0.013,104,1.648,105,1.648,135,1.999,136,1.999,138,1.999,139,1.999,142,1.999,152,1.804,154,2.735,155,1.999,160,1.999,162,1.804,163,1.804,165,1.999,168,1.804,169,1.999,171,1.999,172,1.999,182,1.999,205,2.065,207,2.26,227,0.707,228,1.31,229,0.063,232,0.75,261,2.26,286,1.224,303,1.076,305,1.076,330,2.245,331,2.081,343,1.999,399,2.203,403,1.804,407,1.648,408,2.26,429,1.076,448,1.407,513,3.203,514,2.955,525,1.648,532,1.31,538,1.224,545,1.224,546,2.538,581,1.407,583,1.407,591,1.407,592,0.951,617,1.648,627,1.804,628,1.999,629,1.648,633,3.055,634,2.26,651,1.518,736,2.26,764,1.804,823,2.26,842,3.149,894,2.26,903,1.804,1008,2.436,1010,2.26,1016,2.26,1026,2.26,1032,2.26,1080,2.26,1092,2.26,1133,2.26,1141,2.26,1158,1.999,1276,5.484,1313,2.26,1334,1.999,1335,2.955,1402,2.26,1408,2.26,1461,2.26,1462,2.656,1463,2.656,1464,2.656,1465,5.509,1466,2.656,1467,5.509,1468,4.672,1469,2.656,1470,6.974,1471,2.26,1472,6.926,1473,3.927,1474,4.672,1475,2.955,1476,4.672,1477,2.656,1478,4.672,1479,5.748,1480,2.26,1481,2.26,1482,2.26,1483,2.26,1484,2.26,1485,2.26,1486,2.26,1487,2.26,1488,2.26,1489,2.26,1490,2.26,1491,2.26,1492,3.927,1493,2.656,1494,2.656,1495,2.656,1496,3.341,1497,2.656,1498,2.656]],["title/dependencies.html",[95,2.858,1499,2.197]],["body/dependencies.html",[29,0.023,41,0.831,90,0.019,91,0.019,95,3.276,97,2.901,123,5.003,124,4.425,126,3.276,130,2.38,131,2.556,133,3.63,181,2.758,226,2.38,267,3.276,1500,4.824,1501,7.037,1502,4.824,1503,5.881,1504,4.824,1505,4.824,1506,4.824,1507,4.824,1508,4.824,1509,4.824,1510,4.824,1511,4.824,1512,4.104,1513,4.824,1514,4.824,1515,4.824,1516,4.824,1517,4.824,1518,4.824,1519,4.824]],["title/miscellaneous/enumerations.html",[1520,1.983,1521,3.58]],["body/miscellaneous/enumerations.html",[19,0.367,29,0.023,34,1.736,35,2.407,81,1.795,90,0.019,91,0.019,332,3.372,399,1.989,401,3.372,539,2.392,540,2.569,541,2.392,544,2.91,546,2.234,1475,3.648,1520,3.292,1521,4.125,1522,5.019,1523,4.848,1524,4.848,1525,4.848,1526,4.848,1527,4.848,1528,4.848,1529,4.848,1530,4.848,1531,4.848,1532,6.358,1533,4.848,1534,6.358,1535,4.848]],["title/index.html",[19,0.221,1536,2.92,1537,2.92]],["body/index.html",[0,0.729,4,0.261,29,0.018,30,0.658,38,3.723,87,1.311,90,0.018,91,0.018,115,3.293,130,3.368,195,4.71,232,1.235,248,3.723,262,2.016,303,2.723,340,3.293,360,3.293,614,3.293,1245,3.723,1499,3.293,1512,5.166,1538,4.71,1539,4.376,1540,6.072,1541,3.723,1542,4.376,1543,4.376,1544,5.536,1545,6.582,1546,4.376,1547,4.376,1548,4.376,1549,4.376,1550,4.376,1551,4.376,1552,4.376,1553,4.376,1554,4.376,1555,6.072,1556,6.072,1557,4.376,1558,6.381,1559,4.376,1560,4.376,1561,4.376,1562,4.376,1563,5.536,1564,5.536,1565,6.381,1566,4.376,1567,5.536,1568,4.376,1569,4.376,1570,4.376,1571,4.376,1572,5.536,1573,4.376,1574,4.376,1575,4.376,1576,4.376,1577,6.072,1578,4.376,1579,4.376,1580,3.293,1581,4.376]],["title/modules.html",[94,2.964]],["body/modules.html",[29,0.02,90,0.02,91,0.02,93,3.754,94,3.43,106,3.43,124,4.16,1582,5.528,1583,5.528,1584,6.376,1585,5.528,1586,5.528]],["title/overview.html",[1580,3.595]],["body/overview.html",[1,1.745,2,1.175,29,0.023,50,1.108,57,1.489,59,1.489,62,1.489,64,1.489,67,1.489,69,1.489,71,1.403,73,1.489,76,1.403,78,1.489,80,1.403,83,1.403,85,1.403,90,0.016,91,0.016,92,2.511,93,4.994,94,2.294,95,2.511,96,3.146,97,1.824,98,3.146,99,2.783,100,3.146,101,3.146,102,3.146,103,3.146,104,3.473,105,3.473,106,3.473,107,5.307,108,4.762,109,5.307,110,4.762,111,5.307,112,4.762,113,4.22,114,3.146,115,2.783,180,2.511,206,1.959,398,1.324,572,3.078,1009,2.783,1580,2.783,1587,3.698,1588,3.698,1589,3.698,1590,3.698]],["title/properties.html",[20,0.774,1499,2.197]],["body/properties.html",[20,1.035,29,0.022,90,0.021,91,0.021,1541,4.785,1591,5.624]],["title/routes.html",[180,3.244]],["body/routes.html",[29,0.021,90,0.021,91,0.021,180,3.853]],["title/miscellaneous/variables.html",[1163,3.167,1520,1.983]],["body/miscellaneous/variables.html",[19,0.2,29,0.023,31,0.453,34,2.479,35,2.334,37,0.624,46,1.217,63,1.216,65,0.923,86,1.041,90,0.012,91,0.012,142,2.943,182,2.943,184,3.327,227,1.37,231,0.839,232,1.794,255,4.482,286,1.217,293,0.946,303,1.584,305,1.584,334,3.874,343,2.943,429,1.584,572,2.89,592,1.668,621,2.236,680,3.327,764,2.656,819,2.656,852,1.988,1037,1.988,1055,1.988,1089,3.505,1158,2.943,1163,1.988,1181,3.962,1334,2.943,1335,1.988,1471,2.247,1475,1.988,1479,2.247,1480,4.38,1481,4.38,1482,3.327,1483,3.327,1484,3.327,1485,3.327,1486,3.327,1487,3.327,1488,3.327,1489,4.676,1490,4.897,1491,3.327,1496,3.962,1520,1.794,1522,3.327,1538,2.247,1592,2.641,1593,6.75,1594,3.911,1595,2.641,1596,2.641,1597,2.641,1598,2.641,1599,2.641,1600,2.641,1601,2.641,1602,2.641,1603,2.641,1604,2.641,1605,2.641,1606,3.911,1607,2.641,1608,3.911,1609,2.641,1610,3.911,1611,2.641,1612,5.755,1613,4.657,1614,4.657,1615,5.148,1616,2.641,1617,2.641,1618,2.641,1619,2.641,1620,2.641,1621,2.641,1622,2.641,1623,2.641,1624,2.641,1625,2.641,1626,2.641,1627,2.641,1628,2.641,1629,2.641,1630,2.641,1631,3.911,1632,3.911,1633,3.911,1634,3.911,1635,3.911,1636,5.496,1637,4.657,1638,3.911,1639,3.911,1640,2.641,1641,2.641,1642,2.641,1643,2.641,1644,3.911,1645,2.641,1646,4.657,1647,3.911,1648,2.641,1649,2.641,1650,2.641,1651,2.641,1652,2.641,1653,2.641,1654,3.911,1655,2.641,1656,2.641,1657,2.641,1658,2.641,1659,2.641,1660,2.641,1661,2.641,1662,2.641,1663,2.641,1664,5.148,1665,2.641,1666,2.641,1667,2.641,1668,2.641,1669,2.641,1670,2.641,1671,2.641,1672,2.641,1673,2.641,1674,2.641,1675,2.641,1676,2.641,1677,2.641,1678,2.641,1679,2.641,1680,2.641,1681,2.641,1682,2.641,1683,2.641,1684,2.641,1685,2.641,1686,2.641,1687,2.641,1688,2.641]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1276,"title":{},"body":{"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["0)this.cid.push(ie",{"_index":1247,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0.0.0",{"_index":1591,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["0.185rem",{"_index":377,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.25rem",{"_index":378,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.31.0",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":397,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.51",{"_index":1309,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0.875rem",{"_index":1283,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0/1",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["00a2a8",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["0275d8",{"_index":1530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["0||cats.subgenre.length>0",{"_index":567,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["1",{"_index":1055,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":1285,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["100",{"_index":1281,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["104",{"_index":1308,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["114px",{"_index":1305,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["117",{"_index":392,"title":{},"body":{"components/CalanderComponent.html":{}}}],["12",{"_index":1589,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1587,"title":{},"body":{"overview.html":{}}}],["15.1.2",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["16.0.0",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["16.1.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":1542,"title":{},"body":{"index.html":{}}}],["16.2.14",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":1297,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["17",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17,30",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19,30",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:297938436292:web:f09902d21ddd4fde388991",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1a4668",{"_index":1311,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1em",{"_index":1063,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["1px",{"_index":1289,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["2",{"_index":572,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2*60*60*1000",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.11.8",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["216",{"_index":393,"title":{},"body":{"components/CalanderComponent.html":{}}}],["27",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":481,"title":{},"body":{"injectables/CalendarService.html":{}}}],["297938436292",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a2568",{"_index":1062,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2em",{"_index":1079,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2px",{"_index":1066,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["2rem",{"_index":383,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["3",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30,0",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":1299,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5).concat(\"z",{"_index":1373,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["5*60*60*1000",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1053,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["50vw",{"_index":1056,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["55595c",{"_index":1286,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5cb85c",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5jqei2sxcubehofay9f6vyc4wa8pj6s0",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":1076,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["6",{"_index":1588,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1590,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1307,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["8",{"_index":709,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["80vh",{"_index":1068,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["992px",{"_index":1303,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["a.segment._embedded.genres.foreach((g:any",{"_index":1358,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["absolute",{"_index":1049,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["action",{"_index":1208,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["activatedroute",{"_index":853,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["add",{"_index":614,"title":{},"body":{"components/EventComponentComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["addcalendarevent",{"_index":409,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addcalendarevent(calendarevent",{"_index":419,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addclassification",{"_index":523,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["addclassification:eventemitter",{"_index":549,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["adddoc",{"_index":437,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["adddoc(calcollection",{"_index":466,"title":{},"body":{"injectables/CalendarService.html":{}}}],["adddoc(grpcollection",{"_index":953,"title":{},"body":{"injectables/GroupService.html":{}}}],["addevent",{"_index":587,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event",{"_index":593,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event:eventinterface",{"_index":605,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addwatchlistevent",{"_index":1409,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["addwatchlistevent(user",{"_index":1415,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["admin",{"_index":817,"title":{},"body":{"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["admin.id",{"_index":952,"title":{},"body":{"injectables/GroupService.html":{}}}],["admin:user1",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin:user4",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":843,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["against",{"_index":980,"title":{},"body":{"injectables/GroupService.html":{}}}],["aizasydjqng3ye8if6tcspj_pstfymizlnfvoow",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":374,"title":{},"body":{"components/CalanderComponent.html":{}}}],["allavailable",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allowed",{"_index":490,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap:any",{"_index":494,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[cal[\"uid",{"_index":502,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[group.admin.id",{"_index":495,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[member.id",{"_index":498,"title":{},"body":{"injectables/CalendarService.html":{}}}],["alluuid",{"_index":818,"title":{},"body":{"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{}}}],["alluuid:[\"user1",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alluuid:[\"user4\",\"user1",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":973,"title":{},"body":{"injectables/GroupService.html":{}}}],["amonst",{"_index":361,"title":{},"body":{"components/CalanderComponent.html":{}}}],["angular",{"_index":1512,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":763,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["angular/common",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/GroupDetailComponent.html":{},"injectables/TicketmasterService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["angular/compiler",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/firestore",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["angular/forms",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{},"dependencies.html":{}}}],["ans",{"_index":1366,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.genre.push({id:g.id",{"_index":1360,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.segment.push({id:a.segment.id",{"_index":1356,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.subgenre.push({id:sg.id",{"_index":1364,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans:classificationinterface",{"_index":1352,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["any)._location.origin+\"/ticketmaster",{"_index":1341,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["apikey",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":1452,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["appid",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1550,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1332,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["appmodule",{"_index":93,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":106,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrayremove",{"_index":445,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayremove(this.eventtodbwatchlist(event",{"_index":1460,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayremove(toremove",{"_index":985,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayremove(user.id",{"_index":986,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion",{"_index":444,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayunion(this.eventtodbwatchlist(event",{"_index":1450,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayunion(user",{"_index":975,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion(user.id",{"_index":976,"title":{},"body":{"injectables/GroupService.html":{}}}],["artifacts",{"_index":1559,"title":{},"body":{"index.html":{}}}],["attempt",{"_index":1451,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["auth",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["authapi",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["authapi.isauthenticated().pipe",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authapi:authenticationservice",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/variables.html":{}}}],["authapi:authenticationservice,private",{"_index":1086,"title":{},"body":{"components/NavigationComponent.html":{}}}],["authdomain",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":25,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":1551,"title":{},"body":{"index.html":{}}}],["availability",{"_index":1120,"title":{},"body":{"injectables/NotificationService.html":{}}}],["available",{"_index":1586,"title":{},"body":{"modules.html":{}}}],["b",{"_index":298,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["b0d04a",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b:number",{"_index":368,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["background",{"_index":386,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["baseurl",{"_index":1314,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["baseurl:string",{"_index":1338,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["before",{"_index":1121,"title":{},"body":{"injectables/NotificationService.html":{}}}],["better",{"_index":776,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["bgcolor",{"_index":406,"title":{},"body":{"interfaces/CalanderEventColor.html":{}}}],["bgcolor:calandercolor",{"_index":405,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["bgimg",{"_index":1045,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgimgstrip",{"_index":1046,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgleft",{"_index":1057,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgright",{"_index":1059,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["block",{"_index":381,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["booked",{"_index":795,"title":{},"body":{"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["booked:false",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookedforevent",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["booking",{"_index":1132,"title":{},"body":{"injectables/NotificationService.html":{}}}],["books",{"_index":1123,"title":{},"body":{"injectables/NotificationService.html":{}}}],["boolean",{"_index":301,"title":{},"body":{"components/CalanderComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/GroupInterface.html":{},"pipes/GrouppipePipe.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["bootstrap",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"dependencies.html":{}}}],["border",{"_index":1064,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["both",{"_index":994,"title":{},"body":{"injectables/GroupService.html":{}}}],["box",{"_index":1277,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["browse",{"_index":1584,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1296,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bud",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.appspot.com",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.firebaseapp.com",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buddy",{"_index":1090,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NotificationService.html":{}}}],["build",{"_index":1558,"title":{},"body":{"index.html":{}}}],["buto",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["c",{"_index":299,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["c.name",{"_index":574,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["c:number",{"_index":369,"title":{},"body":{"components/CalanderComponent.html":{}}}],["c:number):boolean",{"_index":1194,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["calander",{"_index":264,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["calander.component.css",{"_index":265,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander.component.html",{"_index":266,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calandercolor",{"_index":332,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["calandercolor.bookedforevent",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.notfreeatall",{"_index":801,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["calandercolor.personal",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.reservedforevent",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.somefree",{"_index":802,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["calandercomponent",{"_index":57,"title":{"components/CalanderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calanderevent",{"_index":286,"title":{"interfaces/CalanderEvent.html":{}},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandereventcolor",{"_index":403,"title":{"interfaces/CalanderEventColor.html":{}},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"coverage.html":{}}}],["calandertype",{"_index":401,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["calandertype.bookedforevent",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandertype.personal",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandertype.reservedforevent",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandertype[dbcalent[\"type",{"_index":453,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calandertypecolor",{"_index":1158,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandertypecolor.get(e.type)||calandercolor.default",{"_index":1193,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["calandertypepriority",{"_index":764,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calc(3rem",{"_index":1292,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["calc(50",{"_index":1077,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calc(80vh",{"_index":1075,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calcollection",{"_index":456,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc",{"_index":458,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc).then((docref",{"_index":467,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar",{"_index":267,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/NavigationComponent.html":{},"dependencies.html":{}}}],["calendar/${calendarevent.id",{"_index":508,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent",{"_index":421,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.detail",{"_index":463,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.end",{"_index":462,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.start",{"_index":461,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.type",{"_index":464,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.user.id",{"_index":460,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarservice",{"_index":407,"title":{"injectables/CalendarService.html":{}},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["calender",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["calevent",{"_index":500,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.start",{"_index":505,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calls",{"_index":485,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calsvc",{"_index":745,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["canactivate:[authguard",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivate:[authguard]},//for",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":1575,"title":{},"body":{"index.html":{}}}],["capitalize",{"_index":1300,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["catch(err",{"_index":730,"title":{},"body":{"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["catch(rej",{"_index":1456,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["cats",{"_index":518,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["cats.genre.length>0",{"_index":568,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["cats:classificationinterface",{"_index":550,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["cb",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ccc",{"_index":1291,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["center",{"_index":375,"title":{},"body":{"components/CalanderComponent.html":{}}}],["change",{"_index":340,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"index.html":{}}}],["changed",{"_index":347,"title":{},"body":{"components/CalanderComponent.html":{}}}],["changepage",{"_index":1216,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["changepage(pgnum",{"_index":1221,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["changepage(pgnum:number",{"_index":1262,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["changes",{"_index":309,"title":{},"body":{"components/CalanderComponent.html":{}}}],["check",{"_index":360,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"index.html":{}}}],["checkup",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choice",{"_index":1571,"title":{},"body":{"index.html":{}}}],["chooose",{"_index":733,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["chosegroup",{"_index":849,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group",{"_index":855,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group:groupinterface",{"_index":890,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen",{"_index":846,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen.name",{"_index":893,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen:groupinterface",{"_index":871,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cid",{"_index":1209,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["cid:idclasstype",{"_index":1241,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["classification",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["classification:eventemitter",{"_index":548,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["classificationcomponentcomponent",{"_index":59,"title":{"components/ClassificationComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classificationemitter",{"_index":1210,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationemitter:eventemitter",{"_index":1242,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationinterface",{"_index":538,"title":{"interfaces/ClassificationInterface.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["classinput",{"_index":1211,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classinput:string",{"_index":1239,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classtype",{"_index":544,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":1540,"title":{},"body":{"index.html":{}}}],["click",{"_index":1118,"title":{},"body":{"injectables/NotificationService.html":{}}}],["clicked",{"_index":344,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clickeddate",{"_index":283,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clipboard",{"_index":746,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["clipboard:clipboard",{"_index":781,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["close",{"_index":644,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["closeresult",{"_index":638,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["cluster_appmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cmicount==this.group.members.length)return",{"_index":800,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["code",{"_index":1245,"title":{},"body":{"components/SearchPageComponent.html":{},"index.html":{}}}],["collection",{"_index":436,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collection(this.fs",{"_index":457,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collectiondata",{"_index":440,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectiondata(q",{"_index":471,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectionreference",{"_index":438,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["color",{"_index":387,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["command",{"_index":1572,"title":{},"body":{"index.html":{}}}],["common/calander/calander.component",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["common/navigation/navigation.component",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["component.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.css",{"_index":516,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.html",{"_index":517,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts",{"_index":514,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:12",{"_index":528,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:13",{"_index":529,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:14",{"_index":526,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:18",{"_index":530,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:19",{"_index":596,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:25",{"_index":594,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:28",{"_index":535,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:31",{"_index":533,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:34",{"_index":537,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component/classification",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["component/event",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component:grouppagecomponent",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:loginpagecomponent",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:personalcalenderpagecomponent",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:searchpagecomponent",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:watchlistpagecomponent",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["concert",{"_index":1113,"title":{},"body":{"injectables/NotificationService.html":{}}}],["confirm",{"_index":1119,"title":{},"body":{"injectables/NotificationService.html":{}}}],["confirmation",{"_index":1127,"title":{},"body":{"injectables/NotificationService.html":{}}}],["confirmed",{"_index":819,"title":{},"body":{"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["confirmed:string",{"_index":822,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["confirmgroupbooking",{"_index":895,"title":{},"body":{"injectables/GroupService.html":{}}}],["confirmgroupbooking(group",{"_index":905,"title":{},"body":{"injectables/GroupService.html":{}}}],["congratulations",{"_index":1129,"title":{},"body":{"injectables/NotificationService.html":{}}}],["console.log(\"ddded",{"_index":1182,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["console.log(\"error",{"_index":889,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["console.log(\"got",{"_index":722,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["console.log(\"logout",{"_index":1042,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log(\"signout",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(result",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(x",{"_index":1398,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["console.log(x.page",{"_index":1272,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["const",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["constructor(auth",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["constructor(authapi",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["constructor(fs",{"_index":415,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(http",{"_index":1319,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/GroupService.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(tmapi",{"_index":524,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["contact",{"_index":1130,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contains\",user.id",{"_index":961,"title":{},"body":{"injectables/GroupService.html":{}}}],["content",{"_index":639,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{}}}],["content:ngbmodal",{"_index":686,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["converttolistofstrings",{"_index":850,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members",{"_index":857,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members:userinterface",{"_index":891,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttongbdate",{"_index":272,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{}}}],["converttongbdate(d",{"_index":292,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{}}}],["converttongbdate(d:date",{"_index":352,"title":{},"body":{"components/CalanderComponent.html":{}}}],["converttongbdate(d:date):ngbdate",{"_index":782,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["copyinvitelink",{"_index":740,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["coverage",{"_index":1461,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":635,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["create'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["create.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["create.component.css",{"_index":636,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.html",{"_index":637,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts",{"_index":634,"title":{},"body":{"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:16",{"_index":669,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:17",{"_index":665,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:18",{"_index":663,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:19",{"_index":655,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:20",{"_index":683,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:21",{"_index":666,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:22",{"_index":682,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:23",{"_index":681,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:34",{"_index":654,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:45",{"_index":658,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:57",{"_index":659,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:60",{"_index":661,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:73",{"_index":656,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:76",{"_index":657,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create/group",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["createevent",{"_index":1143,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["creategroup",{"_index":645,"title":{},"body":{"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["creategroup(name",{"_index":907,"title":{},"body":{"injectables/GroupService.html":{}}}],["creation",{"_index":728,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["cs.foreach((a",{"_index":1354,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["cs:any",{"_index":1350,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["css",{"_index":1278,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["current",{"_index":1091,"title":{},"body":{"components/NavigationComponent.html":{}}}],["currently",{"_index":972,"title":{},"body":{"injectables/GroupService.html":{}}}],["currentuser",{"_index":640,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["currentuser:userinterface|null",{"_index":779,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["currentuser?:userinterface",{"_index":689,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["cursor",{"_index":1070,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["custom",{"_index":371,"title":{},"body":{"components/CalanderComponent.html":{}}}],["d",{"_index":295,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/TicketmasterService.html":{}}}],["d.getdate",{"_index":355,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{}}}],["d.getmonth()+1",{"_index":354,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{}}}],["d9534f",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":474,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["data.foreach(cal",{"_index":476,"title":{},"body":{"injectables/CalendarService.html":{}}}],["data.foreach(grp",{"_index":962,"title":{},"body":{"injectables/GroupService.html":{}}}],["data===undefined",{"_index":968,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["data['saved'].foreach((event",{"_index":1447,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["database",{"_index":1001,"title":{},"body":{"injectables/GroupService.html":{}}}],["date",{"_index":293,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/variables.html":{}}}],["date(2024",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(dbevent['enddate']?.todate",{"_index":1442,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(dbevent['startdate']?.todate",{"_index":1440,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(e.dates?.end",{"_index":1386,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(e.dates?.start.datetime",{"_index":1384,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(grp.event.enddate",{"_index":720,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["date(grp.event.startdate",{"_index":718,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["date(start.gettime",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start2.gettime",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start3.gettime",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(this.end",{"_index":1179,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["date(this.start",{"_index":1177,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["date.day",{"_index":370,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date.month",{"_index":1204,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["date.year",{"_index":1201,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["date:'medium",{"_index":612,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["date:\\'medium",{"_index":616,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["dateclicked",{"_index":1144,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["dateclicked(date",{"_index":1148,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["datecolor",{"_index":279,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["datecolor:[[ngbdate,ngbdate",{"_index":774,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["dates",{"_index":343,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":372,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.faded",{"_index":395,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.focused",{"_index":385,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.range",{"_index":389,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day:hover",{"_index":390,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dbcalent",{"_index":425,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"detail",{"_index":452,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"end\"].todate",{"_index":451,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"id",{"_index":449,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"start\"].todate",{"_index":450,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbevent",{"_index":1419,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['details",{"_index":1438,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['enddate",{"_index":1441,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['id",{"_index":1434,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['images",{"_index":1437,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['location",{"_index":1436,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['name",{"_index":1435,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['startdate",{"_index":1439,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbgroup",{"_index":911,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"admin",{"_index":938,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"alluuid",{"_index":942,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"booked",{"_index":941,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"confirmed",{"_index":940,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"date",{"_index":943,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"date\"].todate",{"_index":945,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"details",{"_index":935,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].end.todate",{"_index":934,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].id",{"_index":931,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].name",{"_index":932,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].start.todate",{"_index":933,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"id",{"_index":929,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"imageurls",{"_index":936,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"locations",{"_index":937,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"members",{"_index":939,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"name",{"_index":930,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtocalendarevent",{"_index":410,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtocalendarevent(dbcalent",{"_index":422,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtogroupinterface",{"_index":896,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtogroupinterface(dbgroup",{"_index":909,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbwatchlisttoevent",{"_index":1410,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbwatchlisttoevent(dbevent",{"_index":1417,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["debouncetime",{"_index":542,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["debouncetime(500",{"_index":553,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["decided",{"_index":1111,"title":{},"body":{"injectables/NotificationService.html":{}}}],["declarations",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":319,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["delete",{"_index":810,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deletedoc",{"_index":446,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["deletedoc(caldoc).then(birdbird",{"_index":512,"title":{},"body":{"injectables/CalendarService.html":{}}}],["deletedoc(grpdoc).then(_",{"_index":987,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteevent",{"_index":1145,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e",{"_index":1150,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e:calanderevent",{"_index":1169,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["deletegroup",{"_index":741,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{}}}],["deletegroup(group",{"_index":912,"title":{},"body":{"injectables/GroupService.html":{}}}],["denied",{"_index":957,"title":{},"body":{"injectables/GroupService.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":400,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["detail'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["detail.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["detail.component.css",{"_index":737,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.html",{"_index":738,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts",{"_index":736,"title":{},"body":{"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:19",{"_index":749,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":762,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":759,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":760,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":758,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":748,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":750,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":756,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:71",{"_index":752,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:74",{"_index":755,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:77",{"_index":751,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:81",{"_index":753,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:85",{"_index":757,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail/group",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail:\"dental",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"doctors",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"school",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:this.detail",{"_index":1180,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["detail?:string",{"_index":1168,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["details",{"_index":618,"title":{},"body":{"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["details:\"fake",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details:e.description",{"_index":1388,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["details:new",{"_index":677,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["details:string",{"_index":624,"title":{},"body":{"interfaces/EventInterface.html":{}}}],["dev",{"_index":1547,"title":{},"body":{"index.html":{}}}],["development",{"_index":1543,"title":{},"body":{"index.html":{}}}],["directive",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1557,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1562,"title":{},"body":{"index.html":{}}}],["display",{"_index":379,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"components/SearchPageComponent.html":{}}}],["dist",{"_index":1561,"title":{},"body":{"index.html":{}}}],["doc",{"_index":442,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["doc(this.fs",{"_index":507,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata",{"_index":441,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata(grpdoc",{"_index":966,"title":{},"body":{"injectables/GroupService.html":{}}}],["docdata(watchdoc).subscribe(data",{"_index":1445,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["document",{"_index":1453,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["documentation",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":423,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["documentreference",{"_index":435,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["dp",{"_index":269,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dp:ngbdatepicker|undefined",{"_index":346,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dynamic",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":363,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.detail",{"_index":812,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.end",{"_index":814,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.end.getmonth()+1,e.end.getdate",{"_index":1191,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e.start",{"_index":813,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.start.getmonth()+1,e.start.getdate",{"_index":1188,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e.user.name",{"_index":811,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e1",{"_index":1480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2",{"_index":1481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1569,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":388,"title":{},"body":{"components/CalanderComponent.html":{}}}],["e:calanderevent",{"_index":1174,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e[1",{"_index":366,"title":{},"body":{"components/CalanderComponent.html":{}}}],["easier",{"_index":1164,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ed",{"_index":1393,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ed:date",{"_index":1385,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["efcb00",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["em",{"_index":648,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["em!:eventemitter",{"_index":687,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["email",{"_index":255,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/UserInterface.html":{},"miscellaneous/variables.html":{}}}],["emaillist",{"_index":1109,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emaillist.push(member.email",{"_index":1110,"title":{},"body":{"injectables/NotificationService.html":{}}}],["end",{"_index":303,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["end.day",{"_index":1207,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end.month",{"_index":1205,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end.year",{"_index":1202,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end2",{"_index":1482,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end3",{"_index":1483,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end:end",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end2",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end3",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:new",{"_index":1178,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end:ngbdate",{"_index":1197,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end?:string",{"_index":1167,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["enddate",{"_index":619,"title":{},"body":{"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["enddate:(!this.invaliddate(ed",{"_index":1392,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["enddate:new",{"_index":680,"title":{},"body":{"components/GroupCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["enddate:ngbdate",{"_index":1189,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["enddate?:date",{"_index":626,"title":{},"body":{"interfaces/EventInterface.html":{}}}],["endtime",{"_index":778,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["ensure",{"_index":1000,"title":{},"body":{"injectables/GroupService.html":{}}}],["enum",{"_index":578,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["enumerations",{"_index":1521,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/calenderenum",{"_index":402,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["environments/env",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["err.code",{"_index":955,"title":{},"body":{"injectables/GroupService.html":{}}}],["err===\"group",{"_index":731,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["error",{"_index":723,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["error:(e",{"_index":888,"title":{},"body":{"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["es",{"_index":700,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEventColor.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["event!:eventinterface",{"_index":601,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["event.details",{"_index":610,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.enddate",{"_index":613,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.id",{"_index":948,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.images",{"_index":950,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.location",{"_index":609,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.name",{"_index":607,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.startdate",{"_index":611,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event:calanderevent",{"_index":404,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["event:eventinterface",{"_index":820,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["event:n",{"_index":713,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["event:this.formbuilder.group",{"_index":673,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["eventcomponentcomponent",{"_index":62,"title":{"components/EventComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventemitter",{"_index":290,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["eventinput",{"_index":1212,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinput:string",{"_index":1240,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinterface",{"_index":592,"title":{"interfaces/EventInterface.html":{}},"body":{"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"components/ListEventsComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventname",{"_index":837,"title":{},"body":{"components/GroupListComponent.html":{}}}],["eventpageinterface",{"_index":627,"title":{"interfaces/EventPageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["events",{"_index":280,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"interfaces/EventPageInterface.html":{},"components/GroupDetailComponent.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["events!:calanderevent[];//should",{"_index":336,"title":{},"body":{"components/CalanderComponent.html":{}}}],["events'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["events.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["events.component.css",{"_index":1027,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.html",{"_index":1028,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts",{"_index":1026,"title":{},"body":{"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events.component.ts:10",{"_index":1030,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts:9",{"_index":1029,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events/list",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events:calanderevent",{"_index":768,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["events:eventinterface",{"_index":631,"title":{},"body":{"interfaces/EventPageInterface.html":{},"components/ListEventsComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["events:undefined",{"_index":1378,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["eventtodbwatchlist",{"_index":1411,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event",{"_index":1420,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event:eventinterface",{"_index":1426,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["evt",{"_index":662,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["evt.enddate.toisostring().slice(0",{"_index":711,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["evt.name",{"_index":734,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["evt.startdate.toisostring().slice(0",{"_index":708,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["evts",{"_index":739,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["evts:calanderevent",{"_index":773,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["execute",{"_index":1567,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["exports",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":579,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["f0ad4e",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/GroupService.html":{}}}],["fan",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":1287,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["fields",{"_index":489,"title":{},"body":{"injectables/CalendarService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["files",{"_index":1553,"title":{},"body":{"index.html":{}}}],["fileter",{"_index":770,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["filter",{"_index":1336,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["filter((x:any",{"_index":1346,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["firebase",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/GroupPageComponent.html":{}}}],["firebase/auth",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebaseconfig",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firestore",{"_index":416,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["firestoreerror",{"_index":926,"title":{},"body":{"injectables/GroupService.html":{}}}],["first",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["font",{"_index":1282,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["formbuilder",{"_index":649,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["formbuilder:formbuilder",{"_index":691,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["formcontrol",{"_index":678,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["formsmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule,reactiveformsmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":970,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["fs",{"_index":418,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["fullscreen:true",{"_index":702,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["further",{"_index":1576,"title":{},"body":{"index.html":{}}}],["g",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g._embedded.subgenres.foreach((sg:any",{"_index":1362,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["g.event.name",{"_index":839,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.members",{"_index":840,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.name",{"_index":838,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g1",{"_index":1484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["g2",{"_index":1485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1555,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1539,"title":{},"body":{"index.html":{}}}],["genre",{"_index":540,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["genre:[]};//must",{"_index":1353,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["genre:idname",{"_index":576,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["genreid:this.cid.filter((c)=>c.type==classtype.genre).map((x)=>x.id",{"_index":1268,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["genreinterface",{"_index":583,"title":{"interfaces/GenreInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["genres",{"_index":1312,"title":{},"body":{"interfaces/SegmentInterface.html":{}}}],["genres:genreinterface",{"_index":582,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["getauth",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["getcalendar",{"_index":411,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getcalendar(user",{"_index":426,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getclassification",{"_index":1316,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getclassification(kw",{"_index":1323,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getclassification(kw:string):observable",{"_index":1342,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getcurrentuser",{"_index":209,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcurrentuser():promise",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getevents",{"_index":1217,"title":{},"body":{"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["getevents():observable",{"_index":1367,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery",{"_index":1317,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query",{"_index":1327,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query:any):observable",{"_index":1395,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getfirestore",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["getgroupbyid",{"_index":897,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupbyid(groupid",{"_index":914,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupcalendar",{"_index":412,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroupcalendar(group",{"_index":428,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroups",{"_index":898,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroups(user",{"_index":916,"title":{},"body":{"injectables/GroupService.html":{}}}],["getting",{"_index":1536,"title":{"index.html":{}},"body":{}}],["getwatchlist",{"_index":1412,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["getwatchlist(user",{"_index":1422,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["go",{"_index":1579,"title":{},"body":{"index.html":{}}}],["good",{"_index":1114,"title":{},"body":{"injectables/NotificationService.html":{}}}],["google",{"_index":1044,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["googleauthprovider",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["googleimg",{"_index":1078,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["googlesignin",{"_index":1033,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["graph",{"_index":1585,"title":{},"body":{"modules.html":{}}}],["group",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/variables.html":{}}}],["group!:groupinterface",{"_index":766,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["group.admin",{"_index":496,"title":{},"body":{"injectables/CalendarService.html":{}}}],["group.admin.name",{"_index":1122,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(member.id",{"_index":1128,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(user.id",{"_index":990,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.date",{"_index":988,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.date?.todatestring",{"_index":1116,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.enddate",{"_index":805,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["group.event.enddate}}invite",{"_index":816,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["group.event.name",{"_index":804,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["group.event.name||'concert",{"_index":1126,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.name||'the",{"_index":1112,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.startdate",{"_index":504,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{}}}],["group.members.foreach(member",{"_index":497,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["group.name",{"_index":803,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["group/${group.id",{"_index":978,"title":{},"body":{"injectables/GroupService.html":{}}}],["group/${groupid",{"_index":965,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupclicked",{"_index":828,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupcreatecomponent",{"_index":64,"title":{"components/GroupCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdetailcomponent",{"_index":67,"title":{"components/GroupDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdoc",{"_index":947,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupdoc).then((docref",{"_index":954,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupid",{"_index":847,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["groupid:string",{"_index":872,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["groupinterface",{"_index":429,"title":{"interfaces/GroupInterface.html":{}},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouplistcomponent",{"_index":69,"title":{"components/GroupListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupmemberpipe",{"_index":841,"title":{},"body":{"components/GroupListComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["groupmemberpipepipe",{"_index":104,"title":{"pipes/GroupmemberPipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groupname",{"_index":836,"title":{},"body":{"components/GroupListComponent.html":{}}}],["grouppagecomponent",{"_index":71,"title":{"components/GroupPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grouppipe",{"_index":1017,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["grouppipepipe",{"_index":105,"title":{"pipes/GrouppipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":827,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{}}}],["groups!:groupinterface",{"_index":833,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groups:groupinterface",{"_index":873,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["groupservice",{"_index":651,"title":{"injectables/GroupService.html":{}},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["grp",{"_index":928,"title":{},"body":{"injectables/GroupService.html":{}}}],["grp.date",{"_index":944,"title":{},"body":{"injectables/GroupService.html":{}}}],["grp.event",{"_index":726,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["grp.event.enddate",{"_index":719,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["grp.event.startdate",{"_index":717,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["grp:any",{"_index":715,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["grpcollection",{"_index":946,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpdoc",{"_index":964,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpsvc",{"_index":650,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["guards/auth.guard",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["handles",{"_index":1162,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["header",{"_index":1315,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["height",{"_index":382,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["height:80vh",{"_index":1047,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["help",{"_index":1577,"title":{},"body":{"index.html":{}}}],["here",{"_index":338,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{},"components/SearchPageComponent.html":{}}}],["highest",{"_index":796,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["hovereddate",{"_index":270,"title":{},"body":{"components/CalanderComponent.html":{}}}],["html",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["http",{"_index":1322,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["http://localhost:4200",{"_index":1549,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1320,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["httpclientmodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1331,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["https://picsum.photos/id/1/900/500",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://picsum.photos/id/2/900/500",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.user.id))].length",{"_index":799,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["id",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"interfaces/EventInterface.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"interfaces/IdName.html":{},"interfaces/UserInterface.html":{},"injectables/WatchlistService.html":{}}}],["id\"}).subscribe(data",{"_index":967,"title":{},"body":{"injectables/GroupService.html":{}}}],["id'}).subscribe",{"_index":473,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["id:\"evt1",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"evt2",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp1",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp2",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1id",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:[\"\",validators.required",{"_index":674,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["id:e.id",{"_index":1387,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["id:string",{"_index":585,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["id:string|null",{"_index":882,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["idclasstype",{"_index":545,"title":{"interfaces/IdClassType.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["identifier",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":472,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["idname",{"_index":532,"title":{"interfaces/IdName.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["ie",{"_index":1228,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["ie.id",{"_index":1251,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["if(!a?.segment?.id",{"_index":1355,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!g?.id",{"_index":1359,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!group.event.enddate",{"_index":503,"title":{},"body":{"injectables/CalendarService.html":{}}}],["if(!sg?.id",{"_index":1363,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!x",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(a.start",{"_index":798,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["if(changes[\"events",{"_index":348,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(evt.enddate",{"_index":710,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["if(evt.startdate",{"_index":706,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["if(grp.event.startdate>=grp.event.enddate",{"_index":721,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["if(id",{"_index":884,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["if(isadmin",{"_index":1023,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["if(this.cid.filter((c)=>c.id==ie.id).length",{"_index":1246,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["if(this.currentuser",{"_index":724,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["if(this.currentuser)this.grpsvc.joingroup(this.groupid,this.currentuser",{"_index":880,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["if(this.group.event.startdate)this.startdate",{"_index":788,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["if(this.isinside(e[0][0],date,e[0][1",{"_index":365,"title":{},"body":{"components/CalanderComponent.html":{}}}],["image",{"_index":1288,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["images",{"_index":620,"title":{},"body":{"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["images:[\"https://picsum.photos/id/0/900/500",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images:e.images.map((img:any)=>img.url",{"_index":1389,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["images:string",{"_index":623,"title":{},"body":{"interfaces/EventInterface.html":{}}}],["images:this.formbuilder.array",{"_index":676,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["imageurls",{"_index":949,"title":{},"body":{"injectables/GroupService.html":{}}}],["implements",{"_index":262,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["import",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["important",{"_index":1293,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["imports",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["increase",{"_index":483,"title":{},"body":{"injectables/CalendarService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["inequalities",{"_index":487,"title":{},"body":{"injectables/CalendarService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["initialise",{"_index":1454,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["initializeapp",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(firebaseconfig",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(firebaseconfig)).html\">providefirebaseapp",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["inject",{"_index":327,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(authenticationservice",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(ngbcalendar",{"_index":315,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(router",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":205,"title":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":206,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"overview.html":{}}}],["inline",{"_index":380,"title":{},"body":{"components/CalanderComponent.html":{}}}],["input",{"_index":324,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["inputs",{"_index":278,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["interface",{"_index":229,"title":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["interface.ts",{"_index":399,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["interface/calanderevent",{"_index":331,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":398,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/calander",{"_index":1157,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["interfaces/clasification",{"_index":1235,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["interfaces/enums/calenderenum",{"_index":1159,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["interfaces/event",{"_index":597,"title":{},"body":{"components/EventComponentComponent.html":{},"components/ListEventsComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["interfaces/group",{"_index":868,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GrouppipePipe.html":{}}}],["interfaces/page",{"_index":1234,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["interfaces/user",{"_index":869,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["invaliddate",{"_index":1318,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invaliddate(d",{"_index":1329,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invaliddate(d:date",{"_index":1399,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invite",{"_index":806,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["inwatchlist",{"_index":589,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["inwatchlist!:boolean",{"_index":600,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["isadmin",{"_index":1019,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["isadmin:boolean",{"_index":1022,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["isauth",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":210,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isbetween",{"_index":273,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isbetween(a",{"_index":296,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isbetween(a:number",{"_index":367,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isinside",{"_index":274,"title":{},"body":{"components/CalanderComponent.html":{}}}],["isinside(start",{"_index":302,"title":{},"body":{"components/CalanderComponent.html":{}}}],["join",{"_index":815,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["joingroup",{"_index":742,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["joingroup(groupid",{"_index":918,"title":{},"body":{"injectables/GroupService.html":{}}}],["joining",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["karma",{"_index":1568,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":454,"title":{},"body":{"injectables/CalendarService.html":{}}}],["keys",{"_index":362,"title":{},"body":{"components/CalanderComponent.html":{}}}],["keyword:kw}}).pipe",{"_index":1345,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["keyword:this.eventinput",{"_index":1270,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["kick",{"_index":808,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kickuser",{"_index":743,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kickuser(user",{"_index":754,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kw",{"_index":1325,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["kw.length",{"_index":1348,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["l.map(e=>e.id",{"_index":1407,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["lah",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lastclickeddate",{"_index":271,"title":{},"body":{"components/CalanderComponent.html":{}}}],["left",{"_index":1069,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["left:0",{"_index":1058,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["left:50",{"_index":1051,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["legend",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["limited",{"_index":480,"title":{},"body":{"injectables/CalendarService.html":{}}}],["line",{"_index":1284,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["link",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailComponent.html":{}}}],["list",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list.component",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":824,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.html",{"_index":825,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts",{"_index":823,"title":{},"body":{"components/GroupListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":829,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:11",{"_index":830,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:12",{"_index":832,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list/group",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"components/GroupListComponent.html":{},"coverage.html":{}}}],["listernere",{"_index":337,"title":{},"body":{"components/CalanderComponent.html":{}}}],["listeventscomponent",{"_index":73,"title":{"components/ListEventsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listof",{"_index":341,"title":{},"body":{"components/CalanderComponent.html":{}}}],["loadedevents",{"_index":1213,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["loadedevents:eventinterface",{"_index":1237,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["location",{"_index":608,"title":{},"body":{"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["location:[\"seatle",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:[\"singpoare",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:e._embedded?.venues.map((v:any)=>v.name",{"_index":1390,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["location:string",{"_index":622,"title":{},"body":{"interfaces/EventInterface.html":{}}}],["location:this.formbuilder.array",{"_index":675,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["locations",{"_index":951,"title":{},"body":{"injectables/GroupService.html":{}}}],["login",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["loginbtn",{"_index":1061,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginbtn:active",{"_index":1074,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["logingoogle",{"_index":211,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpagecomponent",{"_index":76,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{}}}],["m.name",{"_index":809,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["mail",{"_index":1106,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mailcol",{"_index":1105,"title":{},"body":{"injectables/NotificationService.html":{}}}],["maildoc",{"_index":1107,"title":{},"body":{"injectables/NotificationService.html":{}}}],["map",{"_index":334,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/variables.html":{}}}],["map((x:any",{"_index":1349,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1310,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["mb",{"_index":573,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["measurementid",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":1301,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["meeting",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":499,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["member.id",{"_index":983,"title":{},"body":{"injectables/GroupService.html":{}}}],["members",{"_index":482,"title":{},"body":{"injectables/CalendarService.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["members.map((x)=>x.name",{"_index":892,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["members:[user1",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:[user2",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:userinterface",{"_index":821,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["message",{"_index":1102,"title":{},"body":{"injectables/NotificationService.html":{}}}],["message:any",{"_index":1104,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messagingsenderid",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["methods",{"_index":208,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["min",{"_index":1302,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["miscellaneous",{"_index":1520,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modalservice",{"_index":652,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["modalservice:ngbmodal",{"_index":692,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["module",{"_index":92,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1578,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":488,"title":{},"body":{"injectables/CalendarService.html":{}}}],["n",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["n)=>this.isauth",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["n.events",{"_index":1261,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["n.map((e)=>e.id",{"_index":1254,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["n.page",{"_index":1258,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["n.startdate",{"_index":707,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["n:any",{"_index":704,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["name:\"becca",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"go",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"john",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"rick",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"superbowl",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"taylor",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"tom",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"ts",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:['rrr",{"_index":671,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["name:a.segment.name",{"_index":1357,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:e.name",{"_index":561,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/TicketmasterService.html":{}}}],["name:e.name,type:classtype.genre",{"_index":564,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:e.name,type:classtype.subgenre",{"_index":566,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:g.name",{"_index":1361,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:sg.name",{"_index":1365,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:string",{"_index":586,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["navigate",{"_index":1548,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":281,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigateto!:ngbdate",{"_index":335,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigation",{"_index":1081,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["navigation.component.css",{"_index":1082,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":1083,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":78,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navstuff",{"_index":641,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["need",{"_index":1573,"title":{},"body":{"index.html":{}}}],["needs",{"_index":769,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["network/firebase/authentication/authentication.service",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["network/firebase/firestore/calendar.service",{"_index":1160,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["network/firebase/firestore/group.service",{"_index":870,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["network/firebase/firestore/watchlist.service",{"_index":1236,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["network/ticketmaster/ticketmaster.service",{"_index":1233,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["new",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newevent",{"_index":1142,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["newevent?:calanderevent",{"_index":1165,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["newgroupform",{"_index":642,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["news",{"_index":1115,"title":{},"body":{"injectables/NotificationService.html":{}}}],["next:(n",{"_index":1256,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["ng",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":851,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["ngbcalendar",{"_index":328,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbcarouselmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbdate",{"_index":288,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate(d.getfullyear",{"_index":353,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{}}}],["ngbdate(e.end.getfullyear",{"_index":1190,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate(e.start.getfullyear",{"_index":1187,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate(x.end.getfullyear",{"_index":1198,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate(x.start.getfullyear",{"_index":1195,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdatepicker",{"_index":317,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbmodal",{"_index":653,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngbmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbnav",{"_index":667,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":275,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngonchanges(changes",{"_index":306,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngoninit",{"_index":519,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["ngoninit(){//given",{"_index":783,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["none",{"_index":1073,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["notfreeatall",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noti",{"_index":902,"title":{},"body":{"injectables/GroupService.html":{}}}],["notification",{"_index":1005,"title":{},"body":{"injectables/GroupService.html":{}}}],["notification.service",{"_index":927,"title":{},"body":{"injectables/GroupService.html":{}}}],["notificationservice",{"_index":903,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notipromise",{"_index":996,"title":{},"body":{"injectables/GroupService.html":{}}}],["notipromise]).then(_",{"_index":999,"title":{},"body":{"injectables/GroupService.html":{}}}],["null",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{}}}],["number",{"_index":297,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["number.isnan(d.valueof",{"_index":1400,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["number:number",{"_index":1140,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["object",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs.error(\"group",{"_index":969,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(result",{"_index":478,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["obs.next(this.dbtogroupinterface(data",{"_index":971,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(user!==null",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["obs.next(watchlist",{"_index":1446,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["observable",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["observable(obs",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["onaddclassification",{"_index":1218,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onaddclassification(ie",{"_index":1226,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onaddclassification(ie:idclasstype",{"_index":1244,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onchanges",{"_index":263,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclick",{"_index":826,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group",{"_index":831,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group:groupinterface",{"_index":834,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclickdate",{"_index":276,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date",{"_index":311,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date:ngbdate",{"_index":356,"title":{},"body":{"components/CalanderComponent.html":{}}}],["one",{"_index":1265,"title":{},"body":{"components/SearchPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["ongenre",{"_index":520,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["ongenre(e",{"_index":531,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["ongenre(e:idname",{"_index":563,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["oninit",{"_index":515,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["onremoveclassfication",{"_index":1219,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onremoveclassfication(ie",{"_index":1229,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onremoveclassfication(ie:idclasstype",{"_index":1248,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onsegment",{"_index":521,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e",{"_index":534,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e:idname",{"_index":559,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre",{"_index":522,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e",{"_index":536,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e:idname",{"_index":565,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["open",{"_index":646,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["openmodalemitter",{"_index":848,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["out",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":325,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupListComponent.html":{}}}],["outputs",{"_index":282,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupListComponent.html":{}}}],["overflow",{"_index":569,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["overview",{"_index":1580,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":571,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["package",{"_index":1499,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":376,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":844,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.html",{"_index":845,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts",{"_index":842,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1035,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:12",{"_index":1404,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["page.component.ts:13",{"_index":1403,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["page.component.ts:16",{"_index":1232,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:17",{"_index":866,"title":{},"body":{"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:18",{"_index":863,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:19",{"_index":867,"title":{},"body":{"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:20",{"_index":862,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:21",{"_index":864,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:22",{"_index":865,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:23",{"_index":854,"title":{},"body":{"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:24",{"_index":1036,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:25",{"_index":1154,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:27",{"_index":1156,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:28",{"_index":1155,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:29",{"_index":1146,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:31",{"_index":861,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:33",{"_index":1227,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:36",{"_index":1151,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:37",{"_index":1230,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:39",{"_index":1147,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:40",{"_index":1225,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:41",{"_index":859,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:44",{"_index":860,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:51",{"_index":1224,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:53",{"_index":1153,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:58",{"_index":856,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:63",{"_index":858,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:64",{"_index":1222,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:74",{"_index":1231,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:80",{"_index":1152,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:84",{"_index":1149,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page/classification",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["page/event",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["page/group",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"coverage.html":{}}}],["page/groupmember",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["page/grouppipe.pipe.ts",{"_index":1016,"title":{},"body":{"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe.ts:9",{"_index":1020,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["page/list",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/personal",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["page/search",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["page/watchlist",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page:pageinterface",{"_index":630,"title":{},"body":{"interfaces/EventPageInterface.html":{}}}],["page:undefined",{"_index":1377,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["pageinfo",{"_index":1214,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["pageinfo?:pageinterface",{"_index":1238,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["pageinterface",{"_index":629,"title":{"interfaces/PageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"interfaces/PageInterface.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["params.get('id",{"_index":883,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["params:query}).pipe",{"_index":1397,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["params:{apikey:ticketmasterapi",{"_index":1344,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["path",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group/:id",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"login",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"personalcalender",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"search",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"watchlist",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patriots",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["perhap",{"_index":1161,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["permission",{"_index":956,"title":{},"body":{"injectables/GroupService.html":{}}}],["personal",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["personalcalenderpagecomponent",{"_index":80,"title":{"components/PersonalCalenderPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pgnum",{"_index":1223,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["pipe",{"_index":1008,"title":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{}},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["pipe.pipe",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe.pipe.ts",{"_index":1010,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["pipe.pipe.ts:9",{"_index":1013,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["pipes",{"_index":1009,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1014,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{}}}],["platform",{"_index":1570,"title":{},"body":{"index.html":{}}}],["platformlocation",{"_index":747,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/TicketmasterService.html":{}}}],["please",{"_index":1117,"title":{},"body":{"injectables/NotificationService.html":{}}}],["pointer",{"_index":1071,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["popperjs/core",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":1048,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["presssearch",{"_index":1215,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["presssearch:eventemitter",{"_index":1243,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["priority",{"_index":797,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["private",{"_index":268,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/LoginPageComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["prod",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["prod.ts",{"_index":1496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1538,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["promise((res",{"_index":233,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise((res,rej",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{}}}],["promise(res",{"_index":465,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["promise.all([updatepromise",{"_index":998,"title":{},"body":{"injectables/GroupService.html":{}}}],["properly",{"_index":1002,"title":{},"body":{"injectables/GroupService.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"properties.html":{}}}],["protection",{"_index":979,"title":{},"body":{"injectables/GroupService.html":{}}}],["provideanimations",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["provideauth",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provideauth(()=>getauth",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["providefirebaseapp",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore(()=>getfirestore",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["provider).then((result",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pulling",{"_index":492,"title":{},"body":{"injectables/CalendarService.html":{}}}],["q",{"_index":468,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["queries",{"_index":1266,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["query",{"_index":439,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["query(calcollection",{"_index":469,"title":{},"body":{"injectables/CalendarService.html":{}}}],["query(grpcollection",{"_index":959,"title":{},"body":{"injectables/GroupService.html":{}}}],["query.apikey",{"_index":1396,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["queryparams",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":1065,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["radius:0",{"_index":1294,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["range",{"_index":775,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["reactiveformsmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":1401,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["redirectto:'/search",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1581,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":339,"title":{},"body":{"components/CalanderComponent.html":{}}}],["regarding",{"_index":1131,"title":{},"body":{"injectables/NotificationService.html":{}}}],["regards",{"_index":342,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rej(\"eh",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rej(\"group",{"_index":958,"title":{},"body":{"injectables/GroupService.html":{}}}],["rej.code",{"_index":1457,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["relative",{"_index":1304,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["reload",{"_index":1552,"title":{},"body":{"index.html":{}}}],["remove",{"_index":615,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removecalendarevent",{"_index":413,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removecalendarevent(calendarevent",{"_index":431,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removeevent",{"_index":588,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event",{"_index":595,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event:eventinterface",{"_index":602,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removefromgroup",{"_index":899,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromgroup(group",{"_index":920,"title":{},"body":{"injectables/GroupService.html":{}}}],["removewatchlistevent",{"_index":1413,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["removewatchlistevent(user",{"_index":1424,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["replaysubject",{"_index":322,"title":{},"body":{"components/CalanderComponent.html":{}}}],["res",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["res(user",{"_index":257,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reservedforevent",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reset",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":475,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["result.push(calevent",{"_index":506,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtocalendarevent(cal,user",{"_index":477,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtogroupinterface(grp",{"_index":963,"title":{},"body":{"injectables/GroupService.html":{}}}],["results",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1263,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["return",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["returnurl",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgb(2",{"_index":391,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(2",{"_index":396,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(26",{"_index":1306,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["right:0",{"_index":1060,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["route",{"_index":852,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["route:activatedroute",{"_index":874,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["router",{"_index":1034,"title":{},"body":{"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{}}}],["router.navigate(['login",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router:router",{"_index":1037,"title":{},"body":{"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":180,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rtn",{"_index":1394,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn.events",{"_index":1381,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn.page",{"_index":1379,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn:any",{"_index":1376,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["run",{"_index":1545,"title":{},"body":{"index.html":{}}}],["running",{"_index":1563,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["same",{"_index":995,"title":{},"body":{"injectables/GroupService.html":{},"components/SearchPageComponent.html":{}}}],["save",{"_index":735,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["saved",{"_index":1449,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["scaffolding",{"_index":1554,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":570,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["sd",{"_index":1383,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["search",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["searchevent",{"_index":1220,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["searchevent(){//this",{"_index":1264,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["searchpagecomponent",{"_index":83,"title":{"components/SearchPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sec",{"_index":1279,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["segment",{"_index":539,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["segment:idname",{"_index":575,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["segmentid:this.cid.filter((c)=>c.type==classtype.segment).map((x)=>x.id",{"_index":1267,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["segmentinterface",{"_index":581,"title":{"interfaces/SegmentInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["select",{"_index":1072,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["selectedevent",{"_index":643,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["selectedevent?:eventinterface",{"_index":690,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["send",{"_index":1004,"title":{},"body":{"injectables/GroupService.html":{}}}],["sendconfirmation",{"_index":1093,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmation(group",{"_index":1097,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest",{"_index":1094,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest(group",{"_index":1099,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail",{"_index":1095,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail(to",{"_index":1101,"title":{},"body":{"injectables/NotificationService.html":{}}}],["serve",{"_index":1546,"title":{},"body":{"index.html":{}}}],["server",{"_index":1544,"title":{},"body":{"index.html":{}}}],["service",{"_index":771,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["setbgcolor",{"_index":277,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date",{"_index":313,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date:ngbdate):string",{"_index":359,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setcolor",{"_index":744,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["setdoc",{"_index":447,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/WatchlistService.html":{}}}],["setdoc(watchdoc,update).then(_",{"_index":1458,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["side",{"_index":772,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["sign",{"_index":1043,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["signinwithpopup",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithpopup(this.auth",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["simplechanges",{"_index":307,"title":{},"body":{"components/CalanderComponent.html":{}}}],["size",{"_index":1134,"title":{},"body":{"interfaces/PageInterface.html":{},"components/SearchPageComponent.html":{}}}],["size:number",{"_index":1137,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["slt",{"_index":1280,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["solid",{"_index":1290,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["somefree",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sort",{"_index":794,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["split",{"_index":484,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/.../auth.guard.ts",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../calenderenum.ts",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../clasification",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../env",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../testdata.ts",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/calander/calander.component.ts",{"_index":261,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{}}}],["src/app/common/calander/calander.component.ts:15",{"_index":289,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:16",{"_index":285,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:17",{"_index":287,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:19",{"_index":291,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:20",{"_index":321,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:23",{"_index":323,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:24",{"_index":316,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:25",{"_index":284,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:31",{"_index":308,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:42",{"_index":294,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:45",{"_index":312,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:49",{"_index":314,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:59",{"_index":300,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:62",{"_index":304,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts",{"_index":1080,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/common/navigation/navigation.component.ts:10",{"_index":1084,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts:14",{"_index":1085,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/group",{"_index":633,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/calander",{"_index":330,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/clasification",{"_index":546,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/enums/calenderenum",{"_index":333,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{}}}],["src/app/interfaces/enums/calenderenum.ts",{"_index":1475,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/event",{"_index":617,"title":{},"body":{"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/interfaces/eventpage",{"_index":628,"title":{},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/interfaces/group",{"_index":448,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/interfaces/page",{"_index":1133,"title":{},"body":{"interfaces/PageInterface.html":{},"coverage.html":{}}}],["src/app/interfaces/testdata.ts",{"_index":1479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/user",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"interfaces/UserInterface.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/login",{"_index":1032,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service",{"_index":598,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/NavigationComponent.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts",{"_index":207,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:10",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:15",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:25",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:33",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:52",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/firestore/calendar.service",{"_index":765,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts",{"_index":408,"title":{},"body":{"injectables/CalendarService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:112",{"_index":432,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:12",{"_index":417,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:16",{"_index":424,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:28",{"_index":420,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:47",{"_index":427,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:64",{"_index":430,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:97",{"_index":434,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/group.service",{"_index":685,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{}}}],["src/app/network/firebase/firestore/group.service.ts",{"_index":894,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:113",{"_index":919,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:128",{"_index":921,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:13",{"_index":904,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:157",{"_index":913,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:166",{"_index":925,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:17",{"_index":910,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:180",{"_index":923,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:194",{"_index":906,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:43",{"_index":908,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:76",{"_index":917,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:96",{"_index":915,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts",{"_index":1092,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:13",{"_index":1103,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:30",{"_index":1100,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:46",{"_index":1098,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:8",{"_index":1096,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service",{"_index":599,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts",{"_index":1408,"title":{},"body":{"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:10",{"_index":1414,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:14",{"_index":1421,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:33",{"_index":1418,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:48",{"_index":1423,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:67",{"_index":1416,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:88",{"_index":1425,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service",{"_index":547,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts",{"_index":1313,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:114",{"_index":1330,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:15",{"_index":1321,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:22",{"_index":1333,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:27",{"_index":1324,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:51",{"_index":1326,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:84",{"_index":1328,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/personal",{"_index":1141,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["src/app/search",{"_index":513,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/ListEventsComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["src/app/watchlist",{"_index":1402,"title":{},"body":{"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["src/environments/env",{"_index":1335,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stadium",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":305,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start,enddate",{"_index":1192,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["start2",{"_index":1486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start3",{"_index":1487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start:new",{"_index":1176,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["start:ngbdate",{"_index":1186,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["start:start",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start2",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start3",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start?:string",{"_index":1166,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["startdate",{"_index":621,"title":{},"body":{"interfaces/EventInterface.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["startdate:new",{"_index":679,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["startdate:ngbdate",{"_index":767,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["startdate?:date",{"_index":625,"title":{},"body":{"interfaces/EventInterface.html":{}}}],["startdatetime:str}}).pipe",{"_index":1375,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["started",{"_index":1537,"title":{"index.html":{}},"body":{}}],["startime",{"_index":777,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["state",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.url",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1560,"title":{},"body":{"index.html":{}}}],["str",{"_index":1369,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["str.length",{"_index":1372,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["str.slice(0",{"_index":1371,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(evt",{"_index":705,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["subgenre",{"_index":541,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["subgenre:idname",{"_index":577,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subgenreid:this.cid.filter((c)=>c.type==classtype.subgenre).map((x)=>x.id",{"_index":1269,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["subgenres",{"_index":632,"title":{},"body":{"interfaces/GenreInterface.html":{}}}],["subgenres:idname",{"_index":584,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subscribe((d:ngbdate)=>this.onclickdate(d",{"_index":351,"title":{},"body":{"components/CalanderComponent.html":{}}}],["subscribe((x",{"_index":556,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["success",{"_index":729,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["support",{"_index":1582,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1583,"title":{},"body":{"modules.html":{}}}],["swift",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap",{"_index":543,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["switchmap((x:string",{"_index":554,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["table",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":329,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{}}}],["take(1",{"_index":350,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{}}}],["taken",{"_index":732,"title":{},"body":{"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["tap((x:boolean",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["test",{"_index":1566,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1574,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1565,"title":{},"body":{"index.html":{}}}],["text",{"_index":373,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["theses",{"_index":780,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["this.addclassification.emit({id:e.id",{"_index":560,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.auth.authstateready().then(_",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.displayname",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.email",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.uid",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.logingoogle().then(_",{"_index":1038,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.logout().then(_",{"_index":1041,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.onauthstatechanged((user",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.signout",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authapi.getcurrentuser().then",{"_index":694,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["this.authapi.getcurrentuser().then((u",{"_index":603,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.authapi.getcurrentuser().then((v:userinterface",{"_index":785,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.authapi.getcurrentuser().then((x",{"_index":1184,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.authapi.getcurrentuser().then(x",{"_index":875,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.authapi.isauthenticated().subscribe",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authapi.logout",{"_index":1087,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.baseurl",{"_index":1339,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.calsvc.addcalendarevent(e",{"_index":1183,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.calsvc.getcalendar(x).subscribe",{"_index":1185,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.calsvc.getgroupcalendar(this.group).subscribe",{"_index":790,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.calsvc.removecalendarevent(e",{"_index":1170,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cats",{"_index":557,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.chosen",{"_index":886,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.cid",{"_index":1249,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.cid.filter((c)=>c.id",{"_index":1250,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.classification.pipe",{"_index":552,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.clickeddate.next(date",{"_index":358,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.converttongbdate(new",{"_index":761,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.converttongbdate(this.group.event.startdate",{"_index":789,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.currentuser",{"_index":696,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.currentuser).then(_",{"_index":727,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.currentuser=x",{"_index":876,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.datecolor",{"_index":364,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.dbtocalendarevent(cal",{"_index":501,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.detail",{"_index":1173,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.em.subscribe(()=>this.open",{"_index":693,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.end",{"_index":1172,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.events",{"_index":791,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["this.events.sort((a,b)=>{//sort",{"_index":792,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["this.events=l",{"_index":1406,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.formbuilder.group",{"_index":670,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.getevents",{"_index":1252,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.groupclicked.emit(group",{"_index":835,"title":{},"body":{"components/GroupListComponent.html":{}}}],["this.groups",{"_index":878,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grpsvc.creategroup(grp.name",{"_index":725,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.grpsvc.getgroupbyid(id).subscribe({next:(x",{"_index":885,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grpsvc.getgroupbyid(this.group.id).subscribe(x=>this.group",{"_index":787,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grpsvc.getgroups(x).subscribe(y",{"_index":877,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.http.get(this.baseurl+\"/\"+\"classifications.json",{"_index":1343,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.http.get(this.baseurl+\"/events.json",{"_index":1374,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.invaliddate(sd",{"_index":1391,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.isbetween(start.day",{"_index":1206,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.isbetween(start.month",{"_index":1203,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.isbetween(start.year",{"_index":1200,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.lastclickeddate.next(date",{"_index":357,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.lastclickeddate.pipe",{"_index":349,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.loadedevents",{"_index":1260,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.modalservice.dismissall",{"_index":714,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.modalservice.open(this.content,{centered:true",{"_index":701,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.navstuff?.select(2",{"_index":887,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.newgroupform.patchvalue",{"_index":712,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.newgroupform.value",{"_index":716,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.noti.sendconfirmation(group",{"_index":997,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.noti.sendconfirmation(group).then(_",{"_index":1007,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.noti.sendconfirmationrequest(group).then(_",{"_index":989,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.pageinfo",{"_index":1257,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.pageinfo!.number",{"_index":1274,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.pageinfo!.number+=1",{"_index":1259,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.platformlocation",{"_index":1340,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.route.parammap.subscribe(params",{"_index":881,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1040,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.router.navigate([\"login",{"_index":1088,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.navigatebyurl",{"_index":1039,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.sendemail(emaillist,{subject",{"_index":1125,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.setcolor",{"_index":784,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.start",{"_index":1171,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.tmapi.getclassification(x",{"_index":555,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.tmapi.getevents().subscribe",{"_index":1255,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.tmapi.geteventsquery(query).subscribe((x",{"_index":1271,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.watchlist",{"_index":699,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["this.watchlistsvc.addwatchlistevent(u,event",{"_index":606,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.watchlistsvc.getwatchlist(u).subscribe((es:eventinterface",{"_index":698,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.watchlistsvc.getwatchlist(u).subscribe(l",{"_index":1405,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.watchlistsvc.getwatchlist(x).subscribe",{"_index":1253,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.watchlistsvc.removewatchlistevent(u,event",{"_index":604,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["throw(rej",{"_index":1459,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["throwerror",{"_index":1337,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ticket",{"_index":1089,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["ticketbuddy",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ticketmasterapi",{"_index":1334,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ticketmasterservice",{"_index":525,"title":{"injectables/TicketmasterService.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["tickets",{"_index":1124,"title":{},"body":{"injectables/NotificationService.html":{}}}],["time",{"_index":793,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["tmapi",{"_index":527,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["tmapi:ticketmasterservice",{"_index":551,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["to.length",{"_index":1108,"title":{},"body":{"injectables/NotificationService.html":{}}}],["today",{"_index":1368,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["today.toisostring",{"_index":1370,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["togglegroupconfirmation",{"_index":900,"title":{},"body":{"injectables/GroupService.html":{}}}],["togglegroupconfirmation(group",{"_index":922,"title":{},"body":{"injectables/GroupService.html":{}}}],["top",{"_index":1067,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["top:0",{"_index":1050,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["toremove",{"_index":981,"title":{},"body":{"injectables/GroupService.html":{}}}],["totalelements",{"_index":1135,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["totalelements:number",{"_index":1138,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["totalpages",{"_index":1136,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["totalpages:number",{"_index":1139,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["transform",{"_index":1011,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["transform(members",{"_index":1012,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(members:userinterface",{"_index":1015,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(value",{"_index":1018,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["transform(value:groupinterface",{"_index":1021,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["translate",{"_index":1052,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["true",{"_index":992,"title":{},"body":{"injectables/GroupService.html":{}}}],["tslib",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:calandertype.personal",{"_index":1181,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"miscellaneous/variables.html":{}}}],["type:classtype",{"_index":580,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["type:classtype.segment",{"_index":562,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["typeof",{"_index":455,"title":{},"body":{"injectables/CalendarService.html":{}}}],["u",{"_index":697,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["u:userinterface",{"_index":695,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["uid",{"_index":459,"title":{},"body":{"injectables/CalendarService.html":{}}}],["undefined",{"_index":318,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["unit",{"_index":1564,"title":{},"body":{"index.html":{}}}],["up",{"_index":486,"title":{},"body":{"injectables/CalendarService.html":{}}}],["update",{"_index":509,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["update).then(_",{"_index":511,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["update.confirmed",{"_index":991,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatecalendarevent",{"_index":414,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatecalendarevent(calendarevent",{"_index":433,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updated",{"_index":1003,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatedoc",{"_index":443,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["updatedoc(caldoc",{"_index":510,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatedoc(grpdoc",{"_index":977,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatedoc(watchdoc",{"_index":1455,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["updateform",{"_index":647,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["updateform(evt",{"_index":660,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["updateform(evt:eventinterface",{"_index":703,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["updategroupdate",{"_index":901,"title":{},"body":{"injectables/GroupService.html":{}}}],["updategroupdate(group",{"_index":924,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatepromise",{"_index":993,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatepromise.then(_",{"_index":1006,"title":{},"body":{"injectables/GroupService.html":{}}}],["ur@brother.com",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@father.com",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@mother.com",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@sister.com",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1556,"title":{},"body":{"index.html":{}}}],["user",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["user.id",{"_index":984,"title":{},"body":{"injectables/GroupService.html":{}}}],["user1",{"_index":1488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user2",{"_index":1489,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user3",{"_index":1490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user4",{"_index":1491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user:this.currentuser",{"_index":1175,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["user:userinterface",{"_index":974,"title":{},"body":{"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{}}}],["user:{name:\"john",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userinterface",{"_index":227,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/UserInterface.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinterface|undefined",{"_index":982,"title":{},"body":{"injectables/GroupService.html":{}}}],["username",{"_index":807,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["v",{"_index":786,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["validators",{"_index":684,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["validators.required",{"_index":672,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.filter((e:groupinterface)=>e.admin.id!=user.id",{"_index":1025,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["value.filter((e:groupinterface)=>e.admin.id==user.id",{"_index":1024,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["var",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{}}}],["variable",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1163,"title":{"miscellaneous/variables.html":{}},"body":{"components/PersonalCalenderPageComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1541,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["viewchild",{"_index":326,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild(\"dp",{"_index":345,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild('content",{"_index":664,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild('dp",{"_index":320,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild(ngbnav",{"_index":668,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["void",{"_index":310,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["watchdoc",{"_index":1443,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["watchlist.push(this.dbwatchlisttoevent(event",{"_index":1448,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist/${user.id",{"_index":1444,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist:eventinterface",{"_index":688,"title":{},"body":{"components/GroupCreateComponent.html":{},"injectables/WatchlistService.html":{}}}],["watchlist:string",{"_index":1031,"title":{},"body":{"components/ListEventsComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["watchlistevent",{"_index":1427,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.details",{"_index":1431,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.enddate",{"_index":1433,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.images",{"_index":1430,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.location",{"_index":1429,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.name",{"_index":1428,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.startdate",{"_index":1432,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistpagecomponent",{"_index":85,"title":{"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["watchlistservice",{"_index":591,"title":{"injectables/WatchlistService.html":{}},"body":{"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["watchlistsvc",{"_index":590,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["weight",{"_index":1298,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["where(\"alluuid\",\"array",{"_index":960,"title":{},"body":{"injectables/GroupService.html":{}}}],["where(\"end",{"_index":493,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"start",{"_index":491,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"==\",user.id",{"_index":470,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"in\",group.alluuid",{"_index":479,"title":{},"body":{"injectables/CalendarService.html":{}}}],["white",{"_index":394,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{}}}],["width",{"_index":384,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["wrn",{"_index":1295,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["x",{"_index":558,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["x._embedded",{"_index":1380,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x._embedded.classifications",{"_index":1351,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.end.getmonth()+1,x.end.getdate",{"_index":1199,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["x.events",{"_index":1275,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["x.events.map((e:any",{"_index":1382,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.page",{"_index":1273,"title":{},"body":{"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["x.page.totalelements>0",{"_index":1347,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.start.getmonth()+1,x.start.getdate",{"_index":1196,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["y",{"_index":879,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["y4q5tlebgb",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":1054,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["zone.js",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ticketbuddy'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from './network/firebase/authentication/authentication.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ticketbuddy';\n  isAuth = false;\n  constructor(private authApi:AuthenticationService){\n    this.authApi.isAuthenticated().subscribe(\n      (n)=>this.isAuth = n\n    );\n  }\n}\n\n    \n\n    \n        \n\t\n \n\n\n  \n\t\n\t\t\n\t\n\n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t   \t\t\t\t  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nGrouppipePipe\n\nGrouppipePipe\n\nAppModule -->\n\nGrouppipePipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CalanderComponent\n                        \n                        \n                            ClassificationComponentComponent\n                        \n                        \n                            EventComponentComponent\n                        \n                        \n                            GroupCreateComponent\n                        \n                        \n                            GroupDetailComponent\n                        \n                        \n                            GroupListComponent\n                        \n                        \n                            GroupPageComponent\n                        \n                        \n                            GroupmemberPipePipe\n                        \n                        \n                            GrouppipePipe\n                        \n                        \n                            ListEventsComponent\n                        \n                        \n                            LoginPageComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PersonalCalenderPageComponent\n                        \n                        \n                            SearchPageComponent\n                        \n                        \n                            WatchlistPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(firebaseConfig)).html\">provideFirebaseApp(() => initializeApp(firebaseConfig))\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ListEventsComponent } from './search-page/list-events/list-events.component';\nimport { EventComponentComponent } from './search-page/event-component/event-component.component';\n\n// Firebase\nimport { firebaseConfig } from '../environments/env-prod'\nimport { provideFirebaseApp, initializeApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { getAuth, provideAuth } from '@angular/fire/auth';\n\nimport { provideAnimations, BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { GroupListComponent } from './group-page/group-list/group-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GrouppipePipe } from './group-page/grouppipe.pipe';\nimport { GroupDetailComponent } from './group-page/group-detail/group-detail.component';\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { CalanderComponent } from './common/calander/calander.component';\n\nimport { GroupmemberPipePipe } from './group-page/groupmember-pipe.pipe';\nimport { NavigationComponent } from './common/navigation/navigation.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { GroupCreateComponent } from './group-page/group-create/group-create.component';\nimport { ClassificationComponentComponent } from './search-page/classification-component/classification-component.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ListEventsComponent,\n        EventComponentComponent,\n        SearchPageComponent,\n        GroupPageComponent,\n        GroupListComponent,\n        GrouppipePipe,\n        GroupDetailComponent,\n        PersonalCalenderPageComponent,\n        WatchlistPageComponent,\n        GroupmemberPipePipe,\n        CalanderComponent,\n        NavigationComponent,\n        LoginPageComponent,\n        GroupCreateComponent,\n        ClassificationComponentComponent\n    ],\n    providers: [provideAnimations()],\n    bootstrap: [AppComponent],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        NgbCarouselModule,\n        FormsModule,\n        ReactiveFormsModule,\n        // Firebase\n        provideFirebaseApp(() => initializeApp(firebaseConfig)),\n        provideAuth(()=>getAuth()),\n        provideFirestore(()=>getFirestore()),\n        BrowserAnimationsModule,\n\n    ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport {authGuard} from \"./guards/auth.guard\";\nconst routes: Routes = [\n  {path:\"personalcalender\", component:PersonalCalenderPageComponent, canActivate:[authGuard]},\n  {path:\"search\", component:SearchPageComponent, canActivate:[authGuard]},\n  {path:\"group\", component:GroupPageComponent, canActivate:[authGuard]},\n  {path:\"group/:id\", component:GroupPageComponent, canActivate:[authGuard]},//for joining via link\n  {path:\"watchlist\", component:WatchlistPageComponent, canActivate:[authGuard]},\n  {path:\"login\", component:LoginPageComponent},\n  {path:'', redirectTo:'/search', pathMatch:'full'}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                loginGoogle\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/authentication/authentication.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginGoogle\n                        \n                    \n                \n            \n            \n                \nloginGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Auth, GoogleAuthProvider} from '@angular/fire/auth';\nimport { signInWithPopup } from 'firebase/auth';\nimport { Observable } from 'rxjs';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  \n  constructor(private auth: Auth) { \n  \n  }\n  loginGoogle(): Promise {\n    return new Promise((res)=>{\n      let provider = new GoogleAuthProvider();\n      signInWithPopup(this.auth, provider).then((result)=>{\n        console.log(result);\n        res();\n      });\n    });\n  }\n\n  logOut(): Promise {\n    return new Promise((res)=>{\n      this.auth.signOut();\n      console.log(\"signout\")\n      res();\n    });\n  }\n\n  getCurrentUser():Promise{\n\n    return new Promise((res,rej)=>{\n      this.auth.authStateReady().then(_=>{\n        if (this.auth.currentUser === null) {\n          rej(\"eh buto login first lah cb\");\n          return;\n        }\n        let user =  {\n          id: this.auth.currentUser.uid,\n          name: this.auth.currentUser.displayName,\n          email: this.auth.currentUser.email\n        };\n        res(user);\n      })\n    })\n   \n  }\n\n  isAuthenticated(): Observable{\n    return new Observable(obs=>{\n      this.auth.onAuthStateChanged((user)=>{\n        obs.next(user!==null);\n      })\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalanderComponent.html":{"url":"components/CalanderComponent.html","title":"component - CalanderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalanderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/calander/calander.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calander\n            \n\n\n\n            \n                styleUrls\n                ./calander.component.css\n            \n\n\n\n            \n                templateUrl\n                ./calander.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                    \n                                    Private\n                                dp\n                            \n                            \n                                hoveredDate\n                            \n                            \n                                lastClickedDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToNgbDate\n                            \n                            \n                                    Private\n                                isBetween\n                            \n                            \n                                    Private\n                                isInside\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onClickDate\n                            \n                            \n                                setBGColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateColor\n                            \n                            \n                                events\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickedDate\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/calander/calander.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dateColor\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateTo\n                    \n                \n                \n                    \n                        Type :     NgbDate\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickedDate\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToNgbDate\n                        \n                    \n                \n            \n            \n                \nconvertToNgbDate(d: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBetween\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBetween(a: number, b: number, c: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                c\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInside\n                        \n                    \n                \n            \n            \n                \n                        \n                    isInside(start: NgbDate, date: NgbDate, end: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickDate\n                        \n                    \n                \n            \n            \n                \nonClickDate(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBGColor\n                        \n                    \n                \n            \n            \n                \nsetBGColor(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgbCalendar)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        dp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDatepicker | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dp')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoveredDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDate | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastClickedDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild, inject} from '@angular/core';\nimport { NgbCalendar, NgbDate, NgbDatepicker } from '@ng-bootstrap/ng-bootstrap';\nimport { ReplaySubject, take } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor } from 'src/app/interfaces/enums/calenderenum';\n\n@Component({\n  selector: 'app-calander',\n  templateUrl: './calander.component.html',\n  styleUrls: ['./calander.component.css']\n})\nexport class CalanderComponent implements OnChanges{\n\t//list of events \n\t//then a map for date -> CalanderColor\n\t@Input() navigateTo!:NgbDate;\n\t@Input() dateColor!: [[NgbDate, NgbDate], CalanderColor][];\n\t@Input() events!:CalanderEvent[];//should have a listernere here so when events refresh will change the clickedDate output\n\t//return the listof event with regards to dates clicked \n\t@Output() clickedDate = new EventEmitter();\n\t@ViewChild(\"dp\") private dp:NgbDatepicker|undefined;\n\t\n\t//here the output will be changed if this calander is for \n\tlastClickedDate = new ReplaySubject();\n  \tcalendar = inject(NgbCalendar);\n\thoveredDate: NgbDate | null = null;\n\tconstructor(){\n\n\t}\n\t\n\t\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif(changes[\"events\"]){\n\t\t\tthis.lastClickedDate.pipe(\n\t\t\t\ttake(1),\n\t\t\t).subscribe((d:NgbDate)=>this.onClickDate(d));\n\t\t}\n\t\n\t}\n\n\t\n\t\n\tconvertToNgbDate(d:Date){\n\t\treturn new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n\t}\n\tonClickDate(date:NgbDate){\n\t\tthis.lastClickedDate.next(date);\n\t\tthis.clickedDate.next(date);\n\t}\n\tsetBGColor(date:NgbDate):string{\n\t\t//check amonst all keys in dateColor map\n\t\tfor( var e of this.dateColor){\n\t\t\tif(this.isInside(e[0][0],date,e[0][1])){\n\t\t\t\treturn e[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn \"\"\n\t}\n\tprivate isBetween(a:number, b:number, c:number){\n\t\treturn a\n    \n\n    \n        \n\n\n\n\n\t\n\t\t{{ date.day }}\n\t\n\n    \n\n    \n                \n                    ./calander.component.css\n                \n                .custom-day {\n    text-align: center;\n    padding: 0.185rem 0.25rem;\n    display: inline-block;\n    height: 2rem;\n    width: 2rem;\n}\n.custom-day.focused {\n    background-color: #e6e6e6;\n}\n.custom-day.range,\n.custom-day:hover {\n    background-color: rgb(2, 117, 216);\n    color: white;\n}\n.custom-day.faded {\n    background-color: rgba(2, 117, 216, 0.5);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ date.day }}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalanderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEvent.html":{"url":"interfaces/CalanderEvent.html","title":"interface - CalanderEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            detail\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         CalanderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEventColor.html":{"url":"interfaces/CalanderEventColor.html","title":"interface - CalanderEventColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEventColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bgColor\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bgColor:         CalanderColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         CalanderEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarService.html":{"url":"injectables/CalendarService.html","title":"injectable - CalendarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/calendar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCalendarEvent\n                            \n                            \n                                    Private\n                                dbToCalendarEvent\n                            \n                            \n                                getCalendar\n                            \n                            \n                                getGroupCalendar\n                            \n                            \n                                removeCalendarEvent\n                            \n                            \n                                updateCalendarEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/calendar.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCalendarEvent\n                        \n                    \n                \n            \n            \n                \naddCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToCalendarEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToCalendarEvent(dbCalEnt: DocumentData | , user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbCalEnt\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderEvent\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalendar\n                        \n                    \n                \n            \n            \n                \ngetCalendar(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupCalendar\n                        \n                    \n                \n            \n            \n                \ngetGroupCalendar(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCalendarEvent\n                        \n                    \n                \n            \n            \n                \nremoveCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCalendarEvent\n                        \n                    \n                \n            \n            \n                \nupdateCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, and, deleteDoc, setDoc} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderType } from 'src/app/interfaces/enums/calenderenum';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n\n  constructor(private fs: Firestore) { }\n\n  private dbToCalendarEvent(dbCalEnt: DocumentData | DocumentData & {id: string;}, user: UserInterface): CalanderEvent \n  { \n    return { \n      id: dbCalEnt[\"id\"],\n      user: user, \n      start: dbCalEnt[\"start\"].toDate(), \n      end: dbCalEnt[\"end\"].toDate(), \n      detail: dbCalEnt[\"detail\"], \n      type: CalanderType[dbCalEnt[\"type\"] as keyof typeof CalanderType] \n    } \n  } \n\n  addCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n\n    let calDoc = {\n      uid: calendarEvent.user.id,\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n\n    return new Promise(res=>{\n      addDoc(calCollection, calDoc).then((docRef: DocumentReference)=>{\n       \n        res();\n      });\n    })\n  }\n\n  getCalendar(user: UserInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, where(\"uid\",\"==\",user.id));\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            result.push(this.dbToCalendarEvent(cal,user));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  getGroupCalendar(group: GroupInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, and(\n      where(\"uid\",\"in\",group.allUUID), //Limited to 29 members, can increase if we split the calls up.\n      // inequalities on multiple fields not allowed\n      // where(\"start\", \"=\", start)\n      // pulling calendar events that have yet to end\n      where(\"end\", \">\" , new Date())\n    ));\n\n    let allUserMap:any = {}\n    allUserMap[group.admin.id] = group.admin;\n    group.members.forEach(member => {\n      allUserMap[member.id] = member;\n    });\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            let calEvent = this.dbToCalendarEvent(cal, allUserMap[cal[\"uid\"]]);\n            if(!group.event.endDate || !group.event.startDate) return;\n            if (calEvent.start = group.event.startDate)\n              result.push(calEvent);\n          });\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  updateCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    let update = {\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n    return new Promise(res=>{\n      updateDoc(calDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n  \n  removeCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    return new Promise(res=>{\n      deleteDoc(calDoc).then(birdbird=>{\n        res();\n      })\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassificationComponentComponent.html":{"url":"components/ClassificationComponentComponent.html","title":"component - ClassificationComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassificationComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/classification-component/classification-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classification-component\n            \n\n\n\n            \n                styleUrls\n                ./classification-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./classification-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGenre\n                            \n                            \n                                onSegment\n                            \n                            \n                                onSubGenre\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                classification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addClassification\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tmApi: TicketmasterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/classification-component/classification-component.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tmApi\n                                                  \n                                                        \n                                                                        TicketmasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        classification\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/classification-component/classification-component.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addClassification\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/classification-component/classification-component.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGenre\n                        \n                    \n                \n            \n            \n                \nonGenre(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSegment\n                        \n                    \n                \n            \n            \n                \nonSegment(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubGenre\n                        \n                    \n                \n            \n            \n                \nonSubGenre(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassificationInterface\n\n                    \n                \n                \n                    \n                        Default value : {segment:[], genre:[], subGenre:[]}\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/classification-component/classification-component.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { debounceTime, switchMap } from 'rxjs';\nimport { ClassType, ClassificationInterface, IdClassType, IdName } from 'src/app/interfaces/clasification-interface';\nimport { TicketmasterService } from 'src/app/network/ticketmaster/ticketmaster.service';\n\n@Component({\n  selector: 'app-classification-component',\n  templateUrl: './classification-component.component.html',\n  styleUrls: ['./classification-component.component.css']\n})\nexport class ClassificationComponentComponent implements OnInit{\n  @Input() classification:EventEmitter = new EventEmitter();\n  @Output() addClassification:EventEmitter = new EventEmitter();\n  cats:ClassificationInterface = {segment:[], genre:[], subGenre:[]};\n  constructor(private tmApi:TicketmasterService){\n    \n  }\n  ngOnInit(){\n    this.classification.pipe(\n      debounceTime(500),\n      switchMap((x:string)=>{\n        return this.tmApi.getClassification(x);\n      })\n    ).subscribe((x)=>{\n      this.cats = x;\n    });\n  }\n  onSegment(e:IdName){\n    this.addClassification.emit({id:e.id, name:e.name, type:ClassType.Segment});\n  }\n  onGenre(e:IdName){\n    this.addClassification.emit({id:e.id, name:e.name,type:ClassType.Genre});\n  }\n  onSubGenre(e:IdName){\n    this.addClassification.emit({id:e.id, name:e.name,type:ClassType.Subgenre});\n  }\n\n}\n\n    \n\n    \n        0||cats.subGenre.length>0 ||cats.genre.length>0\" class=\" overflow-x-scroll p-2 mb-2\">\n    {{c.name}}\n    {{c.name}}\n    {{c.name}}\n\n    \n\n    \n                \n                    ./classification-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '0||cats.subGenre.length>0 ||cats.genre.length>0\" class=\" overflow-x-scroll p-2 mb-2\">    {{c.name}}    {{c.name}}    {{c.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClassificationComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationInterface.html":{"url":"interfaces/ClassificationInterface.html","title":"interface - ClassificationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            segment\n                                        \n                                \n                                \n                                        \n                                            subGenre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segment:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subGenre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventComponentComponent.html":{"url":"components/EventComponentComponent.html","title":"component - EventComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/event-component/event-component.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-component\n            \n\n\n\n            \n                styleUrls\n                ./event-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                removeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                inWatchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/event-component/event-component.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inWatchlist\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEvent\n                        \n                    \n                \n            \n            \n                \naddEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEvent\n                        \n                    \n                \n            \n            \n                \nremoveEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { EventInterface } from '../../interfaces/event-interface';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\nimport { WatchlistService } from 'src/app/network/firebase/firestore/watchlist.service';\n\n@Component({\n  selector: 'app-event-component',\n  templateUrl: './event-component.component.html',\n  styleUrls: ['./event-component.component.css']\n})\nexport class EventComponentComponent {\n  @Input() inWatchlist!:boolean;\n  @Input() event!:EventInterface;\n  constructor(\n    private authApi:AuthenticationService, \n    private watchlistSvc: WatchlistService\n  ){}\n  \n  removeEvent(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.removeWatchlistEvent(u,event);\n    });\n  }\n\n  addEvent(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.addWatchlistEvent(u,event);\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            \n                \n                \n            \n        \n          \n                          \n    \n    \n      {{event.name}}\n      Location: {{event.location}}\n      {{event.details}}\n      \n      {{event.startDate | date:'medium'}} - {{event.endDate | date:'medium'}}\n      Add to watchlist\n    \n        Remove from watchlist\n      \n      \n  \n    \n\n    \n                \n                    ./event-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      {{event.name}}      Location: {{event.location}}      {{event.details}}            {{event.startDate | date:\\'medium\\'}} - {{event.endDate | date:\\'medium\\'}}      Add to watchlist            Remove from watchlist              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventInterface.html":{"url":"interfaces/EventInterface.html","title":"interface - EventInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            details\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventPageInterface.html":{"url":"interfaces/EventPageInterface.html","title":"interface - EventPageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventPageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/eventpage-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            events\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events:         EventInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         PageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { PageInterface } from \"./page-interface\";\n\nexport interface EventPageInterface {\n    page:PageInterface,\n    events:EventInterface[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenreInterface.html":{"url":"interfaces/GenreInterface.html","title":"interface - GenreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GenreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            subgenres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        subgenres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subgenres:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCreateComponent.html":{"url":"components/GroupCreateComponent.html","title":"component - GroupCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-create/group-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-create\n            \n\n\n\n            \n                styleUrls\n                ./group-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeResult\n                            \n                            \n                                    \n                                    Private\n                                content\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                    \n                                    Private\n                                navStuff\n                            \n                            \n                                newGroupForm\n                            \n                            \n                                    Optional\n                                selectedEvent\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                em\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, formBuilder: FormBuilder, grpSvc: GroupService, modalService: NgbModal, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-create/group-create.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        em\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-create/group-create.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n            \n                \nupdateForm(evt: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModal | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        navStuff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbNav | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgbNav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newGroupForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n\t\tname:['rrr', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['rrr', Validators.required],\n\t\t\tdetails:new FormControl(\"\"),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\nimport { GroupService } from 'src/app/network/firebase/firestore/group.service';\nimport { WatchlistService } from 'src/app/network/firebase/firestore/watchlist.service';\n\n@Component({\n  selector: 'app-group-create',\n  templateUrl: './group-create.component.html',\n  styleUrls: ['./group-create.component.css']\n})\nexport class GroupCreateComponent implements OnInit{\n\t@ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n\t@ViewChild('content') private content:NgbModal | undefined; \n\t\tcloseResult = '';\n\t@Input() em!:EventEmitter;\n\twatchlist:EventInterface[] = [];\n\tcurrentUser?:UserInterface;\n\tselectedEvent?:EventInterface;\n\tnewGroupForm = this.formBuilder.group({\n\t\tname:['rrr', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['rrr', Validators.required],\n\t\t\tdetails:new FormControl(\"\"),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t});\n\t\n\t\n\tconstructor(\n\t\tprivate authApi:AuthenticationService,\n\t\tprivate formBuilder:FormBuilder,\n\t\tprivate grpSvc: GroupService,\n\t\tprivate modalService:NgbModal,\n\t\tprivate watchlistSvc: WatchlistService\n\t){}\n\t\n\tngOnInit(){\n\t\tthis.em.subscribe(()=>this.open());\n\t\tthis.authApi.getCurrentUser().then(\n\t\t\t(u:UserInterface)=>{\n\t\t\t\tthis.currentUser = u;\n\t\t\t\tthis.watchlistSvc.getWatchlist(u).subscribe((es:EventInterface[])=>{\n\t\t\t\t\tthis.watchlist = es;\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t}\n\t\t)\n\t}\n\topen() {\n\t\tthis.modalService.open(this.content,{centered:true, fullscreen:true});\n\t}\n\tupdateForm(evt:EventInterface){\n\t\t\n\t\t\n\t\tvar n:any = structuredClone(evt);\n\n\t\tif(evt.startDate) n.startDate = evt.startDate.toISOString().slice(0,-8);\n\t\tif(evt.endDate) n.startDate = evt.endDate.toISOString().slice(0,-8);\n\t\t\n\t\tthis.newGroupForm.patchValue(\n\t\t{\n\t\t\tevent:n\n\t\t});\n\t}\n\tclose(){\n\t\tthis.modalService.dismissAll();\n\t}\n\tcreateGroup(){\n\t\tvar grp:any = this.newGroupForm.value;\n\t\tgrp.event.startDate = new Date(grp.event.startDate);\n\t\tgrp.event.endDate = new Date(grp.event.endDate);\n\t\tif(grp.event.startDate>=grp.event.endDate){\n\t\t\tconsole.log(\"GOT ERROR\");\n\t\t\treturn;\n\t\t}\n\t\tif(this.currentUser) {\n\t\t\tthis.grpSvc.createGroup(grp.name, grp.event as EventInterface, this.currentUser).then(_=>{\n\t\t\t\t// group creation success.\n\t\t\t}).catch(err=>{\n\t\t\t\tif (err===\"group-name-taken\"){\n\t\t\t\t\t// group name taken.\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\t\n}\n\n    \n\n    \n        \n\t\n\t\tNew Group\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t  Group Name\n\t\t\t  \n\t\t\t\t\n\t\t\t  \n\t\t\t\n\t\t\t\n\t\t\t\tChooose Event\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{evt.name}}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t  \n\t\t\t  \n\t\t\t\n\t\t\t\tEvent Details\n\t\t\t\t\n\t\t\t\t\tEvent Name\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEvent details\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tStart Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEnd Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\n\t\t  \n\t\n\t\n\t\tSave\n\t\n\n\n\n\n    \n\n    \n                \n                    ./group-create.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tNew Group\t\t\t\t\t\t\t\t\t\t\t\t  Group Name\t\t\t  \t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\tChooose Event\t\t\t\t\t\t\t\t\t\t\t\t\t{{evt.name}}\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t  \t\t\t\t\t\t\tEvent Details\t\t\t\t\t\t\t\t\tEvent Name\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEvent details\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tStart Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEnd Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t\t  \t\t\t\tSave\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupDetailComponent.html":{"url":"components/GroupDetailComponent.html","title":"component - GroupDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-detail/group-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-detail\n            \n\n\n\n            \n                styleUrls\n                ./group-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                dateColor\n                            \n                            \n                                events\n                            \n                            \n                                evts\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToNgbDate\n                            \n                            \n                                copyInviteLink\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, calSvc: CalendarService, clipboard: Clipboard, grpSvc: GroupService, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipboard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-detail/group-detail.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToNgbDate\n                        \n                    \n                \n            \n            \n                \nconvertToNgbDate(d: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NgbDate\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyInviteLink\n                        \n                    \n                \n            \n            \n                \ncopyInviteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColor\n                        \n                    \n                \n            \n            \n                \nsetColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         CalanderColor\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        evts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDate\n\n                    \n                \n                \n                    \n                        Default value : this.convertToNgbDate(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\nimport {Clipboard} from '@angular/cdk/clipboard';\nimport { PlatformLocation } from '@angular/common';\nimport { CalanderColor, CalanderTypePriority } from 'src/app/interfaces/enums/calenderenum';\nimport { GroupService } from 'src/app/network/firebase/firestore/group.service';\nimport { CalendarService } from 'src/app/network/firebase/firestore/calendar.service';\n\n@Component({\n  selector: 'app-group-detail',\n  templateUrl: './group-detail.component.html',\n  styleUrls: ['./group-detail.component.css']\n})\nexport class GroupDetailComponent implements OnInit {\n  @Input() group!:GroupInterface;\n  startDate:NgbDate = this.convertToNgbDate(new Date());\n  events:CalanderEvent[] = [];//needs to be fileter at service side\n  evts:CalanderEvent[] = [];\n  dateColor:[[NgbDate,NgbDate], CalanderColor][] = [];//should be date range better\n  //events: startime, endtime\n  //\n  currentUser:UserInterface|null = null;\n  \n  //theses events are events for \n  \n  \n  constructor(\n    private authApi:AuthenticationService, \n    private calSvc: CalendarService,\n    private clipboard:Clipboard,\n    private grpSvc: GroupService,\n    private platformLocation: PlatformLocation,\n  ){}\n\n  convertToNgbDate(d:Date):NgbDate{\n    return new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n  }\n  ngOnInit(){//given the events of that group\n     //this.setColor();\n    this.authApi.getCurrentUser().then((v:UserInterface)=>{\n      this.currentUser =v;\n    });\n   \n    this.grpSvc.getGroupById(this.group.id).subscribe(x=>this.group = x);\n    if(this.group.event.startDate)this.startDate = this.convertToNgbDate(this.group.event.startDate);\n    this.calSvc.getGroupCalendar(this.group).subscribe(\n      x=>{\n        this.events = x;\n        this.events.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n          if(a.start i.user.id))].length;\n    if (cmiCount==this.group.members.length)return CalanderColor.NotFreeAtAll\n    return CalanderColor.SomeFree\n    \n  }\n   \n}\n\n    \n\n    \n        \n\n\n    {{group.name}}\n\n\n    {{group.event.name}}\n\n\n    {{group.event.startDate}} - {{group.event.endDate}}\n\n\nInvite Link\n\n\n    \n        \n            \n                \n                    \n                        Username\n                        Kick\n                    \n                \n                \n                    \n                        {{ m.name }} \n                        Kick\n                          \n                \n            \n        \n        \n            Delete Group\n        \n    \n\n\n    \n\n\n\n    \n        \n            \n                Username\n                Event Detail\n                Start Time\n                End Time\n            \n        \n        \n           \n                {{e.user.name}}\n                {{e.detail}}\n                {{e.start}}\n                {{e.end}}     \n           \n           \n        \n    \n\n\n\n    JOIN GROUP\n\n\n\n    \n\n    \n                \n                    ./group-detail.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{group.name}}    {{group.event.name}}    {{group.event.startDate}} - {{group.event.endDate}}Invite Link                                                                                    Username                        Kick                                                                                                {{ m.name }}                         Kick                                                                                  Delete Group                                                        Username                Event Detail                Start Time                End Time                                                       {{e.user.name}}                {{e.detail}}                {{e.start}}                {{e.end}}                                           JOIN GROUP'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/group-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            allUUID\n                                        \n                                \n                                \n                                        \n                                            booked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allUUID:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        booked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        booked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         EventInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         UserInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { UserInterface } from \"./user-interface\";\n\nexport interface GroupInterface {\n    id: string;\n    name:string;\n    event:EventInterface;\n    admin: UserInterface;\n    members:UserInterface[];\n    confirmed:string[];\n    booked: boolean;\n    allUUID: string[]; \n    date?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupListComponent.html":{"url":"components/GroupListComponent.html","title":"component - GroupListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-list/group-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-list\n            \n\n\n\n            \n                styleUrls\n                ./group-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groups\n                    \n                \n                \n                    \n                        Type :         GroupInterface[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-list/group-list.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Component({\n  selector: 'app-group-list',\n  templateUrl: './group-list.component.html',\n  styleUrls: ['./group-list.component.css']\n})\nexport class GroupListComponent {\n  @Input() groups!:GroupInterface[];\n  @Output() groupClicked = new EventEmitter();\n  onClick(group:GroupInterface){\n    this.groupClicked.emit(group);\n  }\n}\n\n    \n\n    \n        \n\n\n\t\n\t\t\n\n\t\t\tGroupName\n\t\t\tEventName\n\t\t\tmembers\n\t\t\n\t\n\t\n        \n\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{ g.name }}\n\t\t\t\t\n\t\t\t\t{{ g.event.name }}\n\t\t\t\t{{ g.members |groupmemberPipe}}\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./group-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\tGroupName\t\t\tEventName\t\t\tmembers\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t{{ g.name }}\t\t\t\t\t\t\t\t{{ g.event.name }}\t\t\t\t{{ g.members |groupmemberPipe}}\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupPageComponent.html":{"url":"components/GroupPageComponent.html","title":"component - GroupPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-page\n            \n\n\n\n            \n                styleUrls\n                ./group-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chosen\n                            \n                            \n                                    \n                                    Private\n                                content\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                groupID\n                            \n                            \n                                groups\n                            \n                            \n                                    \n                                    Private\n                                navStuff\n                            \n                            \n                                openModalEmitter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                choseGroup\n                            \n                            \n                                convertToListofStrings\n                            \n                            \n                                joinGroup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, grpSvc: GroupService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        choseGroup\n                        \n                    \n                \n            \n            \n                \nchoseGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToListofStrings\n                        \n                    \n                \n            \n            \n                \nconvertToListofStrings(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chosen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModal | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        navStuff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbNav | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgbNav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, OnInit, ViewChild } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { GroupService } from '../network/firebase/firestore/group.service';\n\n@Component({\n  selector: 'app-group-page',\n  templateUrl: './group-page.component.html',\n  styleUrls: ['./group-page.component.css']\n})\n\nexport class GroupPageComponent implements OnInit, AfterViewInit{\n  \n  @ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n  @ViewChild('content') private content:NgbModal | undefined; \n  openModalEmitter = new EventEmitter();\n  chosen:GroupInterface | undefined;\n  currentUser?:UserInterface;\n  groupID:string =\"\";\n  groups:GroupInterface[] = [];\n\n  constructor(\n    private authApi:AuthenticationService,\n    private grpSvc: GroupService,\n    private route:ActivatedRoute, \n  ){}\n\n  ngOnInit(): void {\n    this.authApi.getCurrentUser().then(x=>{\n      this.currentUser=x;\n      this.grpSvc.getGroups(x).subscribe(y=>{\n        this.groups = y;\n      });\n    });\n    \n  }\n  \n  joinGroup(){\n    if(this.currentUser)this.grpSvc.joinGroup(this.groupID,this.currentUser);\n  }\n  ngAfterViewInit(): void {\n    this.route.paramMap.subscribe(params=>{\n      var id:string|null;\n      id =  params.get('id');\n      //should get the info here from firebase\n      if(id) this.grpSvc.getGroupById(id).subscribe({next:(x)=>{\n        this.chosen = x;\n        this.navStuff?.select(2);\n      },\n      error:(e)=>{\n        console.log(\"ERROR HERE:\", e);\n      }});\n    });\n  }\n  choseGroup(group:GroupInterface){\n    this.chosen = group;\n    this.navStuff?.select(2);\n  }\n\n  convertToListofStrings(members:UserInterface[]){\n    return members.map((x)=>x.name);\n  }\n  \n  \n}\n\n    \n\n    \n        \n\n\n  \n    Groups\n    \n      \n        \n          \n        \n        \n            JOIN\n        \n      \n      \n        Create Group\n      \n      Admin\n      \n      Member\n      \n    \n  \n  \n    {{chosen.name}}\n    \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./group-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Groups                                                        JOIN                            Create Group            Admin            Member                  {{chosen.name}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/group.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGroupBooking\n                            \n                            \n                                createGroup\n                            \n                            \n                                    Private\n                                dbToGroupInterface\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                getGroupById\n                            \n                            \n                                getGroups\n                            \n                            \n                                joinGroup\n                            \n                            \n                                removeFromGroup\n                            \n                            \n                                toggleGroupConfirmation\n                            \n                            \n                                updateGroupDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore, noti: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/group.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noti\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupBooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupBooking(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(name: string, event: EventInterface, admin: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                admin\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToGroupInterface\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToGroupInterface(dbGroup: DocumentData | )\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbGroup\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupById\n                        \n                    \n                \n            \n            \n                \ngetGroupById(groupId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(groupId: string, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromGroup\n                        \n                    \n                \n            \n            \n                \nremoveFromGroup(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleGroupConfirmation\n                        \n                    \n                \n            \n            \n                \ntoggleGroupConfirmation(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroupDate\n                        \n                    \n                \n            \n            \n                \nupdateGroupDate(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, deleteDoc, FirestoreError} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  constructor(private fs: Firestore, private noti: NotificationService) { }\n\n  private dbToGroupInterface(dbGroup: DocumentData | DocumentData & {id: string;}): GroupInterface\n  {\n    let grp: GroupInterface = {\n      id: dbGroup[\"id\"],\n      name: dbGroup[\"name\"],\n      event: {\n        id: dbGroup[\"event\"].id,\n        name: dbGroup[\"event\"].name,\n        startDate: dbGroup[\"event\"].start.toDate(),\n        endDate: dbGroup[\"event\"].end.toDate(),\n        details: dbGroup[\"details\"],\n        images: dbGroup[\"imageUrls\"],\n        location: dbGroup[\"locations\"]\n      },\n      admin: dbGroup[\"admin\"],\n      members: dbGroup[\"members\"],\n      confirmed: dbGroup[\"confirmed\"],\n      booked: dbGroup[\"booked\"],\n      allUUID: dbGroup[\"allUUID\"]\n    }\n    if (dbGroup[\"date\"])\n      grp.date = dbGroup[\"date\"].toDate();\n\n    return grp;\n  }\n\n  createGroup(name: string, event: EventInterface, admin: UserInterface): Promise\n  {\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n\n    let groupDoc = {\n      name: name,\n      event: {\n        id: event.id,\n        name: event.name,\n        start: event.startDate,\n        end: event.endDate,\n        details: event.details,\n        imageUrls: event.images,\n        locations: event.location\n      },\n      admin: admin,\n      members: [],\n      confirmed: [],\n      booked: false,\n      allUUID: [admin.id]\n    }\n\n    return new Promise((res,rej)=>{\n      addDoc(grpCollection, groupDoc).then((docRef: DocumentReference)=>{\n        \n        res();\n      }).catch(err =>{\n        if (err.code === \"permission-denied\")\n          rej(\"group-name-taken\");\n      })\n    })\n  }\n\n  getGroups(user: UserInterface): Observable\n  {\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n    let q = query(grpCollection, where(\"allUUID\",\"array-contains\",user.id));\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: GroupInterface[] = [];\n          data.forEach(grp=>{\n            result.push(this.dbToGroupInterface(grp));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n\n\n  getGroupById(groupId: string): Observable\n  {\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n\n    return new Observable(obs=>{\n      docData(grpDoc, {idField: \"id\"}).subscribe(data=>{\n        if (data===undefined){\n          obs.error(\"Group not found\");\n          return;\n        } \n        obs.next(this.dbToGroupInterface(data));\n      });\n    });\n\n  }\n\n  // Currently does not check if user is already in group\n  joinGroup(groupId: string, user:UserInterface): Promise\n  {\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n    let update = {\n      members: arrayUnion(user),\n      allUUID: arrayUnion(user.id),\n    }\n    \n    return new Promise(res=>{\n      updateDoc(grpDoc, update).then(_=>{\n        res();\n      })\n    })\n  }\n\n  removeFromGroup(group: GroupInterface, user: UserInterface): Promise\n  {\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    \n    // Protection against display name change\n    let toRemove: UserInterface|undefined = undefined;\n\n    group.members.forEach(member=>{\n      if (member.id === user.id){\n        toRemove = member;\n        return;\n      }\n    })\n\n\n    return new Promise(res=>{\n      // Check if user is a member in group\n      if (toRemove === undefined) res();\n      \n      let update = {\n        members: arrayRemove(toRemove),\n        allUUID: arrayRemove(user.id)\n      }\n      updateDoc(grpDoc, update).then(_=>{\n        res();\n      })\n    })\n  }\n\n  deleteGroup(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    return new Promise(res=>{\n      deleteDoc(grpDoc).then(_=>{\n        res();\n      })\n    });\n  }\n\n  updateGroupDate(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    group.date = group.event.startDate;\n    let update = {date: group.date};\n\n    return new Promise(res=>{\n      updateDoc(grpDoc, update).then(_=>{\n        this.noti.sendConfirmationRequest(group).then(_=>{\n          res();\n        });\n      });\n    });\n  }\n\n  toggleGroupConfirmation(group: GroupInterface, user: UserInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {confirmed: arrayUnion(user.id)};\n\n    if (group.confirmed.includes(user.id))\n      update.confirmed = arrayRemove(user.id);\n\n    return new Promise(res=>{\n        updateDoc(grpDoc, update).then(_=>{\n          res();\n        })\n      });\n  }\n\n  confirmGroupBooking(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {booked: true};\n\n    return new Promise(res=>{\n\n      let updatePromise = updateDoc(grpDoc, update);\n\n      // Do both at same time\n      // let notiPromise = this.noti.sendConfirmation(group);\n      // Promise.all([updatePromise, notiPromise]).then(_=>{\n      //   res();\n      // })\n\n      // Ensure database is properly updated, then send notification\n      updatePromise.then(_=>{\n        this.noti.sendConfirmation(group).then(_=>{\n          res();\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupmemberPipePipe.html":{"url":"pipes/GroupmemberPipePipe.html","title":"pipe - GroupmemberPipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupmemberPipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/groupmember-pipe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        groupmemberPipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/groupmember-pipe.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     String[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Pipe({\n  name: 'groupmemberPipe'\n})\nexport class GroupmemberPipePipe implements PipeTransform {\n\n  transform(members:UserInterface[]): String[] {\n    return members.map((x)=>x.name);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GrouppipePipe.html":{"url":"pipes/GrouppipePipe.html","title":"pipe - GrouppipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GrouppipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/grouppipe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        grouppipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: GroupInterface[], user: UserInterface, isAdmin: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/grouppipe.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            GroupInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isAdmin\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Pipe({\n  name: 'grouppipe'\n})\nexport class GrouppipePipe implements PipeTransform {\n  transform(value:GroupInterface[], user:UserInterface, isAdmin:boolean): GroupInterface[]{\n    if(isAdmin )return value.filter((e:GroupInterface)=>e.admin.id==user.id);\n    return  value.filter((e:GroupInterface)=>e.admin.id!=user.id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdClassType.html":{"url":"interfaces/IdClassType.html","title":"interface - IdClassType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdClassType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ClassType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClassType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdName.html":{"url":"interfaces/IdName.html","title":"interface - IdName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListEventsComponent.html":{"url":"components/ListEventsComponent.html","title":"component - ListEventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListEventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/list-events/list-events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-events\n            \n\n\n\n            \n                styleUrls\n                ./list-events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        watchlist\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component ,Input } from '@angular/core';\nimport {EventInterface} from '../../interfaces/event-interface';\n@Component({\n  selector: 'app-list-events',\n  templateUrl: './list-events.component.html',\n  styleUrls: ['./list-events.component.css']\n})\nexport class ListEventsComponent {\n  @Input() events:EventInterface[]=[];\n  @Input() watchlist:string[] = [];\n}\n\n    \n\n    \n        \n      \n          \n                  \n                    \n          \n      \n\n    \n\n    \n                \n                    ./list-events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListEventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n\n\n            \n                styleUrls\n                ./login-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/login-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        googleSignIn\n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  constructor(\n    private auth: AuthenticationService,\n    private router:Router,\n    private route:ActivatedRoute\n  ) {}\n  \n  googleSignIn(){\n    this.auth.loginGoogle().then(_=>{\n      this.router.navigateByUrl( this.route.snapshot.queryParams['returnUrl'] || '/');\n    })\n  }\n\n  logOut(){\n    this.auth.logOut().then(_=>{\n      console.log(\"logout\");\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    Sign in with Google\n\n    \n\n    \n                \n                    ./login-page.component.css\n                \n                .bgImg, .bgImgStrip{\n    height:80vh;\n    position: absolute;\n    top:0;\n}\n\n.bgImg {\n    left:50%;\n    transform: translate(-50%);\n    z-index: -1;\n}\n\n.bgImgStrip {\n    z-index: -2;\n    width: 50vw;\n}\n\n.bgLeft {\n    left:0;\n}\n\n.bgRight {\n    right:0;\n}\n\n.loginBtn{\n    background-color: #2A2568;\n    color: white;\n    position: absolute;\n    padding: 1em;\n    border-radius: 2px;\n    top: 80vh;\n    left: 50%;\n    transform: translate(-50%);\n    cursor: pointer;\n    user-select: none;\n}\n\n.loginBtn:active {\n    top: calc(80vh + 5px);\n    left: calc(50% + 5px);\n}\n\n.googleImg {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Sign in with Google'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/navigation/navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/navigation/navigation.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/navigation/navigation.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n  constructor(private authApi:AuthenticationService,private router:Router){\n\n  }\n  logout(){\n    this.authApi.logOut();\n    this.router.navigate([\"login\"]);\n  }\n}\n\n    \n\n    \n        \n    Ticket Buddy\n    \n      \n    \n  \n    \n      \n        \n          Search (current)\n        \n        \n          Groups\n        \n        \n            Personal Calendar\n        \n        \n            Watchlist\n        \n        \n        \n      \n      Logout\n    \n  \n    \n\n    \n                \n                    ./navigation.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Ticket Buddy                                            Search (current)                          Groups                            Personal Calendar                            Watchlist                                    Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendConfirmation\n                            \n                            \n                                sendConfirmationRequest\n                            \n                            \n                                    Private\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/notification.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendConfirmation\n                        \n                    \n                \n            \n            \n                \nsendConfirmation(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendConfirmationRequest\n                        \n                    \n                \n            \n            \n                \nsendConfirmationRequest(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(to: string[], message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference} from '@angular/fire/firestore';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private fs: Firestore) { }\n\n\n  private sendEmail(to: string[], message:any): Promise{\n    let mailCol: CollectionReference = collection(this.fs, \"mail\");\n    let mailDoc = {\n      to: to,\n      message: message\n    }\n    return new Promise(res=>{\n      if (to.length{\n        res();\n      });\n    })\n  }\n\n  sendConfirmationRequest(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      emailList.push(member.email);\n    });\n\n    let content = `\n    Date has been decided for ${group.event.name||'the concert'}!\n    Good news! ${group.name} has decided ${group.date?.toDateString()} for ${group.event.name||'the concert'}.\n    Please click here to confirm your availability before ${group.admin.name} books the tickets!\n    Ticket Buddy\n    `\n\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Date Confirmation`, html: content})\n  }\n\n  sendConfirmation(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      if (group.confirmed.includes(member.id))\n        emailList.push(member.email);\n    });\n\n    let content = `\n    Date confirmed for ${group.event.name||'the concert'}!\n    Congratulations! ${group.name} has confirmed ${group.date?.toDateString()} for ${group.event.name||'the concert'}.\n    Contact ${group.admin.name} for details regarding the booking!\n    Ticket Buddy\n    `\n\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Date Confirmed!`, html: content})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageInterface.html":{"url":"interfaces/PageInterface.html","title":"interface - PageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/page-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            totalElements\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PageInterface {\n    size:number;\n    totalElements:number;\n    totalPages:number;\n    number:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalCalenderPageComponent.html":{"url":"components/PersonalCalenderPageComponent.html","title":"component - PersonalCalenderPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonalCalenderPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/personal-calender-page/personal-calender-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personal-calender-page\n            \n\n\n\n            \n                styleUrls\n                ./personal-calender-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./personal-calender-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                dateColor\n                            \n                            \n                                    Optional\n                                detail\n                            \n                            \n                                    Optional\n                                end\n                            \n                            \n                                events\n                            \n                            \n                                evts\n                            \n                            \n                                    Optional\n                                newEvent\n                            \n                            \n                                    Optional\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                dateClicked\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                isBetween\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, calSvc: CalendarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateClicked\n                        \n                    \n                \n            \n            \n                \ndateClicked(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBetween\n                        \n                    \n                \n            \n            \n                \nisBetween(a: number, b: number, c: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                c\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        detail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        evts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\n\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\n\n\n@Component({\n  selector: 'app-personal-calender-page',\n  templateUrl: './personal-calender-page.component.html',\n  styleUrls: ['./personal-calender-page.component.css'],\n\n})\nexport class PersonalCalenderPageComponent implements OnInit{\n  //perhap can create a class to handles theses variables easier\n  events:CalanderEvent[] = [];\n  evts:CalanderEvent[] = [];\n  dateColor:[[NgbDate,NgbDate], CalanderColor][] = [];//should be date range better\n  //this too\n  newEvent?:CalanderEvent;  \n  currentUser?:UserInterface;\n  //this too\n  start?:string;\n  end?:string;\n  detail?:string;\n  \n  constructor(\n    private authApi:AuthenticationService,\n    private calSvc: CalendarService\n  ){}\n  \n  deleteEvent(e:CalanderEvent){\n    this.calSvc.removeCalendarEvent(e);\n  }\n  createEvent(){\n    if(this.currentUser && this.start && this.end && this.detail){\n      \n      var e:CalanderEvent = {\n        user:this.currentUser, \n        start:new Date(this.start),\n        end:new Date(this.end),\n        detail:this.detail,\n        type:CalanderType.Personal\n      };\n      console.log(\"DDDED EVENT\");\n      this.calSvc.addCalendarEvent(e);\n    }\n  }\n  ngOnInit(): void {\n    this.authApi.getCurrentUser().then((x)=>{\n      this.currentUser  = x;\n      this.calSvc.getCalendar(x).subscribe(\n        (n)=>{\n          this.events = n;\n          this.events.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n            if(a.start {\n              var start:NgbDate = new NgbDate(e.start.getFullYear() , e.start.getMonth()+1,e.start.getDate());\n              var endDate:NgbDate = new NgbDate(e.end.getFullYear() , e.end.getMonth()+1,e.end.getDate());\n              return [[start,endDate], CalanderTypeColor.get(e.type)||CalanderColor.Default]\n            }\n          );\n        }\n      )\n    });\n  }\n  \n  isBetween(a:number, b:number, c:number):boolean{\n\t\treturn a{\n      var start:NgbDate = new NgbDate(x.start.getFullYear() , x.start.getMonth()+1,x.start.getDate());\n      var end:NgbDate = new NgbDate(x.end.getFullYear() , x.end.getMonth()+1,x.end.getDate());\n      return this.isBetween(start.year, date.year, end.year) && \n        this.isBetween(start.month, date.month, end.month) && \n        this.isBetween(start.day, date.day, end.day)\n    });\n  }\n}\n\n  \n\n    \n\n    \n        \n\n    \n        \n    \n\n\n    \n        \n            \n                Event Detail\n                Start Time\n                End Time\n                Action\n                Delete\n            \n        \n        \n           \n                {{e.detail}}\n                {{e.start}}\n                {{e.end}}\n                Update\n                Delete\n                \n           \n           \n            \n            \n            \n            Add\n            \n           \n        \n    \n\n    \n\n    \n                \n                    ./personal-calender-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Event Detail                Start Time                End Time                Action                Delete                                                       {{e.detail}}                {{e.start}}                {{e.end}}                Update                Delete                                                                                      Add                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalCalenderPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchPageComponent.html":{"url":"components/SearchPageComponent.html","title":"component - SearchPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/search-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-page\n            \n\n\n\n            \n                styleUrls\n                ./search-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cId\n                            \n                            \n                                classificationEmitter\n                            \n                            \n                                classInput\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                eventInput\n                            \n                            \n                                loadedEvents\n                            \n                            \n                                    Optional\n                                pageInfo\n                            \n                            \n                                pressSearch\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                getEvents\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddClassification\n                            \n                            \n                                onRemoveClassfication\n                            \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, tmApi: TicketmasterService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/search-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tmApi\n                                                  \n                                                        \n                                                                        TicketmasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEvents\n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClassification\n                        \n                    \n                \n            \n            \n                \nonAddClassification(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveClassfication\n                        \n                    \n                \n            \n            \n                \nonRemoveClassfication(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdClassType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classificationEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadedEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pageInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pressSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { TicketmasterService } from '../network/ticketmaster/ticketmaster.service';\nimport { EventInterface } from '../interfaces/event-interface';\nimport { PageInterface } from '../interfaces/page-interface';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { ClassType, IdClassType } from '../interfaces/clasification-interface';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent {\n  loadedEvents:EventInterface[]= [];\n  pageInfo?:PageInterface;\n  currentUser?:UserInterface;\n  watchlist:string[]= []\n  classInput:string = \"\";\n  eventInput:string = \"\";\n  cId:IdClassType[] = []\n  classificationEmitter:EventEmitter = new EventEmitter();\n  pressSearch:EventEmitter = new EventEmitter();\n\n  constructor(\n\n    private authApi:AuthenticationService,\n    private tmApi: TicketmasterService,\n    private watchlistSvc: WatchlistService\n  ){}\n \n  onAddClassification(ie:IdClassType){\n    //code here\n    if(this.cId.filter((c)=>c.id==ie.id).length == 0)this.cId.push(ie);\n  }\n  onRemoveClassfication(ie:IdClassType){\n    this.cId = this.cId.filter((c)=>c.id != ie.id);\n  }\n  ngOnInit(){\n    this.getEvents();\n    this.authApi.getCurrentUser().then((x)=>{\n      this.currentUser = x;\n      this.watchlistSvc.getWatchlist(x).subscribe(\n        (n)=>{\n          this.watchlist = n.map((e)=>e.id);\n        }\n      )\n    })  \n  }\n  getEvents(){\n    this.tmApi.getEvents().subscribe({\n      next:(n)=>{\n        \n        this.pageInfo = n.page\n        this.pageInfo!.number+=1;        \n        this.loadedEvents = n.events;   \n      },\n      error:(e)=>{\n\n      }\n    });\n  }\n  changePage(pgNum:number){\n    //must retain same query\n    this.tmApi.getEvents().subscribe({\n      next:(n)=>{\n        this.pageInfo = n.page;\n        this.pageInfo!.number+=1;\n        this.loadedEvents = n.events;   \n      }\n    });\n  }\n  searchEvent(){//this one got the queries\n    var query = {\n      segmentId:this.cId.filter((c)=>c.type==ClassType.Segment).map((x)=>x.id), \n      genreId:this.cId.filter((c)=>c.type==ClassType.Genre).map((x)=>x.id), \n      subGenreId:this.cId.filter((c)=>c.type==ClassType.Subgenre).map((x)=>x.id)\n      ,keyword:this.eventInput\n    };\n    \n    this.tmApi.getEventsQuery(query).subscribe((x)=>{\n      console.log(x.page);\n      this.pageInfo = x.page;\n      this.pageInfo!.number +=1;\n      this.loadedEvents = x.events;\n    });\n  }\n  \n\n}\n\n    \n\n    \n        \n\n \n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        Search\n                    \n                    \n                \n            \n        \n    \n\n 0\" class=\" overflow-x-scroll p-2 mb-2\">\n    {{c.name}}\n\n\n\n\n\n    \n\n    \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./search-page.component.css\n                \n                /*search box css start here*/\n.search-sec{\n    padding: 2rem;\n}\n.search-slt{\n    display: block;\n    width: 100%;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    color: #55595c;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n.wrn-btn{\n    width: 100%;\n    font-size: 16px;\n    font-weight: 400;\n    text-transform: capitalize;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n@media (min-width: 992px){\n    .search-sec{\n        position: relative;\n        top: -114px;\n        background: rgba(26, 70, 104, 0.51);\n    }\n}\n\n@media (max-width: 992px){\n    .search-sec{\n        background: #1A4668;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                 Search                                                                                 0\" class=\" overflow-x-scroll p-2 mb-2\">    {{c.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentInterface.html":{"url":"interfaces/SegmentInterface.html","title":"interface - SegmentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:         GenreInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GenreInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketmasterService.html":{"url":"injectables/TicketmasterService.html","title":"injectable - TicketmasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketmasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/ticketmaster/ticketmaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseurl\n                            \n                            \n                                header\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClassification\n                            \n                            \n                                getEvents\n                            \n                            \n                                getEventsQuery\n                            \n                            \n                                invalidDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, platformLocation: PlatformLocation, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEvents\n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventsQuery\n                        \n                    \n                \n            \n            \n                \ngetEventsQuery(query: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidDate\n                        \n                    \n                \n            \n            \n                \ninvalidDate(d: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { PlatformLocation } from '@angular/common';\n\nimport { ticketMasterApi } from 'src/environments/env-prod';\nimport { Observable, filter, map, take, throwError } from 'rxjs';\nimport { EventPageInterface } from 'src/app/interfaces/eventpage-interface';\nimport { ClassificationInterface } from 'src/app/interfaces/clasification-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketmasterService {\n  private baseurl:string;\n  constructor(private http: HttpClient,\n    private platformLocation: PlatformLocation,\n    private router: Router) {\n      this.baseurl = (this.platformLocation as any)._location.origin+\"/ticketmaster\";\n    }\n    \n    header = \n      new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n\n    getClassification(kw:string):Observable{\n      return this.http.get(this.baseurl+\"/\"+\"classifications.json\", {params:{apikey:ticketMasterApi, keyword:kw}}).pipe(\n        filter((x:any)=>{\n          return x.page.totalElements>0 && kw.length > 0;\n        }),\n        map((x:any)=>{\n          var cs:any[] = x._embedded.classifications;\n          var ans:ClassificationInterface = {segment:[], subGenre:[], genre:[]};//must\n          cs.forEach((a)=>{\n            if(!a?.segment?.id) return;\n            ans.segment.push({id:a.segment.id, name:a.segment.name});\n            a.segment._embedded.genres.forEach((g:any)=> {\n              if(!g?.id) return;\n              ans.genre.push({id:g.id, name:g.name});\n              g._embedded.subgenres.forEach((sg:any)=>{\n                if(!sg?.id) return;\n                ans.subGenre.push({id:sg.id, name:sg.name});\n              });\n            });\n          });\n          return ans;\n        })\n      );\n    }\n    getEvents():Observable{\n      var today  =new Date();\n      var str = today.toISOString();\n      str = str.slice(0, str.length-5).concat(\"Z\");\n      return this.http.get(this.baseurl+\"/events.json\", {params:{apikey:ticketMasterApi, startDateTime:str}}).pipe(\n        map((x:any)=>{\n          \n          var rtn:any = {page:undefined, events:undefined};\n          rtn.page = x.page;\n\n          x = x._embedded;\n          \n          rtn.events = x.events.map((e:any)=>{\n            var sd = new Date(e.dates?.start.dateTime);\n            var ed:Date = new Date(e.dates?.end);\n            \n            \n            return {\n              id:e.id, details:e.description, \n              images:e.images.map((img:any)=>img.url),\n              location:e._embedded?.venues.map((v:any)=>v.name), \n              name:e.name, \n              startDate: (!this.invalidDate(sd))? sd: undefined, \n              endDate:(!this.invalidDate(ed))? ed: undefined\n            };\n          });\n          return (rtn as EventPageInterface);\n        \n        }),\n        take(1)\n        \n        );\n    }\n    getEventsQuery(query:any):Observable{\n      query.apikey = ticketMasterApi;\n      return this.http.get(this.baseurl+\"/events.json\", {params:query}).pipe(\n        map((x:any)=>{\n          console.log(x);\n          var rtn:any = {page:undefined, events:undefined};\n          rtn.page = x.page;\n\n          x = x._embedded;\n          \n          rtn.events = x.events.map((e:any)=>{\n            var sd = new Date(e.dates?.start.dateTime);\n            var ed:Date = new Date(e.dates?.end);\n            \n            \n            return {\n              id:e.id, details:e.description, \n              images:e.images.map((img:any)=>img.url),\n              location:e._embedded?.venues.map((v:any)=>v.name), \n              name:e.name, \n              startDate: (!this.invalidDate(sd))? sd: undefined, \n              endDate:(!this.invalidDate(ed))? ed: undefined\n            };\n          });\n          return (rtn as EventPageInterface);\n        \n        }),\n        take(1)\n      )\n    }\n    invalidDate(d:Date){\n      return Number.isNaN(d.valueOf());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    readonly id: string;\n    readonly name: string;\n    readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WatchlistPageComponent.html":{"url":"components/WatchlistPageComponent.html","title":"component - WatchlistPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WatchlistPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/watchlist-page/watchlist-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-watchlist-page\n            \n\n\n\n            \n                styleUrls\n                ./watchlist-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./watchlist-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/watchlist-page/watchlist-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { EventInterface } from '../interfaces/event-interface';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\n\n@Component({\n  selector: 'app-watchlist-page',\n  templateUrl: './watchlist-page.component.html',\n  styleUrls: ['./watchlist-page.component.css']\n})\nexport class WatchlistPageComponent {\n  events:EventInterface[] = [];\n  watchlist:string[] = [];\n  constructor(\n    private authApi:AuthenticationService, \n    private watchlistSvc: WatchlistService){}\n\n  ngOnInit(){\n    this.authApi.getCurrentUser().then(\n      u=>{\n        this.watchlistSvc.getWatchlist(u).subscribe(l=>{\n          this.events=l;\n          this.watchlist = l.map(e=>e.id);\n        });\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n    \n    \n\n    \n\n    \n                \n                    ./watchlist-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WatchlistPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistService.html":{"url":"injectables/WatchlistService.html","title":"injectable - WatchlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/watchlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addWatchlistEvent\n                            \n                            \n                                    Private\n                                dbwatchlistToEvent\n                            \n                            \n                                    Private\n                                eventToDbWatchlist\n                            \n                            \n                                getWatchlist\n                            \n                            \n                                removeWatchlistEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/watchlist.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addWatchlistEvent\n                        \n                    \n                \n            \n            \n                \naddWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbwatchlistToEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbwatchlistToEvent(dbEvent: DocumentData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbEvent\n                                            \n                                                        DocumentData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         EventInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventToDbWatchlist\n                        \n                    \n                \n            \n            \n                \n                        \n                    eventToDbWatchlist(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchlist\n                        \n                    \n                \n            \n            \n                \ngetWatchlist(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeWatchlistEvent\n                        \n                    \n                \n            \n            \n                \nremoveWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { Firestore, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, setDoc} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistService {\n\n  constructor(private fs: Firestore) { }\n\n  private eventToDbWatchlist(event:EventInterface): any{\n    let watchListEvent: any = {id: event.id}\n\n    if (event.name !== undefined)\n      watchListEvent.name = event.name\n    if (event.location !== undefined)\n      watchListEvent.location = event.location\n    if (event.images !== undefined)\n      watchListEvent.images = event.images\n    if (event.details !== undefined)\n      watchListEvent.details = event.details\n    if (event.startDate !== undefined)\n      watchListEvent.startDate = event.startDate\n    if (event.endDate !== undefined)\n      watchListEvent.endDate = event.endDate\n\n    return watchListEvent;\n  }\n\n  private dbwatchlistToEvent(dbEvent: DocumentData ): EventInterface{\n    let event: EventInterface = {\n      id: dbEvent['id'],\n      name: dbEvent['name'],\n      location: dbEvent['location'],\n      images: dbEvent['images'],\n      details: dbEvent['details'],\n      startDate: dbEvent['startDate']? new Date(dbEvent['startDate']?.toDate()): undefined,\n      endDate: dbEvent['endDate']? new Date(dbEvent['endDate']?.toDate()): undefined\n    }\n    \n\n    return event\n  }\n\n  getWatchlist(user: UserInterface): Observable{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n\n    return new Observable(obs=>{\n      docData(watchDoc).subscribe(data=>{\n        let watchlist:EventInterface[] = [];\n        if (data===undefined){\n          obs.next(watchlist);\n          return;\n        } \n        data['saved'].forEach((event: DocumentData)=>{\n          \n          watchlist.push(this.dbwatchlistToEvent(event))\n        })\n        obs.next(watchlist);\n      });\n    });\n  }\n\n  addWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    \n    let update = {saved: arrayUnion(this.eventToDbWatchlist(event))}\n    \n    // Attempt to append to document, if not found, initialise a new one.\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      }).catch(rej=>{\n        if (rej.code == \"not-found\"){\n          setDoc(watchDoc,update).then(_=>{\n            res();\n          })\n        } else {\n          throw(rej);\n        }\n      })\n    })\n  }\n\n  removeWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    let update = {saved: arrayRemove(this.eventToDbWatchlist(event))}\n\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/calander/calander.component.ts\n            \n            component\n            CalanderComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/common/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/group-page/group-create/group-create.component.ts\n            \n            component\n            GroupCreateComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/group-page/group-detail/group-detail.component.ts\n            \n            component\n            GroupDetailComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/group-page/group-list/group-list.component.ts\n            \n            component\n            GroupListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/group-page/group-page.component.ts\n            \n            component\n            GroupPageComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/group-page/groupmember-pipe.pipe.ts\n            \n            pipe\n            GroupmemberPipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/group-page/grouppipe.pipe.ts\n            \n            pipe\n            GrouppipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEventColor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            ClassificationInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            GenreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdClassType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdName\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            SegmentInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypePriority\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            interface\n            EventInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/eventpage-interface.ts\n            \n            interface\n            EventPageInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/group-interface.ts\n            \n            interface\n            GroupInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/page-interface.ts\n            \n            interface\n            PageInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            dates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            watchlist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user-interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/network/firebase/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/calendar.service.ts\n            \n            injectable\n            CalendarService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/watchlist.service.ts\n            \n            injectable\n            WatchlistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/network/ticketmaster/ticketmaster.service.ts\n            \n            injectable\n            TicketmasterService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/personal-calender-page/personal-calender-page.component.ts\n            \n            component\n            PersonalCalenderPageComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/search-page/classification-component/classification-component.component.ts\n            \n            component\n            ClassificationComponentComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/search-page/event-component/event-component.component.ts\n            \n            component\n            EventComponentComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/list-events.component.ts\n            \n            component\n            ListEventsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/search-page/search-page.component.ts\n            \n            component\n            SearchPageComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/watchlist-page/watchlist-page.component.ts\n            \n            component\n            WatchlistPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            ticketMasterApi\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.1.0\n        \n            @angular/cdk : ^16.2.14\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/fire : ^16.0.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @ng-bootstrap/ng-bootstrap : ^15.1.2\n        \n            @popperjs/core : ^2.11.8\n        \n            angular-calendar : ^0.31.0\n        \n            bootstrap : ^5.2.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CalanderColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderType   (src/.../calenderenum.ts)\n                        \n                        \n                            ClassType   (src/.../clasification-interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n            \n                \n                    \n                        \n                        CalanderColor\n                    \n                \n                        \n                            \n                                 NotFreeAtAll\n                            \n                        \n                        \n                            \n                                Value : #d9534f\n                            \n                        \n                        \n                            \n                                 SomeFree\n                            \n                        \n                        \n                            \n                                Value : #f0ad4e\n                            \n                        \n                        \n                            \n                                 AllAvailable\n                            \n                        \n                        \n                            \n                                Value : #5cb85c\n                            \n                        \n                        \n                            \n                                 Default\n                            \n                        \n                        \n                            \n                                Value : #0275D8\n                            \n                        \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : #00a2a8\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : #efcb00\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : #b0d04a\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CalanderType\n                    \n                \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : Personal\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : ReservedForEvent\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : BookedForEvent\n                            \n                        \n            \n        \n\n    src/app/interfaces/clasification-interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ClassType\n                    \n                \n                        \n                            \n                                 Segment\n                            \n                        \n                        \n                            \n                                 Genre\n                            \n                        \n                        \n                            \n                                 Subgenre\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTicketbuddy\nThis project was generated with Angular CLI version 16.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nGrouppipePipe\n\nGrouppipePipe\n\nAppModule -->\n\nGrouppipePipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            CalanderTypeColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderTypePriority   (src/.../calenderenum.ts)\n                        \n                        \n                            dates   (src/.../testdata.ts)\n                        \n                        \n                            e1   (src/.../testdata.ts)\n                        \n                        \n                            e2   (src/.../testdata.ts)\n                        \n                        \n                            end   (src/.../testdata.ts)\n                        \n                        \n                            end2   (src/.../testdata.ts)\n                        \n                        \n                            end3   (src/.../testdata.ts)\n                        \n                        \n                            firebaseConfig   (src/.../env-prod.ts)\n                        \n                        \n                            g1   (src/.../testdata.ts)\n                        \n                        \n                            g2   (src/.../testdata.ts)\n                        \n                        \n                            start   (src/.../testdata.ts)\n                        \n                        \n                            start2   (src/.../testdata.ts)\n                        \n                        \n                            start3   (src/.../testdata.ts)\n                        \n                        \n                            ticketMasterApi   (src/.../env-prod.ts)\n                        \n                        \n                            user1   (src/.../testdata.ts)\n                        \n                        \n                            user2   (src/.../testdata.ts)\n                        \n                        \n                            user3   (src/.../testdata.ts)\n                        \n                        \n                            user4   (src/.../testdata.ts)\n                        \n                        \n                            watchlist   (src/.../testdata.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authApi:AuthenticationService = inject(AuthenticationService);\n  const router:Router = inject(Router);\n  return authApi.isAuthenticated().pipe(\n    tap((x:boolean)=>{\n      if(!x){\n        router.navigate(['login'], {queryParams: {returnUrl: state.url }});\n        \n      }\n      \n    })\n  );\n  \n}\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CalanderTypeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, CalanderColor.BookedForEvent],\n    [CalanderType.ReservedForEvent, CalanderColor.ReservedForEvent],\n    [CalanderType.Personal, CalanderColor.Personal]  \n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CalanderTypePriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, 1],\n    [CalanderType.ReservedForEvent, 2],\n    [CalanderType.Personal, 3]  \n])\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/testdata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start, \n    end:end, \n    detail:\"Doctors Appointment\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start2, \n    end:end2, \n    detail:\"School project meeting\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start3, \n    end:end3, \n    detail:\"Dental Checkup\", \n    type:CalanderType.Personal}\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt1\", name:\"Superbowl\", location:[\"Seatle stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event\", startDate: new Date(2024, 3, 27, 17,30), endDate:new Date(2024, 3, 27, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt2\", name:\"Taylor Swift\", location:[\"Singpoare Stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event 2\", startDate: new Date(2024, 3, 17, 17,30), endDate:new Date(2024, 3, 17, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start3.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp1\", name:\"TS fan group\", \n    event: e2, admin:user1, members:[user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp2\", name:\"GO Patriots Group\", \n    event: e1, admin:user4, members:[user1, user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user4\",\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(2024, 2, 27, 3 ,30,0)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 5*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"john\", email: \"ur@mother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"becca\", email: \"ur@father.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Tom\", email: \"ur@sister.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Rick\", email: \"ur@brother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : [e1, e2]\n                    \n                \n\n\n        \n    \n\n    src/environments/env-prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiKey: \"AIzaSyDjqnG3Ye8IF6TcSPj_psTFYMizlnFvoOw\",\n    authDomain: \"ticket-bud.firebaseapp.com\",\n    projectId: \"ticket-bud\",\n    storageBucket: \"ticket-bud.appspot.com\",\n    messagingSenderId: \"297938436292\",\n    appId: \"1:297938436292:web:f09902d21ddd4fde388991\",\n    measurementId: \"G-Y4Q5TLEBGB\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketMasterApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"5Jqei2SXCUbEHOfAy9F6vyC4wA8Pj6s0\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
