var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.544,1,1.054]],["body/components/AppComponent.html",[0,0.87,1,1.801,2,1.746,3,0.217,4,0.192,5,1.371,6,1.371,7,1.371,8,1.371,9,0.192,10,3.258,11,1.169,12,2.637,13,2.499,14,2.177,15,1.843,16,5.779,17,1.843,18,5.116,19,0.268,20,0.77,21,5.779,22,5.779,23,0.852,24,2.627,25,2.323,26,0.98,27,5.116,28,0.684,29,0.02,30,0.717,31,0.291,32,0.573,33,2.627,34,1.571,35,1.491,36,3.893,37,0.999,38,4.379,39,3.806,40,0.634,41,0.573,42,2.078,43,0.217,44,0.44,45,1.944,46,2.627,47,3.806,48,3.806,49,2.896,50,1.232,51,1.746,52,1.843,53,1.371,54,1.622,55,1.371,56,1.371,57,1.109,58,1.371,59,1.109,60,1.371,61,1.843,62,1.109,63,0.852,64,1.109,65,1.46,66,1.371,67,1.109,68,1.371,69,1.109,70,1.371,71,1.053,72,2.226,73,1.109,74,1.371,75,1.371,76,1.053,77,1.169,78,1.109,79,1.371,80,1.053,81,1.169,82,1.169,83,1.053,84,1.232,85,1.053,86,0.948,87,1.232,88,1.371,89,1.371,90,0.014,91,0.014]],["title/modules/AppModule.html",[92,2.495,93,2.495]],["body/modules/AppModule.html",[1,1.925,3,0.14,4,0.124,9,0.124,13,0.839,29,0.021,40,0.904,41,0.37,43,0.14,44,0.284,50,0.796,57,1.669,59,1.669,62,1.669,64,1.669,65,1.353,67,1.669,69,1.669,71,1.584,73,1.669,76,1.584,77,0.755,78,1.669,80,1.584,81,0.755,82,1.148,83,1.584,84,1.76,85,1.584,86,0.612,90,0.01,91,0.01,92,1.696,93,5.146,94,1.557,95,1.696,96,3.871,97,2.606,98,3.199,99,1.87,100,2.103,101,2.103,102,2.103,103,2.103,104,3.628,105,3.628,106,3.628,107,3.628,108,5.095,109,4.326,110,5.095,111,4.653,112,5.095,113,4.326,114,3.199,115,2.103,116,1.87,117,2.458,118,3.199,119,2.458,120,2.458,121,2.458,122,3.199,123,3.738,124,3.199,125,1.87,126,3.738,127,1.696,128,2.458,129,2.458,130,3.738,131,1.792,132,1.909,133,2.458,134,1.87,135,3.738,136,2.58,137,1.87,138,2.458,139,1.87,140,1.87,141,3.738,142,2.458,143,1.87,144,1.87,145,3.199,146,1.87,147,2.458,148,2.103,149,2.458,150,2.458,151,1.557,152,2.103,153,3.738,154,3.738,155,2.458,156,1.696,157,4.653,158,2.76,159,1.87,160,2.458,161,3.738,162,2.103,163,2.458,164,1.87,165,2.458,166,1.696,167,1.696,168,2.458,169,1.87,170,2.458,171,2.458,172,1.696,173,1.87,174,2.458,175,1.87,176,1.87,177,2.458,178,2.458,179,2.458,180,2.458,181,2.458,182,2.458]],["title/modules/AppRoutingModule.html",[92,2.495,107,2.29]],["body/modules/AppRoutingModule.html",[3,0.259,4,0.23,9,0.23,29,0.021,40,0.888,41,0.686,43,0.259,44,0.528,65,1.078,71,1.262,76,1.262,77,1.401,80,1.262,81,1.401,82,1.768,83,1.262,84,1.477,85,1.262,86,1.136,90,0.016,91,0.016,94,2.89,99,3.471,107,3.647,118,3.904,122,4.927,156,3.148,157,5.846,158,2.491,166,3.148,167,3.148,172,3.148,183,4.561,184,4.561,185,5.756,186,4.353,187,2.675,188,3.471,189,4.561,190,3.904,191,4.561,192,4.561,193,6.624,194,4.561,195,4.561,196,4.561,197,5.756,198,4.561,199,4.561,200,4.561,201,3.904,202,3.904,203,4.561,204,4.561,205,4.561,206,4.561,207,4.561,208,4.561,209,4.561,210,4.561]],["title/injectables/AuthenticationService.html",[25,1.453,211,0.9]],["body/injectables/AuthenticationService.html",[3,0.226,4,0.2,9,0.2,14,1.691,19,0.28,23,0.89,25,2.117,26,1.109,28,0.714,29,0.021,30,0.653,31,0.226,32,0.598,40,0.811,41,0.598,43,0.226,44,0.46,45,2.03,77,1.221,90,0.014,91,0.014,152,3.402,211,1.312,212,1.691,213,3.402,214,1.001,215,5.905,216,6.287,217,6.287,218,4.785,219,3.402,220,5.754,221,3.974,222,3.974,223,1.195,224,3.341,225,3.974,226,3.463,227,3.974,228,3.974,229,5.266,230,3.974,231,3.974,232,1.598,233,1.099,234,2.17,235,0.055,236,1.793,237,1.809,238,1.717,239,5.266,240,3.974,241,3.974,242,3.974,243,3.974,244,3.088,245,3.974,246,3.974,247,3.974,248,2.743,249,3.974,250,3.974,251,3.402,252,3.974,253,3.974,254,3.402,255,3.974,256,3.974,257,1.431,258,1.511,259,3.974,260,3.974,261,3.024,262,3.974,263,3.974,264,2.743,265,3.974,266,3.974]],["title/components/CalanderComponent.html",[0,0.544,57,1.054]],["body/components/CalanderComponent.html",[0,0.657,1,0.677,2,1.222,3,0.132,4,0.117,5,0.836,6,0.836,7,0.836,8,0.836,9,0.117,11,0.713,12,2.449,13,2.321,15,1.289,17,1.289,19,0.164,20,0.538,23,0.978,26,1.143,28,1.006,29,0.021,30,0.747,31,0.371,32,0.842,34,1.341,35,1.273,37,0.61,40,0.657,41,0.349,43,0.132,44,0.269,50,0.752,51,1.222,52,1.289,53,0.836,54,1.391,55,0.836,56,0.836,57,1.43,58,0.836,59,0.677,60,0.836,61,1.289,62,0.677,63,0.802,64,0.677,65,1.159,66,0.836,67,0.677,68,0.836,69,0.677,70,0.836,71,0.642,72,1.767,73,0.677,74,1.289,75,0.836,76,0.642,77,0.713,78,0.677,79,0.836,80,0.642,81,0.713,82,0.713,83,0.642,84,0.752,85,0.642,86,0.578,87,0.752,88,0.836,89,0.836,90,0.01,91,0.01,97,1.113,131,1.113,132,1.186,214,0.68,223,1.064,232,0.933,235,0.032,237,1.466,238,1.288,251,4.2,267,1.987,268,1.615,269,4.366,270,4.366,271,4.366,272,3.579,273,2.561,274,2.056,275,3.579,276,4.366,277,4.366,278,3.579,279,3.063,280,3.579,281,3.579,282,3.579,283,3.579,284,1.954,285,3.734,286,2.352,287,3.579,288,3.063,289,4.906,290,3.579,291,2.322,292,1.615,293,2.322,294,4.692,295,2.322,296,2.384,297,2.322,298,2.322,299,1.992,300,2.322,301,1.767,302,1.987,303,3.547,304,3.063,305,3.063,306,2.322,307,1.954,308,2.322,309,1.523,310,2.322,311,0.988,312,3.579,313,4.906,314,2.322,315,2.322,316,1.491,317,2.322,318,2.322,319,2.322,320,2.322,321,3.579,322,2.322,323,3.579,324,1.362,325,1.767,326,2.322,327,2.322,328,4.366,329,2.322,330,2.679,331,3.734,332,1.767,333,2.322,334,2.322,335,1.987,336,1.471,337,1.186,338,2.561,339,1.987,340,2.723,341,2.322,342,2.322,343,2.322,344,2.099,345,2.322,346,1.767,347,2.322,348,2.322,349,1.767,350,2.322,351,2.322,352,2.322,353,2.322,354,2.322,355,2.322,356,1.987,357,2.322,358,2.322,359,1.987,360,1.987,361,1.987,362,2.322,363,2.322,364,2.322,365,2.322,366,1.602,367,2.322,368,2.322,369,1.186,370,2.322,371,2.322,372,2.322,373,1.987,374,1.987,375,2.322,376,3.063,377,5.3,378,2.322,379,1.987,380,2.322,381,2.322,382,1.767,383,2.322,384,2.322,385,1.767,386,2.322,387,1.987,388,1.767,389,3.063,390,1.767,391,2.322,392,3.323,393,3.734,394,2.322,395,2.322,396,2.322,397,2.322,398,3.579,399,3.579,400,1.987,401,2.322,402,2.322,403,2.322]],["title/interfaces/CalanderEvent.html",[235,0.05,292,1.631]],["body/interfaces/CalanderEvent.html",[3,0.264,4,0.234,9,0.234,19,0.328,20,0.876,29,0.02,31,0.416,32,0.876,37,1.84,40,0.722,43,0.331,90,0.016,91,0.016,233,1.845,235,0.088,257,2.474,258,2.536,292,2.628,299,2.392,309,2.838,311,2.838,336,2.944,337,2.373,338,2.725,404,1.767,405,1.586,406,4.225,407,3.911,408,3.977,409,3.207,410,3.977,411,3.977]],["title/interfaces/CalanderEventColor.html",[235,0.05,409,2.495]],["body/interfaces/CalanderEventColor.html",[3,0.284,4,0.252,9,0.252,19,0.352,20,0.917,29,0.02,31,0.374,37,1.6,40,0.756,43,0.347,63,1.472,90,0.017,91,0.017,233,1.686,235,0.091,257,2.195,258,1.901,292,2.966,299,2.08,309,2.127,311,2.127,336,3.167,337,2.554,338,3.855,404,1.901,405,1.707,406,3.167,407,3.573,408,4.279,409,4.205,410,4.279,411,4.279,412,6.573]],["title/injectables/CalendarFacade.html",[211,0.9,413,2.495]],["body/injectables/CalendarFacade.html",[3,0.193,4,0.171,9,0.171,14,1.444,19,0.239,20,0.712,23,1.06,25,2.189,26,1.088,28,0.978,29,0.021,30,0.675,31,0.365,32,0.932,34,1.453,35,1.379,40,0.845,41,0.511,42,1.854,43,0.193,44,0.393,54,1.242,63,0.76,90,0.013,91,0.013,97,1.627,131,1.627,132,1.734,211,1.178,212,1.444,214,0.899,223,0.899,224,3.008,232,1.365,233,1.506,235,0.066,236,1.531,237,1.506,238,1.727,248,2.343,257,1.222,273,3.193,274,1.615,285,4.144,292,2.457,294,2.343,299,1.159,337,1.734,338,1.991,369,1.734,407,2.774,413,3.265,414,2.905,415,3.758,416,4.049,417,4.049,418,2.583,419,4.66,420,3.454,421,4.73,422,2.583,423,4.73,424,5.041,425,3.394,426,3.394,427,2.905,428,3.394,429,4.705,430,3.394,431,3.394,432,2.583,433,1.854,434,2.583,435,2.343,436,2.343,437,2.905,438,3.394,439,2.905,440,2.905,441,2.905,442,2.905,443,2.905,444,2.905,445,2.583,446,2.583,447,3.394,448,3.394,449,3.394,450,2.15,451,2.905,452,2.343,453,2.905,454,2.905,455,2.905,456,2.905,457,3.394,458,3.394,459,3.394,460,3.394,461,3.394,462,3.394,463,3.394,464,3.394,465,3.394,466,3.394,467,3.394,468,2.905,469,3.394,470,2.905,471,3.394,472,3.394,473,2.905,474,3.394,475,2.905]],["title/injectables/CalendarService.html",[211,0.9,420,2.12]],["body/injectables/CalendarService.html",[3,0.15,4,0.133,9,0.133,14,1.124,19,0.186,23,0.592,26,1.034,28,1.096,29,0.021,30,0.756,31,0.371,32,0.918,37,0.693,40,0.756,41,0.397,43,0.15,44,0.306,45,1.349,65,0.624,90,0.011,91,0.011,151,1.674,211,0.983,212,1.124,214,0.75,223,1.119,224,3.006,226,3.29,232,1.062,233,1.687,234,1.442,235,0.066,236,1.192,237,1.687,238,1.473,244,2.771,257,2.12,258,1.501,264,2.724,273,3.074,274,1.613,286,1.266,292,3.089,309,2.23,311,2.23,336,1.674,337,1.349,339,2.261,406,2.993,407,2.314,420,2.314,470,2.261,476,2.261,477,3.946,478,3.946,479,3.946,480,3.946,481,3.946,482,3.946,483,1.823,484,3.617,485,2.641,486,2.724,487,3.946,488,2.641,489,4.725,490,3.946,491,4.269,492,2.641,493,2.641,494,3.946,495,2.641,496,3.946,497,2.107,498,2.641,499,3.946,500,2.641,501,3.946,502,2.641,503,3.003,504,2.01,505,2.01,506,3.989,507,1.823,508,2.261,509,2.01,510,2.01,511,2.01,512,2.01,513,2.01,514,2.261,515,2.261,516,1.442,517,2.641,518,2.641,519,2.641,520,2.641,521,2.641,522,2.641,523,2.641,524,4.725,525,3.596,526,4.725,527,2.641,528,2.641,529,3.946,530,3.946,531,3.946,532,3.946,533,3.261,534,2.641,535,2.641,536,3.378,537,3.946,538,2.641,539,3.378,540,3.378,541,3.378,542,3.378,543,3.378,544,3.946,545,2.641,546,3.378,547,2.641,548,2.641,549,2.641,550,1.549,551,2.641,552,2.641,553,2.641,554,2.641,555,2.641,556,2.641,557,2.641,558,2.641,559,2.641,560,2.641,561,2.641,562,4.044,563,2.641,564,2.641,565,2.641,566,2.01,567,2.641,568,2.01,569,2.641,570,2.641,571,2.641,572,2.641,573,2.641,574,2.641,575,3.003,576,3.946,577,1.823,578,2.641,579,2.01,580,2.641]],["title/components/ClassificationComponentComponent.html",[0,0.544,59,1.054]],["body/components/ClassificationComponentComponent.html",[0,0.863,1,0.811,2,1.4,3,0.158,4,0.14,5,1.002,6,1.002,7,1.002,8,1.002,9,0.14,11,0.855,12,2.525,13,2.393,15,1.477,17,1.477,19,0.196,20,0.617,23,0.623,26,1.102,28,1.078,29,0.02,30,0.789,31,0.362,32,0.902,34,0.855,35,0.811,40,0.711,41,0.419,43,0.158,44,0.322,50,0.901,51,1.4,52,1.477,53,1.002,54,1.411,55,1.002,56,1.002,57,0.811,58,1.002,59,1.567,60,2.38,61,1.477,62,0.811,63,0.623,64,0.811,65,1.27,66,1.002,67,0.811,68,1.002,69,0.811,70,1.002,71,0.77,72,1.937,73,0.811,74,1.002,75,1.002,76,0.77,77,0.855,78,0.811,79,1.002,80,0.77,81,0.855,82,0.855,83,0.77,84,0.901,85,0.77,86,0.693,87,0.901,88,1.002,89,1.002,90,0.011,91,0.011,175,5.03,176,5.03,214,0.78,223,1.14,232,1.119,235,0.039,238,1.077,268,1.851,284,2.24,296,2.936,316,2.048,330,2.24,331,2.118,344,1.632,369,2.489,581,3.876,582,2.118,583,3.087,584,4.17,585,3.511,586,2.095,587,3.708,588,2.746,589,4.102,590,4.102,591,4.102,592,4.102,593,4.102,594,2.118,595,3.153,596,3.511,597,2.382,598,2.783,599,2.749,600,2.783,601,3.511,602,2.783,603,3.168,604,2.783,605,2.783,606,2.783,607,2.783,608,2.783,609,2.783,610,2.783,611,2.382,612,2.783,613,2.783,614,1.921,615,2.118,616,1.421,617,1.256,618,1.334,619,1.763,620,2.783,621,2.783,622,2.783,623,2.118,624,2.783,625,2.783,626,2.783,627,2.783,628,2.783,629,2.783,630,4.872,631,2.382,632,2.783,633,2.783,634,2.783,635,2.783,636,2.783,637,2.783,638,2.382,639,2.783,640,2.783,641,2.783,642,2.783,643,2.783,644,6.366]],["title/interfaces/ClassificationInterface.html",[235,0.05,617,1.631]],["body/interfaces/ClassificationInterface.html",[3,0.275,4,0.244,9,0.244,19,0.341,20,0.899,29,0.02,31,0.369,43,0.403,90,0.016,91,0.016,235,0.097,404,1.841,405,1.652,599,2.32,603,3.755,616,2.472,617,2.695,618,2.32,645,3.695,646,3.695,647,3.456,648,3.066,649,3.066,650,3.066,651,3.066,652,4.105,653,3.066,654,2.643,655,3.066,656,2.643,657,3.066,658,3.066,659,2.472]],["title/injectables/CreateGroupFacade.html",[211,0.9,660,2.495]],["body/injectables/CreateGroupFacade.html",[3,0.18,4,0.159,9,0.159,14,1.345,19,0.223,20,0.677,23,1.008,25,2.294,26,1.063,28,0.808,29,0.021,30,0.817,31,0.325,32,0.859,34,1.382,35,1.311,40,0.832,41,0.476,42,1.726,43,0.18,44,0.366,54,1.181,65,0.747,86,1.305,90,0.012,91,0.012,134,2.406,211,1.121,212,1.345,214,0.855,223,0.855,224,2.298,232,1.271,233,1.449,235,0.063,236,1.426,237,1.668,238,1.583,244,1.854,248,2.182,257,1.138,274,1.948,299,1.079,316,1.079,415,3.615,418,2.406,420,1.854,422,3.424,429,4.162,432,2.406,433,1.726,445,2.406,446,2.406,468,2.705,473,4.483,660,3.105,661,2.705,662,5.238,663,4.343,664,4.499,665,6.448,666,4.483,667,3.615,668,3.986,669,3.116,670,3.161,671,3.161,672,3.161,673,1.847,674,3.161,675,3.161,676,3.161,677,4.499,678,6.591,679,4.499,680,4.499,681,4.499,682,4.499,683,4.499,684,6.448,685,4.499,686,3.851,687,3.161,688,3.161,689,2.705,690,2.406,691,2.003,692,3.161,693,3.161,694,3.161,695,3.161,696,3.161,697,3.161,698,3.161,699,4.499,700,3.161,701,4.499,702,3.161,703,3.161,704,3.161,705,3.161,706,3.161,707,3.161,708,3.161,709,3.161,710,3.161,711,3.161,712,3.161,713,4.499,714,2.705,715,3.161,716,3.161,717,3.161,718,3.161,719,2.182,720,2.182,721,3.161,722,3.424,723,3.161,724,2.705]],["title/classes/EventClass.html",[44,0.418,725,2.495]],["body/classes/EventClass.html",[3,0.22,4,0.195,9,0.195,19,0.272,20,0.778,23,0.866,26,1.188,28,0.929,29,0.021,30,0.771,31,0.399,32,1.003,34,1.991,35,1.889,37,1.788,43,0.294,44,0.447,90,0.014,91,0.014,214,0.983,223,0.735,235,0.054,237,1.069,258,2.365,299,1.765,307,2.111,369,1.974,405,1.319,659,2.64,673,1.885,725,4.291,726,3.865,727,3.866,728,3.032,729,3.568,730,3.568,731,3.275,732,3.032,733,5.169,734,3.865,735,5.169,736,3.865,737,3.865,738,3.865,739,3.865,740,3.865,741,3.865,742,3.865,743,3.865,744,4.425,745,4.425,746,4.425,747,4.425,748,4.425,749,3.308,750,4.425,751,3.934,752,3.308,753,3.308,754,3.308,755,3.308,756,3.308,757,3.308,758,3.308,759,3.308,760,3.308,761,3.308,762,3.308,763,3.308,764,3.308]],["title/components/EventComponentComponent.html",[0,0.544,62,1.054]],["body/components/EventComponentComponent.html",[0,0.903,1,0.91,2,1.522,3,0.178,4,0.157,5,1.124,6,1.124,7,1.124,8,1.124,9,0.157,11,0.959,12,2.569,13,2.435,15,1.606,17,1.606,19,0.22,20,0.671,23,0.999,25,1.255,26,1.058,28,0.934,29,0.02,30,0.744,31,0.355,32,0.783,40,0.744,41,0.47,43,0.178,44,0.361,50,1.01,51,1.522,52,1.606,53,1.124,54,1.489,55,1.124,56,1.124,57,0.91,58,1.124,59,0.91,60,1.124,61,1.606,62,1.654,63,1.553,64,0.91,65,1.34,66,1.124,67,0.91,68,1.124,69,0.91,70,1.124,71,0.863,72,2.044,73,0.91,74,1.124,75,1.124,76,0.863,77,0.959,78,0.91,79,1.124,80,0.863,81,0.959,82,0.959,83,0.863,84,1.01,85,0.863,86,1.495,87,1.01,88,1.124,89,1.124,90,0.012,91,0.012,139,4.889,140,4.889,214,0.848,223,0.848,235,0.043,284,2.435,307,1.704,316,1.522,330,2.84,581,3.768,582,2.375,584,4.452,585,3.816,586,2.657,587,3.958,594,2.375,595,3.327,596,2.671,597,2.671,611,2.671,614,2.154,615,2.375,623,2.375,669,1.704,673,2.02,691,1.977,731,2.825,765,4.458,766,4.458,767,3.816,768,4.458,769,3.121,770,3.121,771,3.121,772,2.671,773,3.121,774,3.121,775,3.121,776,3.121,777,3.121,778,3.121,779,3.121,780,3.393,781,3.393,782,3.393,783,3.393,784,4.458,785,3.393,786,3.393,787,4.458,788,4.458]],["title/interfaces/EventInterface.html",[235,0.05,673,1.17]],["body/interfaces/EventInterface.html",[3,0.248,4,0.219,9,0.219,19,0.307,20,0.842,29,0.021,30,0.766,31,0.399,32,0.98,37,1.921,43,0.318,44,0.504,90,0.015,91,0.015,235,0.061,237,1.206,258,2.562,299,2.224,404,1.658,405,1.488,659,2.857,673,1.811,725,3.009,727,2.381,728,3.622,729,4.262,730,4.262,731,3.913,732,3.622,744,4.788,745,4.788,746,4.788,747,4.788,748,4.788,749,3.732,750,4.788,751,4.257,752,3.732,753,3.732,754,3.732,755,3.732,756,3.732,757,3.732,758,3.732,759,3.732,760,3.732,761,3.732,762,3.732,763,3.732,764,3.732]],["title/interfaces/EventPageInterface.html",[235,0.05,789,2.495]],["body/interfaces/EventPageInterface.html",[3,0.297,4,0.263,9,0.263,19,0.368,20,0.941,29,0.02,31,0.356,40,0.776,43,0.297,63,1.17,87,2.248,90,0.017,91,0.017,235,0.093,286,3.212,404,1.987,405,1.783,673,2.169,789,4.319,790,3.975,791,4.244,792,5.224,793,3.975]],["title/interfaces/GenreInterface.html",[235,0.05,656,1.974]],["body/interfaces/GenreInterface.html",[3,0.284,4,0.251,9,0.251,19,0.351,20,0.915,29,0.02,31,0.284,43,0.406,90,0.017,91,0.017,235,0.097,404,1.897,405,1.702,599,2.391,603,3.687,616,2.547,617,2.25,618,2.391,645,2.723,646,2.723,647,2.547,648,3.159,649,3.159,650,3.159,651,3.159,652,4.331,653,3.159,654,2.723,655,3.159,656,3.322,657,3.159,658,3.159,659,2.547,794,6.566]],["title/components/GroupCreateComponent.html",[0,0.544,64,1.054]],["body/components/GroupCreateComponent.html",[0,0.706,1,0.762,2,1.337,3,0.149,4,0.132,5,0.941,6,0.941,7,0.941,8,0.941,9,0.132,11,0.803,12,2.5,13,2.369,15,1.41,17,1.41,19,0.184,20,0.589,23,0.877,26,1.121,28,0.47,29,0.02,30,0.793,31,0.346,32,0.706,34,0.803,35,0.762,37,0.686,40,0.647,41,0.393,43,0.149,44,0.302,50,0.846,51,1.337,52,1.41,53,0.941,54,1.369,55,0.941,56,0.941,57,0.762,58,0.941,59,0.762,60,0.941,61,1.41,62,0.762,63,1.432,64,1.52,65,1.65,66,0.941,67,0.762,68,0.941,69,0.762,70,0.941,71,0.723,72,1.878,73,0.762,74,0.941,75,0.941,76,0.723,77,0.803,78,0.762,79,0.941,80,0.723,81,0.803,82,0.803,83,0.723,84,0.846,85,0.723,86,0.651,87,0.846,88,0.941,89,0.941,90,0.011,91,0.011,97,1.253,131,1.253,132,1.335,158,3.655,173,5.094,214,0.744,223,0.991,235,0.036,238,1.028,257,0.941,268,1.767,274,2.075,284,2.138,296,2.138,299,2.001,309,1.666,311,1.666,316,1.78,324,3.058,325,2.98,330,2.138,332,1.989,583,2.974,586,2.398,588,2.663,660,3.854,663,3.968,673,1.267,714,2.237,719,1.804,720,1.804,722,2.98,724,3.351,727,1.427,728,3.058,795,3.655,796,2.237,797,4.018,798,4.695,799,3.915,800,4.695,801,2.702,802,3.854,803,4.018,804,3.915,805,5.214,806,5.214,807,3.915,808,2.613,809,4.463,810,3.915,811,2.613,812,2.613,813,2.613,814,2.613,815,2.613,816,2.613,817,2.613,818,3.351,819,2.613,820,2.613,821,4.018,822,3.351,823,2.613,824,2.613,825,2.237,826,2.613,827,2.613,828,2.613,829,2.613,830,2.613,831,4.018,832,4.018,833,2.613,834,2.237,835,2.237,836,2.613,837,2.613,838,2.613,839,3.915,840,3.915,841,3.915]],["title/components/GroupDetailComponent.html",[0,0.544,67,1.054]],["body/components/GroupDetailComponent.html",[0,0.74,1,0.825,2,1.418,3,0.161,4,0.142,5,1.019,6,1.019,7,1.019,8,1.019,9,0.142,11,0.869,12,2.532,13,2.4,15,1.496,17,1.496,19,0.2,20,0.625,23,0.93,26,1.085,28,0.746,29,0.02,30,0.672,31,0.308,32,0.625,40,0.672,41,0.426,43,0.161,44,0.328,50,0.916,51,1.418,52,1.496,53,1.019,54,1.423,55,1.019,56,1.019,57,0.825,58,1.019,59,0.825,60,1.019,61,1.496,62,0.825,63,1.102,64,0.825,65,1.679,66,1.019,67,1.58,68,1.019,69,0.825,70,1.019,71,0.783,72,1.952,73,0.825,74,1.019,75,1.019,76,0.783,77,0.869,78,0.825,79,1.019,80,0.783,81,0.869,82,0.869,83,0.783,84,0.916,85,0.783,86,0.705,87,0.916,88,1.019,89,1.019,90,0.011,91,0.011,158,3.564,164,4.967,202,3.555,214,0.79,223,1.098,233,1.361,234,1.546,235,0.058,257,1.496,268,1.874,284,2.268,286,1.357,309,1.768,311,1.768,316,1.971,330,2.268,406,3.435,450,3.435,497,1.67,516,1.546,583,3.118,586,2.513,588,2.513,719,2.867,795,3.564,802,3.741,831,3.555,842,2.423,843,4.921,844,4.154,845,4.64,846,4.126,847,3.741,848,3.555,849,2.423,850,3.658,851,4.154,852,2.83,853,2.83,854,2.83,855,2.423,856,2.83,857,2.83,858,2.83,859,2.83,860,2.83,861,2.83,862,2.83,863,2.83,864,2.83,865,2.83,866,5.773,867,2.83,868,2.83,869,4.212,870,4.154,871,4.154,872,4.154,873,2.83,874,4.154,875,5.421,876,4.154,877,3.555,878,4.154,879,3.555,880,3.555,881,3.555,882,2.423,883,2.423,884,2.423,885,2.154,886,2.83]],["title/interfaces/GroupInterface.html",[235,0.05,497,1.453]],["body/interfaces/GroupInterface.html",[3,0.255,4,0.225,9,0.225,19,0.316,20,0.856,29,0.02,30,0.776,31,0.41,32,0.856,37,1.906,40,0.706,43,0.255,63,1.474,90,0.016,91,0.016,233,1.92,235,0.087,257,1.613,258,2.503,299,2.408,307,3.415,404,1.703,405,1.529,452,4.541,497,2.288,516,2.446,550,3.668,659,2.287,673,2.025,887,5.008,888,5.632,889,4.316,890,4.478,891,4.478,892,4.478]],["title/components/GroupListComponent.html",[0,0.544,69,1.054]],["body/components/GroupListComponent.html",[0,0.821,1,0.993,2,1.619,3,0.194,4,0.171,5,1.227,6,1.227,7,1.227,8,1.227,9,0.171,11,1.046,12,2.6,13,2.464,15,1.708,17,1.708,19,0.24,26,1,28,0.612,29,0.02,30,0.676,31,0.31,32,0.512,40,0.588,41,0.512,43,0.194,44,0.394,50,1.103,51,1.619,52,1.708,53,1.227,54,1.548,55,1.227,56,1.227,57,0.993,58,1.227,59,0.993,60,1.227,61,1.708,62,0.993,63,0.763,64,0.993,65,1.664,66,1.227,67,0.993,68,1.227,69,1.719,70,1.227,71,0.942,72,2.124,73,0.993,74,1.965,75,1.227,76,0.942,77,1.046,78,0.993,79,1.227,80,0.942,81,1.046,82,1.046,83,0.942,84,1.103,85,0.942,86,0.848,87,1.103,88,1.227,89,1.227,90,0.013,91,0.013,158,3.386,159,4.719,214,0.901,223,0.901,235,0.047,238,0.894,284,2.589,288,4.058,296,2.979,316,1.619,330,2.589,331,3.609,497,2.371,516,1.86,550,2.781,588,3.013,795,3.386,893,2.915,894,5.455,895,4.742,896,4.742,897,3.609,898,5.455,899,3.406,900,3.406,901,3.406,902,3.406,903,3.406,904,3.406,905,3.406,906,3.406,907,3.406,908,3.406,909,4.742,910,4.742,911,4.742,912,4.742,913,4.742,914,4.058]],["title/components/GroupPageComponent.html",[0,0.544,71,1]],["body/components/GroupPageComponent.html",[0,0.685,1,0.724,2,1.287,3,0.214,4,0.125,5,0.895,6,0.895,7,0.895,8,0.895,9,0.125,11,0.763,12,2.478,13,2.349,15,1.358,17,1.358,19,0.175,20,0.567,23,0.844,26,1.136,28,0.818,29,0.021,30,0.678,31,0.359,32,0.822,34,1.158,35,1.099,37,0.652,40,0.713,41,0.374,43,0.141,44,0.288,50,0.805,51,1.287,52,1.358,53,0.895,54,1.434,55,0.895,56,0.895,57,0.724,58,0.895,59,0.724,60,0.895,61,1.358,62,0.724,63,0.557,64,0.724,65,1.626,66,0.895,67,0.724,68,0.895,69,0.724,70,0.895,71,1.406,72,1.831,73,0.724,74,0.895,75,0.895,76,0.687,77,0.763,78,0.724,79,0.895,80,0.687,81,0.763,82,0.763,83,0.687,84,0.805,85,0.687,86,0.619,87,1.474,88,0.895,89,0.895,90,0.01,91,0.01,97,1.192,131,1.192,132,1.27,145,2.127,158,3.695,187,1.458,214,0.717,223,1.039,233,1.406,235,0.052,237,0.687,238,0.99,258,1.434,268,1.701,274,2.04,296,2.487,316,1.963,324,3.373,325,2.869,332,1.891,344,2.211,369,1.27,415,2.602,433,1.357,497,2.044,550,1.458,568,2.869,583,2.885,586,2.326,588,2.596,795,3.695,797,3.227,801,2.602,802,3.508,803,3.898,809,3.227,818,3.227,821,3.898,822,3.227,825,2.127,835,2.127,847,3.508,849,2.127,850,3.462,869,3.227,887,2.869,897,2.869,915,1.458,916,4.554,917,2.885,918,2.388,919,3.77,920,3.227,921,4.554,922,3.77,923,3.77,924,5.083,925,2.869,926,3.898,927,3.77,928,2.485,929,2.485,930,2.485,931,2.485,932,2.485,933,2.485,934,2.485,935,2.485,936,2.485,937,2.127,938,2.485,939,2.127,940,1.575,941,1.891,942,2.485,943,2.485,944,2.485,945,2.485,946,2.127,947,2.485,948,2.485,949,2.485,950,2.485,951,2.485,952,2.485,953,3.77,954,2.127,955,3.77,956,2.485,957,2.485,958,2.485,959,2.485,960,2.485,961,1.715,962,2.485,963,2.485,964,2.485,965,2.127,966,3.77]],["title/injectables/GroupService.html",[211,0.9,667,2.29]],["body/injectables/GroupService.html",[3,0.114,4,0.101,9,0.101,14,0.851,19,0.141,23,0.448,26,1.047,28,1.109,29,0.021,30,0.839,31,0.351,32,0.929,36,1.522,37,1.587,40,0.684,41,0.301,43,0.114,44,0.231,45,1.022,63,1.106,65,1.394,90,0.009,91,0.009,151,1.267,211,0.793,212,0.851,214,0.605,223,1.15,224,3.301,226,2.895,232,0.804,233,1.808,234,1.092,235,0.055,236,0.902,237,1.738,238,1.549,244,3.46,248,1.38,257,2.223,258,1.72,264,2.197,274,1.544,299,0.683,309,0.851,311,0.851,324,1.867,346,1.522,366,2.197,385,1.522,450,1.267,452,2.737,483,1.38,484,3.121,486,2.197,491,3.757,497,2.739,503,2.423,504,1.522,505,1.522,506,3.019,507,1.38,508,1.712,509,1.522,510,1.522,511,1.522,512,1.522,513,1.522,514,1.712,516,1.092,525,2.423,533,3.629,536,1.712,539,1.712,540,2.725,541,1.712,542,1.712,543,1.712,546,1.712,550,2.652,562,1.712,566,1.522,568,2.423,575,4.198,577,3.629,579,3.441,663,2.423,667,2.017,673,1.464,720,1.38,722,1.522,727,1.092,728,1.867,729,1.38,730,1.38,731,1.267,732,1.173,780,1.522,781,1.522,782,1.522,783,1.522,785,1.522,802,2.197,846,2.423,847,2.197,887,4.002,888,3.871,889,2.737,920,2.725,967,1.712,968,3.184,969,3.184,970,3.184,971,3.184,972,3.184,973,3.184,974,3.184,975,3.966,976,3.121,977,2,978,3.184,979,2,980,3.184,981,2,982,3.184,983,2,984,2,985,3.184,986,2,987,3.184,988,2,989,3.184,990,2,991,3.184,992,2,993,3.184,994,2,995,3.184,996,2,997,3.184,998,2,999,2,1000,2,1001,2,1002,2,1003,2,1004,2,1005,2,1006,2,1007,2,1008,2,1009,2,1010,2,1011,2,1012,2,1013,2,1014,2,1015,2,1016,2,1017,2,1018,3.184,1019,2,1020,1.712,1021,2,1022,1.712,1023,2,1024,2,1025,2,1026,2,1027,2,1028,2,1029,2,1030,2,1031,2,1032,2,1033,2,1034,2,1035,2,1036,5.516,1037,3.184,1038,2,1039,2,1040,1.712,1041,2,1042,1.712,1043,2,1044,2,1045,2,1046,1.712,1047,2,1048,3.184,1049,4.937,1050,4.937,1051,2,1052,2,1053,3.966,1054,2,1055,2,1056,1.712,1057,2,1058,3.184,1059,2,1060,3.184,1061,2,1062,2,1063,2,1064,1.712,1065,2,1066,2,1067,2,1068,2,1069,2,1070,2,1071,2,1072,2,1073,2,1074,2,1075,2,1076,2,1077,2,1078,2,1079,2]],["title/pipes/GroupmemberPipePipe.html",[104,2.29,1080,1.974]],["body/pipes/GroupmemberPipePipe.html",[3,0.286,4,0.253,9,0.253,11,1.543,26,0.852,28,0.903,29,0.02,30,0.817,31,0.286,32,0.756,37,1.605,40,0.758,41,0.756,43,0.286,44,0.581,90,0.017,91,0.017,104,3.872,169,4.652,214,0.955,223,0.955,233,1.822,235,0.07,237,1.39,268,2.267,433,2.744,550,2.947,795,3.338,914,5.232,965,4.301,1080,3.338,1081,3.468,1082,4.301,1083,3.183,1084,5.025,1085,5.025,1086,4.652,1087,5.025]],["title/pipes/GrouppipePipe.html",[105,2.29,1080,1.974]],["body/pipes/GrouppipePipe.html",[3,0.275,4,0.243,9,0.243,11,1.483,26,0.819,28,0.867,29,0.02,30,0.803,31,0.275,32,0.726,35,1.407,40,0.803,41,0.726,43,0.275,44,0.559,90,0.016,91,0.016,105,3.779,214,0.918,223,0.918,233,1.79,235,0.083,237,1.65,257,2.148,268,2.179,307,3.257,433,2.637,497,2.792,795,3.257,941,3.674,1046,4.133,1080,3.257,1081,3.332,1083,3.059,1086,4.539,1088,4.133,1089,5.965,1090,4.828,1091,5.965,1092,4.828,1093,4.828,1094,4.828,1095,4.828,1096,4.828,1097,4.828]],["title/interfaces/IdClassType.html",[235,0.05,599,1.733]],["body/interfaces/IdClassType.html",[3,0.284,4,0.251,9,0.251,19,0.351,20,0.915,29,0.02,31,0.389,43,0.406,90,0.017,91,0.017,235,0.097,404,1.897,405,1.702,599,2.917,603,3.58,616,3.354,617,2.25,618,2.391,645,2.723,646,2.723,647,2.547,648,3.159,649,3.159,650,3.159,651,3.159,652,4.331,653,3.159,654,2.723,655,3.159,656,2.723,657,3.159,658,3.159,659,2.547]],["title/interfaces/IdName.html",[235,0.05,603,1.846]],["body/interfaces/IdName.html",[3,0.28,4,0.248,9,0.248,19,0.347,20,0.908,29,0.02,30,0.81,31,0.344,37,1.787,43,0.404,90,0.016,91,0.016,235,0.097,258,2.483,404,1.873,405,1.681,599,2.361,603,3.568,616,2.515,617,2.222,618,2.361,645,2.689,646,2.689,647,2.515,648,3.12,649,3.12,650,3.12,651,3.12,652,4.137,653,3.12,654,2.689,655,3.12,656,2.689,657,3.12,658,3.12,659,2.515]],["title/pipes/InwatchlistPipe.html",[106,2.29,1080,1.974]],["body/pipes/InwatchlistPipe.html",[3,0.276,4,0.244,9,0.244,11,1.49,26,0.823,28,0.872,29,0.02,30,0.804,31,0.276,32,0.73,36,3.692,40,0.742,41,0.73,43,0.276,44,0.561,54,1.274,86,1.616,90,0.016,91,0.016,106,3.79,136,4.129,214,0.922,223,0.922,235,0.067,237,1.655,268,2.189,307,3.267,369,2.478,581,3.509,673,2.293,727,2.65,751,3.692,767,5.121,1064,4.153,1080,3.267,1081,3.349,1083,3.074,1086,4.553,1098,4.153,1099,5.983,1100,4.852,1101,3.349,1102,4.153]],["title/components/ListEventsComponent.html",[0,0.544,73,1.054]],["body/components/ListEventsComponent.html",[0,0.87,1,1.111,2,1.749,3,0.217,4,0.192,5,1.373,6,1.373,7,1.373,8,1.373,9,0.192,11,1.171,12,2.637,13,2.5,15,1.845,17,1.845,19,0.269,26,0.869,29,0.02,30,0.635,31,0.291,34,1.573,35,1.493,40,0.635,41,0.574,43,0.217,44,0.441,50,1.234,51,1.749,52,1.845,53,1.373,54,1.623,55,1.373,56,1.373,57,1.111,58,1.373,59,1.111,60,1.373,61,1.845,62,1.111,63,0.854,64,1.111,65,1.461,66,1.373,67,1.111,68,1.373,69,1.111,70,1.373,71,1.055,72,2.227,73,1.802,74,2.485,75,1.373,76,1.055,77,1.171,78,1.111,79,1.373,80,1.055,81,1.171,82,1.171,83,1.055,84,1.234,85,1.055,86,1.441,87,1.234,88,1.373,89,1.373,90,0.014,91,0.014,136,3.992,137,4.402,235,0.053,284,2.797,286,2.965,330,3.159,581,3.392,673,1.873,691,2.416,793,2.902,1101,2.632,1103,3.264,1104,5.784,1105,5.122,1106,3.813,1107,3.813]],["title/components/LoginPageComponent.html",[0,0.544,76,1]],["body/components/LoginPageComponent.html",[0,0.783,1,0.911,2,1.524,3,0.178,4,0.157,5,1.126,6,1.126,7,1.126,8,1.126,9,0.157,11,0.96,12,2.569,13,2.435,15,1.608,17,1.608,19,0.367,23,1,25,2.283,26,0.883,28,0.562,29,0.021,30,0.646,31,0.178,32,0.47,40,0.646,41,0.47,42,1.707,43,0.178,44,0.362,50,1.012,51,1.524,52,1.608,53,1.126,54,1.491,55,1.126,56,1.126,57,0.911,58,1.126,59,0.911,60,1.126,61,1.608,62,0.911,63,0.7,64,0.911,65,1.341,66,1.126,67,0.911,68,1.126,69,0.911,70,1.126,71,0.865,72,2.045,73,0.911,74,1.126,75,1.126,76,1.571,77,2.019,78,0.911,79,1.126,80,0.865,81,0.96,82,0.96,83,0.865,84,1.012,85,0.865,86,0.779,87,1.685,88,1.126,89,1.126,90,0.012,91,0.012,172,3.919,187,1.833,214,0.849,218,4.321,219,2.676,220,3.82,223,0.849,257,1.126,274,1.777,316,1.524,382,2.379,388,2.379,390,2.379,392,2.379,393,3.397,400,2.676,882,2.676,883,2.676,884,2.676,885,2.379,915,1.833,917,3.298,918,2.828,925,3.397,926,4.456,940,1.98,946,2.676,1083,2.828,1108,4.86,1109,5.678,1110,4.57,1111,3.126,1112,3.126,1113,2.379,1114,3.126,1115,3.126,1116,3.126,1117,3.126,1118,3.126,1119,4.463,1120,4.463,1121,4.463,1122,4.463,1123,3.126,1124,3.82,1125,4.463,1126,3.126,1127,3.126,1128,4.463,1129,5.206,1130,4.463,1131,2.157,1132,2.379,1133,3.126,1134,3.126,1135,3.126,1136,3.126,1137,3.126,1138,3.126,1139,3.126,1140,3.126,1141,2.676,1142,3.126,1143,2.676,1144,3.82,1145,3.126,1146,4.463,1147,3.126,1148,3.126,1149,4.463,1150,3.126,1151,3.126,1152,3.126]],["title/components/NavigationComponent.html",[0,0.544,78,1.054]],["body/components/NavigationComponent.html",[0,0.861,1,1.088,2,1.724,3,0.212,4,0.188,5,1.345,6,1.345,7,1.345,8,1.345,9,0.188,11,1.147,12,2.631,13,2.493,15,1.819,17,1.819,19,0.263,23,0.836,24,2.577,25,2.301,26,0.857,28,0.671,29,0.02,30,0.71,31,0.212,32,0.562,33,2.577,40,0.71,41,0.562,43,0.212,44,0.432,45,1.907,50,1.209,51,1.724,52,1.819,53,1.345,54,1.61,55,1.345,56,1.345,57,1.088,58,1.345,59,1.088,60,1.345,61,1.819,62,1.088,63,0.836,64,1.088,65,1.449,66,1.345,67,1.088,68,1.345,69,1.088,70,1.345,71,1.033,72,2.208,73,1.088,74,1.345,75,1.345,76,1.033,77,1.147,78,1.787,79,1.345,80,1.033,81,1.758,82,1.147,83,1.033,84,1.853,85,1.033,86,1.425,87,1.209,88,1.345,89,1.345,90,0.014,91,0.014,187,2.19,214,0.96,218,5.025,223,0.71,273,2.962,316,1.275,772,3.196,897,3.844,1110,4.875,1113,2.842,1153,3.196,1154,5.05,1155,5.723,1156,5.05,1157,3.734,1158,3.734,1159,3.734,1160,3.734,1161,3.734,1162,3.844,1163,4.323,1164,5.05]],["title/injectables/NotificationService.html",[211,0.9,976,2.495]],["body/injectables/NotificationService.html",[3,0.205,4,0.181,9,0.181,14,1.534,19,0.254,23,0.807,26,1.025,28,1.086,29,0.021,30,0.749,31,0.344,32,0.909,37,1.661,40,0.697,41,0.542,43,0.205,44,0.417,45,1.841,51,1.683,65,1.165,90,0.013,91,0.013,151,2.284,211,1.228,212,1.534,214,0.937,223,1.068,224,3.337,235,0.05,236,1.626,237,1.555,238,0.946,244,2.114,274,1.918,299,2.063,344,2.114,483,2.488,484,4.17,486,3.403,497,2.689,503,2.743,504,2.743,505,2.743,506,3.753,516,1.968,525,2.743,533,2.488,566,3.753,728,2.114,801,4.17,889,3.879,976,3.403,1162,3.753,1163,4.22,1165,3.085,1166,4.931,1167,4.931,1168,4.931,1169,3.605,1170,4.931,1171,3.605,1172,4.931,1173,3.605,1174,4.931,1175,6.042,1176,3.605,1177,3.605,1178,3.605,1179,3.605,1180,3.605,1181,3.605,1182,4.931,1183,4.931,1184,4.931,1185,6.042,1186,6.042,1187,3.605,1188,3.605,1189,4.931,1190,4.931,1191,3.605,1192,3.605,1193,3.605,1194,3.605,1195,3.605,1196,4.931,1197,3.605,1198,3.605,1199,4.931,1200,4.931,1201,3.605,1202,3.605,1203,3.605,1204,3.605,1205,3.605,1206,3.605]],["title/interfaces/PageInterface.html",[235,0.05,791,2.29]],["body/interfaces/PageInterface.html",[3,0.3,4,0.266,9,0.266,19,0.372,20,0.947,29,0.02,31,0.383,43,0.3,90,0.017,91,0.017,235,0.073,303,4.693,404,2.008,405,1.802,791,3.99,1207,4.519,1208,5.76,1209,6.729,1210,5.279,1211,5.279,1212,5.279]],["title/components/PersonalCalenderPageComponent.html",[0,0.544,80,1]],["body/components/PersonalCalenderPageComponent.html",[0,0.697,1,0.745,2,1.314,3,0.145,4,0.129,5,0.921,6,0.921,7,0.921,8,0.921,9,0.129,11,0.785,12,2.49,13,2.36,15,1.387,17,1.387,19,0.18,20,0.579,23,0.862,26,1.077,28,0.926,29,0.021,30,0.721,31,0.343,32,0.776,34,1.183,35,1.122,40,0.686,41,0.385,43,0.145,44,0.296,50,0.827,51,1.314,52,1.387,53,0.921,54,1.526,55,0.921,56,0.921,57,0.745,58,0.921,59,0.745,60,0.921,61,1.387,62,0.745,63,1.239,64,0.745,65,1.218,66,0.921,67,0.745,68,0.921,69,0.745,70,0.921,71,0.707,72,1.857,73,0.745,74,0.921,75,0.921,76,0.707,77,0.785,78,0.745,79,0.921,80,1.426,81,1.907,82,2.232,83,0.707,84,0.827,85,0.707,86,0.637,87,1.5,88,0.921,89,0.921,90,0.01,91,0.01,97,1.225,131,1.225,132,1.306,166,4.467,214,0.732,223,1.052,235,0.036,237,1.065,238,1.353,268,1.737,279,3.296,292,2.623,294,3.197,299,0.873,302,2.188,303,3.683,304,3.296,305,3.296,307,1.396,309,1.639,311,1.639,316,1.888,337,1.306,369,1.306,373,2.188,374,2.188,376,2.188,406,2.44,413,3.817,416,4.413,417,3.296,424,4.734,427,3.296,434,1.945,439,2.188,450,3.267,456,2.188,475,3.296,577,2.657,583,2.935,586,2.366,588,2.634,719,1.764,720,1.764,786,2.93,832,2.188,834,2.188,877,4.413,879,3.296,880,3.296,881,3.296,915,1.499,917,2.935,918,2.44,937,3.296,940,1.619,961,1.764,1213,5.54,1214,5.156,1215,4.632,1216,4.632,1217,3.85,1218,2.556,1219,2.556,1220,2.556,1221,2.188,1222,2.556,1223,2.556,1224,2.556,1225,2.188,1226,2.556,1227,2.556,1228,2.556,1229,2.556,1230,2.556,1231,2.556,1232,2.556,1233,2.556,1234,2.556,1235,2.556,1236,2.556,1237,2.556,1238,2.556,1239,2.556,1240,2.556,1241,2.556,1242,2.556,1243,2.556,1244,2.556,1245,2.556,1246,2.556,1247,2.556,1248,2.556,1249,3.85]],["title/injectables/SearchFacadeService.html",[211,0.9,595,2.12]],["body/injectables/SearchFacadeService.html",[3,0.133,4,0.117,9,0.117,14,0.992,19,0.164,20,0.54,23,0.804,24,1.608,25,1.759,26,1.17,28,1.084,29,0.021,30,0.748,31,0.387,32,0.907,33,1.608,34,1.852,35,1.758,37,1.29,40,0.767,41,0.351,42,1.272,43,0.133,44,0.27,46,1.608,49,2.731,54,1.29,63,0.804,86,0.894,90,0.01,91,0.01,211,0.894,212,0.992,214,0.682,223,1.176,232,0.937,233,0.645,235,0.068,236,1.051,237,0.645,238,1.754,274,1.914,286,1.117,296,2.684,303,2.273,316,2.059,369,1.19,429,4.655,433,1.272,507,3.02,586,3.584,595,2.104,599,2.545,601,1.994,614,4.792,616,1.19,617,1.051,619,3.114,645,1.96,647,1.833,668,3.33,669,2.684,673,1.718,690,1.773,691,1.476,791,1.476,961,2.477,1102,1.994,1131,2.477,1250,1.994,1251,3.588,1252,3.588,1253,3.071,1254,3.588,1255,3.588,1256,3.588,1257,3.588,1258,3.071,1259,3.071,1260,4.207,1261,3.588,1262,3.588,1263,3.746,1264,3.588,1265,4.376,1266,3.588,1267,2.33,1268,2.33,1269,2.33,1270,2.33,1271,1.994,1272,2.33,1273,3.746,1274,1.994,1275,2.33,1276,1.994,1277,2.33,1278,2.33,1279,2.33,1280,2.33,1281,2.33,1282,2.33,1283,2.33,1284,2.33,1285,2.33,1286,3.588,1287,2.33,1288,2.33,1289,2.33,1290,2.33,1291,2.33,1292,3.588,1293,3.588,1294,3.588,1295,2.33,1296,2.33,1297,2.33,1298,2.33,1299,2.33,1300,2.33,1301,2.33,1302,2.33,1303,2.33,1304,2.33,1305,2.33,1306,2.33,1307,2.33,1308,2.33,1309,2.33,1310,2.33,1311,2.33,1312,2.33,1313,2.33,1314,2.33,1315,2.33,1316,2.33,1317,2.33,1318,2.33,1319,3.588,1320,3.588,1321,2.33,1322,2.33,1323,2.33,1324,2.33,1325,2.33,1326,2.33,1327,1.994,1328,1.773,1329,1.994,1330,2.33,1331,2.33,1332,2.33,1333,2.33,1334,2.33,1335,2.33,1336,2.33,1337,2.33,1338,3.588,1339,2.477,1340,2.33,1341,3.588,1342,1.994,1343,3.588,1344,3.588,1345,2.33,1346,2.33,1347,2.33,1348,1.994,1349,1.994,1350,2.33,1351,2.33,1352,2.33,1353,2.33,1354,2.33,1355,3.588,1356,2.33,1357,2.33,1358,2.33]],["title/components/SearchPageComponent.html",[0,0.544,83,1]],["body/components/SearchPageComponent.html",[0,0.71,1,0.769,2,1.346,3,0.15,4,0.133,5,0.95,6,0.95,7,0.95,8,0.95,9,0.133,11,0.81,12,2.503,13,2.373,15,1.42,17,1.42,19,0.186,20,0.593,23,0.883,26,1.087,28,0.708,29,0.021,30,0.65,31,0.347,32,0.593,34,1.609,35,1.527,37,1.035,40,0.585,41,0.397,43,0.15,44,0.305,49,2.008,50,0.854,51,1.346,52,1.42,53,0.95,54,1.375,55,0.95,56,0.95,57,0.769,58,0.95,59,0.769,60,0.95,61,1.42,62,0.769,63,0.591,64,0.769,65,1.237,66,0.95,67,0.769,68,0.95,69,0.769,70,0.95,71,0.73,72,1.887,73,0.769,74,0.95,75,0.95,76,0.73,77,0.81,78,0.769,79,0.95,80,0.73,81,0.81,82,0.81,83,1.449,84,2.234,85,0.73,86,0.657,87,1.528,88,0.95,89,0.95,90,0.011,91,0.011,143,2.008,144,3.593,156,4.503,214,0.75,223,0.897,238,1.375,274,0.9,286,1.265,296,3.329,303,2.498,311,1.123,316,1.612,344,1.547,379,2.258,382,2.008,385,2.008,387,2.258,388,3.593,389,2.258,390,3.986,392,3.986,393,3,581,3.826,586,2.411,587,3.593,588,2.675,594,2.008,595,3.072,615,2.008,623,2.008,885,2.008,915,1.547,917,2.991,918,2.498,939,3.375,940,1.671,1083,1.671,1124,2.258,1141,4.041,1143,3.375,1144,2.258,1208,3.375,1221,2.258,1225,2.258,1253,3.375,1258,3.375,1263,4.041,1271,2.258,1273,2.258,1327,2.258,1328,2.008,1329,2.258,1339,2.721,1348,2.258,1349,2.258,1359,3.943,1360,3.943,1361,3.943,1362,4.721,1363,2.638,1364,2.638,1365,2.258,1366,2.258,1367,2.638,1368,2.638,1369,2.638,1370,2.638,1371,2.638,1372,2.638,1373,2.638,1374,2.638,1375,2.638,1376,2.638,1377,2.638,1378,2.638,1379,2.638,1380,2.638,1381,2.638,1382,4.721,1383,2.638,1384,3.943,1385,4.721,1386,2.638,1387,2.638,1388,2.638,1389,2.638,1390,2.638,1391,2.638,1392,2.638,1393,2.638,1394,2.638,1395,3.943,1396,3.943,1397,3.943,1398,2.638,1399,2.638,1400,2.638,1401,2.638,1402,2.638,1403,2.638,1404,3.943,1405,2.638,1406,3.943,1407,2.638,1408,2.638,1409,2.638,1410,2.638,1411,2.638,1412,2.638,1413,2.638,1414,2.638]],["title/interfaces/SegmentInterface.html",[235,0.05,654,1.974]],["body/interfaces/SegmentInterface.html",[3,0.284,4,0.251,9,0.251,19,0.351,20,0.915,29,0.02,31,0.284,43,0.406,90,0.017,91,0.017,235,0.097,404,1.897,405,1.702,599,2.391,603,3.58,616,2.547,617,2.25,618,2.391,645,2.723,646,2.723,647,2.547,648,3.159,649,3.159,650,3.159,651,3.159,652,4.331,653,3.159,654,3.322,655,3.159,656,3.585,657,3.159,658,3.159,659,2.547,1415,6.566]],["title/injectables/TicketmasterService.html",[211,0.9,619,2.29]],["body/injectables/TicketmasterService.html",[3,0.154,4,0.136,9,0.136,14,1.153,19,0.191,20,0.605,23,0.607,26,1.043,28,0.954,29,0.021,30,0.658,31,0.35,32,0.799,34,0.832,35,0.79,37,1.259,40,0.783,41,0.408,43,0.154,44,0.314,45,1.384,54,1.749,90,0.011,91,0.011,127,1.87,148,2.32,162,2.32,187,1.589,211,1.002,212,1.153,214,0.765,223,1.009,226,3.113,232,1.09,235,0.056,236,1.223,237,1.903,238,1.615,274,1.936,286,1.299,299,1.638,301,2.063,324,3.113,335,2.32,340,2.063,344,1.589,356,3.443,366,1.87,507,1.87,617,1.223,618,1.299,619,2.549,631,3.443,646,1.48,647,1.384,732,2.359,789,3.311,790,2.063,801,2.776,954,4.106,961,1.87,1110,4.681,1259,3.443,1274,2.32,1276,2.32,1339,3.311,1342,3.443,1416,2.32,1417,4.023,1418,4.797,1419,4.797,1420,4.023,1421,4.023,1422,2.71,1423,5.308,1424,5.264,1425,4.023,1426,4.023,1427,2.71,1428,2.71,1429,2.71,1430,2.71,1431,2.71,1432,2.71,1433,4.797,1434,4.023,1435,2.71,1436,3.061,1437,2.063,1438,2.71,1439,2.71,1440,4.023,1441,2.71,1442,2.71,1443,2.71,1444,2.71,1445,2.32,1446,2.71,1447,2.71,1448,2.71,1449,4.023,1450,2.71,1451,2.71,1452,2.71,1453,2.71,1454,4.797,1455,2.71,1456,2.71,1457,2.71,1458,2.71,1459,2.71,1460,2.71,1461,2.71,1462,2.71,1463,2.71,1464,2.71,1465,2.71,1466,2.71,1467,2.71,1468,2.71,1469,2.71,1470,2.71,1471,2.71,1472,2.71,1473,2.71,1474,4.023,1475,2.71,1476,2.71,1477,2.71,1478,2.71,1479,4.023,1480,2.71,1481,4.023,1482,4.023,1483,4.023,1484,4.023,1485,4.023,1486,4.023,1487,4.023,1488,5.308,1489,4.023,1490,4.023,1491,4.023,1492,4.023,1493,4.023,1494,4.023,1495,4.023,1496,4.023,1497,4.023,1498,4.023,1499,4.023,1500,2.71,1501,2.71,1502,2.71,1503,2.71,1504,2.71,1505,2.71,1506,2.71,1507,2.71,1508,2.71,1509,2.71,1510,2.71,1511,2.71,1512,2.71,1513,4.023,1514,2.71,1515,2.71,1516,2.71,1517,2.71]],["title/interfaces/UserInterface.html",[233,1,235,0.05]],["body/interfaces/UserInterface.html",[3,0.296,4,0.262,9,0.262,19,0.366,20,0.939,29,0.02,30,0.86,31,0.38,37,1.94,43,0.296,90,0.017,91,0.017,233,1.725,234,2.838,235,0.072,258,2.636,261,5.276,404,1.976,405,1.774,1518,6.684]],["title/injectables/ViewGroupFacade.html",[211,0.9,850,2.29]],["body/injectables/ViewGroupFacade.html",[3,0.14,4,0.124,9,0.124,14,1.048,19,0.174,20,0.563,23,0.839,25,1.821,26,1.165,28,1.03,29,0.021,30,0.711,31,0.38,32,0.924,34,1.76,35,1.671,37,1.505,40,0.819,41,0.371,42,1.345,43,0.14,44,0.285,54,0.647,63,0.552,65,1.354,90,0.01,91,0.01,97,1.181,127,1.7,131,1.181,132,1.258,211,0.933,212,1.048,214,0.712,223,1.167,224,2.928,226,2.968,232,0.99,233,1.585,235,0.063,236,1.112,237,1.585,238,1.773,257,1.632,258,1.424,273,1.445,274,1.858,285,3.447,292,1.112,294,3.126,299,1.858,301,3.447,316,1.278,337,1.258,338,2.196,359,2.109,360,2.109,361,2.109,407,2.196,415,3.126,418,1.875,419,3.877,420,2.968,422,1.875,429,4.88,432,1.875,433,1.345,434,1.875,435,1.7,436,1.7,437,2.109,440,2.109,441,2.109,442,2.109,443,2.109,444,2.109,445,1.875,446,2.85,450,1.561,451,2.109,452,1.7,453,2.109,454,2.109,455,2.109,497,2.304,666,3.877,667,3.206,689,2.109,845,4.331,846,3.851,847,2.584,848,3.205,850,2.373,855,3.205,941,1.875,1056,2.109,1424,5.099,1445,2.109,1519,2.109,1520,4.53,1521,4.53,1522,4.53,1523,4.53,1524,3.745,1525,3.745,1526,3.745,1527,4.53,1528,5.443,1529,3.745,1530,2.464,1531,2.464,1532,3.745,1533,2.464,1534,3.745,1535,2.464,1536,2.464,1537,3.745,1538,2.464,1539,3.745,1540,2.464,1541,2.464,1542,2.464,1543,2.464,1544,2.464,1545,2.464,1546,5.06,1547,2.464,1548,2.464,1549,2.464,1550,2.464,1551,2.464,1552,2.464,1553,2.464,1554,2.464,1555,2.464,1556,2.464,1557,2.464,1558,2.464,1559,2.464,1560,2.464,1561,2.464,1562,2.464,1563,2.464,1564,2.464,1565,2.464,1566,2.464,1567,2.464,1568,2.464,1569,2.464,1570,2.464,1571,2.464,1572,2.464,1573,2.464,1574,2.464,1575,2.464,1576,3.745,1577,2.464,1578,2.464,1579,2.464]],["title/components/WatchlistPageComponent.html",[0,0.544,85,1]],["body/components/WatchlistPageComponent.html",[0,0.825,1,1.003,2,1.63,3,0.196,4,0.173,5,1.24,6,1.24,7,1.24,8,1.24,9,0.173,11,1.057,12,2.603,13,2.468,15,1.72,17,1.72,19,0.243,20,0.719,23,1.07,24,2.375,25,2.205,26,1.005,28,0.618,29,0.021,30,0.68,31,0.312,32,0.518,33,2.375,34,1.467,35,1.392,40,0.735,41,0.518,42,1.879,43,0.196,44,0.398,46,2.375,50,1.114,51,1.63,52,1.72,53,1.24,54,1.555,55,1.24,56,1.24,57,1.003,58,1.24,59,1.003,60,1.24,61,1.72,62,1.003,63,0.771,64,1.003,65,1.4,66,1.24,67,1.003,68,1.24,69,1.003,70,1.24,71,0.952,72,2.134,73,1.003,74,1.24,75,1.24,76,0.952,77,1.057,78,1.003,79,1.24,80,0.952,81,1.057,82,1.057,83,0.952,84,1.114,85,1.639,86,1.725,87,1.776,88,1.24,89,1.24,90,0.013,91,0.013,167,4.296,214,0.908,223,0.654,235,0.048,274,1.63,286,2.29,316,1.175,588,3.026,668,4.174,669,3.235,673,1.776,690,2.619,691,2.18,793,2.619,915,2.018,917,3.475,918,3.026,940,2.18,1101,2.375,1365,2.946,1366,4.088,1580,5.327,1581,3.441,1582,3.441,1583,3.441,1584,3.441,1585,3.441,1586,3.441]],["title/injectables/WatchlistService.html",[211,0.9,669,1.974]],["body/injectables/WatchlistService.html",[3,0.17,4,0.15,9,0.15,14,1.272,19,0.211,23,0.669,26,1.043,28,1.105,29,0.021,30,0.786,31,0.35,32,0.925,40,0.732,41,0.45,43,0.17,44,0.346,45,1.527,63,1.482,90,0.012,91,0.012,151,1.894,211,1.076,212,1.272,214,0.822,223,1.122,224,2.841,226,2.977,232,1.202,233,1.859,234,1.632,235,0.06,236,1.349,237,1.701,238,1.615,244,2.977,257,1.828,258,1.644,264,2.063,274,2.1,324,3.808,483,2.063,484,3.839,486,2.983,491,4.491,509,2.275,510,2.275,511,2.275,512,2.275,513,2.275,515,2.558,533,2.983,575,3.863,577,2.983,579,3.289,669,2.36,673,2.227,727,1.632,728,1.753,729,2.063,730,2.063,731,1.894,732,1.753,780,3.289,781,3.289,782,3.289,783,3.289,785,3.289,1020,2.558,1022,3.699,1040,2.558,1042,3.699,1101,2.063,1260,3.699,1328,2.275,1587,2.558,1588,4.322,1589,4.322,1590,4.322,1591,4.322,1592,2.989,1593,4.322,1594,2.989,1595,4.322,1596,2.989,1597,2.989,1598,2.989,1599,2.989,1600,4.322,1601,2.989,1602,4.322,1603,2.989,1604,2.989,1605,4.322,1606,2.989,1607,2.989,1608,2.989,1609,2.989,1610,2.989,1611,2.989,1612,2.989,1613,2.989,1614,2.989,1615,2.989,1616,2.989,1617,2.989,1618,2.989,1619,2.989,1620,2.989,1621,5.076,1622,5.076,1623,2.989,1624,4.322,1625,2.989,1626,2.989,1627,4.322,1628,2.989,1629,2.989,1630,2.989,1631,2.989,1632,2.989,1633,4.322,1634,2.989,1635,2.989,1636,2.989,1637,2.989,1638,2.989]],["title/coverage.html",[1639,4.229]],["body/coverage.html",[0,1.026,1,0.755,9,0.13,10,2.216,25,1.041,29,0.021,31,0.147,44,0.3,57,0.755,59,0.755,62,0.755,64,0.755,67,0.755,69,0.755,71,0.716,73,0.755,76,0.716,78,0.755,80,0.716,82,1.194,83,0.716,85,0.716,86,0.645,90,0.011,91,0.011,104,1.641,105,1.641,106,1.641,136,2.684,137,1.971,139,1.971,140,1.971,146,1.971,156,1.787,158,2.834,159,1.971,164,1.971,166,1.787,167,1.787,169,1.971,172,1.787,173,1.971,175,1.971,176,1.971,188,1.971,211,1.618,213,2.216,233,0.716,234,1.414,235,0.093,238,0.68,267,2.216,292,1.168,309,1.102,311,1.102,336,2.463,337,1.986,349,1.971,405,2.306,409,1.787,413,1.787,414,2.216,420,1.519,435,1.787,436,1.787,476,2.216,497,1.041,516,1.414,581,3.262,582,2.959,595,1.519,599,1.241,603,1.323,614,1.787,617,1.168,618,2.667,619,1.641,654,1.414,656,1.414,660,1.787,661,2.216,667,1.641,669,1.414,673,0.838,725,1.787,727,2.123,789,1.787,790,1.971,791,1.641,795,3.19,796,2.216,842,2.216,850,1.641,893,2.216,915,3.262,967,2.216,976,1.787,1080,2.55,1082,2.216,1088,2.216,1098,2.216,1103,2.216,1108,2.216,1153,2.216,1165,2.216,1207,2.216,1213,2.216,1250,2.216,1339,5.212,1416,2.216,1436,1.971,1437,2.959,1519,2.216,1580,2.216,1587,2.216,1639,2.216,1640,2.59,1641,2.59,1642,2.59,1643,5.562,1644,2.59,1645,5.562,1646,5.562,1647,2.59,1648,2.59,1649,3.888,1650,2.59,1651,4.669,1652,2.59,1653,7.197,1654,2.216,1655,7.119,1656,4.669,1657,2.959,1658,5.562,1659,4.669,1660,5.931,1661,2.216,1662,2.216,1663,2.216,1664,2.216,1665,2.216,1666,2.216,1667,2.216,1668,2.216,1669,2.216,1670,2.216,1671,2.216,1672,2.216,1673,2.59,1674,3.328,1675,2.59,1676,2.59]],["title/dependencies.html",[95,3.002,1677,2.295]],["body/dependencies.html",[29,0.021,41,0.743,90,0.016,91,0.016,95,3.407,97,2.899,124,5.176,125,4.602,127,3.407,131,2.367,132,2.522,134,3.757,143,3.757,144,3.757,187,2.895,232,1.985,273,2.895,1678,4.937,1679,4.937,1680,4.937,1681,6.047,1682,7.204,1683,4.937,1684,4.937,1685,4.937,1686,4.937,1687,4.937,1688,4.937,1689,4.937,1690,4.937,1691,4.226,1692,4.937,1693,4.937,1694,4.937,1695,4.937,1696,4.937,1697,4.937,1698,4.937,1699,4.937]],["title/miscellaneous/enumerations.html",[1700,2.081,1701,3.723]],["body/miscellaneous/enumerations.html",[19,0.353,29,0.02,34,1.539,35,2.154,81,2.021,90,0.017,91,0.017,338,3.579,405,2.083,407,3.579,616,3.117,618,2.403,645,2.737,646,2.737,647,2.56,1657,3.814,1700,3.459,1701,4.29,1702,5.224,1703,5.012,1704,5.012,1705,5.012,1706,5.012,1707,5.012,1708,5.012,1709,5.012,1710,5.012,1711,5.012,1712,6.58,1713,5.012,1714,6.58,1715,5.012]],["title/index.html",[19,0.213,1716,3.015,1717,3.015]],["body/index.html",[0,0.945,4,0.227,29,0.016,30,0.56,38,3.868,87,1.463,90,0.016,91,0.016,116,3.439,131,3.388,201,4.898,238,1.186,254,3.868,268,2.039,309,2.961,346,3.439,366,3.119,638,3.868,786,3.439,1677,3.439,1691,5.376,1718,4.898,1719,4.519,1720,6.281,1721,3.868,1722,4.519,1723,4.519,1724,5.723,1725,6.812,1726,4.519,1727,4.519,1728,4.519,1729,4.519,1730,4.519,1731,4.519,1732,4.519,1733,4.519,1734,4.519,1735,6.281,1736,6.281,1737,4.519,1738,6.602,1739,4.519,1740,4.519,1741,4.519,1742,4.519,1743,5.723,1744,5.723,1745,6.602,1746,4.519,1747,5.723,1748,4.519,1749,4.519,1750,4.519,1751,4.519,1752,5.723,1753,4.519,1754,4.519,1755,4.519,1756,4.519,1757,6.281,1758,4.519,1759,4.519,1760,3.439,1761,4.519]],["title/modules.html",[94,3.13]],["body/modules.html",[29,0.018,90,0.018,91,0.018,93,3.95,94,3.626,107,3.626,125,4.355,1762,5.723,1763,5.723,1764,6.602,1765,5.723,1766,5.723]],["title/overview.html",[1760,3.76]],["body/overview.html",[1,1.97,2,1.282,29,0.021,44,0.435,50,1.216,57,1.673,59,1.673,62,1.673,64,1.673,67,1.673,69,1.673,71,1.588,73,1.673,76,1.588,78,1.673,80,1.588,83,1.588,85,1.588,90,0.014,91,0.014,92,2.592,93,5.258,94,2.379,95,2.592,96,3.214,97,1.8,98,3.214,99,2.858,100,3.214,101,3.214,102,3.214,103,3.214,104,3.636,105,3.636,106,3.636,107,3.636,108,5.493,109,4.913,110,5.493,111,4.913,112,5.493,113,4.913,114,4.339,115,3.214,116,2.858,186,2.592,212,1.598,404,1.428,1081,2.592,1131,2.592,1132,2.858,1760,2.858,1767,3.755,1768,3.755,1769,3.214,1770,3.755,1771,3.755]],["title/properties.html",[20,0.654,1677,2.295]],["body/properties.html",[20,0.876,29,0.019,90,0.018,91,0.018,1721,4.985,1772,5.824]],["title/routes.html",[186,3.41]],["body/routes.html",[29,0.018,90,0.018,91,0.018,186,4.055]],["title/miscellaneous/variables.html",[1700,2.081,1773,3.723]],["body/miscellaneous/variables.html",[19,0.192,29,0.021,31,0.395,34,2.2,35,2.088,37,0.713,46,1.876,63,1.191,65,0.952,86,1.004,90,0.011,91,0.011,146,3.068,188,3.068,190,3.45,233,1.47,237,0.752,238,1.725,261,4.685,292,1.226,299,0.928,309,1.715,311,1.715,340,4.045,349,3.068,435,2.782,436,2.782,497,1.621,673,1.556,686,3.45,732,2.364,889,2.782,925,2.068,1113,2.068,1131,1.876,1132,3.657,1162,3.657,1436,3.068,1437,2.068,1654,2.326,1657,2.068,1660,2.326,1661,4.55,1662,4.55,1663,3.45,1664,3.45,1665,3.45,1666,3.45,1667,3.45,1668,3.45,1669,3.45,1670,4.859,1671,5.09,1672,3.45,1674,4.113,1700,1.876,1702,3.45,1718,2.326,1769,5.09,1773,2.326,1774,2.718,1775,6.984,1776,4.031,1777,2.718,1778,2.718,1779,2.718,1780,2.718,1781,2.718,1782,2.718,1783,2.718,1784,2.718,1785,2.718,1786,2.718,1787,2.718,1788,4.031,1789,2.718,1790,4.031,1791,2.718,1792,4.031,1793,2.718,1794,4.805,1795,4.805,1796,5.315,1797,2.718,1798,2.718,1799,2.718,1800,2.718,1801,4.805,1802,2.718,1803,2.718,1804,2.718,1805,2.718,1806,2.718,1807,2.718,1808,2.718,1809,2.718,1810,2.718,1811,2.718,1812,2.718,1813,4.031,1814,4.031,1815,4.031,1816,4.031,1817,4.031,1818,5.677,1819,4.805,1820,4.031,1821,4.031,1822,2.718,1823,2.718,1824,2.718,1825,2.718,1826,4.031,1827,2.718,1828,4.805,1829,4.031,1830,2.718,1831,2.718,1832,2.718,1833,2.718,1834,2.718,1835,2.718,1836,4.031,1837,2.718,1838,2.718,1839,2.718,1840,2.718,1841,2.718,1842,2.718,1843,2.718,1844,2.718,1845,2.718,1846,5.315,1847,2.718,1848,2.718,1849,2.718,1850,2.718,1851,2.718,1852,2.718,1853,2.718,1854,2.718,1855,2.718,1856,2.718,1857,2.718,1858,2.718,1859,2.718,1860,2.718,1861,2.718,1862,2.718,1863,2.718,1864,2.718,1865,2.718,1866,2.718,1867,2.718,1868,2.718,1869,2.718,1870,2.718]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1339,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1772,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["0.185rem",{"_index":383,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.25rem",{"_index":384,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.31.0",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":403,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.51",{"_index":1412,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0.875rem",{"_index":1386,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0/1",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["00a2a8",{"_index":1711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["0275d8",{"_index":1710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1",{"_index":1131,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/SearchFacadeService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":1388,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["10",{"_index":1768,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1384,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["104",{"_index":1411,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["114px",{"_index":1408,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["117",{"_index":398,"title":{},"body":{"components/CalanderComponent.html":{}}}],["12",{"_index":1770,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1767,"title":{},"body":{"overview.html":{}}}],["15.1.2",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["16.0.0",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["16.1.0",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":1722,"title":{},"body":{"index.html":{}}}],["16.2.12",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["16.2.14",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":1400,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["17",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17,30",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.0.0",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["19,30",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:297938436292:web:f09902d21ddd4fde388991",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1a4668",{"_index":1414,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1em",{"_index":1140,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["1px",{"_index":1392,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["2",{"_index":1132,"title":{},"body":{"components/LoginPageComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2*60*60*1000",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.11.8",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["216",{"_index":399,"title":{},"body":{"components/CalanderComponent.html":{}}}],["27",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":549,"title":{},"body":{"injectables/CalendarService.html":{}}}],["297938436292",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a2568",{"_index":1139,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2em",{"_index":1152,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2px",{"_index":1143,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["2rem",{"_index":389,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["3",{"_index":1769,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["30,0",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1505,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["400",{"_index":1402,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5).concat(\"z",{"_index":1478,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["5*60*60*1000",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1129,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["50vw",{"_index":1133,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["55595c",{"_index":1389,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5cb85c",{"_index":1709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5jqei2sxcubehofay9f6vyc4wa8pj6s0",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":1149,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["7",{"_index":1771,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1410,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["8",{"_index":701,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["80vh",{"_index":1145,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["992px",{"_index":1406,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["a.segment._embedded.genres.foreach((g:any",{"_index":1463,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["absolute",{"_index":1125,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["action",{"_index":1249,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["activatedroute",{"_index":926,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["add",{"_index":786,"title":{},"body":{"components/EventComponentComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["addcalendarevent",{"_index":477,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addcalendarevent(calendarevent",{"_index":487,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addclassification",{"_index":1256,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addclassification(e",{"_index":1267,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addclassification(e:idclasstype",{"_index":1318,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["adddoc",{"_index":505,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["adddoc(calcollection",{"_index":534,"title":{},"body":{"injectables/CalendarService.html":{}}}],["adddoc(grpcollection",{"_index":1025,"title":{},"body":{"injectables/GroupService.html":{}}}],["addevent",{"_index":765,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event",{"_index":769,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event:eventinterface",{"_index":778,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addtowatchlist",{"_index":1257,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addtowatchlist(event",{"_index":1269,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addtowatchlist(event:eventinterface",{"_index":1357,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addwatchlistevent",{"_index":1588,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["addwatchlistevent(user",{"_index":1593,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["adm",{"_index":1553,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["adm.push(grp",{"_index":1557,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["admin",{"_index":887,"title":{},"body":{"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["admin.id",{"_index":1024,"title":{},"body":{"injectables/GroupService.html":{}}}],["admin:user1",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin:user4",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admingroups",{"_index":1520,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["afterviewinit",{"_index":916,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["against",{"_index":1052,"title":{},"body":{"injectables/GroupService.html":{}}}],["aizasydjqng3ye8if6tcspj_pstfymizlnfvoow",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":380,"title":{},"body":{"components/CalanderComponent.html":{}}}],["allavailable",{"_index":1708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allowed",{"_index":558,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap:any",{"_index":563,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[cal[\"uid",{"_index":570,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[group.admin.id",{"_index":564,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[member.id",{"_index":567,"title":{},"body":{"injectables/CalendarService.html":{}}}],["alluuid",{"_index":888,"title":{},"body":{"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{}}}],["alluuid:[\"user1",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alluuid:[\"user4\",\"user1",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":1045,"title":{},"body":{"injectables/GroupService.html":{}}}],["amonst",{"_index":367,"title":{},"body":{"components/CalanderComponent.html":{}}}],["angular",{"_index":1691,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":1550,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["angular/common",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["angular/compiler",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/firestore",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["angular/forms",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateGroupFacade.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{},"dependencies.html":{}}}],["ans",{"_index":1471,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.genre.push({id:g.id",{"_index":1465,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.segment.push({id:a.segment.id",{"_index":1461,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.subgenre.push({id:sg.id",{"_index":1469,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans:classificationinterface",{"_index":1457,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["any)._location.origin+\"/group\"+\"/\"+this.group$.value!.id",{"_index":1571,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["any)._location.origin+\"/ticketmaster",{"_index":1446,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["apikey",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["app.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":1630,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["appid",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1730,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1434,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["appmodule",{"_index":93,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":107,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrayremove",{"_index":513,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayremove(this.eventtodbwatchlist(event",{"_index":1638,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayremove(toremove",{"_index":1057,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayremove(user.id",{"_index":1058,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion",{"_index":512,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayunion(this.eventtodbwatchlist(event",{"_index":1628,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayunion(user",{"_index":1047,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion(user.id",{"_index":1048,"title":{},"body":{"injectables/GroupService.html":{}}}],["artifacts",{"_index":1739,"title":{},"body":{"index.html":{}}}],["attempt",{"_index":1629,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["auth",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["authapi",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["authapi.isauthenticated().pipe",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authapi:authenticationservice",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchFacadeService.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/variables.html":{}}}],["authapi:authenticationservice,private",{"_index":1159,"title":{},"body":{"components/NavigationComponent.html":{}}}],["authdomain",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":25,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authsvc",{"_index":422,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["authsvc:authenticationservice",{"_index":444,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["automatically",{"_index":1731,"title":{},"body":{"index.html":{}}}],["availability",{"_index":1194,"title":{},"body":{"injectables/NotificationService.html":{}}}],["available",{"_index":1766,"title":{},"body":{"modules.html":{}}}],["b",{"_index":304,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["b0d04a",{"_index":1715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b:number",{"_index":374,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["background",{"_index":392,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["base_url",{"_index":1570,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["baseurl",{"_index":1417,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["baseurl:string",{"_index":1443,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["before",{"_index":1195,"title":{},"body":{"injectables/NotificationService.html":{}}}],["behaviorsubject",{"_index":429,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject(undefined",{"_index":1546,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject({segment",{"_index":1286,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["behaviorsubject({size:20",{"_index":1292,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["better",{"_index":441,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["bgcolor",{"_index":412,"title":{},"body":{"interfaces/CalanderEventColor.html":{}}}],["bgcolor:calandercolor",{"_index":411,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["bgimg",{"_index":1121,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgimgstrip",{"_index":1122,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgleft",{"_index":1134,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgright",{"_index":1136,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["block",{"_index":387,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["booked",{"_index":452,"title":{},"body":{"injectables/CalendarFacade.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["booked:false",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookedforevent",{"_index":1714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["booking",{"_index":1206,"title":{},"body":{"injectables/NotificationService.html":{}}}],["books",{"_index":1197,"title":{},"body":{"injectables/NotificationService.html":{}}}],["boolean",{"_index":307,"title":{},"body":{"components/CalanderComponent.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/GroupInterface.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["bootstrap",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["border",{"_index":1141,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["both",{"_index":1066,"title":{},"body":{"injectables/GroupService.html":{}}}],["box",{"_index":1380,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["browse",{"_index":1764,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1399,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bud",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.appspot.com",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.firebaseapp.com",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buddy",{"_index":1163,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NotificationService.html":{}}}],["build",{"_index":1738,"title":{},"body":{"index.html":{}}}],["buto",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["c",{"_index":305,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["c.name",{"_index":644,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["c:number",{"_index":375,"title":{},"body":{"components/CalanderComponent.html":{}}}],["c:number):boolean",{"_index":1227,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["cal",{"_index":1214,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["calander",{"_index":270,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["calander.component.css",{"_index":271,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander.component.html",{"_index":272,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calandercolor",{"_index":338,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{}}}],["calandercolor.bookedforevent",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.notfreeatall",{"_index":1568,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercolor.personal",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.reservedforevent",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.somefree",{"_index":1569,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercomponent",{"_index":57,"title":{"components/CalanderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calanderevent",{"_index":292,"title":{"interfaces/CalanderEvent.html":{}},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandereventcolor",{"_index":409,"title":{"interfaces/CalanderEventColor.html":{}},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"coverage.html":{}}}],["calandertype",{"_index":407,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{}}}],["calandertype.bookedforevent",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandertype.personal",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandertype.reservedforevent",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandertype[dbcalent[\"type",{"_index":521,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calandertypecolor",{"_index":435,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandertypecolor.get(e.type)||calandercolor.default",{"_index":463,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calandertypepriority",{"_index":436,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calc(3rem",{"_index":1395,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["calc(50",{"_index":1150,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calc(80vh",{"_index":1148,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calcollection",{"_index":524,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc",{"_index":526,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc).then((docref",{"_index":535,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar",{"_index":273,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/NavigationComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["calendar/${calendarevent.id",{"_index":576,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent",{"_index":489,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.detail",{"_index":531,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.end",{"_index":530,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.start",{"_index":529,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.type",{"_index":532,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.user.id",{"_index":528,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarfacade",{"_index":413,"title":{"injectables/CalendarFacade.html":{}},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["calendarondisplay",{"_index":1215,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["calendarservice",{"_index":420,"title":{"injectables/CalendarService.html":{}},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["calender",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["calevent",{"_index":470,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{}}}],["calevent.start",{"_index":573,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevents",{"_index":448,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calevents.sort((a,b)=>{//sort",{"_index":449,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calls",{"_index":553,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calsvc",{"_index":419,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["canactivate:[authguard",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivate:[authguard]},//for",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":1755,"title":{},"body":{"index.html":{}}}],["capitalize",{"_index":1403,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["cat",{"_index":1251,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["cat$:behaviorsubject",{"_index":1307,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["catch(err",{"_index":720,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["catch(rej",{"_index":1634,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["cb",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ccc",{"_index":1394,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["center",{"_index":381,"title":{},"body":{"components/CalanderComponent.html":{}}}],["change",{"_index":346,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"index.html":{}}}],["changed",{"_index":353,"title":{},"body":{"components/CalanderComponent.html":{}}}],["changepage",{"_index":1258,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changepage(pgnum",{"_index":1271,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changepage(pgnum:number",{"_index":1349,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changes",{"_index":315,"title":{},"body":{"components/CalanderComponent.html":{}}}],["check",{"_index":366,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"index.html":{}}}],["checkup",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choice",{"_index":1751,"title":{},"body":{"index.html":{}}}],["chooose",{"_index":839,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["chosegroup",{"_index":922,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group",{"_index":928,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group:groupinterface",{"_index":963,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen",{"_index":919,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen.name",{"_index":966,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen:groupinterface",{"_index":943,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cid",{"_index":1252,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["cid$:behaviorsubject",{"_index":1305,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["class",{"_index":44,"title":{"classes/EventClass.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"overview.html":{}}}],["class/newcalendarevent",{"_index":439,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["classes",{"_index":726,"title":{},"body":{"classes/EventClass.html":{}}}],["classification",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["classification:eventemitter",{"_index":621,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["classificationcomponentcomponent",{"_index":59,"title":{"components/ClassificationComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classificationemitter",{"_index":1359,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationemitter:eventemitter",{"_index":1370,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationinterface",{"_index":617,"title":{"interfaces/ClassificationInterface.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["classinput",{"_index":1360,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classinput:string",{"_index":1368,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classtype",{"_index":616,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":1720,"title":{},"body":{"index.html":{}}}],["click",{"_index":1192,"title":{},"body":{"injectables/NotificationService.html":{}}}],["clicked",{"_index":350,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clickeddate",{"_index":289,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clipboard",{"_index":1528,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["clipboard:clipboard",{"_index":1551,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["close",{"_index":805,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["closeresult",{"_index":800,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["cluster_appmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cmicount==this.group$.value!.members.length)return",{"_index":1567,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["code",{"_index":638,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"index.html":{}}}],["collection",{"_index":504,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collection(this.fs",{"_index":525,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collectiondata",{"_index":508,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectiondata(q",{"_index":539,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectionreference",{"_index":506,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["color",{"_index":393,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["command",{"_index":1752,"title":{},"body":{"index.html":{}}}],["common/calander/calander.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["common/navigation/navigation.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["component.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.css",{"_index":584,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.html",{"_index":585,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts",{"_index":582,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:13",{"_index":596,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:14",{"_index":768,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:16",{"_index":611,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:19",{"_index":597,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:23",{"_index":770,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:26",{"_index":608,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:29",{"_index":604,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:32",{"_index":610,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:35",{"_index":600,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:39",{"_index":606,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component/classification",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["component/event",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component:grouppagecomponent",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:loginpagecomponent",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:personalcalenderpagecomponent",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:searchpagecomponent",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:watchlistpagecomponent",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":1438,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["concert",{"_index":1186,"title":{},"body":{"injectables/NotificationService.html":{}}}],["confirm",{"_index":1193,"title":{},"body":{"injectables/NotificationService.html":{}}}],["confirmation",{"_index":1201,"title":{},"body":{"injectables/NotificationService.html":{}}}],["confirmed",{"_index":889,"title":{},"body":{"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["confirmed:string",{"_index":892,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["confirmgroupbooking",{"_index":968,"title":{},"body":{"injectables/GroupService.html":{}}}],["confirmgroupbooking(group",{"_index":978,"title":{},"body":{"injectables/GroupService.html":{}}}],["congratulations",{"_index":1203,"title":{},"body":{"injectables/NotificationService.html":{}}}],["console.log(\"create",{"_index":1244,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["console.log(\"dasdas",{"_index":907,"title":{},"body":{"components/GroupListComponent.html":{}}}],["console.log(\"delete",{"_index":1242,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["console.log(\"error",{"_index":957,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["console.log(\"group",{"_index":831,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{}}}],["console.log(\"invalid",{"_index":1248,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["console.log(\"logout",{"_index":1118,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log(\"remoe",{"_index":641,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["console.log(\"return",{"_index":572,"title":{},"body":{"injectables/CalendarService.html":{}}}],["console.log(\"signout",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(\"user",{"_index":833,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["console.log(err",{"_index":835,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["console.log(query",{"_index":1502,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["console.log(result",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(this.groups",{"_index":908,"title":{},"body":{"components/GroupListComponent.html":{}}}],["const",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["constructor(auth",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["constructor(authapi",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["constructor(authsvc",{"_index":418,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["constructor(cal",{"_index":1218,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["constructor(e",{"_index":734,"title":{},"body":{"classes/EventClass.html":{}}}],["constructor(e:eventinterface",{"_index":749,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["constructor(fs",{"_index":483,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(grp",{"_index":849,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["constructor(http",{"_index":1422,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["constructor(modalservice",{"_index":808,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(public",{"_index":622,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["constructor(searchfacade",{"_index":594,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["contact",{"_index":1204,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contains\",user.id",{"_index":1033,"title":{},"body":{"injectables/GroupService.html":{}}}],["content",{"_index":801,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{}}}],["content:ngbmodal",{"_index":825,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["converttolistofstrings",{"_index":923,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members",{"_index":930,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members:userinterface",{"_index":964,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttongbdate",{"_index":278,"title":{},"body":{"components/CalanderComponent.html":{}}}],["converttongbdate(d",{"_index":298,"title":{},"body":{"components/CalanderComponent.html":{}}}],["converttongbdate(d:date",{"_index":358,"title":{},"body":{"components/CalanderComponent.html":{}}}],["copyinvitelink",{"_index":845,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["coverage",{"_index":1639,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":797,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["create'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["create.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["create.component.css",{"_index":798,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.html",{"_index":799,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts",{"_index":796,"title":{},"body":{"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:13",{"_index":823,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:14",{"_index":819,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:15",{"_index":817,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:16",{"_index":812,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:19",{"_index":810,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:23",{"_index":820,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:26",{"_index":815,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:30",{"_index":814,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:46",{"_index":816,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:50",{"_index":813,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create/group",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["createevent",{"_index":416,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["createevent(newcalevent",{"_index":423,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["creategroup",{"_index":663,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["creategroup(name",{"_index":980,"title":{},"body":{"injectables/GroupService.html":{}}}],["creategroupfacade",{"_index":660,"title":{"injectables/CreateGroupFacade.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["creation",{"_index":718,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["cs.foreach((a",{"_index":1459,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["cs:any",{"_index":1455,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["css",{"_index":1381,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["current",{"_index":1164,"title":{},"body":{"components/NavigationComponent.html":{}}}],["currently",{"_index":1044,"title":{},"body":{"injectables/GroupService.html":{}}}],["currentuser",{"_index":415,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["currentuser?:userinterface",{"_index":944,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cursor",{"_index":882,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["custom",{"_index":377,"title":{},"body":{"components/CalanderComponent.html":{}}}],["d",{"_index":301,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["d.getdate",{"_index":361,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d.getmonth()+1",{"_index":360,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d9534f",{"_index":1705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":542,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["data.foreach(cal",{"_index":544,"title":{},"body":{"injectables/CalendarService.html":{}}}],["data.foreach(grp",{"_index":1034,"title":{},"body":{"injectables/GroupService.html":{}}}],["data===undefined",{"_index":1040,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["data['saved'].foreach((event",{"_index":1625,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["database",{"_index":1073,"title":{},"body":{"injectables/GroupService.html":{}}}],["date",{"_index":299,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["date(2024",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(dbevent['enddate']?.todate",{"_index":1620,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(dbevent['startdate']?.todate",{"_index":1618,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(e.dates?.end",{"_index":1491,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(e.dates?.start.datetime",{"_index":1489,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(grp.event.enddate",{"_index":711,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(grp.event.startdate",{"_index":709,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(start.gettime",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start2.gettime",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start3.gettime",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.day",{"_index":376,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date.month",{"_index":1237,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["date.year",{"_index":1234,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["date:'medium",{"_index":784,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["date:\\'medium",{"_index":788,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["dateclicked",{"_index":1217,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["dateclicked(date",{"_index":1220,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["datecolor",{"_index":285,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["dates",{"_index":349,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":378,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.faded",{"_index":401,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.focused",{"_index":391,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.range",{"_index":395,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day:hover",{"_index":396,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dbcalent",{"_index":493,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"detail",{"_index":520,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"end\"].todate",{"_index":519,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"id",{"_index":517,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"start\"].todate",{"_index":518,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbevent",{"_index":1597,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['details",{"_index":1616,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['enddate",{"_index":1619,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['id",{"_index":1612,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['images",{"_index":1615,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['location",{"_index":1614,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['name",{"_index":1613,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['startdate",{"_index":1617,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbgroup",{"_index":984,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"admin",{"_index":1010,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"alluuid",{"_index":1014,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"booked",{"_index":1013,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"confirmed",{"_index":1012,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"date",{"_index":1015,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"date\"].todate",{"_index":1017,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"details",{"_index":1007,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].end.todate",{"_index":1006,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].id",{"_index":1003,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].name",{"_index":1004,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].start.todate",{"_index":1005,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"id",{"_index":1001,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"imageurls",{"_index":1008,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"locations",{"_index":1009,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"members",{"_index":1011,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"name",{"_index":1002,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtocalendarevent",{"_index":478,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtocalendarevent(dbcalent",{"_index":490,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtogroupinterface",{"_index":969,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtogroupinterface(dbgroup",{"_index":982,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbwatchlisttoevent",{"_index":1589,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbwatchlisttoevent(dbevent",{"_index":1595,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["debouncetime",{"_index":612,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["debouncetime(500",{"_index":625,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["decided",{"_index":1184,"title":{},"body":{"injectables/NotificationService.html":{}}}],["declarations",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":325,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["delete",{"_index":877,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deletedoc",{"_index":514,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["deletedoc(caldoc).then(birdbird",{"_index":580,"title":{},"body":{"injectables/CalendarService.html":{}}}],["deletedoc(grpdoc).then(_",{"_index":1059,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteevent",{"_index":417,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e",{"_index":427,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e:calanderevent",{"_index":466,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["deletegroup",{"_index":846,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["deletegroup(group",{"_index":985,"title":{},"body":{"injectables/GroupService.html":{}}}],["denied",{"_index":1029,"title":{},"body":{"injectables/GroupService.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":406,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["detail'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["detail.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["detail.component.css",{"_index":843,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.html",{"_index":844,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts",{"_index":842,"title":{},"body":{"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:15",{"_index":851,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:18",{"_index":858,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":857,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":853,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":856,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":852,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":854,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail/group",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail:\"dental",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"doctors",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"school",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details",{"_index":728,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["details:\"fake",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details:e.description",{"_index":1493,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["details:new",{"_index":683,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["details:string",{"_index":746,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["dev",{"_index":1727,"title":{},"body":{"index.html":{}}}],["development",{"_index":1723,"title":{},"body":{"index.html":{}}}],["directive",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1737,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1742,"title":{},"body":{"index.html":{}}}],["display",{"_index":385,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"components/SearchPageComponent.html":{}}}],["dist",{"_index":1741,"title":{},"body":{"index.html":{}}}],["doc",{"_index":510,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["doc(this.fs",{"_index":575,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata",{"_index":509,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata(grpdoc",{"_index":1038,"title":{},"body":{"injectables/GroupService.html":{}}}],["docdata(watchdoc).subscribe(data",{"_index":1623,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["document",{"_index":1631,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["documentation",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":491,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["documentreference",{"_index":503,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["dp",{"_index":275,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dp:ngbdatepicker|undefined",{"_index":352,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dynamic",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":369,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"classes/EventClass.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["e.detail",{"_index":879,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.details",{"_index":758,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.end",{"_index":881,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.end.getmonth()+1,e.end.getdate",{"_index":461,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e.id",{"_index":751,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"pipes/InwatchlistPipe.html":{}}}],["e.id)return",{"_index":1322,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["e.images",{"_index":756,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.location",{"_index":754,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.start",{"_index":880,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.start.getmonth()+1,e.start.getdate",{"_index":458,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e.user.name",{"_index":878,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e1",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2",{"_index":1662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1749,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":394,"title":{},"body":{"components/CalanderComponent.html":{}}}],["e?.enddate",{"_index":762,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e?.startdate",{"_index":760,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e[1",{"_index":372,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ed",{"_index":1498,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ed:date",{"_index":1490,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["efcb00",{"_index":1713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["em",{"_index":807,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["em!:eventemitter",{"_index":826,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["email",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/UserInterface.html":{},"miscellaneous/variables.html":{}}}],["emaillist",{"_index":1182,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emaillist.push(member.email",{"_index":1183,"title":{},"body":{"injectables/NotificationService.html":{}}}],["end",{"_index":309,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["end.day",{"_index":1240,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end.month",{"_index":1238,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end.year",{"_index":1235,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end2",{"_index":1663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end3",{"_index":1664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end:end",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end2",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end3",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:ngbdate",{"_index":1230,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["enddate",{"_index":729,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["enddate:(!this.invaliddate(ed",{"_index":1497,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["enddate:new",{"_index":686,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["enddate:ngbdate",{"_index":459,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["enddate?:date",{"_index":748,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["ensure",{"_index":1072,"title":{},"body":{"injectables/GroupService.html":{}}}],["enum",{"_index":651,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["enumerations",{"_index":1701,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/calenderenum",{"_index":408,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["environments/env",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":962,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["err.code",{"_index":1027,"title":{},"body":{"injectables/GroupService.html":{}}}],["err.message",{"_index":832,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["err===\"group",{"_index":721,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["error",{"_index":961,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["error$:eventemitter",{"_index":1306,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["error(\"group",{"_index":713,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["error(\"invalid",{"_index":474,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["error(\"user",{"_index":723,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["error:(e",{"_index":956,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["event!:eventinterface",{"_index":775,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["event.details",{"_index":782,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.enddate",{"_index":785,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.id",{"_index":1020,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.images",{"_index":1022,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.location",{"_index":781,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.name",{"_index":780,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.startdate",{"_index":783,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event:calanderevent",{"_index":410,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["event:eventinterface",{"_index":890,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["event:n",{"_index":705,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["event:this.formbuilder.group",{"_index":679,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["eventclass",{"_index":725,"title":{"classes/EventClass.html":{}},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"coverage.html":{}}}],["eventcomponentcomponent",{"_index":62,"title":{"components/EventComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventemitter",{"_index":296,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["eventinput",{"_index":1253,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["eventinput$:behaviorsubject",{"_index":1302,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["eventinput:string",{"_index":1369,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinputemitter",{"_index":1361,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinputemitter:eventemitter",{"_index":1371,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinterface",{"_index":673,"title":{"interfaces/EventInterface.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventname",{"_index":910,"title":{},"body":{"components/GroupListComponent.html":{}}}],["eventpageinterface",{"_index":789,"title":{"interfaces/EventPageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["events",{"_index":286,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"interfaces/EventPageInterface.html":{},"components/GroupDetailComponent.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"components/WatchlistPageComponent.html":{}}}],["events!:calanderevent[];//should",{"_index":342,"title":{},"body":{"components/CalanderComponent.html":{}}}],["events'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["events.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["events.component.css",{"_index":1104,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.html",{"_index":1105,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts",{"_index":1103,"title":{},"body":{"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events.component.ts:10",{"_index":1107,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts:9",{"_index":1106,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events/inwatchlist.pipe",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["events/inwatchlist.pipe.ts",{"_index":1098,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"coverage.html":{}}}],["events/inwatchlist.pipe.ts:9",{"_index":1100,"title":{},"body":{"pipes/InwatchlistPipe.html":{}}}],["events/list",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events:eventinterface",{"_index":793,"title":{},"body":{"interfaces/EventPageInterface.html":{},"components/ListEventsComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["events:undefined",{"_index":1483,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["eventtodbwatchlist",{"_index":1590,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event",{"_index":1598,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event:eventinterface",{"_index":1604,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["evt",{"_index":675,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["evt.enddate.toisostring().slice(0",{"_index":703,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["evt.name",{"_index":840,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["evt.startdate.toisostring().slice(0",{"_index":700,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["execute",{"_index":1747,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["exports",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":652,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["f0ad4e",{"_index":1707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade.service",{"_index":615,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["facade.service.ts",{"_index":1250,"title":{},"body":{"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["facade.service.ts:15",{"_index":1295,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:17",{"_index":1290,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:18",{"_index":1291,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:19",{"_index":1296,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:20",{"_index":1288,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:21",{"_index":1289,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:22",{"_index":1287,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:23",{"_index":1266,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:29",{"_index":1284,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:32",{"_index":1277,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:39",{"_index":1275,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:46",{"_index":1268,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:54",{"_index":1279,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:59",{"_index":1282,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:77",{"_index":1272,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:88",{"_index":1281,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:93",{"_index":1270,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade/personalcalendarfacade",{"_index":1226,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["facade/search",{"_index":1367,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["facade/viewgroupfacade",{"_index":942,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["false",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{}}}],["fan",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":1390,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["fields",{"_index":557,"title":{},"body":{"injectables/CalendarService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["files",{"_index":1733,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1439,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["filter((x:any",{"_index":1451,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["firebase",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/GroupPageComponent.html":{}}}],["firebase/auth",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebaseconfig",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firestore",{"_index":484,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["firestoreerror",{"_index":999,"title":{},"body":{"injectables/GroupService.html":{}}}],["first",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["fit",{"_index":1348,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["font",{"_index":1385,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["for(var",{"_index":1321,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["formbuilder",{"_index":665,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["formcontrol",{"_index":684,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["formsmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule,reactiveformsmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1042,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["fs",{"_index":486,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["fullscreen:true",{"_index":837,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["further",{"_index":1756,"title":{},"body":{"index.html":{}}}],["g",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g._embedded.subgenres.foreach((sg:any",{"_index":1467,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["g.event.name",{"_index":912,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.members",{"_index":913,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.name",{"_index":911,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g1",{"_index":1665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["g2",{"_index":1666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1735,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1719,"title":{},"body":{"index.html":{}}}],["genre",{"_index":645,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["genre:[]};//must",{"_index":1458,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["genre:idname",{"_index":649,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["genreinterface",{"_index":656,"title":{"interfaces/GenreInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["genres",{"_index":1415,"title":{},"body":{"interfaces/SegmentInterface.html":{}}}],["genres:genreinterface",{"_index":655,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["getauth",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["getcalendar",{"_index":479,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getcalendar(user",{"_index":494,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getclassification",{"_index":1259,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["getclassification(kw",{"_index":1274,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["getclassification(kw:string",{"_index":1314,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["getclassification(kw:string):observable",{"_index":1447,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getcurrentuser",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcurrentuser():promise",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getevents",{"_index":1419,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getevents():observable",{"_index":1472,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery",{"_index":1420,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query",{"_index":1429,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query:any):observable",{"_index":1500,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getfirestore",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["getgroupbyid",{"_index":970,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupbyid(groupid",{"_index":987,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupcalendar",{"_index":480,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroupcalendar(group",{"_index":496,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroups",{"_index":971,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroups(user",{"_index":989,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgrpbyid",{"_index":1524,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgrpbyid(id",{"_index":1532,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getstartdate",{"_index":1525,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getstartdate(d",{"_index":1534,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getting",{"_index":1716,"title":{"index.html":{}},"body":{}}],["getwatchlist",{"_index":1260,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["getwatchlist(user",{"_index":1600,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["go",{"_index":1759,"title":{},"body":{"index.html":{}}}],["good",{"_index":1187,"title":{},"body":{"injectables/NotificationService.html":{}}}],["google",{"_index":1120,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["googleauthprovider",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["googleimg",{"_index":1151,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["googlesignin",{"_index":1109,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["graph",{"_index":1765,"title":{},"body":{"modules.html":{}}}],["group",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/variables.html":{}}}],["group!:groupinterface",{"_index":860,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["group.admin",{"_index":565,"title":{},"body":{"injectables/CalendarService.html":{}}}],["group.admin.name",{"_index":1196,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(member.id",{"_index":1202,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(user.id",{"_index":1062,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.date",{"_index":1060,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.date?.todatestring",{"_index":1190,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.name||'concert",{"_index":1200,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.name||'the",{"_index":1185,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.startdate",{"_index":562,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["group.members.foreach(member",{"_index":566,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["group.name",{"_index":1189,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group/${group.id",{"_index":1050,"title":{},"body":{"injectables/GroupService.html":{}}}],["group/${groupid",{"_index":1037,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupbyid",{"_index":1521,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["groupcalendar",{"_index":1522,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["groupclicked",{"_index":898,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupcreatecomponent",{"_index":64,"title":{"components/GroupCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdetailcomponent",{"_index":67,"title":{"components/GroupDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdoc",{"_index":1019,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupdoc).then((docref",{"_index":1026,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupid",{"_index":920,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["groupid:string",{"_index":945,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["groupinterface",{"_index":497,"title":{"interfaces/GroupInterface.html":{}},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouplistcomponent",{"_index":69,"title":{"components/GroupListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupmemberpipe",{"_index":914,"title":{},"body":{"components/GroupListComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["groupmemberpipepipe",{"_index":104,"title":{"pipes/GroupmemberPipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groupname",{"_index":909,"title":{},"body":{"components/GroupListComponent.html":{}}}],["grouppagecomponent",{"_index":71,"title":{"components/GroupPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grouppipe",{"_index":1089,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["grouppipepipe",{"_index":105,"title":{"pipes/GrouppipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":897,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{}}}],["groups!:groupinterface",{"_index":904,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupservice",{"_index":667,"title":{"injectables/GroupService.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["grp",{"_index":802,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["grp.admin.id",{"_index":1556,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grp.date",{"_index":1016,"title":{},"body":{"injectables/GroupService.html":{}}}],["grp.event",{"_index":716,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.enddate",{"_index":710,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.startdate",{"_index":708,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.group$.value?.event?.enddate",{"_index":873,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.enddate}}invite",{"_index":886,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.name",{"_index":871,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.startdate",{"_index":872,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.name",{"_index":870,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp:any",{"_index":706,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grpcal.sort((a,b)=>{//sort",{"_index":1565,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grpcollection",{"_index":1018,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpdoc",{"_index":1036,"title":{},"body":{"injectables/GroupService.html":{}}}],["grps.foreach(grp",{"_index":1555,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grpsvc",{"_index":666,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["guards/auth.guard",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["handle",{"_index":1247,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["header",{"_index":1418,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["height",{"_index":388,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["height:80vh",{"_index":1123,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["help",{"_index":1757,"title":{},"body":{"index.html":{}}}],["here",{"_index":344,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["highest",{"_index":453,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["hovereddate",{"_index":276,"title":{},"body":{"components/CalanderComponent.html":{}}}],["html",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["http",{"_index":1426,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["http://localhost:4200",{"_index":1729,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1423,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["httpclientmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1433,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["https://picsum.photos/id/1/900/500",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://picsum.photos/id/2/900/500",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.user.id))].length",{"_index":1566,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["id",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"interfaces/IdName.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["id\"}).subscribe(data",{"_index":1039,"title":{},"body":{"injectables/GroupService.html":{}}}],["id'}).subscribe",{"_index":541,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["id:\"evt1",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"evt2",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp1",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp2",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1id",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:[\"\",validators.required",{"_index":680,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["id:e.id",{"_index":1492,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["id:string",{"_index":658,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["id:string|null",{"_index":949,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["idclasstype",{"_index":599,"title":{"interfaces/IdClassType.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["identifier",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":540,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["idname",{"_index":603,"title":{"interfaces/IdName.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["ie",{"_index":601,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["if(!a?.segment?.id",{"_index":1460,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!g?.id",{"_index":1464,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!group.event.enddate",{"_index":571,"title":{},"body":{"injectables/CalendarService.html":{}}}],["if(!sg?.id",{"_index":1468,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!x",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(a.start",{"_index":455,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["if(changes[\"events",{"_index":354,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(evt.enddate",{"_index":702,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(evt.startdate",{"_index":698,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(grp.event.startdate>=grp.event.enddate",{"_index":712,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(i.id",{"_index":1102,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"injectables/SearchFacadeService.html":{}}}],["if(id",{"_index":951,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["if(isadmin",{"_index":1095,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["if(rtn.page.totalelements==0",{"_index":1510,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(this.currentuser",{"_index":468,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{}}}],["if(this.isinside(e[0][0],date,e[0][1",{"_index":371,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(x.events.length",{"_index":1346,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["iif",{"_index":1440,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["image",{"_index":1391,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["images",{"_index":730,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["images:[\"https://picsum.photos/id/0/900/500",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images:e.images.map((img:any)=>img.url",{"_index":1494,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["images:string",{"_index":745,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["images:this.formbuilder.array",{"_index":682,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["imageurls",{"_index":1021,"title":{},"body":{"injectables/GroupService.html":{}}}],["implements",{"_index":268,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["import",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["important",{"_index":1396,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["imports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incompatible",{"_index":714,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{}}}],["increase",{"_index":551,"title":{},"body":{"injectables/CalendarService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["inequalities",{"_index":555,"title":{},"body":{"injectables/CalendarService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["inghs",{"_index":642,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["init",{"_index":1526,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["init(group",{"_index":1537,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["initialise",{"_index":1632,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["initializeapp",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(firebaseconfig",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(firebaseconfig)).html\">providefirebaseapp",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["inject",{"_index":333,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(authenticationservice",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(ngbcalendar",{"_index":321,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(router",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":211,"title":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"overview.html":{}}}],["inline",{"_index":386,"title":{},"body":{"components/CalanderComponent.html":{}}}],["input",{"_index":330,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["inputs",{"_index":284,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["interface",{"_index":235,"title":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["interface.ts",{"_index":405,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["interface.ts:11",{"_index":737,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:12",{"_index":740,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:13",{"_index":739,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:14",{"_index":738,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:15",{"_index":736,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:16",{"_index":741,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:17",{"_index":735,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:27",{"_index":743,"title":{},"body":{"classes/EventClass.html":{}}}],["interface/calanderevent",{"_index":337,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["interfaces",{"_index":404,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/calander",{"_index":434,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/clasification",{"_index":1297,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["interfaces/enums/calenderenum",{"_index":437,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/event",{"_index":691,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["interfaces/group",{"_index":941,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GrouppipePipe.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/page",{"_index":1299,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["interfaces/user",{"_index":433,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["invalid",{"_index":834,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["invaliddate",{"_index":1421,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invaliddate(d",{"_index":1431,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invaliddate(d:date",{"_index":1516,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invite",{"_index":874,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["inwatchlist",{"_index":767,"title":{},"body":{"components/EventComponentComponent.html":{},"pipes/InwatchlistPipe.html":{}}}],["inwatchlist!:boolean",{"_index":774,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["inwatchlistpipe",{"_index":106,"title":{"pipes/InwatchlistPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/InwatchlistPipe.html":{},"coverage.html":{},"overview.html":{}}}],["isadmin",{"_index":1091,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["isadmin:boolean",{"_index":1094,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["isauth",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isbetween",{"_index":279,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isbetween(a",{"_index":302,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isbetween(a:number",{"_index":373,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isequals",{"_index":733,"title":{},"body":{"classes/EventClass.html":{}}}],["isequals(other",{"_index":742,"title":{},"body":{"classes/EventClass.html":{}}}],["isequals(other:eventclass):boolean",{"_index":763,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["isinside",{"_index":280,"title":{},"body":{"components/CalanderComponent.html":{}}}],["isinside(start",{"_index":308,"title":{},"body":{"components/CalanderComponent.html":{}}}],["join",{"_index":869,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["joingroup",{"_index":847,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["joingroup(groupid",{"_index":991,"title":{},"body":{"injectables/GroupService.html":{}}}],["joingroup(id",{"_index":1539,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["joining",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["karma",{"_index":1748,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":522,"title":{},"body":{"injectables/CalendarService.html":{}}}],["keys",{"_index":368,"title":{},"body":{"components/CalanderComponent.html":{}}}],["keyword:kw}}).pipe",{"_index":1450,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["kick",{"_index":866,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kickuser",{"_index":848,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["kickuser(user",{"_index":855,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["kickuser(user:userinterface",{"_index":864,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kw",{"_index":1276,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["kw.length",{"_index":1453,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["l",{"_index":1586,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["lah",{"_index":255,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lastclickeddate",{"_index":277,"title":{},"body":{"components/CalanderComponent.html":{}}}],["latest",{"_index":1561,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["left",{"_index":1146,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["left:0",{"_index":1135,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["left:50",{"_index":1127,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["legend",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["limited",{"_index":548,"title":{},"body":{"injectables/CalendarService.html":{}}}],["line",{"_index":1387,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["link",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailComponent.html":{}}}],["list",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":894,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.html",{"_index":895,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts",{"_index":893,"title":{},"body":{"components/GroupListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":899,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:11",{"_index":900,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:12",{"_index":903,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:16",{"_index":901,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list/group",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/GroupListComponent.html":{},"coverage.html":{}}}],["listernere",{"_index":343,"title":{},"body":{"components/CalanderComponent.html":{}}}],["listeventscomponent",{"_index":73,"title":{"components/ListEventsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listof",{"_index":347,"title":{},"body":{"components/CalanderComponent.html":{}}}],["loadedevents",{"_index":1254,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loadedevents$:behaviorsubject",{"_index":1303,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["location",{"_index":731,"title":{},"body":{"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["location:[\"seatle",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:[\"singpoare",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:e._embedded?.venues.map((v:any)=>v.name",{"_index":1495,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["location:string",{"_index":744,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["location:this.formbuilder.array",{"_index":681,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["locations",{"_index":1023,"title":{},"body":{"injectables/GroupService.html":{}}}],["login",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["loginbtn",{"_index":1138,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginbtn:active",{"_index":1147,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["logingoogle",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpagecomponent",{"_index":76,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{}}}],["m.name",{"_index":876,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["mail",{"_index":1179,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mailcol",{"_index":1178,"title":{},"body":{"injectables/NotificationService.html":{}}}],["maildoc",{"_index":1180,"title":{},"body":{"injectables/NotificationService.html":{}}}],["map",{"_index":340,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/variables.html":{}}}],["map((x:any",{"_index":1454,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.min(20*20",{"_index":1514,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["max",{"_index":1413,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["mean",{"_index":443,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["measurementid",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":1404,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["meeting",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":568,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["member.id",{"_index":1055,"title":{},"body":{"injectables/GroupService.html":{}}}],["membergroups",{"_index":1523,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["members",{"_index":550,"title":{},"body":{"injectables/CalendarService.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["members.map((x)=>x.name",{"_index":965,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["members:[user1",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:[user2",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:userinterface",{"_index":891,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["mergemap",{"_index":1441,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["message",{"_index":1175,"title":{},"body":{"injectables/NotificationService.html":{}}}],["message:any",{"_index":1177,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messagingsenderid",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["methods",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["min",{"_index":1405,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["miscellaneous",{"_index":1700,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modalservice",{"_index":811,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["modalservice:ngbmodal",{"_index":828,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["module",{"_index":92,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1758,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":556,"title":{},"body":{"injectables/CalendarService.html":{}}}],["n",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["n)=>this.isauth",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["n.page",{"_index":1352,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["n.push(e",{"_index":1323,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["n.startdate",{"_index":699,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["n:any",{"_index":696,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["n:idclasstype",{"_index":1319,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["nadm",{"_index":1554,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["nadm.push(grp",{"_index":1558,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["name:\"becca",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"go",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"john",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"rick",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"superbowl",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"taylor",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"tom",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"ts",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:a.segment.name",{"_index":1462,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:e.name",{"_index":631,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/TicketmasterService.html":{}}}],["name:e.name,type:classtype.genre",{"_index":634,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:e.name,type:classtype.subgenre",{"_index":636,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:g.name",{"_index":1466,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:sg.name",{"_index":1470,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:string",{"_index":659,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["navigate",{"_index":1728,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":287,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigateto!:ngbdate",{"_index":341,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigation",{"_index":1154,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["navigation.component.css",{"_index":1155,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":1156,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":78,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navstuff",{"_index":803,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["need",{"_index":1753,"title":{},"body":{"index.html":{}}}],["network/firebase/authentication/authentication.service",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/LoginPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{}}}],["network/firebase/firestore/calendar.service",{"_index":432,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/group.service",{"_index":689,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/watchlist.service",{"_index":690,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["network/ticketmaster/ticketmaster.service",{"_index":1298,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["new",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcalendarevent",{"_index":424,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["newcalevent",{"_index":426,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newcalevent.isvalid",{"_index":469,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newcalevent.tocalendarevent(this.currentuser",{"_index":471,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newevent",{"_index":1216,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["newgroupform",{"_index":662,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["news",{"_index":1188,"title":{},"body":{"injectables/NotificationService.html":{}}}],["next",{"_index":959,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["next:(n",{"_index":1351,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["ng",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":924,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["ngbcalendar",{"_index":334,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbcarouselmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbdate",{"_index":294,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["ngbdate(d.getfullyear",{"_index":359,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["ngbdate(e.end.getfullyear",{"_index":460,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdate(e.start.getfullyear",{"_index":457,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdate(x.end.getfullyear",{"_index":1231,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate(x.start.getfullyear",{"_index":1228,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdatepicker",{"_index":323,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbmodal",{"_index":809,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngbmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbnav",{"_index":821,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":281,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngonchanges(changes",{"_index":312,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngoninit",{"_index":588,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["ngoninit(){//given",{"_index":861,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["ngx",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/SearchPageComponent.html":{},"dependencies.html":{}}}],["none",{"_index":885,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["notfreeatall",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noti",{"_index":975,"title":{},"body":{"injectables/GroupService.html":{}}}],["notification",{"_index":1077,"title":{},"body":{"injectables/GroupService.html":{}}}],["notification.service",{"_index":1000,"title":{},"body":{"injectables/GroupService.html":{}}}],["notificationservice",{"_index":976,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notipromise",{"_index":1068,"title":{},"body":{"injectables/GroupService.html":{}}}],["notipromise]).then(_",{"_index":1071,"title":{},"body":{"injectables/GroupService.html":{}}}],["null",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{}}}],["number",{"_index":303,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["number.isnan(d.valueof",{"_index":1517,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["number:0",{"_index":1294,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["number:number",{"_index":1212,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["object",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs",{"_index":1576,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["obs.error(\"group",{"_index":1041,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(result",{"_index":546,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["obs.next(this.dbtogroupinterface(data",{"_index":1043,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(user!==null",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["obs.next(watchlist",{"_index":1624,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["obs.subscribe(grp",{"_index":1578,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["observable",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["observable(obs",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["onaddclassification",{"_index":589,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onaddclassification(ie",{"_index":598,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onaddclassification(ie:idclasstype",{"_index":637,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onchanges",{"_index":269,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclick",{"_index":896,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group",{"_index":902,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group:groupinterface",{"_index":905,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclickdate",{"_index":282,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date",{"_index":317,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date:ngbdate",{"_index":362,"title":{},"body":{"components/CalanderComponent.html":{}}}],["one",{"_index":1328,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["ongenre",{"_index":590,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["ongenre(e",{"_index":602,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["ongenre(e:idname",{"_index":633,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["oninit",{"_index":583,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["onremoveclassfication",{"_index":591,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onremoveclassfication(ie",{"_index":605,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onremoveclassfication(ie:idclasstype",{"_index":640,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment",{"_index":592,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e",{"_index":607,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e:idname",{"_index":629,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre",{"_index":593,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e",{"_index":609,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e:idname",{"_index":635,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["open",{"_index":806,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["openmodalemitter",{"_index":921,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["other.id",{"_index":764,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["out",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":331,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupListComponent.html":{}}}],["outputs",{"_index":288,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupListComponent.html":{}}}],["overview",{"_index":1760,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.number",{"_index":1343,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["p:pageinterface",{"_index":1341,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["package",{"_index":1677,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":382,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":917,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.html",{"_index":918,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts",{"_index":915,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1111,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:12",{"_index":1365,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:13",{"_index":1366,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:15",{"_index":1364,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:16",{"_index":939,"title":{},"body":{"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:17",{"_index":936,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:18",{"_index":940,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:19",{"_index":935,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:20",{"_index":937,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:21",{"_index":927,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:23",{"_index":1225,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:24",{"_index":1112,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:25",{"_index":938,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:26",{"_index":1224,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:29",{"_index":934,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:30",{"_index":1223,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:33",{"_index":932,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:34",{"_index":1221,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:36",{"_index":933,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:37",{"_index":1363,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:44",{"_index":1222,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:50",{"_index":1219,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:59",{"_index":929,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:64",{"_index":931,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.totalelements",{"_index":1508,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["page/classification",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["page/event",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["page/group",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"coverage.html":{}}}],["page/groupmember",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["page/grouppipe.pipe.ts",{"_index":1088,"title":{},"body":{"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe.ts:9",{"_index":1092,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["page/list",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/personal",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["page/search",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["page/watchlist",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page:pageinterface",{"_index":792,"title":{},"body":{"interfaces/EventPageInterface.html":{}}}],["page:rtn.page",{"_index":1511,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["page:undefined",{"_index":1482,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["pageinfo",{"_index":1255,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["pageinfo$:behaviorsubject",{"_index":1308,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["pageinterface",{"_index":791,"title":{"interfaces/PageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"interfaces/PageInterface.html":{},"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["parameter",{"_index":475,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["params.get('id",{"_index":950,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["params:query}).pipe",{"_index":1507,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["params:{apikey:ticketmasterapi",{"_index":1449,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["path",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group/:id",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"login",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"personalcalender",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"search",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"watchlist",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patriots",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":1028,"title":{},"body":{"injectables/GroupService.html":{}}}],["personal",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["personalcalenderpagecomponent",{"_index":80,"title":{"components/PersonalCalenderPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pgnum",{"_index":1273,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["pipe",{"_index":1080,"title":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{}},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"coverage.html":{}}}],["pipe(mergemap(v",{"_index":1503,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["pipe.pipe",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe.pipe.ts",{"_index":1082,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["pipe.pipe.ts:9",{"_index":1085,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["pipes",{"_index":1081,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1086,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{}}}],["platform",{"_index":1750,"title":{},"body":{"index.html":{}}}],["platformlocation",{"_index":1424,"title":{},"body":{"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["please",{"_index":1191,"title":{},"body":{"injectables/NotificationService.html":{}}}],["pointer",{"_index":883,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["popperjs/core",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":1124,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["priority",{"_index":454,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["private",{"_index":274,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/LoginPageComponent.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["prod",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["prod.ts",{"_index":1674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1718,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["promise((res",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise((res,rej",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{}}}],["promise(res",{"_index":533,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["promise.all([updatepromise",{"_index":1070,"title":{},"body":{"injectables/GroupService.html":{}}}],["properly",{"_index":1074,"title":{},"body":{"injectables/GroupService.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"properties.html":{}}}],["protection",{"_index":1051,"title":{},"body":{"injectables/GroupService.html":{}}}],["provideanimations",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["provideauth",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provideauth(()=>getauth",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["providefirebaseapp",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore(()=>getfirestore",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["provider).then((result",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":586,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["pulling",{"_index":560,"title":{},"body":{"injectables/CalendarService.html":{}}}],["q",{"_index":536,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["queries",{"_index":1329,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["query",{"_index":507,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["query\",\"error",{"_index":1377,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["query(calcollection",{"_index":537,"title":{},"body":{"injectables/CalendarService.html":{}}}],["query(grpcollection",{"_index":1031,"title":{},"body":{"injectables/GroupService.html":{}}}],["query.apikey",{"_index":1501,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["query:any",{"_index":1301,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["queryparams",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["r",{"_index":1506,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["radius",{"_index":1142,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["radius:0",{"_index":1397,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["range",{"_index":440,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["reactiveformsmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":1518,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["redirectto:'/search",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1761,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":345,"title":{},"body":{"components/CalanderComponent.html":{}}}],["regarding",{"_index":1205,"title":{},"body":{"injectables/NotificationService.html":{}}}],["regards",{"_index":348,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rej(\"eh",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rej(\"group",{"_index":1030,"title":{},"body":{"injectables/GroupService.html":{}}}],["rej(new",{"_index":473,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{}}}],["rej.code",{"_index":1635,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["relative",{"_index":1407,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["reload",{"_index":1732,"title":{},"body":{"index.html":{}}}],["remove",{"_index":787,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removecalendarevent",{"_index":481,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removecalendarevent(calendarevent",{"_index":499,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removeclassification",{"_index":1261,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeclassification(ie",{"_index":1278,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeclassification(ie:idclasstype",{"_index":1325,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeevent",{"_index":766,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event",{"_index":771,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event:eventinterface",{"_index":776,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removefromgroup",{"_index":972,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromgroup(group",{"_index":993,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromwatchlist",{"_index":1262,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removefromwatchlist(event",{"_index":1280,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removefromwatchlist(event:eventinterface",{"_index":1354,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removewatchlistevent",{"_index":1591,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["removewatchlistevent(user",{"_index":1602,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["replaysubject",{"_index":328,"title":{},"body":{"components/CalanderComponent.html":{}}}],["res",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["res(user",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reservedforevent",{"_index":1712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reset",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":543,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["result.push(calevent",{"_index":574,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtocalendarevent(cal,user",{"_index":545,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtogroupinterface(grp",{"_index":1035,"title":{},"body":{"injectables/GroupService.html":{}}}],["results",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["returnurl",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgb(2",{"_index":397,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(2",{"_index":402,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(26",{"_index":1409,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["right:0",{"_index":1137,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["route",{"_index":925,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["route:activatedroute",{"_index":946,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["router",{"_index":1110,"title":{},"body":{"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{}}}],["router.navigate(['login",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router:router",{"_index":1113,"title":{},"body":{"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":186,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rtn",{"_index":1499,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn.events",{"_index":1486,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn.page",{"_index":1484,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn:any",{"_index":1481,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtnn",{"_index":1515,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtnn.page.totalelements",{"_index":1513,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtnn:eventpageinterface",{"_index":1512,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["run",{"_index":1725,"title":{},"body":{"index.html":{}}}],["running",{"_index":1743,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["s",{"_index":1285,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["same",{"_index":1067,"title":{},"body":{"injectables/GroupService.html":{}}}],["save",{"_index":841,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["saved",{"_index":1627,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["scaffolding",{"_index":1734,"title":{},"body":{"index.html":{}}}],["sd",{"_index":1488,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["search",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["searchevent",{"_index":1263,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["searchevent(){//this",{"_index":1327,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["searchfacade",{"_index":587,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["searchfacade:searchfacadeservice",{"_index":623,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["searchfacadeservice",{"_index":595,"title":{"injectables/SearchFacadeService.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["searchpagecomponent",{"_index":83,"title":{"components/SearchPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sec",{"_index":1382,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["segment",{"_index":646,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["segment:idname",{"_index":648,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["segmentinterface",{"_index":654,"title":{"interfaces/SegmentInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["select",{"_index":884,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["selectedevent",{"_index":804,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["selectedevent?:eventinterface",{"_index":827,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["send",{"_index":1076,"title":{},"body":{"injectables/GroupService.html":{}}}],["sendconfirmation",{"_index":1166,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmation(group",{"_index":1170,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest",{"_index":1167,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest(group",{"_index":1172,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail",{"_index":1168,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail(to",{"_index":1174,"title":{},"body":{"injectables/NotificationService.html":{}}}],["serve",{"_index":1726,"title":{},"body":{"index.html":{}}}],["server",{"_index":1724,"title":{},"body":{"index.html":{}}}],["setbgcolor",{"_index":283,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date",{"_index":319,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date:ngbdate):string",{"_index":365,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setcolor",{"_index":1527,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["setdoc",{"_index":515,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/WatchlistService.html":{}}}],["setdoc(watchdoc,update).then(_",{"_index":1636,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["sign",{"_index":1119,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["signed",{"_index":724,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{}}}],["signinwithpopup",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithpopup(this.auth",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["simplechanges",{"_index":313,"title":{},"body":{"components/CalanderComponent.html":{}}}],["size",{"_index":1208,"title":{},"body":{"interfaces/PageInterface.html":{},"components/SearchPageComponent.html":{}}}],["size:number",{"_index":1210,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["slt",{"_index":1383,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["solid",{"_index":1393,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["somefree",{"_index":1706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sort",{"_index":451,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["split",{"_index":552,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/.../auth.guard.ts",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../calenderenum.ts",{"_index":1702,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../clasification",{"_index":1703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../env",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../testdata.ts",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/calander/calander.component.ts",{"_index":267,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{}}}],["src/app/common/calander/calander.component.ts:15",{"_index":295,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:16",{"_index":291,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:17",{"_index":293,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:19",{"_index":297,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:20",{"_index":327,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:23",{"_index":329,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:24",{"_index":322,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:25",{"_index":290,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:31",{"_index":314,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:42",{"_index":300,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:45",{"_index":318,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:49",{"_index":320,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:59",{"_index":306,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:62",{"_index":310,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts",{"_index":1153,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/common/navigation/navigation.component.ts:10",{"_index":1157,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts:14",{"_index":1158,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/facade/creategroupfacade",{"_index":824,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["src/app/facade/creategroupfacade.ts",{"_index":661,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"coverage.html":{}}}],["src/app/facade/creategroupfacade.ts:17",{"_index":676,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:18",{"_index":688,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:19",{"_index":687,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:30",{"_index":670,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:47",{"_index":674,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:58",{"_index":671,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts",{"_index":414,"title":{},"body":{"injectables/CalendarFacade.html":{},"coverage.html":{}}}],["src/app/facade/personalcalendarfacade.ts:18",{"_index":431,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:19",{"_index":430,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:20",{"_index":421,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:54",{"_index":428,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:58",{"_index":425,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/search",{"_index":614,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["src/app/facade/viewgroupfacade",{"_index":859,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["src/app/facade/viewgroupfacade.ts",{"_index":1519,"title":{},"body":{"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["src/app/facade/viewgroupfacade.ts:103",{"_index":1540,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:107",{"_index":1535,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:113",{"_index":1533,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:19",{"_index":1544,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:20",{"_index":1547,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:21",{"_index":1545,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:22",{"_index":1548,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:23",{"_index":1543,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:24",{"_index":1549,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:25",{"_index":1529,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:54",{"_index":1538,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:81",{"_index":1542,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:90",{"_index":1530,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:95",{"_index":1531,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:99",{"_index":1541,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/group",{"_index":795,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/calander",{"_index":336,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"coverage.html":{}}}],["src/app/interfaces/clasification",{"_index":618,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/enums/calenderenum",{"_index":339,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{}}}],["src/app/interfaces/enums/calenderenum.ts",{"_index":1657,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/event",{"_index":727,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/interfaces/eventpage",{"_index":790,"title":{},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/interfaces/group",{"_index":516,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/interfaces/page",{"_index":1207,"title":{},"body":{"interfaces/PageInterface.html":{},"coverage.html":{}}}],["src/app/interfaces/testdata.ts",{"_index":1660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/user",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"interfaces/UserInterface.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/login",{"_index":1108,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service",{"_index":772,"title":{},"body":{"components/EventComponentComponent.html":{},"components/NavigationComponent.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:10",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:15",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:25",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:33",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:52",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts",{"_index":476,"title":{},"body":{"injectables/CalendarService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:102",{"_index":502,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:117",{"_index":500,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:12",{"_index":485,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:16",{"_index":492,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:28",{"_index":488,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:47",{"_index":495,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:64",{"_index":498,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts",{"_index":967,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:113",{"_index":992,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:128",{"_index":994,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:13",{"_index":977,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:157",{"_index":986,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:166",{"_index":998,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:17",{"_index":983,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:180",{"_index":996,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:194",{"_index":979,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:43",{"_index":981,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:76",{"_index":990,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:96",{"_index":988,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts",{"_index":1165,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:13",{"_index":1176,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:30",{"_index":1173,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:46",{"_index":1171,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:8",{"_index":1169,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service",{"_index":773,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts",{"_index":1587,"title":{},"body":{"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:10",{"_index":1592,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:14",{"_index":1599,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:33",{"_index":1596,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:48",{"_index":1601,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:67",{"_index":1594,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:88",{"_index":1603,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service",{"_index":620,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts",{"_index":1416,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:116",{"_index":1432,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:15",{"_index":1425,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:22",{"_index":1435,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:27",{"_index":1427,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:51",{"_index":1428,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:84",{"_index":1430,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/personal",{"_index":1213,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["src/app/search",{"_index":581,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["src/app/watchlist",{"_index":1580,"title":{},"body":{"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["src/environments/env",{"_index":1437,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stadium",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":311,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start,enddate",{"_index":462,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["start2",{"_index":1667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start3",{"_index":1668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start:ngbdate",{"_index":456,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["start:start",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start2",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start3",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startdate",{"_index":732,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["startdate:new",{"_index":685,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["startdate?:date",{"_index":747,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["startdatetime:str}}).pipe",{"_index":1480,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["started",{"_index":1717,"title":{"index.html":{}},"body":{}}],["state",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.url",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1740,"title":{},"body":{"index.html":{}}}],["str",{"_index":1474,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["str.length",{"_index":1477,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["str.slice(0",{"_index":1476,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"interfaces/IdName.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(evt",{"_index":697,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["subgenre",{"_index":647,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["subgenre:idname",{"_index":650,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subgenres",{"_index":794,"title":{},"body":{"interfaces/GenreInterface.html":{}}}],["subgenres:idname",{"_index":657,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subject",{"_index":438,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["subscribe",{"_index":628,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["subscribe((d:ngbdate)=>this.onclickdate(d",{"_index":357,"title":{},"body":{"components/CalanderComponent.html":{}}}],["success",{"_index":719,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["successs",{"_index":1245,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["support",{"_index":1762,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1763,"title":{},"body":{"modules.html":{}}}],["swift",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap",{"_index":613,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["switchmap((x:string",{"_index":626,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["table",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":335,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{}}}],["take(1",{"_index":356,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{}}}],["taken",{"_index":722,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["tap",{"_index":1300,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["tap((x:boolean",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap((x:classificationinterface",{"_index":1316,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["test",{"_index":1746,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1754,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1745,"title":{},"body":{"index.html":{}}}],["text",{"_index":379,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.admingroups$.next(adm",{"_index":1559,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.auth.authstateready().then(_",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.displayname",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.email",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.uid",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.logingoogle().then(_",{"_index":1114,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.logout().then(_",{"_index":1117,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.onauthstatechanged((user",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.signout",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authapi.getcurrentuser().then",{"_index":1581,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.authapi.getcurrentuser().then((u",{"_index":1355,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.authapi.getcurrentuser().then((x:userinterface",{"_index":1311,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.authapi.isauthenticated().subscribe",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authapi.logout",{"_index":1160,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authsvc.getcurrentuser().then(user",{"_index":445,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.baseurl",{"_index":1444,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.cal.createevent(this.newevent).then(_",{"_index":1243,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cal.deleteevent(e).then(_",{"_index":1241,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.calendar$.next(calevents",{"_index":464,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.addcalendarevent(calevent).then(_=>res",{"_index":472,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.getcalendar(user).subscribe",{"_index":447,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.getgroupcalendar(group).subscribe(grpcal",{"_index":1564,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.calsvc.removecalendarevent(e",{"_index":467,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.cat$.next(x",{"_index":1317,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.chosegroup(group",{"_index":960,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.chosen",{"_index":953,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.cid$.next(n",{"_index":1324,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.next(n.filter((c)=>c.id!=ie.id",{"_index":1326,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value",{"_index":1320,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.genre).map((x)=>x.id",{"_index":1333,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.segment).map((x)=>x.id",{"_index":1331,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.subgenre).map((x)=>x.id",{"_index":1335,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.classification.pipe",{"_index":624,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.clickeddate.next(date",{"_index":364,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.clipboard.copy(base_url",{"_index":1572,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.currentuser",{"_index":446,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.currentuser).then(_",{"_index":717,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.datecolor",{"_index":370,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.datecolor$.next(datecolor",{"_index":465,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.dbtocalendarevent(cal",{"_index":569,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.details",{"_index":757,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.em.subscribe(()=>this.open",{"_index":829,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.enddate",{"_index":761,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.error$.emit(\"no",{"_index":1347,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.next(s",{"_index":1310,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.value",{"_index":1337,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.events=l",{"_index":1584,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.formbuilder.group",{"_index":677,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.group$.next(group",{"_index":1563,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.groupbyid$.next(grp",{"_index":1579,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.groupclicked.emit(group",{"_index":906,"title":{},"body":{"components/GroupListComponent.html":{}}}],["this.grp.copyinvitelink",{"_index":867,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.creategroup().then(_",{"_index":830,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.grp.deletegroup",{"_index":863,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.get.getgroupbyid(id).subscribe({next:(x",{"_index":952,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.getgrpbyid(id).subscribe",{"_index":958,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.init(this.group",{"_index":862,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.joingroup(this.groupid",{"_index":947,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.joingroup(this.grp.group$.value!.id).then(_",{"_index":868,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.kickuser(user).then(_",{"_index":865,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grpsvc.creategroup(grp.name",{"_index":715,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.grpsvc.deletegroup(this.group$.value",{"_index":1573,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(group.id).subscribe(group",{"_index":1562,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(id",{"_index":1577,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroups(user).subscribe(grps",{"_index":1552,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.joingroup(id",{"_index":1575,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.removefromgroup(this.group$.value",{"_index":1574,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.http.get(this.baseurl+\"/\"+\"classifications.json",{"_index":1448,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.http.get(this.baseurl+\"/events.json",{"_index":1479,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.id",{"_index":750,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.images",{"_index":755,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.invaliddate(sd",{"_index":1496,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.isbetween(start.day",{"_index":1239,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.isbetween(start.month",{"_index":1236,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.isbetween(start.year",{"_index":1233,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.lastclickeddate.next(date",{"_index":363,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.lastclickeddate.pipe",{"_index":355,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.loadedevents$.next(n.events",{"_index":1353,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.loadedevents$.next(x.events",{"_index":1345,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.location",{"_index":753,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.membergroups$.next(nadm",{"_index":1560,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.modalservice.dismissall",{"_index":838,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.modalservice.open(this.content,{centered:true",{"_index":836,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.name",{"_index":752,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.navstuff?.select(2",{"_index":955,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.newgroupform.patchvalue",{"_index":704,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.newgroupform.value",{"_index":707,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.noti.sendconfirmation(group",{"_index":1069,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.noti.sendconfirmation(group).then(_",{"_index":1079,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.noti.sendconfirmationrequest(group).then(_",{"_index":1061,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.onaddclassification({id:e.id",{"_index":630,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.pageinfo$.next(p",{"_index":1344,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.platformlocation",{"_index":1445,"title":{},"body":{"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.query.genreid",{"_index":1332,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.keyword",{"_index":1336,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.page",{"_index":1338,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.segmentid",{"_index":1330,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.subgenreid",{"_index":1334,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.route.parammap.subscribe(params",{"_index":948,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1116,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.router.navigate([\"login",{"_index":1161,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.navigatebyurl",{"_index":1115,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.searchevent",{"_index":1373,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.addclassification(ie",{"_index":639,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.addtowatchlist(event",{"_index":779,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.searchfacade.changepage(pgnum",{"_index":1378,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.error$.subscribe",{"_index":1375,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.getclassification(x",{"_index":627,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.getwatchlist",{"_index":1374,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.removeclassification(ie",{"_index":643,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.removefromwatchlist(event",{"_index":777,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.searchfacade.searchevent",{"_index":1379,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.sendemail(emaillist,{subject",{"_index":1199,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.startdate",{"_index":759,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.tmapi.getclassification(kw).pipe",{"_index":1315,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.tmapi.geteventsquery(this.query).subscribe",{"_index":1350,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.tmapi.geteventsquery(this.query).subscribe((x",{"_index":1340,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.toastr.error(\"no",{"_index":1376,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.watchlist",{"_index":1585,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.watchlist$.next(n",{"_index":1313,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.watchlist$.next(watchlist",{"_index":694,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.watchlistsvc.addwatchlistevent(u,event",{"_index":1358,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.watchlistsvc.getwatchlist(u).subscribe(l",{"_index":1583,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.watchlistsvc.getwatchlist(user).subscribe(watchlist",{"_index":693,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.watchlistsvc.getwatchlist(x).subscribe",{"_index":1312,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.watchlistsvc.removewatchlistevent(u,event",{"_index":1356,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["throw",{"_index":1509,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["throw(rej",{"_index":1637,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["throwerror",{"_index":1442,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ticket",{"_index":1162,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["ticketbuddy",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ticketmasterapi",{"_index":1436,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ticketmasterservice",{"_index":619,"title":{"injectables/TicketmasterService.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["tickets",{"_index":1198,"title":{},"body":{"injectables/NotificationService.html":{}}}],["time",{"_index":450,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["tmapi",{"_index":1265,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["to.length",{"_index":1181,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toastr",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/SearchPageComponent.html":{},"dependencies.html":{}}}],["toastr:toastrservice",{"_index":1372,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["toastrmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":1362,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["today",{"_index":1473,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["today.toisostring",{"_index":1475,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["todo",{"_index":1246,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["togglegroupconfirmation",{"_index":973,"title":{},"body":{"injectables/GroupService.html":{}}}],["togglegroupconfirmation(group",{"_index":995,"title":{},"body":{"injectables/GroupService.html":{}}}],["top",{"_index":1144,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["top:0",{"_index":1126,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["toremove",{"_index":1053,"title":{},"body":{"injectables/GroupService.html":{}}}],["totalelements",{"_index":1209,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["totalelements:0",{"_index":1293,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["totalelements:number",{"_index":1211,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["transform",{"_index":1083,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["transform(e",{"_index":1099,"title":{},"body":{"pipes/InwatchlistPipe.html":{}}}],["transform(members",{"_index":1084,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(members:userinterface",{"_index":1087,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(value",{"_index":1090,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["transform(value:groupinterface",{"_index":1093,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["translate",{"_index":1128,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["true",{"_index":1064,"title":{},"body":{"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{}}}],["tslib",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:calandertype.personal",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type:classtype",{"_index":653,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["type:classtype.segment",{"_index":632,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["typeof",{"_index":523,"title":{},"body":{"injectables/CalendarService.html":{}}}],["u",{"_index":1582,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["uid",{"_index":527,"title":{},"body":{"injectables/CalendarService.html":{}}}],["undefined",{"_index":324,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["unit",{"_index":1744,"title":{},"body":{"index.html":{}}}],["up",{"_index":554,"title":{},"body":{"injectables/CalendarService.html":{}}}],["update",{"_index":577,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["update).then(_",{"_index":579,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["update.confirmed",{"_index":1063,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatecalendarevent",{"_index":482,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatecalendarevent(calendarevent",{"_index":501,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updated",{"_index":1075,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatedoc",{"_index":511,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["updatedoc(caldoc",{"_index":578,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatedoc(grpdoc",{"_index":1049,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatedoc(watchdoc",{"_index":1633,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["updateeventinput",{"_index":1264,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateeventinput(s",{"_index":1283,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateeventinput(s:string",{"_index":1309,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateform",{"_index":664,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updateform(evt",{"_index":672,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updateform(evt:eventinterface",{"_index":695,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updategroupdate",{"_index":974,"title":{},"body":{"injectables/GroupService.html":{}}}],["updategroupdate(group",{"_index":997,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatepromise",{"_index":1065,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatepromise.then(_",{"_index":1078,"title":{},"body":{"injectables/GroupService.html":{}}}],["ur@brother.com",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@father.com",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@mother.com",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@sister.com",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1736,"title":{},"body":{"index.html":{}}}],["user",{"_index":257,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["user.id",{"_index":1056,"title":{},"body":{"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["user1",{"_index":1669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user2",{"_index":1670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user3",{"_index":1671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user4",{"_index":1672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user:userinterface",{"_index":1046,"title":{},"body":{"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{}}}],["user:{name:\"john",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userinterface",{"_index":233,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"injectables/SearchFacadeService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinterface|undefined",{"_index":1054,"title":{},"body":{"injectables/GroupService.html":{}}}],["username",{"_index":875,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["v",{"_index":1504,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["validators",{"_index":692,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["validators.required",{"_index":678,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.filter((e:groupinterface)=>e.admin.id!=user.id",{"_index":1097,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["value.filter((e:groupinterface)=>e.admin.id==user.id",{"_index":1096,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["var",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{}}}],["variable",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1773,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1721,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["viewchild",{"_index":332,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild(\"dp",{"_index":351,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild('content",{"_index":818,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild('dp",{"_index":326,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild(ngbnav",{"_index":822,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewgroupfacade",{"_index":850,"title":{"injectables/ViewGroupFacade.html":{}},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["void",{"_index":316,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{}}}],["watchdoc",{"_index":1621,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["watchlist$:behaviorsubject",{"_index":1304,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["watchlist.push(this.dbwatchlisttoevent(event",{"_index":1626,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist/${user.id",{"_index":1622,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist:eventinterface",{"_index":1101,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["watchlistevent",{"_index":1605,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.details",{"_index":1609,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.enddate",{"_index":1611,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.images",{"_index":1608,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.location",{"_index":1607,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.name",{"_index":1606,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.startdate",{"_index":1610,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistpagecomponent",{"_index":85,"title":{"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["watchlistservice",{"_index":669,"title":{"injectables/WatchlistService.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["watchlistsvc",{"_index":668,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["weight",{"_index":1401,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["where(\"alluuid\",\"array",{"_index":1032,"title":{},"body":{"injectables/GroupService.html":{}}}],["where(\"end",{"_index":561,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"start",{"_index":559,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"==\",user.id",{"_index":538,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"in\",group.alluuid",{"_index":547,"title":{},"body":{"injectables/CalendarService.html":{}}}],["white",{"_index":400,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{}}}],["width",{"_index":390,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["wrn",{"_index":1398,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["wtf",{"_index":442,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["x",{"_index":954,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["x._embedded",{"_index":1485,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x._embedded.classifications",{"_index":1456,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.end.getmonth()+1,x.end.getdate",{"_index":1232,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["x.events.map((e:any",{"_index":1487,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.page",{"_index":1342,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["x.page.totalelements>0",{"_index":1452,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.start.getmonth()+1,x.start.getdate",{"_index":1229,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["y4q5tlebgb",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1536,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["z",{"_index":1130,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["zone.js",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ticketbuddy'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from './network/firebase/authentication/authentication.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ticketbuddy';\n  isAuth = false;\n  constructor(private authApi:AuthenticationService){\n    this.authApi.isAuthenticated().subscribe(\n      (n)=>this.isAuth = n\n    );\n  }\n}\n\n    \n\n    \n        \n\t\n \n\n\n  \n\t\n\t\t\n\t\n\n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t   \t\t\t\t  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nGrouppipePipe\n\nGrouppipePipe\n\nAppModule -->\n\nGrouppipePipe->AppModule\n\n\n\n\n\nInwatchlistPipe\n\nInwatchlistPipe\n\nAppModule -->\n\nInwatchlistPipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CalanderComponent\n                        \n                        \n                            ClassificationComponentComponent\n                        \n                        \n                            EventComponentComponent\n                        \n                        \n                            GroupCreateComponent\n                        \n                        \n                            GroupDetailComponent\n                        \n                        \n                            GroupListComponent\n                        \n                        \n                            GroupPageComponent\n                        \n                        \n                            GroupmemberPipePipe\n                        \n                        \n                            GrouppipePipe\n                        \n                        \n                            InwatchlistPipe\n                        \n                        \n                            ListEventsComponent\n                        \n                        \n                            LoginPageComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PersonalCalenderPageComponent\n                        \n                        \n                            SearchPageComponent\n                        \n                        \n                            WatchlistPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(firebaseConfig)).html\">provideFirebaseApp(() => initializeApp(firebaseConfig))\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ListEventsComponent } from './search-page/list-events/list-events.component';\nimport { EventComponentComponent } from './search-page/event-component/event-component.component';\n\n\nimport { ToastrModule } from 'ngx-toastr';\n\n// Firebase\nimport { firebaseConfig } from '../environments/env-prod'\nimport { provideFirebaseApp, initializeApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { getAuth, provideAuth } from '@angular/fire/auth';\n\nimport { provideAnimations, BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { GroupListComponent } from './group-page/group-list/group-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GrouppipePipe } from './group-page/grouppipe.pipe';\nimport { GroupDetailComponent } from './group-page/group-detail/group-detail.component';\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { CalanderComponent } from './common/calander/calander.component';\n\nimport { GroupmemberPipePipe } from './group-page/groupmember-pipe.pipe';\nimport { NavigationComponent } from './common/navigation/navigation.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { GroupCreateComponent } from './group-page/group-create/group-create.component';\nimport { ClassificationComponentComponent } from './search-page/classification-component/classification-component.component';\nimport { InwatchlistPipe } from './search-page/list-events/inwatchlist.pipe';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ListEventsComponent,\n        EventComponentComponent,\n        SearchPageComponent,\n        GroupPageComponent,\n        GroupListComponent,\n        GrouppipePipe,\n        GroupDetailComponent,\n        PersonalCalenderPageComponent,\n        WatchlistPageComponent,\n        GroupmemberPipePipe,\n        CalanderComponent,\n        NavigationComponent,\n        LoginPageComponent,\n        GroupCreateComponent,\n        ClassificationComponentComponent,\n        InwatchlistPipe\n    ],\n    providers: [provideAnimations()],\n    bootstrap: [AppComponent],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        NgbCarouselModule,\n        FormsModule,\n        ReactiveFormsModule,\n        // Firebase\n        provideFirebaseApp(() => initializeApp(firebaseConfig)),\n        provideAuth(()=>getAuth()),\n        provideFirestore(()=>getFirestore()),\n        \n        BrowserAnimationsModule,\n        ToastrModule.forRoot()\n\n    ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport {authGuard} from \"./guards/auth.guard\";\nconst routes: Routes = [\n  {path:\"personalcalender\", component:PersonalCalenderPageComponent, canActivate:[authGuard]},\n  {path:\"search\", component:SearchPageComponent, canActivate:[authGuard]},\n  {path:\"group\", component:GroupPageComponent, canActivate:[authGuard]},\n  {path:\"group/:id\", component:GroupPageComponent, canActivate:[authGuard]},//for joining via link\n  {path:\"watchlist\", component:WatchlistPageComponent, canActivate:[authGuard]},\n  {path:\"login\", component:LoginPageComponent},\n  {path:'', redirectTo:'/search', pathMatch:'full'}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                loginGoogle\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/authentication/authentication.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginGoogle\n                        \n                    \n                \n            \n            \n                \nloginGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Auth, GoogleAuthProvider} from '@angular/fire/auth';\nimport { signInWithPopup } from 'firebase/auth';\nimport { Observable } from 'rxjs';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  \n  constructor(private auth: Auth) { \n  \n  }\n  loginGoogle(): Promise {\n    return new Promise((res)=>{\n      let provider = new GoogleAuthProvider();\n      signInWithPopup(this.auth, provider).then((result)=>{\n        console.log(result);\n        res();\n      });\n    });\n  }\n\n  logOut(): Promise {\n    return new Promise((res)=>{\n      this.auth.signOut();\n      console.log(\"signout\")\n      res();\n    });\n  }\n\n  getCurrentUser():Promise{\n\n    return new Promise((res,rej)=>{\n      this.auth.authStateReady().then(_=>{\n        if (this.auth.currentUser === null) {\n          rej(\"eh buto login first lah cb\");\n          return;\n        }\n        let user =  {\n          id: this.auth.currentUser.uid,\n          name: this.auth.currentUser.displayName,\n          email: this.auth.currentUser.email\n        };\n        res(user);\n      })\n    })\n   \n  }\n\n  isAuthenticated(): Observable{\n    return new Observable(obs=>{\n      this.auth.onAuthStateChanged((user)=>{\n        obs.next(user!==null);\n      })\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalanderComponent.html":{"url":"components/CalanderComponent.html","title":"component - CalanderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalanderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/calander/calander.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calander\n            \n\n\n\n            \n                styleUrls\n                ./calander.component.css\n            \n\n\n\n            \n                templateUrl\n                ./calander.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                    \n                                    Private\n                                dp\n                            \n                            \n                                hoveredDate\n                            \n                            \n                                lastClickedDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToNgbDate\n                            \n                            \n                                    Private\n                                isBetween\n                            \n                            \n                                    Private\n                                isInside\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onClickDate\n                            \n                            \n                                setBGColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateColor\n                            \n                            \n                                events\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickedDate\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/calander/calander.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dateColor\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateTo\n                    \n                \n                \n                    \n                        Type :     NgbDate\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickedDate\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToNgbDate\n                        \n                    \n                \n            \n            \n                \nconvertToNgbDate(d: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBetween\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBetween(a: number, b: number, c: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                c\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInside\n                        \n                    \n                \n            \n            \n                \n                        \n                    isInside(start: NgbDate, date: NgbDate, end: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickDate\n                        \n                    \n                \n            \n            \n                \nonClickDate(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBGColor\n                        \n                    \n                \n            \n            \n                \nsetBGColor(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgbCalendar)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        dp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDatepicker | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dp')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoveredDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDate | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastClickedDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild, inject} from '@angular/core';\nimport { NgbCalendar, NgbDate, NgbDatepicker } from '@ng-bootstrap/ng-bootstrap';\nimport { ReplaySubject, take } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor } from 'src/app/interfaces/enums/calenderenum';\n\n@Component({\n  selector: 'app-calander',\n  templateUrl: './calander.component.html',\n  styleUrls: ['./calander.component.css']\n})\nexport class CalanderComponent implements OnChanges{\n\t//list of events \n\t//then a map for date -> CalanderColor\n\t@Input() navigateTo!:NgbDate;\n\t@Input() dateColor!: [[NgbDate, NgbDate], CalanderColor][];\n\t@Input() events!:CalanderEvent[];//should have a listernere here so when events refresh will change the clickedDate output\n\t//return the listof event with regards to dates clicked \n\t@Output() clickedDate = new EventEmitter();\n\t@ViewChild(\"dp\") private dp:NgbDatepicker|undefined;\n\t\n\t//here the output will be changed if this calander is for \n\tlastClickedDate = new ReplaySubject();\n  \tcalendar = inject(NgbCalendar);\n\thoveredDate: NgbDate | null = null;\n\tconstructor(){\n\n\t}\n\t\n\t\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif(changes[\"events\"]){\n\t\t\tthis.lastClickedDate.pipe(\n\t\t\t\ttake(1),\n\t\t\t).subscribe((d:NgbDate)=>this.onClickDate(d));\n\t\t}\n\t\n\t}\n\n\t\n\t\n\tconvertToNgbDate(d:Date){\n\t\treturn new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n\t}\n\tonClickDate(date:NgbDate){\n\t\tthis.lastClickedDate.next(date);\n\t\tthis.clickedDate.next(date);\n\t}\n\tsetBGColor(date:NgbDate):string{\n\t\t//check amonst all keys in dateColor map\n\t\tfor( var e of this.dateColor){\n\t\t\tif(this.isInside(e[0][0],date,e[0][1])){\n\t\t\t\treturn e[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn \"\"\n\t}\n\tprivate isBetween(a:number, b:number, c:number){\n\t\treturn a\n    \n\n    \n        \n\n\n\n\n\t\n\t\t{{ date.day }}\n\t\n\n    \n\n    \n                \n                    ./calander.component.css\n                \n                .custom-day {\n    text-align: center;\n    padding: 0.185rem 0.25rem;\n    display: inline-block;\n    height: 2rem;\n    width: 2rem;\n}\n.custom-day.focused {\n    background-color: #e6e6e6;\n}\n.custom-day.range,\n.custom-day:hover {\n    background-color: rgb(2, 117, 216);\n    color: white;\n}\n.custom-day.faded {\n    background-color: rgba(2, 117, 216, 0.5);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ date.day }}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalanderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEvent.html":{"url":"interfaces/CalanderEvent.html","title":"interface - CalanderEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            detail\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         CalanderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEventColor.html":{"url":"interfaces/CalanderEventColor.html","title":"interface - CalanderEventColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEventColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bgColor\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bgColor:         CalanderColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         CalanderEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarFacade.html":{"url":"injectables/CalendarFacade.html","title":"injectable - CalendarFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/PersonalCalendarFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar$\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                dateColor$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                deleteEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, calSvc: CalendarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent(newCalEvent: NewCalendarEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newCalEvent\n                                            \n                                                            NewCalendarEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { NewCalendarEvent } from \"../.Class/NewCalendarEvent\"\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarFacade {\n\n    currentUser?: UserInterface;\n    calendar$: BehaviorSubject = new BehaviorSubject([]);\n    dateColor$: BehaviorSubject = new BehaviorSubject([]); //should be date range better // wtf does this mean\n\n    constructor(\n        private authSvc:AuthenticationService,\n        private calSvc: CalendarService\n    ) {\n        this.authSvc.getCurrentUser().then(user=>{\n            this.currentUser  = user;\n            this.calSvc.getCalendar(user).subscribe(\n            calEvents=>{\n                \n                calEvents.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n                    if(a.start {\n                        var start:NgbDate = new NgbDate(e.start.getFullYear() , e.start.getMonth()+1,e.start.getDate());\n                        var endDate:NgbDate = new NgbDate(e.end.getFullYear() , e.end.getMonth()+1,e.end.getDate());\n                        return [[start,endDate], CalanderTypeColor.get(e.type)||CalanderColor.Default]\n                    }\n                );\n                this.calendar$.next(calEvents);\n                this.dateColor$.next(dateColor);\n            });\n        });\n    }\n\n    deleteEvent(e:CalanderEvent): Promise{\n        return this.calSvc.removeCalendarEvent(e);\n    }\n\n    createEvent(newCalEvent: NewCalendarEvent): Promise{\n        return new Promise((res,rej)=>{\n            if(this.currentUser && newCalEvent.isValid()){\n                let calEvent = newCalEvent.toCalendarevent(this.currentUser);\n                this.calSvc.addCalendarEvent(calEvent).then(_=>res());\n            }\n            else {\n                rej(new Error(\"Invalid-Parameter\"));\n            }\n        })\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarService.html":{"url":"injectables/CalendarService.html","title":"injectable - CalendarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/calendar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCalendarEvent\n                            \n                            \n                                    Private\n                                dbToCalendarEvent\n                            \n                            \n                                getCalendar\n                            \n                            \n                                getGroupCalendar\n                            \n                            \n                                removeCalendarEvent\n                            \n                            \n                                updateCalendarEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/calendar.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCalendarEvent\n                        \n                    \n                \n            \n            \n                \naddCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToCalendarEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToCalendarEvent(dbCalEnt: DocumentData | , user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbCalEnt\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderEvent\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalendar\n                        \n                    \n                \n            \n            \n                \ngetCalendar(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupCalendar\n                        \n                    \n                \n            \n            \n                \ngetGroupCalendar(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCalendarEvent\n                        \n                    \n                \n            \n            \n                \nremoveCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCalendarEvent\n                        \n                    \n                \n            \n            \n                \nupdateCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, and, deleteDoc, setDoc} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderType } from 'src/app/interfaces/enums/calenderenum';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n\n  constructor(private fs: Firestore) { }\n\n  private dbToCalendarEvent(dbCalEnt: DocumentData | DocumentData & {id: string;}, user: UserInterface): CalanderEvent \n  { \n    return { \n      id: dbCalEnt[\"id\"],\n      user: user, \n      start: dbCalEnt[\"start\"].toDate(), \n      end: dbCalEnt[\"end\"].toDate(), \n      detail: dbCalEnt[\"detail\"], \n      type: CalanderType[dbCalEnt[\"type\"] as keyof typeof CalanderType] \n    } \n  } \n\n  addCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n\n    let calDoc = {\n      uid: calendarEvent.user.id,\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n\n    return new Promise(res=>{\n      addDoc(calCollection, calDoc).then((docRef: DocumentReference)=>{\n       \n        res();\n      });\n    })\n  }\n\n  getCalendar(user: UserInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, where(\"uid\",\"==\",user.id));\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            result.push(this.dbToCalendarEvent(cal,user));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  getGroupCalendar(group: GroupInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, and(\n      where(\"uid\",\"in\",group.allUUID), //Limited to 29 members, can increase if we split the calls up.\n      // inequalities on multiple fields not allowed\n      // where(\"start\", \"=\", start)\n      // pulling calendar events that have yet to end\n      where(\"end\", \">\" , group.event.startDate)\n    ));\n\n    let allUserMap:any = {}\n    allUserMap[group.admin.id] = group.admin;\n    group.members.forEach(member => {\n      allUserMap[member.id] = member;\n    });\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            let calEvent = this.dbToCalendarEvent(cal, allUserMap[cal[\"uid\"]]);\n\n            if(!group.event.endDate || !group.event.startDate) {\n              console.log(\"return\")\n              return\n            };\n\n            if (calEvent.start = group.event.startDate)\n              result.push(calEvent);\n          });\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  updateCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    let update = {\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n    return new Promise(res=>{\n      updateDoc(calDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n  \n  removeCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    return new Promise(res=>{\n      deleteDoc(calDoc).then(birdbird=>{\n        res();\n      })\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassificationComponentComponent.html":{"url":"components/ClassificationComponentComponent.html","title":"component - ClassificationComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassificationComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/classification-component/classification-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classification-component\n            \n\n\n\n            \n                styleUrls\n                ./classification-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./classification-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAddClassification\n                            \n                            \n                                onGenre\n                            \n                            \n                                onRemoveClassfication\n                            \n                            \n                                onSegment\n                            \n                            \n                                onSubGenre\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                classification\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/classification-component/classification-component.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        classification\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/classification-component/classification-component.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClassification\n                        \n                    \n                \n            \n            \n                \nonAddClassification(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGenre\n                        \n                    \n                \n            \n            \n                \nonGenre(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveClassfication\n                        \n                    \n                \n            \n            \n                \nonRemoveClassfication(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSegment\n                        \n                    \n                \n            \n            \n                \nonSegment(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubGenre\n                        \n                    \n                \n            \n            \n                \nonSubGenre(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/classification-component/classification-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { debounceTime, switchMap } from 'rxjs';\nimport { SearchFacadeService } from 'src/app/facade/search-facade.service';\nimport { ClassType, ClassificationInterface, IdClassType, IdName } from 'src/app/interfaces/clasification-interface';\nimport { TicketmasterService } from 'src/app/network/ticketmaster/ticketmaster.service';\n\n@Component({\n  selector: 'app-classification-component',\n  templateUrl: './classification-component.component.html',\n  styleUrls: ['./classification-component.component.css']\n})\nexport class ClassificationComponentComponent implements OnInit{\n  @Input() classification:EventEmitter = new EventEmitter();\n  \n  \n  constructor(public searchFacade:SearchFacadeService){\n    \n  }\n  ngOnInit(){\n    this.classification.pipe(\n      debounceTime(500),\n      switchMap((x:string)=> this.searchFacade.getClassification(x)\n      )\n    ).subscribe();\n  }\n  onSegment(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name, type:ClassType.Segment});\n  }\n  onGenre(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name,type:ClassType.Genre});\n  }\n  onSubGenre(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name,type:ClassType.Subgenre});\n  }\n  onAddClassification(ie:IdClassType){\n    //code here\n    this.searchFacade.addClassification(ie);\n  }\n  onRemoveClassfication(ie:IdClassType){\n    console.log(\"REMOE INGHS\");\n    this.searchFacade.removeClassification(ie);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    {{c.name}}\n    {{c.name}}\n    {{c.name}}\n\n\n\n    {{c.name}}\n\n    \n\n    \n                \n                    ./classification-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{c.name}}    {{c.name}}    {{c.name}}    {{c.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClassificationComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationInterface.html":{"url":"interfaces/ClassificationInterface.html","title":"interface - ClassificationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            segment\n                                        \n                                \n                                \n                                        \n                                            subGenre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segment:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subGenre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateGroupFacade.html":{"url":"injectables/CreateGroupFacade.html","title":"injectable - CreateGroupFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateGroupFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/CreateGroupFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                newGroupForm\n                            \n                            \n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroup\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, formBuilder: FormBuilder, grpSvc: GroupService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/CreateGroupFacade.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n            \n                \nupdateForm(evt: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newGroupForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n\t\tname:['', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['', Validators.required],\n\t\t\tdetails:new FormControl(\"\"),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { WatchlistService } from \"../network/firebase/firestore/watchlist.service\"\n\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { EventInterface } from \"../interfaces/event-interface\"\nimport { BehaviorSubject } from 'rxjs';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateGroupFacade {\n\n  \tcurrentUser?: UserInterface;\n    watchlist$: BehaviorSubject = new BehaviorSubject([]);\n\tnewGroupForm = this.formBuilder.group({\n\t\tname:['', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['', Validators.required],\n\t\t\tdetails:new FormControl(\"\"),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t});\n\n    constructor(\n        private authSvc: AuthenticationService,\n\t\tprivate formBuilder: FormBuilder,\n        private grpSvc: GroupService,\n        private watchlistSvc: WatchlistService\n    ) {\n\n    this.authSvc.getCurrentUser().then(user=>{\n\t\tthis.currentUser = user;\n\t\tthis.watchlistSvc.getWatchlist(user).subscribe(watchlist=>{\n\t\t\tthis.watchlist$.next(watchlist);\n\t\t})\n    });\n  }\n\n\tupdateForm(evt:EventInterface){\n\t\tvar n:any = structuredClone(evt);\n\n\t\tif(evt.startDate) n.startDate = evt.startDate.toISOString().slice(0,-8);\n\t\tif(evt.endDate) n.startDate = evt.endDate.toISOString().slice(0,-8);\n\t\t\n\t\tthis.newGroupForm.patchValue({\n\t\t\tevent:n\n\t\t});\n\t}\n\n  \tcreateGroup(): Promise{\n\t\treturn new Promise((res,rej)=>{\n\t\t\tvar grp:any = this.newGroupForm.value;\n\t\t\tgrp.event.startDate = new Date(grp.event.startDate);\n\t\t\tgrp.event.endDate = new Date(grp.event.endDate);\n\t\t\tif(grp.event.startDate>=grp.event.endDate)\n\t\t\t\treturn rej(new Error(\"group-date-incompatible\"));\n\t\t\tif(this.currentUser) {\n\t\t\t\tthis.grpSvc.createGroup(grp.name, grp.event as EventInterface, this.currentUser).then(_=>{\n\t\t\t\t\treturn res(); // Group creation success;\n\t\t\t\t}).catch(err=>{\n\t\t\t\t\tif (err===\"group-name-taken\"){\n\t\t\t\t\t\treturn rej(new Error(\"group-name-taken\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\treturn rej(new Error(\"user-not-signed-in\"));\n\t\t\t}\n\t\t});\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventClass.html":{"url":"classes/EventClass.html","title":"class - EventClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                    Optional\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                images\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEquals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: EventInterface)\n                    \n                \n                        \n                            \n                                Defined in src/app/interfaces/event-interface.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        EventInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isEquals\n                        \n                    \n                \n            \n            \n                \nisEquals(other: EventClass)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interfaces/event-interface.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            EventClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\nexport class EventClass {\n    id: string=\"\";\n    name:string=\"\";\n    location:string[]=[];\n    images:string[]=[];\n    details:string=\"\";\n    startDate?:Date;\n    endDate?:Date;\n    constructor(e:EventInterface){\n        this.id = e.id;\n        this.name = e.id;\n        this.location = e.location;\n        this.images = e.images;\n        this.details = e.details;\n        this.startDate = e?.startDate;\n        this.endDate = e?.endDate;\n    }\n    isEquals(other:EventClass):boolean{\n        return other.id == this.id;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventComponentComponent.html":{"url":"components/EventComponentComponent.html","title":"component - EventComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/event-component/event-component.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-component\n            \n\n\n\n            \n                styleUrls\n                ./event-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                removeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                inWatchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/event-component/event-component.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inWatchlist\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEvent\n                        \n                    \n                \n            \n            \n                \naddEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEvent\n                        \n                    \n                \n            \n            \n                \nremoveEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/event-component/event-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { EventInterface } from '../../interfaces/event-interface';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\nimport { WatchlistService } from 'src/app/network/firebase/firestore/watchlist.service';\nimport { SearchFacadeService } from 'src/app/facade/search-facade.service';\n\n@Component({\n  selector: 'app-event-component',\n  templateUrl: './event-component.component.html',\n  styleUrls: ['./event-component.component.css']\n})\nexport class EventComponentComponent {\n  @Input() inWatchlist!:boolean;\n  @Input() event!:EventInterface;\n  constructor(\n    public searchFacade:SearchFacadeService\n  ){}\n  \n  removeEvent(event:EventInterface){\n    this.searchFacade.removeFromWatchList(event);\n  }\n\n  addEvent(event:EventInterface){\n    this.searchFacade.addToWatchList(event);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            \n                \n                \n            \n        \n          \n                          \n    \n    \n      {{event.name}}\n      Location: {{event.location}}\n      {{event.details}}\n      \n      {{event.startDate | date:'medium'}} - {{event.endDate | date:'medium'}}\n      Add to watchlist\n    \n        Remove from watchlist\n      \n      \n  \n    \n\n    \n                \n                    ./event-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      {{event.name}}      Location: {{event.location}}      {{event.details}}            {{event.startDate | date:\\'medium\\'}} - {{event.endDate | date:\\'medium\\'}}      Add to watchlist            Remove from watchlist              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventInterface.html":{"url":"interfaces/EventInterface.html","title":"interface - EventInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            details\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\nexport class EventClass {\n    id: string=\"\";\n    name:string=\"\";\n    location:string[]=[];\n    images:string[]=[];\n    details:string=\"\";\n    startDate?:Date;\n    endDate?:Date;\n    constructor(e:EventInterface){\n        this.id = e.id;\n        this.name = e.id;\n        this.location = e.location;\n        this.images = e.images;\n        this.details = e.details;\n        this.startDate = e?.startDate;\n        this.endDate = e?.endDate;\n    }\n    isEquals(other:EventClass):boolean{\n        return other.id == this.id;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventPageInterface.html":{"url":"interfaces/EventPageInterface.html","title":"interface - EventPageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventPageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/eventpage-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            events\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events:         EventInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         PageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { PageInterface } from \"./page-interface\";\n\nexport interface EventPageInterface {\n    page:PageInterface,\n    events:EventInterface[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenreInterface.html":{"url":"interfaces/GenreInterface.html","title":"interface - GenreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GenreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            subgenres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        subgenres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subgenres:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCreateComponent.html":{"url":"components/GroupCreateComponent.html","title":"component - GroupCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-create/group-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-create\n            \n\n\n\n            \n                styleUrls\n                ./group-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeResult\n                            \n                            \n                                    \n                                    Private\n                                content\n                            \n                            \n                                    Public\n                                grp\n                            \n                            \n                                    \n                                    Private\n                                navStuff\n                            \n                            \n                                    Optional\n                                selectedEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                em\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal, grp: CreateGroupFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-create/group-create.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        CreateGroupFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        em\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-create/group-create.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModal | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateGroupFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        navStuff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbNav | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgbNav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { CreateGroupFacade } from 'src/app/facade/CreateGroupFacade';\n\n\n@Component({\n  selector: 'app-group-create',\n  templateUrl: './group-create.component.html',\n  styleUrls: ['./group-create.component.css']\n})\nexport class GroupCreateComponent implements OnInit{\n\t@ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n\t@ViewChild('content') private content:NgbModal | undefined; \n\t\tcloseResult = '';\n\t@Input() em!:EventEmitter;\n\n\n\tselectedEvent?:EventInterface;\n\t\n\tconstructor(\n\t\tprivate modalService:NgbModal,\n\t\tpublic grp: CreateGroupFacade\n\t){}\n\t\n\tngOnInit(){\n\t\tthis.em.subscribe(()=>this.open());\n\t}\n\n\tcreateGroup(){\n\t\tthis.grp.createGroup().then(_=>{\n\t\t\tconsole.log(\"group create success\");\n\t\t}).catch(err=>{\n\t\t\tif (err.message === \"user-not-signed-in\")\n\t\t\t\tconsole.log(\"user not signed in\");\n\t\t\telse if (err.message === \"group-name-taken\")\n\t\t\t\tconsole.log(\"group name taken\");\n\t\t\telse if (err.message === \"group-date-incompatible\")\n\t\t\t\tconsole.log(\"group date invalid\");\n\t\t\telse\n\t\t\t\tconsole.log(err);\n\t\t})\n\t}\n\n\n\topen() {\n\t\tthis.modalService.open(this.content,{centered:true, fullscreen:true});\n\t}\n\n\tclose(){\n\t\tthis.modalService.dismissAll();\n\t}\n\t\n\t\n}\n\n    \n\n    \n        \n\t\n\t\tNew Group\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t  Group Name\n\t\t\t  \n\t\t\t\t\n\t\t\t  \n\t\t\t\n\t\t\t\n\t\t\t\tChooose Event\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{evt.name}}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t  \n\t\t\t  \n\t\t\t\n\t\t\t\tEvent Details\n\t\t\t\t\n\t\t\t\t\tEvent Name\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEvent details\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tStart Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEnd Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\n\t\t  \n\t\n\t\n\t\tSave\n\t\n\n\n\n\n    \n\n    \n                \n                    ./group-create.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tNew Group\t\t\t\t\t\t\t\t\t\t\t\t  Group Name\t\t\t  \t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\tChooose Event\t\t\t\t\t\t\t\t\t\t\t\t\t{{evt.name}}\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t  \t\t\t\t\t\t\tEvent Details\t\t\t\t\t\t\t\t\tEvent Name\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEvent details\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tStart Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEnd Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t\t  \t\t\t\tSave\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupDetailComponent.html":{"url":"components/GroupDetailComponent.html","title":"component - GroupDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-detail/group-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-detail\n            \n\n\n\n            \n                styleUrls\n                ./group-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                grp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyInviteLink\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grp: ViewGroupFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        ViewGroupFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-detail/group-detail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        copyInviteLink\n                        \n                    \n                \n            \n            \n                \ncopyInviteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewGroupFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\nimport { ViewGroupFacade } from 'src/app/facade/ViewGroupFacade'\n\n\n@Component({\n  selector: 'app-group-detail',\n  templateUrl: './group-detail.component.html',\n  styleUrls: ['./group-detail.component.css']\n})\nexport class GroupDetailComponent implements OnInit {\n  @Input() group!:GroupInterface;\n\n  constructor(\n    public grp: ViewGroupFacade\n  ){}\n\n  ngOnInit(){//given the events of that group\n    this.grp.init(this.group);\n  }\n\n  deleteGroup(){\n    this.grp.deleteGroup();\n  }\n  kickUser(user:UserInterface){\n    this.grp.kickUser(user).then(_=>{\n      console.log(\"group kick success\")\n    })\n  }\n  copyInviteLink() {\n    this.grp.copyInviteLink();\n  }\n  joinGroup(){\n    this.grp.joinGroup(this.grp.group$.value!.id).then(_=>{\n      console.log(\"group join success\");\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n    {{grp.group$.value?.name}}\n\n\n    {{grp.group$.value?.event?.name}}\n\n\n    {{grp.group$.value?.event?.startDate}} - {{grp.group$.value?.event?.endDate}}\n\n\nInvite Link\n\n\n    \n        \n            \n                \n                    \n                        Username\n                        Kick\n                    \n                \n                \n                    \n                        {{ m.name }} \n                        Kick\n                          \n                \n            \n        \n        \n            Delete Group\n        \n    \n\n\n    \n\n\n\n    \n        \n            \n                Username\n                Event Detail\n                Start Time\n                End Time\n            \n        \n        \n           \n                {{e.user.name}}\n                {{e.detail}}\n                {{e.start}}\n                {{e.end}}     \n           \n           \n        \n    \n\n\n\n    JOIN GROUP\n\n\n\n    \n\n    \n                \n                    ./group-detail.component.css\n                \n                .invite{\n    cursor: pointer;\n    user-select: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{grp.group$.value?.name}}    {{grp.group$.value?.event?.name}}    {{grp.group$.value?.event?.startDate}} - {{grp.group$.value?.event?.endDate}}Invite Link                                                                                    Username                        Kick                                                                                                {{ m.name }}                         Kick                                                                                  Delete Group                                                        Username                Event Detail                Start Time                End Time                                                       {{e.user.name}}                {{e.detail}}                {{e.start}}                {{e.end}}                                           JOIN GROUP'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/group-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            allUUID\n                                        \n                                \n                                \n                                        \n                                            booked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allUUID:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        booked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        booked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         EventInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         UserInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { UserInterface } from \"./user-interface\";\n\nexport interface GroupInterface {\n    id: string;\n    name:string;\n    event:EventInterface;\n    admin: UserInterface;\n    members:UserInterface[];\n    confirmed:string[];\n    booked: boolean;\n    allUUID: string[]; \n    date?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupListComponent.html":{"url":"components/GroupListComponent.html","title":"component - GroupListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-list/group-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-list\n            \n\n\n\n            \n                styleUrls\n                ./group-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groups\n                    \n                \n                \n                    \n                        Type :         GroupInterface[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-list/group-list.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-list/group-list.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Component({\n  selector: 'app-group-list',\n  templateUrl: './group-list.component.html',\n  styleUrls: ['./group-list.component.css']\n})\nexport class GroupListComponent {\n  @Input() groups!:GroupInterface[];\n  @Output() groupClicked = new EventEmitter();\n  onClick(group:GroupInterface){\n    this.groupClicked.emit(group);\n  }\n\n  ngOnInit(){\n    console.log(\"dasdas\")\n    console.log(this.groups);\n  }\n}\n\n    \n\n    \n        \n\n\n\t\n\t\t\n\n\t\t\tGroupName\n\t\t\tEventName\n\t\t\tmembers\n\t\t\n\t\n\t\n        \n\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{ g.name }}\n\t\t\t\t\n\t\t\t\t{{ g.event.name }}\n\t\t\t\t{{ g.members |groupmemberPipe}}\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./group-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\tGroupName\t\t\tEventName\t\t\tmembers\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t{{ g.name }}\t\t\t\t\t\t\t\t{{ g.event.name }}\t\t\t\t{{ g.members |groupmemberPipe}}\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupPageComponent.html":{"url":"components/GroupPageComponent.html","title":"component - GroupPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-page\n            \n\n\n\n            \n                styleUrls\n                ./group-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chosen\n                            \n                            \n                                    \n                                    Private\n                                content\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                groupID\n                            \n                            \n                                    Public\n                                grp\n                            \n                            \n                                    \n                                    Private\n                                navStuff\n                            \n                            \n                                openModalEmitter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                choseGroup\n                            \n                            \n                                convertToListofStrings\n                            \n                            \n                                joinGroup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grp: ViewGroupFacade, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-page.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        ViewGroupFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        choseGroup\n                        \n                    \n                \n            \n            \n                \nchoseGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToListofStrings\n                        \n                    \n                \n            \n            \n                \nconvertToListofStrings(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chosen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModal | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewGroupFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        navStuff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbNav | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgbNav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, OnInit, ViewChild } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { ViewGroupFacade } from '../facade/ViewGroupFacade';\n\n@Component({\n  selector: 'app-group-page',\n  templateUrl: './group-page.component.html',\n  styleUrls: ['./group-page.component.css']\n})\n\nexport class GroupPageComponent implements OnInit, AfterViewInit{\n  \n  @ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n  @ViewChild('content') private content:NgbModal | undefined; \n  openModalEmitter = new EventEmitter();\n  chosen:GroupInterface | undefined;\n  currentUser?:UserInterface;\n  groupID:string =\"\";\n\n\n  constructor(\n    public grp: ViewGroupFacade,\n    private route:ActivatedRoute, \n  ){}\n\n  ngOnInit(): void {\n\n  }\n  \n  joinGroup(){\n    this.grp.joinGroup(this.groupID);\n  }\n  ngAfterViewInit(): void {\n    this.route.paramMap.subscribe(params=>{\n      var id:string|null;\n      id =  params.get('id');\n      //should get the info here from firebase\n      // if(id) this.grp.get.getGroupById(id).subscribe({next:(x)=>{\n      //   this.chosen = x;\n      //   this.navStuff?.select(2);\n      // },\n      // error:(e)=>{\n      //   console.log(\"ERROR HERE:\", e);\n      // }});\n\n      if (id){\n        this.grp.getGrpById(id).subscribe({\n          next: (group) => this.choseGroup(group),\n          error: (err) => console.log(err)\n        })\n      }\n    });\n\n\n  }\n  choseGroup(group:GroupInterface){\n    this.chosen = group;\n    this.navStuff?.select(2);\n  }\n\n  convertToListofStrings(members:UserInterface[]){\n    return members.map((x)=>x.name);\n  }\n  \n  \n}\n\n    \n\n    \n        \n\n\n  \n    Groups\n    \n      \n        \n          \n        \n        \n            JOIN\n        \n      \n      \n        Create Group\n      \n      Admin\n      \n      Member\n      \n    \n  \n  \n    {{chosen.name}}\n    \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./group-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Groups                                                        JOIN                            Create Group            Admin            Member                  {{chosen.name}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/group.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGroupBooking\n                            \n                            \n                                createGroup\n                            \n                            \n                                    Private\n                                dbToGroupInterface\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                getGroupById\n                            \n                            \n                                getGroups\n                            \n                            \n                                joinGroup\n                            \n                            \n                                removeFromGroup\n                            \n                            \n                                toggleGroupConfirmation\n                            \n                            \n                                updateGroupDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore, noti: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/group.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noti\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupBooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupBooking(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(name: string, event: EventInterface, admin: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                admin\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToGroupInterface\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToGroupInterface(dbGroup: DocumentData | )\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbGroup\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupById\n                        \n                    \n                \n            \n            \n                \ngetGroupById(groupId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(groupId: string, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromGroup\n                        \n                    \n                \n            \n            \n                \nremoveFromGroup(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleGroupConfirmation\n                        \n                    \n                \n            \n            \n                \ntoggleGroupConfirmation(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroupDate\n                        \n                    \n                \n            \n            \n                \nupdateGroupDate(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, deleteDoc, FirestoreError} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  constructor(private fs: Firestore, private noti: NotificationService) { }\n\n  private dbToGroupInterface(dbGroup: DocumentData | DocumentData & {id: string;}): GroupInterface\n  {\n    let grp: GroupInterface = {\n      id: dbGroup[\"id\"],\n      name: dbGroup[\"name\"],\n      event: {\n        id: dbGroup[\"event\"].id,\n        name: dbGroup[\"event\"].name,\n        startDate: dbGroup[\"event\"].start.toDate(),\n        endDate: dbGroup[\"event\"].end.toDate(),\n        details: dbGroup[\"details\"],\n        images: dbGroup[\"imageUrls\"],\n        location: dbGroup[\"locations\"]\n      },\n      admin: dbGroup[\"admin\"],\n      members: dbGroup[\"members\"],\n      confirmed: dbGroup[\"confirmed\"],\n      booked: dbGroup[\"booked\"],\n      allUUID: dbGroup[\"allUUID\"]\n    }\n    if (dbGroup[\"date\"])\n      grp.date = dbGroup[\"date\"].toDate();\n\n    return grp;\n  }\n\n  createGroup(name: string, event: EventInterface, admin: UserInterface): Promise\n  {\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n\n    let groupDoc = {\n      name: name,\n      event: {\n        id: event.id,\n        name: event.name,\n        start: event.startDate,\n        end: event.endDate,\n        details: event.details,\n        imageUrls: event.images,\n        locations: event.location\n      },\n      admin: admin,\n      members: [],\n      confirmed: [],\n      booked: false,\n      allUUID: [admin.id]\n    }\n\n    return new Promise((res,rej)=>{\n      addDoc(grpCollection, groupDoc).then((docRef: DocumentReference)=>{\n        \n        res();\n      }).catch(err =>{\n        if (err.code === \"permission-denied\")\n          rej(\"group-name-taken\");\n      })\n    })\n  }\n\n  getGroups(user: UserInterface): Observable\n  {\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n    let q = query(grpCollection, where(\"allUUID\",\"array-contains\",user.id));\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: GroupInterface[] = [];\n          data.forEach(grp=>{\n            result.push(this.dbToGroupInterface(grp));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n\n\n  getGroupById(groupId: string): Observable\n  {\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n\n    return new Observable(obs=>{\n      docData(grpDoc, {idField: \"id\"}).subscribe(data=>{\n        if (data===undefined){\n          obs.error(\"Group not found\");\n          return;\n        } \n        obs.next(this.dbToGroupInterface(data));\n      });\n    });\n\n  }\n\n  // Currently does not check if user is already in group\n  joinGroup(groupId: string, user:UserInterface): Promise\n  {\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n    let update = {\n      members: arrayUnion(user),\n      allUUID: arrayUnion(user.id),\n    }\n    \n    return new Promise(res=>{\n      updateDoc(grpDoc, update).then(_=>{\n        res();\n      })\n    })\n  }\n\n  removeFromGroup(group: GroupInterface, user: UserInterface): Promise\n  {\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    \n    // Protection against display name change\n    let toRemove: UserInterface|undefined = undefined;\n\n    group.members.forEach(member=>{\n      if (member.id === user.id){\n        toRemove = member;\n        return;\n      }\n    })\n\n\n    return new Promise(res=>{\n      // Check if user is a member in group\n      if (toRemove === undefined) res();\n      \n      let update = {\n        members: arrayRemove(toRemove),\n        allUUID: arrayRemove(user.id)\n      }\n      updateDoc(grpDoc, update).then(_=>{\n        res();\n      })\n    })\n  }\n\n  deleteGroup(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    return new Promise(res=>{\n      deleteDoc(grpDoc).then(_=>{\n        res();\n      })\n    });\n  }\n\n  updateGroupDate(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    group.date = group.event.startDate;\n    let update = {date: group.date};\n\n    return new Promise(res=>{\n      updateDoc(grpDoc, update).then(_=>{\n        this.noti.sendConfirmationRequest(group).then(_=>{\n          res();\n        });\n      });\n    });\n  }\n\n  toggleGroupConfirmation(group: GroupInterface, user: UserInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {confirmed: arrayUnion(user.id)};\n\n    if (group.confirmed.includes(user.id))\n      update.confirmed = arrayRemove(user.id);\n\n    return new Promise(res=>{\n        updateDoc(grpDoc, update).then(_=>{\n          res();\n        })\n      });\n  }\n\n  confirmGroupBooking(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {booked: true};\n\n    return new Promise(res=>{\n\n      let updatePromise = updateDoc(grpDoc, update);\n\n      // Do both at same time\n      // let notiPromise = this.noti.sendConfirmation(group);\n      // Promise.all([updatePromise, notiPromise]).then(_=>{\n      //   res();\n      // })\n\n      // Ensure database is properly updated, then send notification\n      updatePromise.then(_=>{\n        this.noti.sendConfirmation(group).then(_=>{\n          res();\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupmemberPipePipe.html":{"url":"pipes/GroupmemberPipePipe.html","title":"pipe - GroupmemberPipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupmemberPipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/groupmember-pipe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        groupmemberPipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/groupmember-pipe.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     String[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Pipe({\n  name: 'groupmemberPipe'\n})\nexport class GroupmemberPipePipe implements PipeTransform {\n\n  transform(members:UserInterface[]): String[] {\n    return members.map((x)=>x.name);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GrouppipePipe.html":{"url":"pipes/GrouppipePipe.html","title":"pipe - GrouppipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GrouppipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/grouppipe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        grouppipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: GroupInterface[], user: UserInterface, isAdmin: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/grouppipe.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            GroupInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isAdmin\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Pipe({\n  name: 'grouppipe'\n})\nexport class GrouppipePipe implements PipeTransform {\n  transform(value:GroupInterface[], user:UserInterface, isAdmin:boolean): GroupInterface[]{\n    if(isAdmin )return value.filter((e:GroupInterface)=>e.admin.id==user.id);\n    return  value.filter((e:GroupInterface)=>e.admin.id!=user.id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdClassType.html":{"url":"interfaces/IdClassType.html","title":"interface - IdClassType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdClassType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ClassType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClassType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdName.html":{"url":"interfaces/IdName.html","title":"interface - IdName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/InwatchlistPipe.html":{"url":"pipes/InwatchlistPipe.html","title":"pipe - InwatchlistPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  InwatchlistPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search-page/list-events/inwatchlist.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        inwatchlist\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(e: EventInterface, watchlist: EventInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/list-events/inwatchlist.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                watchlist\n                                            \n                                                            EventInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\n\n@Pipe({\n  name: 'inwatchlist'\n})\nexport class InwatchlistPipe implements PipeTransform {\n\n  transform(e: EventInterface, watchlist:EventInterface[]): boolean {\n    for( var i of watchlist){\n      if(i.id == e.id) return true;\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListEventsComponent.html":{"url":"components/ListEventsComponent.html","title":"component - ListEventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListEventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/list-events/list-events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-events\n            \n\n\n\n            \n                styleUrls\n                ./list-events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        watchlist\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component ,Input } from '@angular/core';\nimport {EventInterface} from '../../interfaces/event-interface';\n@Component({\n  selector: 'app-list-events',\n  templateUrl: './list-events.component.html',\n  styleUrls: ['./list-events.component.css']\n})\nexport class ListEventsComponent {\n  @Input() events:EventInterface[]=[];\n  @Input() watchlist:EventInterface[] = [];\n  \n}\n\n    \n\n    \n        \n      \n          \n                  \n                    \n          \n      \n\n    \n\n    \n                \n                    ./list-events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListEventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n\n\n            \n                styleUrls\n                ./login-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/login-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        googleSignIn\n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  constructor(\n    private auth: AuthenticationService,\n    private router:Router,\n    private route:ActivatedRoute\n  ) {}\n  \n  googleSignIn(){\n    this.auth.loginGoogle().then(_=>{\n      this.router.navigateByUrl( this.route.snapshot.queryParams['returnUrl'] || '/');\n    })\n  }\n\n  logOut(){\n    this.auth.logOut().then(_=>{\n      console.log(\"logout\");\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    Sign in with Google\n\n    \n\n    \n                \n                    ./login-page.component.css\n                \n                .bgImg, .bgImgStrip{\n    height:80vh;\n    position: absolute;\n    top:0;\n}\n\n.bgImg {\n    left:50%;\n    transform: translate(-50%);\n    z-index: -1;\n}\n\n.bgImgStrip {\n    z-index: -2;\n    width: 50vw;\n}\n\n.bgLeft {\n    left:0;\n}\n\n.bgRight {\n    right:0;\n}\n\n.loginBtn{\n    background-color: #2A2568;\n    color: white;\n    position: absolute;\n    padding: 1em;\n    border-radius: 2px;\n    top: 80vh;\n    left: 50%;\n    transform: translate(-50%);\n    cursor: pointer;\n    user-select: none;\n}\n\n.loginBtn:active {\n    top: calc(80vh + 5px);\n    left: calc(50% + 5px);\n}\n\n.googleImg {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Sign in with Google'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/navigation/navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/navigation/navigation.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/navigation/navigation.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n  constructor(private authApi:AuthenticationService,private router:Router){\n\n  }\n  logout(){\n    this.authApi.logOut();\n    this.router.navigate([\"login\"]);\n  }\n}\n\n    \n\n    \n        \n    Ticket Buddy\n    \n      \n    \n  \n    \n      \n        \n          Search (current)\n        \n        \n          Groups\n        \n        \n            Personal Calendar\n        \n        \n            Watchlist\n        \n        \n        \n      \n      Logout\n    \n  \n    \n\n    \n                \n                    ./navigation.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Ticket Buddy                                            Search (current)                          Groups                            Personal Calendar                            Watchlist                                    Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendConfirmation\n                            \n                            \n                                sendConfirmationRequest\n                            \n                            \n                                    Private\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/notification.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendConfirmation\n                        \n                    \n                \n            \n            \n                \nsendConfirmation(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendConfirmationRequest\n                        \n                    \n                \n            \n            \n                \nsendConfirmationRequest(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(to: string[], message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference} from '@angular/fire/firestore';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private fs: Firestore) { }\n\n\n  private sendEmail(to: string[], message:any): Promise{\n    let mailCol: CollectionReference = collection(this.fs, \"mail\");\n    let mailDoc = {\n      to: to,\n      message: message\n    }\n    return new Promise(res=>{\n      if (to.length{\n        res();\n      });\n    })\n  }\n\n  sendConfirmationRequest(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      emailList.push(member.email);\n    });\n\n    let content = `\n    Date has been decided for ${group.event.name||'the concert'}!\n    Good news! ${group.name} has decided ${group.date?.toDateString()} for ${group.event.name||'the concert'}.\n    Please click here to confirm your availability before ${group.admin.name} books the tickets!\n    Ticket Buddy\n    `\n\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Date Confirmation`, html: content})\n  }\n\n  sendConfirmation(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      if (group.confirmed.includes(member.id))\n        emailList.push(member.email);\n    });\n\n    let content = `\n    Date confirmed for ${group.event.name||'the concert'}!\n    Congratulations! ${group.name} has confirmed ${group.date?.toDateString()} for ${group.event.name||'the concert'}.\n    Contact ${group.admin.name} for details regarding the booking!\n    Ticket Buddy\n    `\n\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Date Confirmed!`, html: content})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageInterface.html":{"url":"interfaces/PageInterface.html","title":"interface - PageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/page-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            totalElements\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PageInterface {\n    size:number;\n    totalElements:number;\n    number:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalCalenderPageComponent.html":{"url":"components/PersonalCalenderPageComponent.html","title":"component - PersonalCalenderPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonalCalenderPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/personal-calender-page/personal-calender-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personal-calender-page\n            \n\n\n\n            \n                styleUrls\n                ./personal-calender-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./personal-calender-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cal\n                            \n                            \n                                calendarOnDisplay\n                            \n                            \n                                newEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                dateClicked\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                isBetween\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cal: CalendarFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cal\n                                                  \n                                                        \n                                                                        CalendarFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateClicked\n                        \n                    \n                \n            \n            \n                \ndateClicked(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBetween\n                        \n                    \n                \n            \n            \n                \nisBetween(a: number, b: number, c: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                c\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalendarFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarOnDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewCalendarEvent\n\n                    \n                \n                \n                    \n                        Default value : new NewCalendarEvent()\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\n\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarFacade } from '../facade/PersonalCalendarFacade';\nimport { NewCalendarEvent } from '../.Class/NewCalendarEvent';\n\n\n@Component({\n  selector: 'app-personal-calender-page',\n  templateUrl: './personal-calender-page.component.html',\n  styleUrls: ['./personal-calender-page.component.css'],\n\n})\nexport class PersonalCalenderPageComponent implements OnInit{\n\n  calendarOnDisplay: CalanderEvent[] = [];\n\n  newEvent: NewCalendarEvent = new NewCalendarEvent();\n  \n  constructor(\n    public cal: CalendarFacade\n  ){}\n  \n  ngOnInit(): void {\n  \n  }\n  \n  isBetween(a:number, b:number, c:number):boolean{\n\t\treturn a{\n      var start:NgbDate = new NgbDate(x.start.getFullYear() , x.start.getMonth()+1,x.start.getDate());\n      var end:NgbDate = new NgbDate(x.end.getFullYear() , x.end.getMonth()+1,x.end.getDate());\n      return this.isBetween(start.year, date.year, end.year) && \n        this.isBetween(start.month, date.month, end.month) && \n        this.isBetween(start.day, date.day, end.day)\n    });\n  }\n\n  deleteEvent(e: CalanderEvent){\n    this.cal.deleteEvent(e).then(_=>{\n      console.log(\"delete event success\");\n    })\n  }\n\n  createEvent(){\n    this.cal.createEvent(this.newEvent).then(_=>{\n      console.log(\"create event successs\");\n    }).catch(err=>{\n      if (err.message === \"Invalid-Parameter\"){\n        // TODO: Handle Error\n        console.log(\"invalid parameter\")\n      }\n    })\n  }\n}\n\n  \n\n    \n\n    \n        \n\n    \n        \n    \n\n\n    \n        \n            \n                Event Detail\n                Start Time\n                End Time\n                Action\n                Delete\n            \n        \n        \n           \n                {{e.detail}}\n                {{e.start}}\n                {{e.end}}\n                Update\n                Delete\n                \n           \n           \n            \n            \n            \n            Add\n            \n           \n        \n    \n\n    \n\n    \n                \n                    ./personal-calender-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Event Detail                Start Time                End Time                Action                Delete                                                       {{e.detail}}                {{e.start}}                {{e.end}}                Update                Delete                                                                                      Add                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalCalenderPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFacadeService.html":{"url":"injectables/SearchFacadeService.html","title":"injectable - SearchFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/search-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cat$\n                            \n                            \n                                    Public\n                                cid$\n                            \n                            \n                                    Public\n                                error$\n                            \n                            \n                                    Public\n                                eventInput$\n                            \n                            \n                                    Public\n                                loadedEvents$\n                            \n                            \n                                    Public\n                                pageInfo$\n                            \n                            \n                                    Private\n                                query\n                            \n                            \n                                    Public\n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClassification\n                            \n                            \n                                addToWatchList\n                            \n                            \n                                changePage\n                            \n                            \n                                getClassification\n                            \n                            \n                                getWatchList\n                            \n                            \n                                removeClassification\n                            \n                            \n                                removeFromWatchList\n                            \n                            \n                                searchEvent\n                            \n                            \n                                updateEventInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, tmApi: TicketmasterService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/search-facade.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tmApi\n                                                  \n                                                        \n                                                                        TicketmasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClassification\n                        \n                    \n                \n            \n            \n                \naddClassification(e: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToWatchList\n                        \n                    \n                \n            \n            \n                \naddToWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchList\n                        \n                    \n                \n            \n            \n                \ngetWatchList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassification\n                        \n                    \n                \n            \n            \n                \nremoveClassification(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromWatchList\n                        \n                    \n                \n            \n            \n                \nremoveFromWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEventInput\n                        \n                    \n                \n            \n            \n                \nupdateEventInput(s: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                s\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cat$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({segment:[], genre:[], subGenre:[]})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cid$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventInput$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedEvents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({size:20, totalElements:0, number:0})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { EventInterface } from '../interfaces/event-interface';\n\nimport { ClassType, ClassificationInterface, IdClassType } from '../interfaces/clasification-interface';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { TicketmasterService } from '../network/ticketmaster/ticketmaster.service';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\nimport { PageInterface } from '../interfaces/page-interface';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { BehaviorSubject, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchFacadeService {\n  private query:any = {};\n  \n  public eventInput$:BehaviorSubject = new BehaviorSubject(\"\");\n  public loadedEvents$:BehaviorSubject = new BehaviorSubject([]);\n  public watchlist$:BehaviorSubject = new BehaviorSubject([]);\n  public cid$:BehaviorSubject = new BehaviorSubject([]); \n  public error$:EventEmitter = new EventEmitter();\n  public cat$:BehaviorSubject = new BehaviorSubject({segment:[], genre:[], subGenre:[]});\n  public pageInfo$:BehaviorSubject = new BehaviorSubject({size:20, totalElements:0, number:0});\n  \n  constructor( private authApi:AuthenticationService,\n    private tmApi: TicketmasterService,\n    private watchlistSvc: WatchlistService) {\n  }\n  updateEventInput(s:string){\n    this.eventInput$.next(s);\n  }\n  getWatchList(){\n    this.authApi.getCurrentUser().then((x:UserInterface)=>{\n      this.watchlistSvc.getWatchlist(x).subscribe(\n        (n)=> this.watchlist$.next(n)\n      )\n    });\n  }\n  getClassification(kw:string){\n    return this.tmApi.getClassification(kw).pipe(\n      tap((x:ClassificationInterface)=>{\n        this.cat$.next(x);\n      })\n    );\n  }\n  addClassification(e:IdClassType){\n    var n:IdClassType[] = this.cid$.value;\n    for(var i of n){\n      if(i.id == e.id)return;\n    }\n    n.push(e);\n    this.cid$.next(n);\n  }\n  removeClassification(ie:IdClassType){\n    var n:IdClassType[] = this.cid$.value;\n    this.cid$.next(n.filter((c)=>c.id!=ie.id));\n      \n  }\n  searchEvent(){//this one got the queries\n    this.query.segmentId = this.cid$.value.filter((c)=>c.type==ClassType.Segment).map((x)=>x.id);\n    this.query.genreId = this.cid$.value.filter((c)=>c.type==ClassType.Genre).map((x)=>x.id);\n    this.query.subGenreId = this.cid$.value.filter((c)=>c.type==ClassType.Subgenre).map((x)=>x.id);\n    this.query.keyword = this.eventInput$.value;\n    this.query.page = 0;\n    \n    this.tmApi.getEventsQuery(this.query).subscribe((x)=>{\n      \n      var p:PageInterface = x.page;\n      p.number +=1;\n      this.pageInfo$.next(p);\n      this.loadedEvents$.next(x.events); \n      if(x.events.length == 0){\n        this.error$.emit(\"No events fit that query\");\n      }\n    });\n  }\n  changePage(pgNum:number){\n    this.query.page = pgNum-1;\n    this.tmApi.getEventsQuery(this.query).subscribe({\n      next:(n)=>{\n        var p:PageInterface = n.page;\n        p.number = pgNum;\n        this.pageInfo$.next(p);\n        this.loadedEvents$.next(n.events);   \n      }\n    });\n  }\n  removeFromWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.removeWatchlistEvent(u,event);\n    });\n  }\n  addToWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.addWatchlistEvent(u,event);\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchPageComponent.html":{"url":"components/SearchPageComponent.html","title":"component - SearchPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/search-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-page\n            \n\n\n\n            \n                styleUrls\n                ./search-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classificationEmitter\n                            \n                            \n                                classInput\n                            \n                            \n                                eventInput\n                            \n                            \n                                eventInputEmitter\n                            \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/search-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classificationEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventInputEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { SearchFacadeService } from '../facade/search-facade.service';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent {\n  classInput:string = \"\";\n  eventInput:string = \"\";\n  \n  classificationEmitter:EventEmitter = new EventEmitter();\n  eventInputEmitter:EventEmitter = new EventEmitter();\n  constructor(\n    public searchFacade:SearchFacadeService,\n    private toastr:ToastrService\n  ){\n\n  }\n  ngOnInit(){\n    \n    this.searchEvent();  \n    this.searchFacade.getWatchList();\n    this.searchFacade.error$.subscribe(\n      (n)=>{\n        this.toastr.error(\"No events fit this query\",\"Error\");\n      }\n    );\n  }\n  \n  changePage(pgNum:number){\n    this.searchFacade.changePage(pgNum);\n  }\n  searchEvent(){//this one got the queries\n    this.searchFacade.searchEvent();\n  }\n  \n\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    Search\n                \n                \n            \n        \n    \n\n\n\n\n\n\n   \n 0\">\n    \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./search-page.component.css\n                \n                /*search box css start here*/\n.search-sec{\n    padding: 2rem;\n}\n.search-slt{\n    display: block;\n    width: 100%;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    color: #55595c;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n.wrn-btn{\n    width: 100%;\n    font-size: 16px;\n    font-weight: 400;\n    text-transform: capitalize;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n@media (min-width: 992px){\n    .search-sec{\n        position: relative;\n        top: -114px;\n        background: rgba(26, 70, 104, 0.51);\n    }\n}\n\n@media (max-width: 992px){\n    .search-sec{\n        background: #1A4668;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                    Search                                                            0\">                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentInterface.html":{"url":"interfaces/SegmentInterface.html","title":"interface - SegmentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:         GenreInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GenreInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketmasterService.html":{"url":"injectables/TicketmasterService.html","title":"injectable - TicketmasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketmasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/ticketmaster/ticketmaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseurl\n                            \n                            \n                                header\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClassification\n                            \n                            \n                                getEvents\n                            \n                            \n                                getEventsQuery\n                            \n                            \n                                invalidDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, platformLocation: PlatformLocation, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEvents\n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventsQuery\n                        \n                    \n                \n            \n            \n                \ngetEventsQuery(query: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidDate\n                        \n                    \n                \n            \n            \n                \ninvalidDate(d: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { PlatformLocation } from '@angular/common';\n\nimport { ticketMasterApi } from 'src/environments/env-prod';\nimport { Observable, concatMap, filter, iif, map, mergeMap, of, take, throwError } from 'rxjs';\nimport { EventPageInterface } from 'src/app/interfaces/eventpage-interface';\nimport { ClassificationInterface } from 'src/app/interfaces/clasification-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketmasterService {\n  private baseurl:string;\n  constructor(private http: HttpClient,\n    private platformLocation: PlatformLocation,\n    private router: Router) {\n      this.baseurl = (this.platformLocation as any)._location.origin+\"/ticketmaster\";\n    }\n    \n    header = \n      new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n\n    getClassification(kw:string):Observable{\n      return this.http.get(this.baseurl+\"/\"+\"classifications.json\", {params:{apikey:ticketMasterApi, keyword:kw}}).pipe(\n        filter((x:any)=>{\n          return x.page.totalElements>0 && kw.length > 0;\n        }),\n        map((x:any)=>{\n          var cs:any[] = x._embedded.classifications;\n          var ans:ClassificationInterface = {segment:[], subGenre:[], genre:[]};//must\n          cs.forEach((a)=>{\n            if(!a?.segment?.id) return;\n            ans.segment.push({id:a.segment.id, name:a.segment.name});\n            a.segment._embedded.genres.forEach((g:any)=> {\n              if(!g?.id) return;\n              ans.genre.push({id:g.id, name:g.name});\n              g._embedded.subgenres.forEach((sg:any)=>{\n                if(!sg?.id) return;\n                ans.subGenre.push({id:sg.id, name:sg.name});\n              });\n            });\n          });\n          return ans;\n        })\n      );\n    }\n    getEvents():Observable{\n      var today  =new Date();\n      var str = today.toISOString();\n      str = str.slice(0, str.length-5).concat(\"Z\");\n      return this.http.get(this.baseurl+\"/events.json\", {params:{apikey:ticketMasterApi, startDateTime:str}}).pipe(\n        map((x:any)=>{\n          \n          var rtn:any = {page:undefined, events:undefined};\n          rtn.page = x.page;\n\n          x = x._embedded;\n          \n          rtn.events = x.events.map((e:any)=>{\n            var sd = new Date(e.dates?.start.dateTime);\n            var ed:Date = new Date(e.dates?.end);\n            \n            \n            return {\n              id:e.id, details:e.description, \n              images:e.images.map((img:any)=>img.url),\n              location:e._embedded?.venues.map((v:any)=>v.name), \n              name:e.name, \n              startDate: (!this.invalidDate(sd))? sd: undefined, \n              endDate:(!this.invalidDate(ed))? ed: undefined\n            };\n          });\n          return (rtn as EventPageInterface);\n        \n        }),\n        take(1)\n        \n        );\n    }\n    getEventsQuery(query:any):Observable{\n      query.apikey = ticketMasterApi;\n      console.log(query);\n      //.pipe(mergeMap(v => iif(() => v % 4 === 0, r$, x$)))\n      return this.http.get(this.baseurl+\"/events.json\", {params:query}).pipe(\n        map((x:any)=>{\n          //here check that the page.totalElements if ==0 throw error\n          var rtn:any = {page:undefined, events:undefined};\n          rtn.page = x.page;\n          if(rtn.page.totalElements==0){\n            return {page:rtn.page, events:[]}\n          }\n          x = x._embedded;\n        \n          rtn.events = x.events.map((e:any)=>{\n            var sd = new Date(e.dates?.start.dateTime);\n            var ed:Date = new Date(e.dates?.end);\n            return {\n              id:e.id, details:e.description, \n              images:e.images.map((img:any)=>img.url),\n              location:e._embedded?.venues.map((v:any)=>v.name), \n              name:e.name, \n              startDate: (!this.invalidDate(sd))? sd: undefined, \n              endDate:(!this.invalidDate(ed))? ed: undefined\n            };\n          });\n          var rtnn:EventPageInterface = rtn as EventPageInterface;\n          rtnn.page.totalElements = Math.min(20*20, rtnn.page.totalElements)\n          return rtnn;\n        }), \n        take(1))\n    }\n    invalidDate(d:Date){\n      return Number.isNaN(d.valueOf());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    readonly id: string;\n    readonly name: string;\n    readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewGroupFacade.html":{"url":"injectables/ViewGroupFacade.html","title":"injectable - ViewGroupFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViewGroupFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/ViewGroupFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminGroups$\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                dateColor$\n                            \n                            \n                                group$\n                            \n                            \n                                groupById$\n                            \n                            \n                                groupCalendar$\n                            \n                            \n                                memberGroups$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyInviteLink\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                getGrpById\n                            \n                            \n                                getStartDate\n                            \n                            \n                                init\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                setColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, calSvc: CalendarService, clipboard: Clipboard, grpSvc: GroupService, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/ViewGroupFacade.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipboard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        copyInviteLink\n                        \n                    \n                \n            \n            \n                \ncopyInviteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrpById\n                        \n                    \n                \n            \n            \n                \ngetGrpById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStartDate\n                        \n                    \n                \n            \n            \n                \ngetStartDate(d?: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NgbDate\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColor\n                        \n                    \n                \n            \n            \n                \nsetColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         CalanderColor\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupById$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupCalendar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { GroupInterface } from \"../interfaces/group-interface\"\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { PlatformLocation } from '@angular/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CalanderEvent } from \"../interfaces/calander-interface/CalanderEvent-interface\"\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewGroupFacade {\n\n  \tcurrentUser?: UserInterface;\n    group$: BehaviorSubject = new BehaviorSubject(undefined);\n    dateColor$: BehaviorSubject = new BehaviorSubject([]); //should be date range better // wtf does this mean\n    groupCalendar$: BehaviorSubject = new BehaviorSubject([]);\n    adminGroups$: BehaviorSubject = new BehaviorSubject([]);\n    memberGroups$: BehaviorSubject = new BehaviorSubject([]);\n    groupById$: BehaviorSubject = new BehaviorSubject(undefined);\n\n    constructor(\n        private authSvc:AuthenticationService, \n        private calSvc: CalendarService,\n        private clipboard:Clipboard,\n        private grpSvc: GroupService,\n        private platformLocation: PlatformLocation,\n    ) {\n\n    this.authSvc.getCurrentUser().then(user=>{\n\t\tthis.currentUser = user;\n\n        this.grpSvc.getGroups(user).subscribe(grps=>{\n            let adm: GroupInterface[] = [];\n            let nadm: GroupInterface[] = [];\n            grps.forEach(grp=>{\n                if (grp.admin.id === user.id)\n                    adm.push(grp);\n                else \n                    nadm.push(grp);\n            });\n            \n            this.adminGroups$.next(adm);\n            this.memberGroups$.next(nadm);\n        })\n    });\n  }\n\n    init(group: GroupInterface){\n\n        // Get latest group\n        this.grpSvc.getGroupById(group.id).subscribe(group=>{\n            this.group$.next(group);\n            // Get group calendar\n            this.calSvc.getGroupCalendar(group).subscribe(grpCal=>{\n                grpCal.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n                    if(a.start i.user.id))].length;\n        if (cmiCount==this.group$.value!.members.length)return CalanderColor.NotFreeAtAll\n        return CalanderColor.SomeFree\n        \n    }\n\n    copyInviteLink() {\n        var base_url = (this.platformLocation as any)._location.origin+\"/group\"+\"/\"+this.group$.value!.id;\n        this.clipboard.copy(base_url);\n    }\n\n    deleteGroup(): Promise {\n        return this.grpSvc.deleteGroup(this.group$.value!);\n    }\n\n    kickUser(user: UserInterface): Promise {\n        return this.grpSvc.removeFromGroup(this.group$.value!, user);\n    }\n\n    joinGroup(id: string): Promise {\n        return this.grpSvc.joinGroup(id, this.currentUser!);\n    }\n\n    getStartDate(d?: Date): NgbDate{\n        if (!d)\n            d = new Date();\n        return new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n    }\n\n    getGrpById(id: string): Observable{\n        let obs: Observable = this.grpSvc.getGroupById(id);\n        obs.subscribe(grp=>{\n            this.groupById$.next(grp);\n        });\n        return obs;\n    }\n\t\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WatchlistPageComponent.html":{"url":"components/WatchlistPageComponent.html","title":"component - WatchlistPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WatchlistPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/watchlist-page/watchlist-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-watchlist-page\n            \n\n\n\n            \n                styleUrls\n                ./watchlist-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./watchlist-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/watchlist-page/watchlist-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { EventInterface } from '../interfaces/event-interface';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\n\n@Component({\n  selector: 'app-watchlist-page',\n  templateUrl: './watchlist-page.component.html',\n  styleUrls: ['./watchlist-page.component.css']\n})\nexport class WatchlistPageComponent {\n  events:EventInterface[] = [];\n  watchlist:EventInterface[] = [];\n  constructor(\n    private authApi:AuthenticationService, \n    private watchlistSvc: WatchlistService){}\n\n  ngOnInit(){\n    this.authApi.getCurrentUser().then(\n      u=>{\n        this.watchlistSvc.getWatchlist(u).subscribe(l=>{\n          this.events=l;\n          this.watchlist = l;\n        });\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n    \n    \n\n    \n\n    \n                \n                    ./watchlist-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WatchlistPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistService.html":{"url":"injectables/WatchlistService.html","title":"injectable - WatchlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/watchlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addWatchlistEvent\n                            \n                            \n                                    Private\n                                dbwatchlistToEvent\n                            \n                            \n                                    Private\n                                eventToDbWatchlist\n                            \n                            \n                                getWatchlist\n                            \n                            \n                                removeWatchlistEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/watchlist.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addWatchlistEvent\n                        \n                    \n                \n            \n            \n                \naddWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbwatchlistToEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbwatchlistToEvent(dbEvent: DocumentData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbEvent\n                                            \n                                                        DocumentData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         EventInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventToDbWatchlist\n                        \n                    \n                \n            \n            \n                \n                        \n                    eventToDbWatchlist(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchlist\n                        \n                    \n                \n            \n            \n                \ngetWatchlist(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeWatchlistEvent\n                        \n                    \n                \n            \n            \n                \nremoveWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { Firestore, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, setDoc} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistService {\n\n  constructor(private fs: Firestore) { }\n\n  private eventToDbWatchlist(event:EventInterface): any{\n    let watchListEvent: any = {id: event.id}\n\n    if (event.name !== undefined)\n      watchListEvent.name = event.name\n    if (event.location !== undefined)\n      watchListEvent.location = event.location\n    if (event.images !== undefined)\n      watchListEvent.images = event.images\n    if (event.details !== undefined)\n      watchListEvent.details = event.details\n    if (event.startDate !== undefined)\n      watchListEvent.startDate = event.startDate\n    if (event.endDate !== undefined)\n      watchListEvent.endDate = event.endDate\n\n    return watchListEvent;\n  }\n\n  private dbwatchlistToEvent(dbEvent: DocumentData ): EventInterface{\n    let event: EventInterface = {\n      id: dbEvent['id'],\n      name: dbEvent['name'],\n      location: dbEvent['location'],\n      images: dbEvent['images'],\n      details: dbEvent['details'],\n      startDate: dbEvent['startDate']? new Date(dbEvent['startDate']?.toDate()): undefined,\n      endDate: dbEvent['endDate']? new Date(dbEvent['endDate']?.toDate()): undefined\n    }\n    \n\n    return event\n  }\n\n  getWatchlist(user: UserInterface): Observable{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n\n    return new Observable(obs=>{\n      docData(watchDoc).subscribe(data=>{\n        let watchlist:EventInterface[] = [];\n        if (data===undefined){\n          obs.next(watchlist);\n          return;\n        } \n        data['saved'].forEach((event: DocumentData)=>{\n          \n          watchlist.push(this.dbwatchlistToEvent(event))\n        })\n        obs.next(watchlist);\n      });\n    });\n  }\n\n  addWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    \n    let update = {saved: arrayUnion(this.eventToDbWatchlist(event))}\n    \n    // Attempt to append to document, if not found, initialise a new one.\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      }).catch(rej=>{\n        if (rej.code == \"not-found\"){\n          setDoc(watchDoc,update).then(_=>{\n            res();\n          })\n        } else {\n          throw(rej);\n        }\n      })\n    })\n  }\n\n  removeWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    let update = {saved: arrayRemove(this.eventToDbWatchlist(event))}\n\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/calander/calander.component.ts\n            \n            component\n            CalanderComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/common/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/facade/CreateGroupFacade.ts\n            \n            injectable\n            CreateGroupFacade\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/facade/PersonalCalendarFacade.ts\n            \n            injectable\n            CalendarFacade\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/facade/ViewGroupFacade.ts\n            \n            injectable\n            ViewGroupFacade\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/facade/search-facade.service.ts\n            \n            injectable\n            SearchFacadeService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/group-page/group-create/group-create.component.ts\n            \n            component\n            GroupCreateComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/group-page/group-detail/group-detail.component.ts\n            \n            component\n            GroupDetailComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/group-page/group-list/group-list.component.ts\n            \n            component\n            GroupListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/group-page/group-page.component.ts\n            \n            component\n            GroupPageComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/group-page/groupmember-pipe.pipe.ts\n            \n            pipe\n            GroupmemberPipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/group-page/grouppipe.pipe.ts\n            \n            pipe\n            GrouppipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEventColor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            ClassificationInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            GenreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdClassType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdName\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            SegmentInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypePriority\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            class\n            EventClass\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            interface\n            EventInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/eventpage-interface.ts\n            \n            interface\n            EventPageInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/group-interface.ts\n            \n            interface\n            GroupInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/page-interface.ts\n            \n            interface\n            PageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            dates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            watchlist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user-interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/network/firebase/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/calendar.service.ts\n            \n            injectable\n            CalendarService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/watchlist.service.ts\n            \n            injectable\n            WatchlistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/network/ticketmaster/ticketmaster.service.ts\n            \n            injectable\n            TicketmasterService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/personal-calender-page/personal-calender-page.component.ts\n            \n            component\n            PersonalCalenderPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/search-page/classification-component/classification-component.component.ts\n            \n            component\n            ClassificationComponentComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/search-page/event-component/event-component.component.ts\n            \n            component\n            EventComponentComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/inwatchlist.pipe.ts\n            \n            pipe\n            InwatchlistPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/list-events.component.ts\n            \n            component\n            ListEventsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/search-page/search-page.component.ts\n            \n            component\n            SearchPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/watchlist-page/watchlist-page.component.ts\n            \n            component\n            WatchlistPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            ticketMasterApi\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.12\n        \n            @angular/cdk : ^16.2.14\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/fire : ^16.0.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @ng-bootstrap/ng-bootstrap : ^15.1.2\n        \n            @popperjs/core : ^2.11.8\n        \n            angular-calendar : ^0.31.0\n        \n            bootstrap : ^5.2.3\n        \n            ngx-toastr : ^18.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CalanderColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderType   (src/.../calenderenum.ts)\n                        \n                        \n                            ClassType   (src/.../clasification-interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n            \n                \n                    \n                        \n                        CalanderColor\n                    \n                \n                        \n                            \n                                 NotFreeAtAll\n                            \n                        \n                        \n                            \n                                Value : #d9534f\n                            \n                        \n                        \n                            \n                                 SomeFree\n                            \n                        \n                        \n                            \n                                Value : #f0ad4e\n                            \n                        \n                        \n                            \n                                 AllAvailable\n                            \n                        \n                        \n                            \n                                Value : #5cb85c\n                            \n                        \n                        \n                            \n                                 Default\n                            \n                        \n                        \n                            \n                                Value : #0275D8\n                            \n                        \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : #00a2a8\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : #efcb00\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : #b0d04a\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CalanderType\n                    \n                \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : Personal\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : ReservedForEvent\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : BookedForEvent\n                            \n                        \n            \n        \n\n    src/app/interfaces/clasification-interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ClassType\n                    \n                \n                        \n                            \n                                 Segment\n                            \n                        \n                        \n                            \n                                 Genre\n                            \n                        \n                        \n                            \n                                 Subgenre\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTicketbuddy\nThis project was generated with Angular CLI version 16.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nGrouppipePipe\n\nGrouppipePipe\n\nAppModule -->\n\nGrouppipePipe->AppModule\n\n\n\n\n\nInwatchlistPipe\n\nInwatchlistPipe\n\nAppModule -->\n\nInwatchlistPipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            CalanderTypeColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderTypePriority   (src/.../calenderenum.ts)\n                        \n                        \n                            dates   (src/.../testdata.ts)\n                        \n                        \n                            e1   (src/.../testdata.ts)\n                        \n                        \n                            e2   (src/.../testdata.ts)\n                        \n                        \n                            end   (src/.../testdata.ts)\n                        \n                        \n                            end2   (src/.../testdata.ts)\n                        \n                        \n                            end3   (src/.../testdata.ts)\n                        \n                        \n                            firebaseConfig   (src/.../env-prod.ts)\n                        \n                        \n                            g1   (src/.../testdata.ts)\n                        \n                        \n                            g2   (src/.../testdata.ts)\n                        \n                        \n                            start   (src/.../testdata.ts)\n                        \n                        \n                            start2   (src/.../testdata.ts)\n                        \n                        \n                            start3   (src/.../testdata.ts)\n                        \n                        \n                            ticketMasterApi   (src/.../env-prod.ts)\n                        \n                        \n                            user1   (src/.../testdata.ts)\n                        \n                        \n                            user2   (src/.../testdata.ts)\n                        \n                        \n                            user3   (src/.../testdata.ts)\n                        \n                        \n                            user4   (src/.../testdata.ts)\n                        \n                        \n                            watchlist   (src/.../testdata.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authApi:AuthenticationService = inject(AuthenticationService);\n  const router:Router = inject(Router);\n  return authApi.isAuthenticated().pipe(\n    tap((x:boolean)=>{\n      if(!x){\n        router.navigate(['login'], {queryParams: {returnUrl: state.url }});\n        \n      }\n      \n    })\n  );\n  \n}\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CalanderTypeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, CalanderColor.BookedForEvent],\n    [CalanderType.ReservedForEvent, CalanderColor.ReservedForEvent],\n    [CalanderType.Personal, CalanderColor.Personal]  \n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CalanderTypePriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, 1],\n    [CalanderType.ReservedForEvent, 2],\n    [CalanderType.Personal, 3]  \n])\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/testdata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start, \n    end:end, \n    detail:\"Doctors Appointment\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start2, \n    end:end2, \n    detail:\"School project meeting\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start3, \n    end:end3, \n    detail:\"Dental Checkup\", \n    type:CalanderType.Personal}\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt1\", name:\"Superbowl\", location:[\"Seatle stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event\", startDate: new Date(2024, 3, 27, 17,30), endDate:new Date(2024, 3, 27, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt2\", name:\"Taylor Swift\", location:[\"Singpoare Stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event 2\", startDate: new Date(2024, 3, 17, 17,30), endDate:new Date(2024, 3, 17, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start3.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp1\", name:\"TS fan group\", \n    event: e2, admin:user1, members:[user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp2\", name:\"GO Patriots Group\", \n    event: e1, admin:user4, members:[user1, user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user4\",\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(2024, 2, 27, 3 ,30,0)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 5*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"john\", email: \"ur@mother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"becca\", email: \"ur@father.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Tom\", email: \"ur@sister.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Rick\", email: \"ur@brother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : [e1, e2]\n                    \n                \n\n\n        \n    \n\n    src/environments/env-prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiKey: \"AIzaSyDjqnG3Ye8IF6TcSPj_psTFYMizlnFvoOw\",\n    authDomain: \"ticket-bud.firebaseapp.com\",\n    projectId: \"ticket-bud\",\n    storageBucket: \"ticket-bud.appspot.com\",\n    messagingSenderId: \"297938436292\",\n    appId: \"1:297938436292:web:f09902d21ddd4fde388991\",\n    measurementId: \"G-Y4Q5TLEBGB\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketMasterApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"5Jqei2SXCUbEHOfAy9F6vyC4wA8Pj6s0\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
