var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.517,1,1.091]],["body/components/AppComponent.html",[0,0.859,1,1.923,2,1.892,3,0.224,4,0.224,5,1.52,6,1.52,7,1.52,8,1.52,9,0.173,10,3.553,11,0.78,12,5.433,13,2.484,14,1.993,15,5.433,16,1.371,17,2.738,18,2.102,19,1.993,20,6.061,21,1.993,22,5.433,23,0.25,24,0.969,25,6.061,26,6.061,27,1.797,28,1.797,29,0.02,30,4.148,31,0.866,32,4.144,33,0.277,34,1.012,35,4.658,36,4.144,37,0.636,38,0.623,39,1.692,40,2.138,41,0.198,42,0.453,43,1.065,44,2.283,45,2.874,46,4.144,47,4.144,48,2.874,49,1.371,50,1.797,51,1.993,52,1.52,53,1.493,54,1.52,55,0.679,56,1.52,57,1.239,58,1.52,59,1.239,60,1.443,61,1.993,62,1.239,63,0.78,64,1.239,65,1.419,66,1.52,67,1.239,68,1.52,69,1.239,70,1.52,71,1.178,72,2.36,73,1.239,74,1.303,75,1.52,76,1.178,77,1.303,78,1.239,79,1.52,80,1.178,81,1.178,82,1.178,83,1.178,84,1.303,85,1.178,86,0.962,87,1.178,88,1.52,89,1.52,90,0.014,91,0.014]],["title/modules/AppModule.html",[92,2.532,93,2.532]],["body/modules/AppModule.html",[1,2.057,3,0.155,4,0.155,9,0.12,13,0.95,29,0.02,37,0.874,38,0.432,41,0.137,42,0.314,49,0.95,57,1.826,59,1.826,62,1.826,64,1.826,65,1.347,67,1.826,69,1.826,71,1.736,73,1.826,76,1.736,77,0.903,78,1.826,80,1.736,81,0.816,82,1.196,83,1.736,84,1.837,85,1.736,86,0.667,90,0.011,91,0.011,92,1.991,93,5.263,94,1.83,95,1.991,96,4.273,97,2.834,98,3.609,99,2.192,100,2.462,101,2.462,102,2.462,103,2.462,104,3.893,105,3.893,106,3.893,107,5.411,108,4.706,109,5.411,110,5.01,111,5.411,112,4.706,113,3.609,114,2.462,115,1.696,116,2.871,117,3.609,118,2.871,119,2.871,120,2.871,121,3.609,122,4.209,123,3.609,124,2.192,125,4.209,126,1.83,127,2.871,128,2.871,129,4.209,130,2.041,131,2.172,132,2.871,133,2.192,134,4.209,135,2.919,136,2.192,137,2.871,138,2.192,139,2.192,140,4.209,141,2.871,142,1.582,143,1.582,144,3.609,145,1.991,146,2.871,147,2.462,148,2.871,149,2.871,150,1.83,151,2.462,152,4.209,153,4.209,154,2.871,155,1.991,156,5.01,157,3.023,158,2.192,159,2.871,160,4.209,161,2.462,162,4.209,163,2.871,164,2.192,165,2.871,166,1.991,167,1.991,168,2.871,169,2.192,170,2.871,171,2.871,172,1.991,173,2.192,174,2.871,175,2.192,176,2.192,177,2.871,178,2.871,179,2.871,180,2.871,181,2.871,182,2.871]],["title/modules/AppRoutingModule.html",[92,2.532,106,2.327]],["body/modules/AppRoutingModule.html",[3,0.263,4,0.263,9,0.203,29,0.02,37,0.856,38,0.731,41,0.232,42,0.531,65,1.072,71,1.382,76,1.382,77,1.529,80,1.382,81,1.382,82,1.71,83,1.382,84,1.529,85,1.382,86,1.129,90,0.016,91,0.016,94,3.1,99,3.713,106,3.834,117,4.169,121,5.158,155,3.372,156,6.013,157,2.679,166,3.372,167,3.372,172,3.372,183,4.863,184,4.863,185,6.015,186,4.529,187,2.679,188,3.713,189,4.863,190,3.372,191,4.863,192,4.863,193,6.824,194,4.863,195,4.863,196,4.863,197,6.015,198,4.863,199,4.863,200,4.169,201,3.372,202,3.713,203,4.863,204,4.863,205,4.863,206,4.863,207,4.863,208,4.863,209,4.863,210,4.863]],["title/injectables/AuthenticationService.html",[39,1.491,211,0.764]],["body/injectables/AuthenticationService.html",[3,0.201,4,0.201,9,0.155,11,0.7,18,1.437,23,0.224,29,0.02,31,1.026,33,0.248,37,0.754,38,0.559,39,2.062,41,0.178,42,0.406,44,2.047,55,0.631,77,1.804,90,0.013,91,0.013,115,3.638,151,3.186,211,1.058,212,1.437,213,3.186,214,2.984,215,5.929,216,2.984,217,1.098,218,4.92,219,6.157,220,6.157,221,4.701,222,0.908,223,3.716,224,5.695,225,3.716,226,0.819,227,0.738,228,3.716,229,1.573,230,5.051,231,6.157,232,1.233,233,3.691,234,3.22,235,4.92,236,3.716,237,4.331,238,5.279,239,3.547,240,3.502,241,3.857,242,4.331,243,3.716,244,6.157,245,5.051,246,3.857,247,3.857,248,5.279,249,4.269,250,3.716,251,6.157,252,5.051,253,3.716,254,3.716,255,1.168,256,0.955,257,2.047,258,0.069,259,1.517,260,1.74,261,1.495,262,5.051,263,3.186,264,3.716,265,3.716,266,3.716,267,2.782,268,3.716,269,3.716,270,2.195,271,3.716,272,3.716,273,3.716,274,3.716,275,3.716,276,3.716,277,3.716,278,1.229,279,3.716,280,3.716,281,2.047,282,3.716,283,3.716,284,2.577,285,3.716,286,3.716]],["title/components/CalanderComponent.html",[0,0.517,57,1.091]],["body/components/CalanderComponent.html",[0,0.69,1,0.826,2,1.425,3,0.149,4,0.149,5,1.014,6,1.014,7,1.014,8,1.014,9,0.115,11,0.918,13,2.338,14,1.501,16,0.914,17,2.592,19,1.501,21,1.501,23,0.167,29,0.02,31,0.917,33,0.384,34,0.675,37,0.673,38,0.415,41,0.132,42,0.302,43,1.68,49,0.914,50,1.354,51,1.501,52,1.014,53,1.486,54,1.014,55,0.673,56,1.014,57,1.61,58,1.014,59,0.826,60,0.962,61,1.501,62,0.826,63,0.52,64,0.826,65,1.188,66,1.014,67,0.826,68,1.014,69,0.826,70,1.014,71,0.785,72,1.977,73,0.826,74,1.532,75,1.014,76,0.785,77,0.869,78,0.826,79,1.014,80,0.785,81,0.785,82,1.635,83,0.785,84,0.869,85,0.785,86,0.641,87,0.785,88,1.014,89,1.014,90,0.011,91,0.011,97,1.34,130,1.34,131,1.425,216,2.417,217,0.73,222,0.675,226,0.902,227,0.813,232,0.73,235,3.508,255,0.869,258,0.052,260,1.456,261,1.398,287,2.369,288,1.766,289,3.72,290,4.091,291,1.766,292,4.873,293,3.508,294,4.873,295,4.091,296,4.091,297,4.091,298,2.417,299,4.113,300,2.084,301,4.091,302,4.873,303,2.762,304,1.501,305,2.885,306,1.766,307,3.508,308,4.08,309,1.671,310,2.762,311,4.091,312,4.091,313,2.684,314,2.762,315,3.508,316,2.417,317,4.619,318,2.762,319,4.612,320,2.762,321,1.223,322,2.762,323,2.762,324,3.508,325,2.779,326,3.124,327,4.091,328,2.109,329,2.762,330,2.762,331,2.762,332,4.091,333,1.761,334,1.632,335,1.262,336,2.417,337,2.109,338,2.762,339,2.762,340,2.762,341,1.223,342,2.762,343,2.762,344,1.632,345,2.762,346,2.762,347,2.762,348,2.762,349,2.762,350,2.369,351,2.762,352,2.762,353,2.369,354,2.369,355,2.369,356,1.286,357,2.762,358,2.762,359,2.762,360,2.762,361,1.632,362,2.762,363,2.762,364,1.761,365,1.761,366,2.762,367,2.762,368,2.762,369,2.369,370,2.369,371,2.369,372,2.369,373,2.369,374,2.369,375,2.684,376,2.369,377,2.369,378,2.369,379,2.369,380,4.178,381,2.369,382,2.369,383,2.369,384,2.369,385,1.425,386,5.751,387,2.369,388,1.916,389,2.369,390,2.369,391,2.109,392,2.762,393,2.762,394,2.369,395,2.369,396,2.109,397,3.508,398,2.109,399,2.762,400,3.379,401,2.762,402,2.762,403,2.762,404,2.762,405,4.091,406,4.091,407,2.109,408,2.762,409,2.762,410,2.762]],["title/interfaces/CalanderEvent.html",[258,0.068,309,1.491]],["body/interfaces/CalanderEvent.html",[3,0.256,4,0.256,9,0.198,23,0.286,24,1.055,29,0.02,33,0.499,34,1.825,37,0.693,41,0.283,90,0.015,91,0.015,227,1.41,229,1.7,256,1.737,258,0.121,278,2.237,304,2.481,305,2.898,306,2.918,309,2.416,334,2.798,335,2.164,336,2.798,411,1.832,412,1.65,413,3.278,414,5.162,415,5.162,416,3.278,417,4.061,418,3.284,419,4.061,420,4.061]],["title/interfaces/CalanderEventColor.html",[258,0.068,418,2.532]],["body/interfaces/CalanderEventColor.html",[3,0.281,4,0.281,9,0.217,23,0.314,24,1.118,29,0.02,33,0.45,34,1.706,37,0.733,41,0.299,63,1.267,90,0.016,91,0.016,229,1.531,256,1.61,258,0.126,278,1.72,304,1.908,305,2.559,306,2.244,309,2.747,334,3.072,335,2.376,336,3.974,411,2.011,412,1.811,413,2.521,414,3.97,415,3.97,416,3.039,417,4.458,418,4.345,419,4.458,420,4.458,421,6.726]],["title/injectables/CalendarFacade.html",[211,0.764,422,2.532]],["body/injectables/CalendarFacade.html",[0,0.632,3,0.168,4,0.168,9,0.13,11,0.982,18,1.203,23,0.188,24,0.795,27,1.475,28,1.475,29,0.02,31,1.001,33,0.381,37,0.788,38,0.468,39,1.27,40,1.604,41,0.149,42,0.34,43,1.34,53,1.4,55,0.558,63,1.268,74,1.791,81,1.619,82,2.019,90,0.012,91,0.012,97,1.508,130,1.508,131,1.604,211,0.934,212,1.203,217,0.795,222,0.76,226,0.983,227,0.886,229,1.473,232,1.016,233,2.939,255,0.978,256,1.146,258,0.083,259,1.27,260,1.54,261,1.606,270,1.837,299,4.35,300,2.204,305,1.27,307,3.824,309,2.129,319,2.156,321,1.333,335,1.421,336,2.635,341,1.559,344,3.081,356,1.402,365,2.843,416,1.508,422,3.092,423,2.666,424,2.635,425,4.459,426,3.824,427,3.824,428,3.044,429,5.697,430,4.459,431,3.844,432,3.109,433,2.635,434,4.459,435,4.459,436,3.092,437,2.666,438,3.109,439,3.366,440,3.109,441,2.457,442,2.038,443,3.109,444,3.824,445,3.979,446,3.109,447,2.939,448,3.366,449,3.109,450,3.405,451,4.459,452,2.635,453,2.666,454,1.508,455,2.156,456,2.156,457,2.156,458,2.156,459,3.109,460,1.604,461,2.666,462,1.713,463,2.666,464,2.666,465,2.374,466,2.666,467,2.666,468,2.374,469,2.374,470,2.156,471,2.156,472,3.109,473,1.982,474,3.109,475,3.109,476,3.109,477,1.982,478,2.666,479,1.713,480,2.666,481,2.666,482,3.109,483,3.109,484,3.109,485,3.109,486,3.109,487,3.109,488,3.109,489,3.109,490,3.109,491,2.666,492,3.109,493,3.109,494,3.109,495,3.109,496,3.109,497,3.109,498,3.109,499,3.109,500,3.109,501,1.982,502,3.109,503,3.109,504,3.109,505,3.109,506,2.666,507,3.109,508,3.109,509,3.109,510,3.109,511,2.156,512,3.109,513,3.109]],["title/injectables/CalendarService.html",[211,0.764,452,2.157]],["body/injectables/CalendarService.html",[3,0.092,4,0.092,9,0.071,11,1.091,18,0.663,23,0.103,29,0.02,31,0.924,33,0.425,34,0.418,37,0.636,38,0.258,41,0.082,42,0.187,44,0.944,55,0.742,63,1.31,65,1.512,81,0.8,90,0.007,91,0.007,115,1.663,150,1.092,190,1.188,211,0.589,212,0.663,214,1.663,216,1.663,217,0.74,222,0.418,226,1.278,227,1.151,229,1.675,232,1.191,233,3.472,234,3.694,239,3.102,240,4.019,241,4.151,249,3.769,255,0.539,256,1.489,257,0.944,258,0.078,259,0.699,260,1.695,261,1.307,267,2.524,270,1.012,278,1.185,284,1.952,300,1.089,304,1.681,305,0.699,306,1.546,309,2.682,316,2.91,333,1.092,334,1.012,335,0.783,337,1.308,341,1.071,344,3.976,356,1.907,361,2.707,375,0.944,413,2.222,416,1.365,442,0.783,447,1.452,452,1.663,477,2.644,479,2.285,506,4.463,511,1.188,514,1.469,515,2.814,516,5.376,517,2.814,518,2.814,519,2.814,520,2.814,521,2.814,522,2.814,523,2.814,524,1.308,525,3.865,526,1.713,527,1.952,528,2.814,529,1.713,530,2.413,531,6.774,532,2.814,533,4.148,534,2.814,535,2.876,536,2.814,537,1.304,538,1.713,539,2.814,540,2.413,541,2.814,542,1.452,543,2.149,544,2.814,545,2.367,546,1.713,547,2.814,548,3.072,549,2.814,550,4.224,551,1.973,552,2.814,553,2.644,554,3.769,555,2.814,556,3.499,557,1.713,558,2.149,559,2.876,560,2.814,561,2.149,562,2.149,563,3.167,564,2.814,565,1.713,566,6.063,567,4.582,568,3.167,569,2.814,570,1.713,571,2.814,572,3.557,573,2.149,574,2.814,575,2.814,576,2.814,577,2.413,578,2.814,579,1.713,580,2.814,581,2.413,582,2.814,583,2.814,584,1.713,585,2.814,586,2.814,587,1.952,588,4.926,589,1.55,590,2.814,591,1.713,592,1.952,593,1.308,594,1.308,595,1.308,596,3.761,597,1.092,598,1.469,599,1.308,600,1.308,601,1.308,602,1.308,603,1.308,604,1.469,605,1.469,606,0.944,607,0.884,608,1.713,609,1.713,610,1.713,611,1.713,612,1.713,613,1.713,614,1.713,615,2.814,616,2.149,617,3.072,618,2.814,619,1.713,620,1.713,621,1.713,622,1.012,623,4.582,624,3.499,625,4.582,626,1.713,627,1.713,628,3.582,629,2.814,630,2.814,631,4.148,632,1.713,633,1.713,634,1.713,635,1.713,636,1.713,637,1.713,638,1.713,639,1.713,640,1.713,641,1.713,642,1.713,643,1.188,644,1.713,645,3.557,646,4.148,647,1.713,648,3.557,649,3.557,650,2.413,651,2.413,652,3.582,653,1.713,654,2.413,655,1.713,656,1.188,657,1.713,658,1.713,659,1.713,660,0.831,661,1.713,662,1.713,663,1.469,664,1.713,665,1.713,666,1.713,667,1.713,668,1.713,669,1.713,670,1.713,671,1.713,672,2.413,673,1.713,674,1.713,675,1.713,676,1.308,677,1.713,678,1.092,679,1.713,680,1.713,681,1.713,682,1.713,683,1.713,684,1.713,685,1.469,686,1.713,687,1.713,688,2.735,689,2.814,690,2.644,691,1.713,692,1.308,693,1.713,694,1.092,695,1.469,696,1.469,697,1.469,698,1.713,699,1.713,700,2.814,701,2.814,702,2.814,703,2.814,704,2.814,705,1.469,706,1.713,707,1.308,708,1.713,709,1.713,710,1.713,711,1.469,712,1.713,713,1.188,714,1.713,715,1.713]],["title/components/ClassificationComponentComponent.html",[0,0.517,59,1.091]],["body/components/ClassificationComponentComponent.html",[0,0.919,1,0.94,2,1.566,3,0.17,4,0.17,5,1.153,6,1.153,7,1.153,8,1.153,9,0.131,11,0.988,13,2.384,14,1.649,16,1.04,17,2.643,19,1.649,21,1.649,23,0.19,27,1.04,28,1.04,29,0.02,31,0.913,33,0.351,34,1.098,37,0.67,38,0.473,41,0.15,42,0.344,43,1.471,49,1.04,50,1.487,51,1.649,52,1.153,53,1.329,54,1.153,55,0.716,56,1.153,57,0.94,58,1.153,59,1.711,60,2.509,61,1.649,62,0.94,63,0.592,64,0.94,65,1.263,66,1.153,67,0.94,68,1.153,69,0.94,70,1.153,71,0.894,72,2.101,73,0.94,74,1.65,75,1.153,76,0.894,77,0.988,78,0.94,79,1.153,80,0.894,81,0.894,82,0.894,83,0.894,84,0.988,85,0.894,86,0.73,87,0.894,88,1.153,89,1.153,90,0.012,91,0.012,175,4.625,176,4.625,217,0.802,226,0.991,227,0.893,229,1.399,232,0.936,255,0.988,258,0.059,261,1.044,288,1.94,291,1.94,298,2.656,313,3.154,321,1.568,325,3.251,326,2.4,356,1.413,535,3.117,597,3.65,716,3.579,717,2.4,718,4.495,719,4.495,720,4.495,721,2.707,722,4.499,723,3.854,724,2.954,725,4.495,726,4.495,727,3.144,728,4.495,729,4.495,730,3.144,731,4.495,732,4.495,733,4.495,734,3.432,735,4.495,736,4.495,737,3.144,738,3.145,739,3.144,740,4.909,741,5.725,742,3.144,743,3.144,744,3.432,745,3.144,746,2.004,747,1.857,748,2.18,749,2.004,750,1.622,751,1.622,752,1.524,753,3.144,754,2.695,755,2.4,756,3.144,757,3.144,758,3.144,759,3.144,760,2.695,761,3.144,762,5.247,763,2.695,764,3.144,765,3.144,766,3.144,767,3.144,768,3.144,769,3.144,770,2.4,771,2.18,772,3.144,773,3.144,774,3.144,775,6.633]],["title/interfaces/ClassificationInterface.html",[258,0.068,776,1.77]],["body/interfaces/ClassificationInterface.html",[3,0.276,4,0.276,9,0.213,23,0.308,24,1.105,29,0.02,33,0.446,41,0.345,90,0.016,91,0.016,258,0.133,411,1.975,412,1.778,738,2.476,750,2.634,751,3.858,752,2.476,776,3.005,777,3.823,778,3.823,779,3.581,780,3.255,781,3.255,782,3.255,783,3.255,784,4.254,785,3.255,786,2.813,787,3.255,788,2.813,789,3.255,790,3.255,791,2.634]],["title/injectables/CreateGroupFacade.html",[211,0.764,792,2.532]],["body/injectables/CreateGroupFacade.html",[3,0.174,4,0.174,9,0.135,11,0.863,14,1.682,18,1.25,23,0.195,24,0.817,27,1.069,28,1.069,29,0.02,31,0.924,33,0.306,37,0.782,38,0.486,39,1.872,40,1.667,41,0.154,42,0.353,43,1.49,53,1.237,55,0.817,63,0.863,65,1.442,86,1.421,90,0.012,91,0.012,133,2.467,211,0.96,212,1.25,217,0.817,222,0.789,226,0.713,227,0.642,232,0.95,233,2.365,255,1.016,256,0.83,258,0.086,259,1.319,260,1.567,261,1.518,267,1.78,270,1.909,305,1.319,321,1.37,341,1.83,356,1.016,424,2.708,428,2.811,433,3.425,436,3.178,441,2.525,442,2.095,445,3.616,447,2.991,448,2.708,454,1.567,460,1.667,462,1.78,470,2.241,471,2.241,511,3.178,537,1.925,643,2.241,792,3.178,793,2.77,794,3.5,795,3.193,796,4.584,797,3.231,798,4.584,799,3.178,800,3.93,801,4.584,802,3.231,803,4.584,804,4.584,805,3.231,806,3.93,807,3.93,808,4.584,809,3.231,810,2.708,811,2.467,812,2.708,813,2.467,814,2.06,815,5.327,816,6.539,817,3.231,818,3.231,819,4.584,820,6.891,821,4.584,822,4.584,823,4.584,824,4.584,825,4.584,826,4.584,827,3.93,828,3.231,829,2.467,830,2.467,831,3.231,832,3.231,833,3.231,834,3.231,835,3.231,836,3.231,837,3.231,838,3.231,839,3.231,840,3.231,841,3.231,842,3.231,843,4.584,844,3.231,845,4.584,846,4.584,847,4.584,848,4.584,849,3.231,850,3.231,851,3.231,852,3.231,853,3.231,854,3.231,855,3.231,856,3.231,857,3.231,858,3.231,859,3.231,860,3.231,861,3.231,862,3.231,863,3.231,864,3.231,865,3.93,866,3.231,867,3.231,868,3.231,869,3.231,870,2.467,871,2.467,872,3.231,873,3.93]],["title/classes/EventClass.html",[42,0.399,874,2.532]],["body/classes/EventClass.html",[3,0.229,4,0.229,9,0.177,23,0.255,24,0.982,27,2.225,28,2.225,29,0.02,31,1.147,33,0.481,34,1.715,41,0.263,42,0.463,55,0.811,90,0.014,91,0.014,217,0.982,222,1.034,226,1.215,227,1.369,232,0.755,258,0.079,260,1.144,278,2.146,305,2.249,365,2.698,385,2.842,412,1.475,537,1.925,542,2.184,607,3.745,791,2.842,874,4.497,875,3.232,876,3.035,877,3.82,878,3.82,879,3.511,880,5.509,881,4.233,882,5.509,883,4.233,884,4.233,885,4.233,886,4.233,887,4.233,888,4.233,889,4.233,890,4.233,891,4.723,892,4.723,893,4.723,894,4.723,895,4.723,896,3.63,897,4.723,898,4.206,899,3.63,900,3.63,901,3.63,902,3.63,903,3.63,904,3.63,905,3.63,906,3.63,907,3.63,908,3.63,909,3.63,910,3.63,911,3.63]],["title/components/EventComponentComponent.html",[0,0.517,62,1.091]],["body/components/EventComponentComponent.html",[0,0.859,1,0.942,2,1.568,3,0.17,4,0.17,5,1.156,6,1.156,7,1.156,8,1.156,9,0.131,11,0.989,13,2.385,14,1.652,16,1.043,17,2.644,19,1.652,21,1.652,23,0.19,24,0.803,29,0.02,31,1.005,33,0.421,37,0.615,38,0.474,41,0.151,42,0.344,49,1.043,50,1.49,51,1.652,52,1.156,53,1.331,54,1.156,55,0.758,56,1.156,57,0.942,58,1.156,59,0.942,60,1.098,61,1.652,62,1.713,63,1.397,64,0.942,65,1.264,66,1.156,67,0.942,68,1.156,69,0.942,70,1.156,71,0.896,72,2.103,73,0.942,74,0.991,75,1.156,76,0.896,77,0.991,78,0.942,79,1.156,80,0.896,81,0.896,82,0.896,83,0.896,84,0.991,85,0.896,86,1.664,87,0.896,88,1.156,89,1.156,90,0.012,91,0.012,138,4.956,139,4.956,217,0.803,222,1.1,226,1.159,227,1.044,229,1.4,232,0.803,258,0.059,288,1.943,298,2.66,304,2.103,308,2.009,321,1.346,325,2.711,356,1.416,537,2.087,542,1.626,589,3.474,656,3.122,716,3.835,717,2.406,722,4.505,723,3.861,747,3.386,748,2.185,749,2.009,755,2.406,814,2.009,876,2.48,879,2.87,912,4.503,913,2.548,914,5.254,915,4.503,916,4.503,917,3.861,918,3.151,919,4.503,920,3.122,921,3.975,922,3.151,923,4.503,924,4.503,925,3.151,926,3.151,927,3.158,928,3.725,929,3.151,930,3.151,931,3.151,932,3.151,933,3.151,934,3.151,935,3.151,936,3.151,937,3.151,938,3.438,939,3.438,940,3.438,941,4.503,942,3.438,943,3.151,944,2.406,945,2.406,946,2.406,947,1.44,948,3.151,949,3.151,950,4.503]],["title/interfaces/EventInterface.html",[258,0.068,537,1.148]],["body/interfaces/EventInterface.html",[3,0.253,4,0.253,9,0.195,23,0.283,24,1.048,29,0.02,33,0.48,34,1.822,41,0.281,42,0.512,55,0.803,90,0.015,91,0.015,227,1.338,258,0.088,260,1.266,278,2.295,305,2.75,385,3.313,411,1.812,412,1.631,537,1.848,607,2.417,791,3.032,874,3.248,876,3.538,877,4.453,878,4.453,879,4.093,891,5.039,892,5.039,893,5.039,894,5.039,895,5.039,896,4.016,897,5.039,898,4.487,899,4.016,900,4.016,901,4.016,902,4.016,903,4.016,904,4.016,905,4.016,906,4.016,907,4.016,908,4.016,909,4.016,910,4.016,911,4.016]],["title/interfaces/EventPageInterface.html",[258,0.068,951,2.532]],["body/interfaces/EventPageInterface.html",[3,0.293,4,0.293,9,0.227,23,0.328,24,1.147,29,0.02,33,0.43,37,0.753,41,0.26,63,1.023,87,2.014,90,0.017,91,0.017,258,0.128,300,2.651,411,2.101,412,1.892,537,2.155,951,4.46,952,4.148,953,4.368,954,5.432,955,4.658]],["title/interfaces/GenreInterface.html",[258,0.068,788,2.011]],["body/interfaces/GenreInterface.html",[3,0.282,4,0.282,9,0.218,23,0.316,24,1.122,29,0.019,33,0.35,41,0.347,90,0.016,91,0.016,258,0.134,411,2.024,412,1.822,738,2.537,750,2.699,751,3.793,752,2.537,776,2.537,777,2.882,778,2.882,779,2.699,780,3.335,781,3.335,782,3.335,783,3.335,784,4.46,785,3.335,786,2.882,787,3.335,788,3.465,789,3.335,790,3.335,791,2.699,956,6.744]],["title/components/GroupCreateComponent.html",[0,0.517,64,1.091]],["body/components/GroupCreateComponent.html",[0,0.908,1,0.903,2,1.521,3,0.163,4,0.163,5,1.108,6,1.108,7,1.108,8,1.108,9,0.126,11,0.569,13,2.37,14,2.063,16,0.999,17,2.628,19,1.603,21,1.603,23,0.182,24,0.779,27,0.999,28,0.999,29,0.02,31,0.951,33,0.202,34,0.738,37,0.728,38,0.454,41,0.144,42,0.33,43,1.597,49,0.999,50,1.445,51,1.603,52,1.108,53,1.305,54,1.108,55,0.777,56,1.108,57,0.903,58,1.108,59,0.903,60,1.052,61,1.603,62,0.903,63,1.259,64,1.68,65,1.615,66,1.108,67,0.903,68,1.108,69,0.903,70,1.108,71,0.859,72,2.063,73,0.903,74,0.95,75,1.108,76,0.859,77,0.95,78,0.903,79,1.108,80,0.859,81,0.859,82,0.859,83,0.859,84,0.95,85,0.859,86,0.701,87,0.859,88,1.108,89,1.108,90,0.011,91,0.011,97,1.465,130,1.465,131,1.559,142,1.664,143,1.664,157,3.424,173,4.746,217,0.779,222,0.738,232,1.002,255,0.95,258,0.056,261,1.014,288,1.885,291,1.885,304,1.603,305,2.295,306,1.885,313,1.664,316,2.581,321,1.68,325,2.254,328,2.306,341,1.783,433,3.878,436,2.095,460,1.559,462,1.664,537,0.95,553,1.925,607,1.559,721,2.647,724,2.9,771,3.029,792,3.029,794,4.292,870,2.306,876,3.097,913,1.465,957,3.672,958,2.59,959,5.131,960,4.368,961,5.131,962,5.621,963,5.33,964,3.021,965,3.745,966,3.021,967,5.621,968,3.021,969,4.368,970,4.368,971,3.021,972,3.021,973,1.785,974,2.59,975,3.745,976,3.021,977,1.925,978,2.59,979,2.59,980,3.27,981,2.59,982,2.59,983,3.021,984,3.021,985,1.925,986,3.021,987,3.021,988,3.021,989,3.021,990,3.021,991,3.021,992,3.021,993,1.785,994,3.021,995,3.021,996,3.021,997,3.021,998,2.306,999,3.021,1000,4.368,1001,4.368,1002,4.368,1003,4.368]],["title/components/GroupDetailComponent.html",[0,0.517,67,1.091]],["body/components/GroupDetailComponent.html",[0,0.765,1,0.713,2,1.276,3,0.129,4,0.129,5,0.875,6,0.875,7,0.875,8,0.875,9,0.1,11,0.449,13,2.28,14,1.344,16,0.789,17,2.528,19,1.344,21,1.344,23,0.144,29,0.02,31,1.001,33,0.245,37,0.694,38,0.359,41,0.114,42,0.261,43,0.941,49,0.789,50,1.212,51,1.344,52,0.875,53,1.161,54,0.875,55,0.741,56,0.875,57,0.713,58,0.875,59,0.713,60,0.831,61,1.344,62,0.713,63,1.073,64,0.713,65,1.622,66,0.875,67,1.495,68,0.875,69,0.713,70,0.875,71,0.678,72,1.835,73,0.713,74,0.75,75,0.875,76,0.678,77,0.75,78,0.713,79,0.875,80,0.678,81,0.678,82,0.678,83,0.678,84,0.75,85,0.678,86,0.554,87,0.678,88,0.875,89,0.875,90,0.01,91,0.01,142,1.314,143,1.314,157,3.529,164,4.892,187,1.314,202,2.797,217,0.653,222,0.583,226,0.526,227,0.474,229,1.449,232,1.091,242,3.14,255,0.75,256,1.146,257,1.314,258,0.068,278,1.212,288,1.581,291,1.581,298,2.164,304,1.344,306,1.581,321,1.876,325,1.89,333,1.521,341,1.095,388,1.654,413,2.425,428,1.776,439,2.955,479,2.755,545,1.496,551,3.529,553,1.521,587,2.54,592,1.654,606,1.314,660,1.776,707,5.546,721,2.3,724,2.581,913,1.157,920,2.54,927,3.643,944,1.821,945,1.821,947,2.603,957,3.785,973,2.634,977,1.521,985,1.521,993,1.409,998,1.821,1004,2.045,1005,4.458,1006,3.663,1007,5.002,1008,3.819,1009,3.819,1010,3.188,1011,3.14,1012,3.188,1013,3.819,1014,2.385,1015,2.385,1016,3.14,1017,2.797,1018,2.385,1019,3.819,1020,2.385,1021,2.385,1022,3.819,1023,2.045,1024,2.385,1025,3.663,1026,2.385,1027,2.385,1028,3.663,1029,3.663,1030,2.385,1031,2.54,1032,3.742,1033,2.54,1034,2.385,1035,1.654,1036,2.385,1037,1.654,1038,2.385,1039,2.385,1040,2.385,1041,2.385,1042,2.385,1043,2.385,1044,2.385,1045,2.385,1046,2.385,1047,2.045,1048,2.385,1049,2.385,1050,2.385,1051,2.385,1052,3.14,1053,2.385,1054,3.14,1055,2.385,1056,2.385,1057,2.385,1058,1.821,1059,2.385,1060,2.385,1061,2.385,1062,2.385,1063,2.385,1064,2.385,1065,2.385,1066,2.385,1067,2.385,1068,1.521,1069,2.385,1070,2.385,1071,3.663,1072,3.663,1073,3.663,1074,3.663,1075,3.663,1076,2.385,1077,2.385,1078,3.663,1079,5.002,1080,6.613,1081,6.613,1082,3.14,1083,3.663,1084,3.663,1085,3.14,1086,3.663,1087,3.663,1088,3.663,1089,2.54,1090,3.663,1091,3.663,1092,3.14,1093,3.663,1094,3.663,1095,1.821,1096,1.821,1097,2.385,1098,2.385,1099,2.385,1100,2.385]],["title/interfaces/GroupInterface.html",[258,0.068,545,1.491]],["body/interfaces/GroupInterface.html",[3,0.264,4,0.264,9,0.204,23,0.295,24,1.077,29,0.02,33,0.489,34,1.815,37,0.707,41,0.234,55,0.819,63,1.288,90,0.016,91,0.016,229,1.195,256,1.839,258,0.122,278,2.262,411,1.892,412,1.703,479,3.767,537,2.059,542,3.378,545,2.465,551,3.607,606,2.694,660,3.175,791,2.523,1068,4.358,1101,5.863,1102,4.891,1103,4.891,1104,4.891]],["title/components/GroupListComponent.html",[0,0.517,69,1.091]],["body/components/GroupListComponent.html",[0,0.927,1,1.058,2,1.702,3,0.191,4,0.191,5,1.299,6,1.299,7,1.299,8,1.299,9,0.148,11,0.92,13,2.423,14,1.793,16,1.171,17,2.687,19,1.793,21,1.793,23,0.214,29,0.02,31,0.779,33,0.327,37,0.572,38,0.533,41,0.169,42,0.387,43,0.91,49,1.171,50,1.617,51,1.793,52,1.299,53,1.47,54,1.299,55,0.791,56,1.299,57,1.058,58,1.299,59,1.058,60,1.233,61,1.793,62,1.058,63,1.192,64,1.058,65,1.638,66,1.299,67,1.058,68,1.299,69,1.804,70,1.299,71,1.006,72,2.214,73,1.058,74,2.109,75,1.299,76,1.006,77,1.113,78,1.058,79,1.299,80,1.006,81,1.006,82,1.006,83,1.006,84,1.113,85,1.006,86,0.822,87,1.006,88,1.299,89,1.299,90,0.013,91,0.013,157,3.082,158,4.272,217,0.871,226,0.781,227,0.703,229,1.194,232,0.631,246,4.272,258,0.066,261,0.822,288,2.109,298,2.887,308,2.257,313,2.692,315,4.798,321,1.058,325,2.521,326,3.731,356,1.113,400,2.455,407,2.703,545,2.585,606,1.95,660,2.369,921,4.184,957,3.306,1105,3.036,1106,5.596,1107,4.886,1108,4.886,1109,3.565,1110,3.54,1111,3.54,1112,3.54,1113,5.596,1114,4.798,1115,4.886,1116,3.54,1117,3.54,1118,3.54,1119,3.54,1120,4.886,1121,4.886,1122,4.886,1123,4.19,1124,3.54,1125,3.54,1126,3.54,1127,3.54,1128,2.703,1129,3.54]],["title/components/GroupPageComponent.html",[0,0.517,71,1.038]],["body/components/GroupPageComponent.html",[0,0.894,1,0.857,2,1.465,3,0.155,4,0.155,5,1.052,6,1.052,7,1.052,8,1.052,9,0.12,11,0.54,13,2.351,14,1.543,16,0.949,17,2.608,19,1.543,21,1.543,23,0.173,29,0.02,31,0.973,33,0.281,37,0.738,38,0.431,41,0.137,42,0.313,43,1.621,49,0.949,50,1.392,51,1.543,52,1.052,53,1.356,54,1.052,55,0.686,56,1.052,57,0.857,58,1.052,59,0.857,60,0.999,61,1.543,62,0.857,63,0.54,64,0.857,65,1.625,66,1.052,67,0.857,68,1.052,69,0.857,70,1.052,71,1.559,72,2.013,73,0.857,74,0.902,75,1.052,76,0.815,77,0.902,78,0.857,79,1.052,80,0.815,81,0.815,82,0.815,83,0.815,84,0.902,85,0.815,86,0.666,87,1.66,88,1.052,89,1.052,90,0.011,91,0.011,97,1.391,130,1.391,131,1.48,142,1.58,143,1.58,157,3.475,187,1.58,201,2.916,202,3.211,217,0.75,222,0.701,226,0.928,227,0.835,229,1.028,232,1.089,256,1.28,258,0.079,260,0.775,261,0.666,278,1.648,288,1.815,291,1.815,313,2.317,321,1.934,328,2.19,341,1.64,413,2.039,428,2.039,433,3.241,454,1.391,545,2.034,553,1.828,563,3.211,660,1.391,721,2.57,724,2.83,749,1.828,795,2.317,913,1.391,927,2.317,947,2.507,957,3.727,973,2.485,974,2.459,975,3.606,977,1.828,978,2.459,979,2.459,980,3.175,981,2.459,982,2.459,985,1.828,993,2.942,998,2.19,1010,3.497,1012,3.497,1022,4.661,1052,2.459,1109,3.241,1130,1.694,1131,4.206,1132,3.175,1133,2.681,1134,4.206,1135,4.206,1136,5.485,1137,2.868,1138,2.868,1139,2.868,1140,2.868,1141,2.868,1142,2.868,1143,4.206,1144,3.211,1145,4.206,1146,2.868,1147,2.868,1148,2.19,1149,2.459,1150,2.916,1151,2.868,1152,2.868,1153,2.868,1154,2.868,1155,2.868,1156,2.868,1157,2.459,1158,2.868,1159,2.868,1160,2.868,1161,2.868,1162,2.868,1163,2.868,1164,2.868,1165,2.868,1166,2.868,1167,2.868,1168,2.868,1169,2.868,1170,2.868,1171,2.459,1172,5.485,1173,4.206,1174,2.916,1175,3.606,1176,4.206]],["title/injectables/GroupService.html",[211,0.764,810,2.157]],["body/injectables/GroupService.html",[3,0.091,4,0.091,9,0.071,11,1.114,18,0.654,23,0.102,29,0.02,30,1.291,31,0.943,33,0.404,34,1.41,37,0.675,38,0.254,41,0.081,42,0.185,44,0.931,55,0.845,63,1.086,65,1.654,90,0.007,91,0.007,150,1.077,200,3.528,211,0.583,212,0.654,214,1.645,216,1.645,217,0.734,222,0.413,226,1.304,227,1.175,229,1.778,232,1.188,233,3.529,234,3.678,239,3.258,240,2.853,248,2.387,249,3.749,255,0.531,256,1.628,257,0.931,258,0.077,259,0.69,260,1.689,261,1.301,267,2.696,270,1.645,278,1.789,284,1.93,289,1.291,304,1.021,306,1.201,309,0.69,316,3.195,333,1.077,334,0.999,335,0.772,337,1.291,341,1.36,350,1.449,356,1.992,361,0.999,385,0.872,413,0.82,414,3.951,415,1.291,416,0.82,439,2.431,447,0.872,452,2.431,469,2.125,477,3.571,479,2.979,525,3.85,527,2.461,530,2.387,537,1.294,540,1.449,543,1.291,545,2.721,548,1.449,551,2.506,553,1.774,554,3.749,556,3.474,558,2.125,559,2.853,561,2.125,562,2.125,563,2.125,568,3.737,572,2.387,577,3.528,581,2.387,589,2.267,592,2.853,593,2.125,594,1.291,595,1.291,596,2.71,597,1.077,598,1.449,599,1.291,600,1.291,601,1.291,602,1.291,603,1.291,604,1.449,606,0.931,607,0.872,616,1.291,624,2.125,643,1.93,645,1.449,648,1.449,649,2.387,650,1.449,651,1.449,654,1.449,656,1.172,660,1.995,672,1.449,676,1.291,678,1.774,685,1.449,688,3.737,690,2.262,692,2.125,695,1.449,713,1.172,740,2.387,744,3.737,746,1.077,794,2.125,810,1.645,870,2.125,873,1.449,876,1.533,877,1.172,878,1.172,879,1.077,928,1.645,938,1.291,939,1.291,940,1.291,942,1.291,947,0.772,980,1.774,1008,2.125,1009,2.125,1010,1.774,1013,2.125,1031,2.853,1032,2.853,1058,2.125,1068,3.77,1089,2.461,1101,3.528,1109,2.431,1177,1.449,1178,2.387,1179,2.784,1180,2.784,1181,2.125,1182,2.784,1183,1.69,1184,3.549,1185,2.853,1186,1.69,1187,2.784,1188,1.69,1189,2.125,1190,2.784,1191,2.784,1192,1.69,1193,2.784,1194,3.528,1195,4.115,1196,2.784,1197,1.69,1198,2.784,1199,1.69,1200,2.784,1201,2.784,1202,1.69,1203,2.784,1204,1.69,1205,2.387,1206,3.142,1207,2.784,1208,1.69,1209,2.387,1210,2.784,1211,2.784,1212,1.69,1213,2.784,1214,4.197,1215,2.784,1216,2.784,1217,2.387,1218,2.784,1219,1.69,1220,2.784,1221,1.69,1222,4.197,1223,1.69,1224,2.125,1225,1.449,1226,1.449,1227,1.69,1228,1.69,1229,1.69,1230,1.69,1231,1.69,1232,1.69,1233,1.69,1234,1.69,1235,1.69,1236,1.69,1237,1.69,1238,1.69,1239,1.69,1240,1.69,1241,1.69,1242,1.69,1243,2.784,1244,1.69,1245,1.449,1246,1.69,1247,1.449,1248,1.69,1249,1.69,1250,1.69,1251,1.69,1252,2.784,1253,2.784,1254,2.784,1255,3.549,1256,1.69,1257,1.69,1258,1.69,1259,1.69,1260,1.69,1261,4.895,1262,2.784,1263,1.69,1264,1.69,1265,1.449,1266,1.69,1267,2.387,1268,1.69,1269,1.69,1270,1.69,1271,2.784,1272,1.69,1273,1.69,1274,1.69,1275,1.69,1276,1.69,1277,1.69,1278,3.549,1279,4.115,1280,1.69,1281,3.549,1282,1.69,1283,1.69,1284,1.69,1285,2.784,1286,1.69,1287,1.69,1288,1.69,1289,1.69,1290,1.69,1291,1.69,1292,1.69,1293,1.69,1294,1.69,1295,1.69,1296,1.69,1297,2.387,1298,1.69,1299,1.69,1300,1.69,1301,1.69,1302,1.69]],["title/pipes/GroupmemberPipePipe.html",[104,2.327,1303,2.327]],["body/pipes/GroupmemberPipePipe.html",[3,0.273,4,0.273,9,0.211,11,0.952,16,1.673,29,0.02,31,0.806,33,0.338,34,1.505,37,0.721,38,0.76,41,0.242,42,0.553,55,0.831,65,1.525,74,1.937,90,0.016,91,0.016,104,3.927,169,4.704,217,0.902,226,1.115,227,1.004,232,0.902,256,1.708,258,0.095,260,1.366,291,2.182,361,3.64,454,2.451,573,4.704,660,3.222,678,3.927,957,3.64,1123,5.282,1144,4.704,1171,4.335,1303,3.927,1304,3.86,1305,4.335,1306,3.505,1307,5.055,1308,5.055,1309,5.282,1310,5.055]],["title/injectables/GrouppageFacadeService.html",[211,0.764,1150,2.532]],["body/injectables/GrouppageFacadeService.html",[0,0.669,3,0.182,4,0.182,9,0.141,11,0.635,18,1.304,23,0.203,24,0.842,27,1.804,28,1.804,29,0.02,31,1.055,33,0.395,34,1.443,37,0.755,38,0.507,39,1.377,40,1.74,41,0.161,42,0.369,43,1.518,53,1.097,55,0.422,65,1.372,90,0.012,91,0.012,211,0.989,212,1.304,217,0.842,222,0.824,226,0.744,227,0.67,229,1.617,232,1.054,239,3.426,255,1.06,256,0.867,258,0.088,259,1.377,260,1.277,261,1.537,278,1.116,321,1.63,341,1.63,424,2.791,428,2.865,441,2.602,442,2.159,445,4.191,447,3.588,448,3.808,454,1.635,460,1.74,462,1.858,465,3.607,468,2.575,470,2.338,471,2.338,473,3.011,501,3.011,545,2.226,622,3.808,678,3.766,713,2.338,746,2.149,807,4.05,810,2.791,811,2.575,829,2.575,1010,3.011,1068,3.011,1109,3.808,1148,2.575,1150,3.275,1181,4.511,1311,5.791,1312,2.338,1313,4.724,1314,4.675,1315,4.675,1316,3.372,1317,4.05,1318,4.05,1319,3.372,1320,4.724,1321,3.372,1322,4.05,1323,3.372,1324,3.372,1325,4.675,1326,3.372,1327,2.891,1328,2.891,1329,2.891,1330,2.891,1331,3.372,1332,2.891,1333,2.891,1334,2.891,1335,2.891,1336,2.891,1337,2.891,1338,2.891,1339,2.891,1340,2.891,1341,2.891,1342,4.05,1343,2.891,1344,2.891,1345,2.891]],["title/interfaces/IdClassType.html",[258,0.068,738,1.77]],["body/interfaces/IdClassType.html",[3,0.282,4,0.282,9,0.218,23,0.316,24,1.122,29,0.019,33,0.468,41,0.347,90,0.016,91,0.016,258,0.134,411,2.024,412,1.822,738,3.05,750,3.48,751,3.693,752,2.537,776,2.537,777,2.882,778,2.882,779,2.699,780,3.335,781,3.335,782,3.335,783,3.335,784,4.46,785,3.335,786,2.882,787,3.335,788,2.882,789,3.335,790,3.335,791,2.699]],["title/interfaces/IdName.html",[258,0.068,751,1.884]],["body/interfaces/IdName.html",[3,0.28,4,0.28,9,0.216,23,0.312,24,1.115,29,0.02,33,0.418,34,1.704,41,0.347,55,0.839,90,0.016,91,0.016,258,0.133,278,2.222,411,2.003,412,1.804,738,2.511,750,2.672,751,3.683,752,2.511,776,2.511,777,2.853,778,2.853,779,2.672,780,3.301,781,3.301,782,3.301,783,3.301,784,4.28,785,3.301,786,2.853,787,3.301,788,2.853,789,3.301,790,3.301,791,2.672]],["title/pipes/InwatchlistPipe.html",[105,2.327,1303,2.327]],["body/pipes/InwatchlistPipe.html",[3,0.252,4,0.252,9,0.195,11,1.104,16,1.544,29,0.02,30,3.564,31,0.744,33,0.312,37,0.686,38,0.702,41,0.223,42,0.51,50,1.94,53,1.084,55,0.802,63,1.332,86,1.712,87,1.667,90,0.015,91,0.015,105,3.737,115,3.464,135,4.066,217,0.832,226,1.029,227,0.927,229,1.432,232,1.046,258,0.087,260,1.585,291,2.014,356,1.844,365,3.737,537,2.282,542,3.308,543,3.564,573,4.477,607,2.408,716,3.464,898,3.564,917,5.027,1144,5.135,1303,3.737,1304,3.564,1306,3.236,1309,5.027,1346,4.002,1347,5.863,1348,4.667,1349,5.027,1350,3.564,1351,4.002]],["title/components/ListEventsComponent.html",[0,0.517,73,1.091]],["body/components/ListEventsComponent.html",[0,0.859,1,1.239,2,1.892,3,0.224,4,0.224,5,1.52,6,1.52,7,1.52,8,1.52,9,0.173,13,2.469,16,1.371,17,2.738,19,1.993,21,1.993,23,0.25,27,1.797,28,1.797,29,0.02,31,0.866,33,0.363,37,0.636,38,0.623,41,0.198,42,0.453,49,1.371,50,1.797,51,1.993,52,1.52,53,1.493,54,1.52,55,0.679,56,1.52,57,1.239,58,1.52,59,1.239,60,1.443,61,1.993,62,1.239,63,0.78,64,1.239,65,1.419,66,1.52,67,1.239,68,1.52,69,1.239,70,1.52,71,1.178,72,2.36,73,1.923,74,2.253,75,1.52,76,1.178,77,1.303,78,1.239,79,1.52,80,1.178,81,1.178,82,1.178,83,1.178,84,1.303,85,1.178,86,1.407,87,1.178,88,1.52,89,1.52,90,0.014,91,0.014,135,4.203,136,4.628,258,0.077,288,1.789,298,3.21,300,2.584,325,3.127,537,1.906,716,3.581,814,2.642,955,3.553,1350,3.164,1352,3.553,1353,6.061,1354,5.433,1355,4.144,1356,4.144]],["title/components/LoginPageComponent.html",[0,0.517,76,1.038]],["body/components/LoginPageComponent.html",[0,0.747,1,0.949,2,1.577,3,0.171,4,0.171,5,1.165,6,1.165,7,1.165,8,1.165,9,0.132,11,0.598,13,2.387,14,1.661,16,1.05,17,2.647,19,1.661,21,1.661,23,0.318,29,0.02,31,0.722,37,0.617,38,0.478,39,1.848,40,1.638,41,0.152,42,0.347,43,0.816,49,1.05,50,1.498,51,1.661,52,1.165,53,1.335,54,1.165,55,0.566,56,1.165,57,0.949,58,1.165,59,0.949,60,1.106,61,1.661,62,0.949,63,0.598,64,0.949,65,1.268,66,1.165,67,0.949,68,1.165,69,0.949,70,1.165,71,0.902,72,2.11,73,0.949,74,0.998,75,1.165,76,1.635,77,2.206,78,0.949,79,1.165,80,0.902,81,0.902,82,0.902,83,0.902,84,0.998,85,0.902,86,0.737,87,1.728,88,1.165,89,1.165,90,0.012,91,0.012,172,3.658,187,1.749,217,0.807,221,4.827,222,0.776,224,2.722,229,1.405,232,0.807,247,3.456,288,1.954,308,2.885,321,1.353,341,1.577,375,1.749,388,2.201,389,2.722,390,2.722,391,2.424,396,4.028,398,3.456,400,3.139,407,2.424,694,2.024,927,2.494,944,3.456,945,3.456,946,4.028,947,2.411,1035,2.201,1037,2.201,1095,3.456,1096,3.456,1130,1.876,1132,3.363,1133,2.885,1149,2.722,1157,2.722,1306,3.658,1357,4.523,1358,5.751,1359,3.175,1360,4.527,1361,4.527,1362,5.751,1363,4.527,1364,3.881,1365,3.881,1366,3.175,1367,3.175,1368,3.175,1369,3.175,1370,3.175,1371,3.175,1372,3.881,1373,4.527,1374,4.527,1375,4.527,1376,3.175,1377,4.931,1378,4.523,1379,3.175,1380,3.175,1381,4.523,1382,4.643,1383,4.527,1384,3.175,1385,3.175,1386,3.175,1387,3.175,1388,3.175,1389,3.175,1390,3.175,1391,3.175,1392,3.881,1393,3.881,1394,2.722,1395,3.175,1396,4.523,1397,3.175,1398,3.175,1399,3.881,1400,4.527,1401,3.175,1402,3.175,1403,2.424,1404,3.175,1405,5.275,1406,3.175,1407,3.175,1408,2.424,1409,3.881,1410,2.722,1411,3.175,1412,2.424,1413,3.175,1414,3.175,1415,3.175,1416,2.722,1417,3.175,1418,3.175,1419,3.175,1420,3.175,1421,4.527,1422,3.175,1423,2.201]],["title/components/NavigationComponent.html",[0,0.517,78,1.091]],["body/components/NavigationComponent.html",[0,0.822,1,1.136,2,1.786,3,0.205,4,0.205,5,1.394,6,1.394,7,1.394,8,1.394,9,0.159,11,0.715,13,2.444,14,1.881,16,1.257,17,2.71,19,1.881,21,1.881,23,0.229,24,0.914,27,1.257,28,1.257,29,0.02,31,0.925,33,0.254,34,0.928,37,0.679,38,0.571,39,1.551,41,0.182,42,0.415,43,0.976,49,1.257,50,1.696,51,1.881,52,1.394,53,1.443,54,1.394,55,0.777,56,1.394,57,1.136,58,1.394,59,1.136,60,1.323,61,1.881,62,1.136,63,0.715,64,1.136,65,1.37,66,1.394,67,1.136,68,1.394,69,1.136,70,1.394,71,1.08,72,2.28,73,1.136,74,1.194,75,1.394,76,1.08,77,1.194,78,1.857,79,1.394,80,1.08,81,1.65,82,1.08,83,1.08,84,1.825,85,1.08,86,1.347,87,1.08,88,1.394,89,1.394,90,0.013,91,0.013,187,2.093,217,0.914,221,5.306,229,1.253,232,0.914,288,2.213,291,2.213,321,1.533,324,4.396,344,3.029,444,5.328,463,5.328,721,2.994,724,3.206,754,3.257,921,3.555,927,2.824,1035,2.634,1037,2.634,1109,3.029,1424,3.257,1425,6.213,1426,5.127,1427,5.803,1428,5.127,1429,3.799,1430,3.799,1431,3.799,1432,3.799,1433,3.799,1434,3.799,1435,3.799,1436,3.799,1437,3.799,1438,3.799]],["title/classes/NewCalendarEvent.html",[42,0.399,431,2.327]],["body/classes/NewCalendarEvent.html",[3,0.259,4,0.259,9,0.2,23,0.29,24,1.064,29,0.02,31,1.135,33,0.454,34,1.586,37,0.76,41,0.229,42,0.524,55,0.6,90,0.015,91,0.015,217,1.064,222,1.586,226,1.058,227,0.953,229,1.172,232,1.064,256,1.668,258,0.112,260,1.297,261,1.114,304,2.189,306,2.575,309,2.436,335,2.193,413,2.893,416,2.327,431,3.803,454,2.327,455,3.327,458,3.327,542,2.476,875,3.664,1439,4.115,1440,6.792,1441,5.966,1442,5.966,1443,4.799,1444,4.799,1445,4.799,1446,4.799,1447,4.799,1448,4.799,1449,4.799,1450,4.799,1451,5.966,1452,5.966,1453,5.966,1454,4.799]],["title/injectables/NotificationService.html",[211,0.764,1185,2.532]],["body/injectables/NotificationService.html",[3,0.167,4,0.167,9,0.129,11,1.072,18,1.2,23,0.187,29,0.02,31,0.907,33,0.38,34,1.472,37,0.666,38,0.466,41,0.148,42,0.339,50,1.473,53,0.72,55,0.711,65,1.566,90,0.012,91,0.012,126,1.977,150,1.977,201,3.087,211,0.932,212,1.2,214,2.63,216,2.63,217,1.015,222,1.088,226,1.255,227,1.13,232,1.119,233,3.604,234,3.998,258,0.058,259,1.266,260,1.407,261,0.72,267,1.709,281,3.938,341,1.801,356,1.789,442,1.417,479,2.869,524,2.368,525,3.627,527,3.087,545,2.638,550,3.817,551,3.455,587,3.946,593,2.368,594,2.368,595,2.368,596,3.399,606,1.709,624,2.368,660,2.759,676,3.399,690,1.977,771,2.151,871,3.399,876,1.709,1017,3.976,1019,3.976,1031,4.48,1032,3.611,1058,4.933,1082,2.659,1089,3.946,1175,2.659,1185,3.087,1189,3.399,1194,4.465,1206,4.789,1217,2.659,1222,5.668,1297,3.817,1364,2.659,1423,2.151,1455,2.659,1456,3.817,1457,3.817,1458,4.452,1459,4.452,1460,4.452,1461,4.933,1462,3.101,1463,4.452,1464,3.101,1465,5.69,1466,4.452,1467,3.101,1468,4.452,1469,4.452,1470,6.026,1471,3.101,1472,5.69,1473,4.452,1474,4.452,1475,4.452,1476,3.101,1477,3.101,1478,3.101,1479,3.101,1480,3.101,1481,3.101,1482,3.101,1483,3.101,1484,3.101,1485,3.101,1486,3.101,1487,2.659,1488,4.452,1489,4.452,1490,4.452,1491,3.101,1492,2.368,1493,3.101,1494,3.101,1495,5.69,1496,5.69,1497,3.101,1498,5.207,1499,3.101,1500,2.659,1501,3.101,1502,3.101,1503,2.659,1504,3.101,1505,3.087,1506,4.452,1507,4.452,1508,4.452,1509,3.101,1510,3.101,1511,3.101]],["title/interfaces/PageInterface.html",[258,0.068,953,2.327]],["body/interfaces/PageInterface.html",[3,0.296,4,0.296,9,0.229,23,0.331,24,1.153,29,0.019,33,0.46,41,0.262,90,0.017,91,0.017,258,0.102,411,2.119,412,1.908,953,4.121,1412,5.251,1512,4.698,1513,5.74,1514,6.877,1515,5.479,1516,5.479,1517,5.479]],["title/components/PersonalCalenderPageComponent.html",[0,0.517,80,1.038]],["body/components/PersonalCalenderPageComponent.html",[0,0.789,1,0.765,2,1.345,3,0.138,4,0.138,5,0.938,6,0.938,7,0.938,8,0.938,9,0.107,11,0.876,13,2.308,14,1.417,16,0.846,17,2.559,19,1.417,21,1.417,23,0.154,24,0.689,27,1.54,28,1.54,29,0.02,31,1.021,33,0.391,37,0.711,38,0.385,41,0.122,42,0.28,43,1.196,49,0.846,50,1.278,51,1.417,52,0.938,53,1.486,54,0.938,55,0.696,56,0.938,57,0.765,58,0.938,59,0.765,60,0.891,61,1.417,62,0.765,63,1.28,64,0.765,65,1.143,66,0.938,67,0.765,68,0.938,69,0.765,70,0.938,71,0.727,72,1.902,73,0.765,74,0.804,75,0.938,76,0.727,77,0.804,78,0.765,79,0.938,80,1.474,81,1.996,82,2.115,83,0.727,84,0.804,85,0.727,86,0.594,87,1.582,88,0.938,89,0.938,90,0.01,91,0.01,97,1.24,130,1.24,131,1.32,142,1.409,143,1.409,166,4.525,217,0.689,222,0.625,226,1.026,227,0.924,229,1.137,232,1.044,258,0.048,260,1.044,261,1.411,291,1.667,293,4.445,300,1.8,304,1.707,305,2.273,306,2.238,309,2.481,317,3.312,319,4.44,321,1.816,335,1.169,341,1.55,344,2.282,356,0.804,365,2.462,369,2.193,370,2.193,371,2.193,372,2.193,373,2.193,374,2.193,375,2.563,376,2.193,377,2.193,378,2.193,379,2.193,380,2.193,381,2.193,382,2.193,383,2.193,384,2.193,385,1.32,387,4.445,413,1.873,416,1.873,422,2.678,426,4.445,427,3.312,431,3.548,433,2.282,437,3.312,439,3.458,441,2.128,442,1.765,455,1.773,458,1.773,461,2.193,491,2.193,542,1.32,592,1.773,643,1.773,721,2.401,724,2.675,795,2.128,806,4.445,871,2.949,913,1.24,921,1.773,928,2.282,973,2.749,977,1.63,985,1.63,993,1.511,1012,3.305,1016,3.312,1092,3.312,1130,1.511,1132,2.966,1133,2.462,1503,3.312,1518,5.595,1519,3.312,1520,4.653,1521,4.653,1522,3.862,1523,3.862,1524,2.193,1525,2.558,1526,2.558,1527,1.773,1528,2.193,1529,2.558,1530,2.558,1531,2.558,1532,2.558,1533,2.558,1534,2.558,1535,2.558,1536,3.312,1537,2.193,1538,2.558,1539,2.558,1540,2.193,1541,2.558,1542,2.558,1543,2.558,1544,2.558,1545,2.558,1546,2.558,1547,2.558,1548,2.558,1549,2.558,1550,2.558,1551,2.558,1552,2.558,1553,2.558,1554,2.558,1555,2.558,1556,3.312,1557,3.862,1558,3.862,1559,3.862]],["title/injectables/SearchFacadeService.html",[211,0.764,747,2.157]],["body/injectables/SearchFacadeService.html",[3,0.121,4,0.121,9,0.094,11,0.659,18,0.87,23,0.136,24,0.624,27,1.604,28,1.84,29,0.02,31,1.04,33,0.401,34,1.049,37,0.722,38,0.338,39,0.918,40,1.16,41,0.107,42,0.246,43,1.62,45,1.559,48,2.427,53,1.219,55,0.606,60,1.219,63,1.187,74,1.524,84,1.1,86,1.291,87,1.581,90,0.009,91,0.009,211,0.733,212,0.87,217,0.624,222,0.549,226,1.069,227,0.963,229,1.184,232,1.071,255,0.707,256,0.578,258,0.091,259,0.918,260,1.161,261,1.514,300,2.322,313,1.928,316,2.067,321,1.735,325,1.805,341,1.795,356,1.524,364,1.433,375,1.928,424,2.067,428,2.35,441,1.928,442,1.599,445,3.794,447,3.45,448,3.951,454,1.09,460,1.16,462,1.239,473,1.433,501,1.433,537,1.651,554,3.361,587,2.427,589,1.928,597,3.09,622,2.864,738,1.09,747,2.067,748,4.583,750,1.16,760,1.928,770,2.672,776,1.09,777,2.366,779,2.216,795,2.67,799,3.361,812,2.067,813,1.717,814,1.433,830,1.717,913,3.305,920,2.427,928,2.067,947,1.028,953,1.433,993,2.067,1054,3.001,1174,1.559,1312,1.559,1351,1.928,1505,4.163,1513,4.433,1527,3.856,1560,3.499,1561,3.499,1562,3.499,1563,3.499,1564,3.001,1565,3.001,1566,3.701,1567,3.001,1568,3.683,1569,2.249,1570,2.249,1571,1.928,1572,2.249,1573,4.156,1574,2.249,1575,1.928,1576,2.249,1577,4.847,1578,4.768,1579,3.001,1580,2.672,1581,2.249,1582,4.156,1583,2.249,1584,1.928,1585,2.249,1586,2.249,1587,3.499,1588,3.499,1589,3.499,1590,2.249,1591,3.499,1592,3.499,1593,4.847,1594,2.249,1595,3.499,1596,3.499,1597,3.499,1598,3.499,1599,2.249,1600,3.499,1601,1.928,1602,2.249,1603,2.427,1604,2.249,1605,2.249,1606,2.249,1607,1.928,1608,2.249,1609,2.249,1610,2.249,1611,2.249,1612,2.249,1613,1.928,1614,2.249,1615,2.249,1616,2.249,1617,2.249,1618,2.249,1619,2.249,1620,2.249,1621,2.249,1622,1.928,1623,2.249,1624,2.249,1625,2.249,1626,2.249,1627,1.928,1628,1.928,1629,1.928,1630,1.928,1631,2.249,1632,2.249,1633,2.249,1634,2.249,1635,2.249,1636,3.499,1637,3.499,1638,2.249,1639,2.249,1640,2.249,1641,2.249,1642,2.249,1643,2.249,1644,1.928,1645,1.928,1646,2.249,1647,2.249,1648,2.249,1649,2.249,1650,2.249,1651,2.249,1652,2.249,1653,2.249,1654,3.499,1655,2.249,1656,2.249,1657,2.249,1658,2.249,1659,3.499,1660,1.928,1661,3.499,1662,3.499,1663,2.249,1664,3.499,1665,3.499,1666,4.847,1667,3.499,1668,1.928,1669,2.249,1670,2.249,1671,2.249,1672,2.249,1673,2.249,1674,2.249,1675,1.928,1676,3.001,1677,1.928,1678,2.249,1679,2.249]],["title/components/SearchPageComponent.html",[0,0.517,83,1.038]],["body/components/SearchPageComponent.html",[0,0.877,1,0.809,2,1.404,3,0.146,4,0.146,5,0.993,6,0.993,7,0.993,8,0.993,9,0.113,11,0.759,13,2.33,14,1.479,16,0.896,17,2.584,19,1.479,21,1.479,23,0.163,29,0.02,31,0.85,33,0.181,37,0.624,38,0.407,41,0.129,42,0.296,43,1.536,48,1.877,49,0.896,50,1.333,51,1.479,52,0.993,53,1.238,54,0.993,55,0.602,56,0.993,57,0.809,58,0.993,59,0.809,60,0.943,61,1.479,62,0.809,63,0.51,64,0.809,65,1.176,66,0.993,67,0.809,68,0.993,69,0.809,70,0.993,71,0.769,72,1.957,73,0.809,74,0.851,75,0.993,76,0.769,77,0.851,78,0.809,79,0.993,80,0.769,81,0.769,82,0.769,83,1.516,84,2.228,85,0.769,86,0.628,87,1.76,88,0.993,89,0.993,90,0.01,91,0.01,142,1.491,143,1.491,155,3.954,217,0.719,222,0.661,226,0.597,227,0.538,232,0.951,255,0.851,261,0.936,289,3.077,291,1.739,300,1.559,304,0.993,308,3.635,313,2.652,321,1.705,341,1.205,356,0.851,388,2.794,391,2.067,394,2.321,395,3.455,396,4.354,397,2.321,398,4.565,400,3.954,428,1.954,460,1.397,716,3.369,721,2.484,724,2.752,747,1.599,749,1.725,755,2.067,771,1.877,795,2.22,800,3.455,913,1.313,927,2.938,946,3.676,947,2.437,973,2.844,977,1.725,985,1.725,1012,3.4,1096,2.067,1128,2.067,1130,1.599,1132,3.069,1133,2.569,1174,1.877,1189,3.077,1306,3.698,1377,4.128,1378,2.321,1381,2.321,1382,4.354,1392,5.309,1393,2.321,1394,3.455,1396,2.321,1399,2.321,1408,2.067,1409,4.128,1410,2.321,1412,3.077,1416,4.128,1423,3.698,1513,3.676,1519,3.455,1524,2.321,1564,3.455,1568,4.128,1571,2.321,1573,3.455,1644,2.321,1645,2.321,1668,2.321,1680,2.707,1681,4.03,1682,2.707,1683,2.707,1684,6.192,1685,2.707,1686,2.707,1687,2.707,1688,2.707,1689,2.707,1690,2.707,1691,2.707,1692,2.707,1693,2.707,1694,2.707,1695,2.707,1696,2.707,1697,2.707,1698,2.707,1699,2.707,1700,4.814,1701,2.707,1702,2.707,1703,2.707,1704,2.707,1705,4.814,1706,2.707,1707,2.707,1708,4.03,1709,2.707,1710,4.03,1711,4.03,1712,4.03,1713,2.707,1714,2.707,1715,2.707,1716,2.707,1717,2.707,1718,4.03,1719,2.707,1720,4.03,1721,2.707,1722,2.707,1723,2.707,1724,2.321,1725,2.707,1726,2.707,1727,2.707,1728,2.707,1729,2.707,1730,2.707,1731,2.707,1732,2.707,1733,2.707,1734,2.707,1735,2.707,1736,2.707,1737,4.03,1738,2.707,1739,2.707,1740,2.707,1741,2.707,1742,4.03,1743,2.707,1744,2.707,1745,2.707,1746,2.707,1747,2.707,1748,2.707]],["title/interfaces/SegmentInterface.html",[258,0.068,786,2.011]],["body/interfaces/SegmentInterface.html",[3,0.282,4,0.282,9,0.218,23,0.316,24,1.122,29,0.019,33,0.35,41,0.347,90,0.016,91,0.016,258,0.134,411,2.024,412,1.822,738,2.537,750,2.699,751,3.693,752,2.537,776,2.537,777,2.882,778,2.882,779,2.699,780,3.335,781,3.335,782,3.335,783,3.335,784,4.46,785,3.335,786,3.465,787,3.335,788,3.715,789,3.335,790,3.335,791,2.699,1749,6.744]],["title/injectables/TicketmasterService.html",[211,0.764,1603,2.532]],["body/injectables/TicketmasterService.html",[3,0.177,4,0.177,9,0.137,11,0.872,18,1.268,23,0.198,24,0.826,27,1.084,28,1.084,29,0.02,31,0.981,33,0.427,34,1.311,37,0.785,38,0.493,41,0.157,42,0.358,43,0.842,44,1.805,53,1.429,55,0.671,90,0.012,91,0.012,126,2.089,147,2.81,161,2.81,187,1.805,211,0.969,212,1.268,214,2.735,217,0.826,222,0.801,226,1.184,227,1.066,232,1.04,239,2.957,255,1.03,258,0.087,259,1.338,260,1.868,261,1.354,300,2.077,333,2.089,341,1.909,356,1.456,364,2.089,385,1.691,439,1.936,597,3.922,663,3.969,734,4.454,746,2.089,752,1.589,763,2.81,776,1.589,778,1.805,779,1.691,799,4.045,947,2.116,951,3.21,952,2.502,980,2.951,993,2.735,1035,4.552,1128,2.502,1206,3.535,1224,2.502,1225,2.81,1226,2.81,1461,5.013,1492,2.502,1527,4.045,1565,3.969,1575,2.81,1579,3.969,1580,4.454,1603,3.21,1660,2.81,1750,2.81,1751,4.629,1752,5.368,1753,4.629,1754,3.277,1755,5.833,1756,4.629,1757,4.629,1758,3.277,1759,4.629,1760,3.277,1761,3.277,1762,5.368,1763,4.629,1764,3.277,1765,3.21,1766,2.502,1767,3.277,1768,3.277,1769,3.277,1770,3.277,1771,3.277,1772,4.629,1773,3.277,1774,3.277,1775,3.277,1776,3.277,1777,3.277,1778,3.277,1779,3.277,1780,3.277,1781,3.277,1782,3.277,1783,3.277,1784,3.277,1785,3.277,1786,3.277,1787,3.277,1788,3.277,1789,3.277,1790,3.277,1791,3.277,1792,3.277,1793,3.277,1794,3.277,1795,3.277,1796,3.277,1797,3.277,1798,3.277,1799,3.277,1800,3.277,1801,3.277,1802,3.277,1803,3.277,1804,3.277,1805,3.277,1806,3.277,1807,3.277,1808,3.277,1809,3.277,1810,3.277,1811,3.277,1812,3.277,1813,3.277,1814,3.277,1815,3.277,1816,4.629,1817,3.277,1818,3.277,1819,3.277,1820,3.277,1821,3.277,1822,3.277,1823,3.277,1824,3.277,1825,3.277,1826,3.277,1827,3.277,1828,3.277,1829,3.277,1830,3.277,1831,3.277,1832,3.277,1833,2.81,1834,3.277,1835,3.277,1836,3.277]],["title/interfaces/UserInterface.html",[256,0.938,258,0.068]],["body/interfaces/UserInterface.html",[3,0.292,4,0.292,9,0.226,23,0.326,24,1.144,29,0.019,33,0.457,34,1.833,41,0.259,55,0.884,90,0.017,91,0.017,256,1.649,257,2.98,258,0.101,278,2.341,281,3.897,411,2.092,412,1.884,1837,6.84]],["title/injectables/ViewGroupFacade.html",[211,0.764,1033,2.532]],["body/injectables/ViewGroupFacade.html",[3,0.111,4,0.111,9,0.086,11,0.868,18,0.794,23,0.124,24,0.581,27,1.34,28,1.34,29,0.02,31,1.031,33,0.389,34,1.421,37,0.746,38,0.309,39,0.838,40,1.059,41,0.098,42,0.224,43,1.61,53,1.07,55,0.669,63,0.947,65,1.573,82,1.311,87,1.311,90,0.008,91,0.008,97,0.996,126,1.309,130,0.996,131,1.059,211,0.682,212,0.794,217,0.581,218,1.761,222,0.502,226,1.237,227,0.999,229,1.65,232,1.095,233,3.002,237,1.761,239,2.948,255,0.646,256,1.292,258,0.076,259,0.838,260,1.854,261,1.554,267,2.54,270,1.925,278,2.073,281,1.131,299,1.568,300,0.794,305,1.654,309,0.838,319,2.259,321,1.503,335,0.938,336,1.213,341,1.6,353,1.761,354,1.761,355,1.761,356,1.683,364,1.309,413,1.58,416,1.58,424,1.925,428,2.236,439,1.925,441,1.795,442,1.489,445,3.991,447,3.289,448,3.628,452,1.925,453,1.761,454,0.996,455,1.424,456,1.424,457,1.424,458,1.424,460,1.059,462,1.131,464,1.761,465,1.568,466,1.761,467,1.761,468,1.568,469,1.568,470,1.424,471,1.424,473,2.582,477,1.309,478,1.761,479,1.131,480,1.761,481,1.761,501,2.077,511,3.197,516,2.794,542,1.059,545,2.447,551,1.795,589,1.131,622,1.925,660,1.58,678,2.077,690,2.077,705,1.761,711,2.794,713,1.424,746,1.309,795,2.54,810,1.925,811,1.568,829,1.568,865,3.953,920,2.259,947,0.938,1008,3.521,1009,3.521,1010,2.077,1011,2.794,1013,3.521,1017,3.093,1019,2.488,1022,2.488,1023,2.794,1031,2.259,1032,2.259,1033,2.259,1047,1.761,1068,2.077,1109,3.162,1148,1.568,1178,1.761,1181,3.521,1209,2.794,1224,1.568,1314,3.473,1315,4.311,1317,2.794,1318,2.794,1322,2.794,1325,2.794,1328,1.761,1329,1.761,1330,1.761,1332,1.761,1333,1.761,1334,1.761,1335,1.761,1336,1.761,1337,1.761,1338,1.761,1339,1.761,1340,1.761,1341,1.761,1342,2.794,1343,1.761,1344,1.761,1345,1.761,1349,4.588,1461,3.093,1492,1.568,1527,2.259,1540,1.761,1607,1.761,1838,1.761,1839,4.05,1840,3.258,1841,3.258,1842,2.053,1843,3.258,1844,2.053,1845,2.053,1846,2.053,1847,2.053,1848,3.258,1849,2.053,1850,2.053,1851,3.258,1852,2.488,1853,2.053,1854,3.258,1855,2.053,1856,2.053,1857,2.053,1858,2.053,1859,3.258,1860,2.053,1861,3.258,1862,2.053,1863,2.053,1864,2.053,1865,2.053,1866,2.053,1867,2.053,1868,2.053,1869,2.053,1870,2.053,1871,2.053,1872,2.053,1873,2.053,1874,2.053,1875,2.053,1876,2.053,1877,2.053,1878,2.053,1879,2.053,1880,2.053,1881,2.053,1882,2.053,1883,2.053,1884,2.053,1885,2.053,1886,2.053,1887,2.053,1888,2.053,1889,2.053,1890,2.053,1891,2.053,1892,2.053,1893,2.053,1894,2.053,1895,2.053,1896,2.053,1897,2.053,1898,2.053,1899,2.053,1900,2.053,1901,2.053,1902,2.053,1903,2.053,1904,3.258,1905,3.258,1906,3.258,1907,3.258,1908,2.053,1909,2.053,1910,2.053,1911,2.053,1912,2.053,1913,2.053,1914,2.053,1915,2.053,1916,2.053]],["title/injectables/WatchlistFacadeService.html",[211,0.764,1917,2.532]],["body/injectables/WatchlistFacadeService.html",[0,0.746,3,0.213,4,0.213,9,0.165,11,0.744,18,1.529,23,0.238,24,0.939,27,1.307,28,1.307,29,0.02,31,1.048,33,0.352,37,0.792,38,0.594,39,1.614,40,2.039,41,0.189,42,0.432,43,1.353,44,2.177,45,2.74,48,2.74,53,0.917,55,0.494,63,1.189,86,1.466,90,0.014,91,0.014,211,1.102,212,1.529,217,0.939,226,0.871,227,0.785,232,1.126,255,1.242,256,1.016,258,0.098,259,1.614,261,1.222,300,2.037,321,1.887,341,1.181,356,1.242,424,3.73,428,3.061,441,2.9,442,2.406,445,3.73,447,3.257,448,3.73,454,1.916,460,2.039,462,2.177,473,2.519,501,2.519,537,1.861,589,2.9,622,3.73,770,4.02,795,2.9,812,2.335,813,3.017,814,2.519,830,3.017,913,2.871,1312,2.74,1327,3.388,1566,4.82,1567,4.514,1582,5.413,1584,3.388,1601,3.388,1613,3.388,1622,3.388,1627,3.388,1628,3.388,1629,3.388,1630,3.388,1675,3.388,1676,3.388,1677,3.388,1917,3.65,1918,5.798,1919,5.264,1920,3.952,1921,3.952,1922,5.264,1923,3.952,1924,3.952]],["title/components/WatchlistPageComponent.html",[0,0.517,85,1.038]],["body/components/WatchlistPageComponent.html",[0,0.93,1,1.176,2,1.828,3,0.212,4,0.212,5,1.443,6,1.443,7,1.443,8,1.443,9,0.164,11,0.741,13,2.454,14,1.926,16,1.301,17,2.722,19,1.926,21,1.926,23,0.237,29,0.02,31,0.837,37,0.614,38,0.592,41,0.188,42,0.43,43,1.011,49,1.301,50,1.736,51,1.926,52,1.443,53,1.463,54,1.443,55,0.656,56,1.443,57,1.176,58,1.443,59,1.176,60,1.37,61,1.926,62,1.176,63,0.741,64,1.176,65,1.39,66,1.443,67,1.176,68,1.443,69,1.176,70,1.443,71,1.118,72,2.312,73,1.176,74,1.237,75,1.443,76,1.118,77,1.237,78,1.176,79,1.443,80,1.118,81,1.118,82,1.118,83,1.118,84,1.237,85,1.791,86,1.689,87,1.679,88,1.443,89,1.443,90,0.014,91,0.014,167,4.096,217,0.936,222,0.961,232,0.936,288,2.265,291,2.265,300,2.03,321,1.766,535,3.639,721,3.047,724,3.251,749,2.507,913,1.907,927,2.891,965,4.5,973,3.49,1012,4.017,1130,2.324,1132,3.765,1133,3.345,1537,3.373,1917,2.727,1925,5.064,1926,5.248,1927,3.933,1928,3.933,1929,3.933,1930,3.933,1931,3.933]],["title/injectables/WatchlistService.html",[211,0.764,812,2.157]],["body/injectables/WatchlistService.html",[3,0.146,4,0.146,9,0.113,11,1.124,18,1.044,23,0.163,29,0.02,31,0.952,33,0.399,37,0.667,38,0.406,41,0.129,42,0.295,44,1.486,55,0.773,63,1.389,86,1.634,90,0.01,91,0.01,150,1.72,201,2.788,211,0.842,212,1.044,214,2.375,216,2.375,217,0.95,222,0.659,226,1.317,227,1.186,229,1.694,232,1.179,233,3.28,234,3.394,239,3.137,240,2.788,241,4.559,249,3.693,255,0.848,256,1.699,257,1.486,258,0.075,259,1.102,260,1.614,261,1.386,267,2.647,278,1.33,281,2.215,284,1.871,300,2.06,316,2.375,341,1.785,356,1.945,385,1.392,477,2.563,524,2.06,525,4.052,527,2.788,535,2.788,537,2.213,554,4.141,556,4.348,558,4.066,559,4.408,561,4.348,562,3.07,568,3.07,589,2.215,599,2.06,600,2.06,601,2.06,602,2.06,603,2.06,605,2.314,607,1.392,622,1.594,656,2.788,688,3.669,690,2.563,692,3.07,744,3.07,812,2.375,876,1.486,877,1.871,878,1.871,879,1.72,928,2.375,938,3.07,939,3.07,940,3.07,942,3.07,980,4.052,1174,1.871,1205,3.447,1245,2.314,1247,3.447,1265,2.314,1267,3.447,1350,2.06,1456,3.447,1457,3.447,1566,3.07,1932,2.314,1933,4.02,1934,4.02,1935,4.02,1936,4.02,1937,2.698,1938,4.02,1939,2.698,1940,4.02,1941,4.02,1942,2.698,1943,4.02,1944,2.698,1945,2.698,1946,4.02,1947,4.02,1948,4.02,1949,2.698,1950,4.02,1951,4.02,1952,4.02,1953,2.698,1954,4.02,1955,2.698,1956,4.02,1957,2.698,1958,2.698,1959,2.698,1960,2.698,1961,2.698,1962,2.698,1963,2.698,1964,2.698,1965,2.698,1966,2.698,1967,2.698,1968,2.698,1969,2.698,1970,2.698,1971,2.698,1972,4.805,1973,4.805,1974,2.698,1975,4.02,1976,2.698,1977,2.698,1978,4.02,1979,2.698,1980,2.698,1981,2.698,1982,4.02,1983,2.698,1984,2.698,1985,2.698,1986,2.698,1987,2.698]],["title/coverage.html",[1988,4.279]],["body/coverage.html",[0,0.997,1,0.879,9,0.123,10,2.521,29,0.02,33,0.197,39,1.201,42,0.468,57,0.879,59,0.879,62,0.879,64,0.879,67,0.879,69,0.879,71,0.836,73,0.879,76,0.836,78,0.879,80,0.836,82,1.218,83,0.836,85,0.836,86,0.683,90,0.011,91,0.011,104,1.874,105,1.874,135,2.97,136,2.245,138,2.245,139,2.245,145,2.039,155,2.039,157,3.058,158,2.245,164,2.245,166,2.039,167,2.039,169,2.245,172,2.039,173,2.245,175,2.245,176,2.245,188,2.245,211,1.448,213,2.521,256,0.756,257,1.62,258,0.129,261,0.683,287,2.521,304,1.079,306,1.269,309,1.201,334,2.531,335,1.958,412,2.432,418,2.039,422,2.039,423,2.521,431,1.874,450,2.245,452,1.737,456,2.039,457,2.039,514,2.521,537,0.925,545,1.201,606,1.62,607,2.21,716,3.486,717,3.271,738,1.426,747,1.737,748,2.039,751,1.517,752,2.861,776,1.426,786,1.62,788,1.62,792,2.039,793,2.521,810,1.737,812,1.737,874,2.039,947,3.438,951,2.039,952,2.245,953,1.874,957,3.486,958,2.521,1004,2.521,1033,2.039,1105,2.521,1130,3.486,1150,2.039,1177,2.521,1185,2.039,1303,2.73,1305,2.521,1311,2.521,1312,3.504,1346,2.521,1352,2.521,1357,2.521,1382,2.245,1423,4.742,1424,2.521,1439,2.521,1455,2.521,1512,2.521,1518,2.521,1528,2.521,1603,2.039,1724,2.521,1750,2.521,1765,2.039,1766,3.271,1838,2.521,1917,2.039,1918,2.521,1925,2.521,1932,2.521,1988,2.521,1989,2.941,1990,2.941,1991,2.941,1992,2.941,1993,2.941,1994,2.941,1995,2.941,1996,2.941,1997,2.941,1998,2.941,1999,2.941,2000,2.941,2001,2.941,2002,2.941,2003,2.941,2004,2.941,2005,2.941,2006,2.941,2007,4.284,2008,4.284,2009,2.941,2010,5.053,2011,4.284,2012,4.284,2013,5.053,2014,2.521,2015,7.299,2016,4.284,2017,5.551,2018,5.053,2019,5.053,2020,3.271,2021,7.273,2022,2.941,2023,2.941,2024,6.117,2025,2.521,2026,2.521,2027,2.521,2028,2.521,2029,2.521,2030,2.521,2031,2.521,2032,2.521,2033,2.521,2034,2.521,2035,2.521,2036,2.521,2037,2.941,2038,2.941,2039,2.941,2040,2.941,2041,4.284,2042,4.284,2043,2.941,2044,2.941,2045,2.941,2046,2.941,2047,2.941,2048,2.941,2049,3.271,2050,2.941]],["title/dependencies.html",[95,3.046,2051,2.611]],["body/dependencies.html",[29,0.02,38,0.78,90,0.016,91,0.016,95,3.598,97,3.035,123,5.366,124,4.779,126,3.308,130,2.516,131,2.677,133,3.962,142,2.858,143,2.858,187,2.858,255,1.632,344,3.066,2052,5.189,2053,5.189,2054,5.189,2055,6.259,2056,7.339,2057,5.189,2058,5.189,2059,5.189,2060,5.189,2061,5.189,2062,5.189,2063,5.189,2064,5.189,2065,4.449,2066,5.189,2067,5.189,2068,5.189,2069,5.189,2070,5.189,2071,5.189,2072,5.189,2073,5.189]],["title/miscellaneous/enumerations.html",[2074,2.111,2075,3.767]],["body/miscellaneous/enumerations.html",[23,0.309,27,1.696,28,2.496,29,0.02,81,1.9,90,0.016,91,0.016,336,3.671,412,2.164,416,3.013,696,5.732,697,5.732,707,5.104,750,3.206,752,2.486,777,2.824,778,2.824,779,2.645,2020,3.914,2074,3.555,2075,4.396,2076,5.327,2077,5.126,2078,6.213,2079,5.126,2080,5.126,2081,5.126,2082,5.126,2083,5.126,2084,5.126,2085,5.126,2086,5.126,2087,5.126,2088,5.126,2089,5.126,2090,5.126,2091,5.126]],["title/index.html",[23,0.184,2092,3.045,2093,3.045]],["body/index.html",[9,0.179,13,1.417,29,0.018,35,3.673,41,0.205,43,1.101,87,1.217,90,0.014,91,0.014,115,2.531,130,2.077,144,6.035,145,3.849,190,3.849,215,4.759,246,4.238,247,3.27,261,0.994,263,3.673,278,1.417,281,2.359,304,1.572,361,2.531,375,2.359,433,3.638,436,3.849,442,2.814,525,3.925,694,2.73,734,4.238,799,4.517,928,3.279,963,4.759,1085,3.673,1095,3.27,1114,3.673,1214,3.673,1372,3.673,1403,3.27,1408,3.27,1487,5.28,1500,3.673,1505,3.849,1556,3.673,1578,4.759,1580,3.27,1765,2.97,1833,3.673,1852,3.27,2049,4.702,2065,5.28,2094,6.035,2095,4.283,2096,6.158,2097,4.283,2098,4.283,2099,4.283,2100,6.749,2101,4.283,2102,6.515,2103,4.283,2104,4.283,2105,6.158,2106,5.551,2107,4.283,2108,6.158,2109,4.283,2110,4.283,2111,5.551,2112,4.283,2113,4.283,2114,4.283,2115,6.158,2116,4.283,2117,4.283,2118,4.283,2119,4.283,2120,3.673,2121,6.515,2122,3.673,2123,4.283,2124,3.673,2125,3.673,2126,4.283,2127,3.673,2128,4.283,2129,3.673,2130,4.283,2131,3.673,2132,4.283,2133,3.673,2134,5.551,2135,5.551,2136,4.283,2137,4.283,2138,4.283,2139,4.283,2140,4.283,2141,4.283,2142,4.283,2143,4.283,2144,4.283,2145,4.283,2146,6.158,2147,4.283,2148,3.27,2149,4.283,2150,4.283]],["title/modules.html",[94,3.181]],["body/modules.html",[29,0.017,90,0.017,91,0.017,93,4.051,94,3.724,106,3.724,124,4.461,1089,4.051,2151,5.842,2152,5.842,2153,6.711,2154,5.842]],["title/overview.html",[2148,3.811]],["body/overview.html",[1,2.091,2,1.453,29,0.02,49,1.38,57,1.817,59,1.817,62,1.817,64,1.817,67,1.817,69,1.817,71,1.728,73,1.817,76,1.728,78,1.817,80,1.728,83,1.728,85,1.728,90,0.014,91,0.014,92,2.892,93,5.356,94,2.659,95,2.892,96,3.577,97,2.023,98,3.577,99,3.185,100,3.577,101,3.577,102,3.577,103,3.577,104,3.875,105,3.875,106,3.875,107,5.738,108,5.213,109,5.738,110,5.213,111,5.738,112,5.213,113,4.678,114,3.577,115,2.464,186,2.892,212,1.614,411,1.614,694,3.875,875,3.185,1304,3.185,2148,3.185,2155,4.171,2156,5.456,2157,4.171]],["title/properties.html",[24,0.783,2051,2.611]],["body/properties.html",[24,1.056,29,0.018,90,0.018,91,0.018,1403,4.523,2158,5.924]],["title/routes.html",[186,3.461]],["body/routes.html",[29,0.018,90,0.018,91,0.018,186,4.136]],["title/miscellaneous/variables.html",[2074,2.111,2159,3.767]],["body/miscellaneous/variables.html",[23,0.185,27,2.427,28,2.427,29,0.02,33,0.477,34,0.75,43,1.136,45,2.13,63,1.067,65,0.975,86,1.026,90,0.011,91,0.011,145,3.066,188,3.376,190,3.066,229,0.75,238,2.634,256,1.456,260,0.83,261,1.582,281,3.549,304,1.622,305,1.254,306,1.908,309,1.254,361,1.815,364,3.611,375,1.692,385,2.281,450,3.376,456,3.066,457,3.066,537,1.628,545,1.805,551,2.435,559,2.13,616,3.376,617,3.791,694,3.301,827,3.791,1037,2.13,1365,2.634,1505,3.591,1536,3.791,1765,3.066,1766,2.345,1852,2.345,2014,2.634,2020,2.345,2024,2.634,2025,4.857,2026,4.857,2027,3.791,2028,3.791,2029,3.791,2030,3.791,2031,3.791,2032,3.791,2033,3.791,2034,5.147,2035,5.36,2036,3.791,2049,3.955,2074,2.13,2076,3.791,2094,2.634,2120,2.634,2122,2.634,2124,2.634,2125,2.634,2127,2.634,2129,2.634,2131,2.634,2133,5.36,2159,2.634,2160,3.072,2161,7.181,2162,4.421,2163,3.072,2164,3.072,2165,3.072,2166,3.072,2167,3.072,2168,3.072,2169,3.072,2170,3.072,2171,3.072,2172,3.072,2173,3.072,2174,3.072,2175,3.072,2176,3.072,2177,3.072,2178,5.179,2179,5.179,2180,5.665,2181,3.072,2182,3.072,2183,3.072,2184,3.072,2185,5.179,2186,3.072,2187,3.072,2188,3.072,2189,3.072,2190,3.072,2191,3.072,2192,3.072,2193,3.072,2194,3.072,2195,3.072,2196,3.072,2197,4.421,2198,4.421,2199,4.421,2200,4.421,2201,4.421,2202,6.003,2203,5.179,2204,4.421,2205,4.421,2206,3.072,2207,3.072,2208,3.072,2209,3.072,2210,4.421,2211,3.072,2212,5.179,2213,4.421,2214,3.072,2215,3.072,2216,3.072,2217,3.072,2218,3.072,2219,3.072,2220,4.421,2221,3.072,2222,3.072,2223,3.072,2224,3.072,2225,3.072,2226,3.072,2227,3.072,2228,3.072,2229,3.072,2230,5.665,2231,3.072,2232,3.072,2233,3.072,2234,3.072,2235,3.072,2236,3.072,2237,3.072,2238,3.072,2239,3.072,2240,3.072,2241,3.072,2242,3.072,2243,3.072,2244,3.072,2245,3.072]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":947,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/LoginPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["0\">kick",{"_index":1079,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["0.0.0",{"_index":2158,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":2073,"title":{},"body":{"dependencies.html":{}}}],["0.185rem",{"_index":392,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.25rem",{"_index":393,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.31.0",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":410,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.51",{"_index":1726,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0.875rem",{"_index":1702,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0/1",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["00a2a8",{"_index":2087,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["0275d8",{"_index":2086,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1",{"_index":375,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":1703,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1.5vh",{"_index":1413,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["1/1",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1423,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/NotificationService.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["100vw",{"_index":1732,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["104",{"_index":1725,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["11/12",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["114px",{"_index":1722,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["117",{"_index":405,"title":{},"body":{"components/CalanderComponent.html":{}}}],["12",{"_index":2156,"title":{},"body":{"overview.html":{}}}],["12/13",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2155,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["15.1.2",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1419,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["16.0.0",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["16.1.0",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":2097,"title":{},"body":{"index.html":{}}}],["16.2.12",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["16.2.14",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":1715,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["17",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17,30",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.0.0",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["19,30",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:297938436292:web:f09902d21ddd4fde388991",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:xxxxxxxxxxxx:web:xxxxxxxxxxxxxxxxxxxxxxxx",{"_index":2130,"title":{},"body":{"index.html":{}}}],["1a4668",{"_index":1728,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1em",{"_index":1391,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["1px",{"_index":1707,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1s",{"_index":1743,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["2",{"_index":694,"title":{},"body":{"injectables/CalendarService.html":{},"components/LoginPageComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2*60*60*1000",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.11.8",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["216",{"_index":406,"title":{},"body":{"components/CalanderComponent.html":{}}}],["27",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":659,"title":{},"body":{"injectables/CalendarService.html":{}}}],["297938436292",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a2568",{"_index":1390,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2em",{"_index":1402,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2px",{"_index":1394,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["2rem",{"_index":397,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["3",{"_index":2133,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3/3",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["30,0",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.5vh",{"_index":1404,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["33",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":2137,"title":{},"body":{"index.html":{}}}],["4.16.4",{"_index":1373,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["4/5",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1716,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["48px",{"_index":1737,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5*60*60*1000",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1382,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["500ms",{"_index":736,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["50px",{"_index":1418,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["50vw",{"_index":1384,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["55595c",{"_index":1704,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5cb85c",{"_index":2085,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5jqei2sxcubehofay9f6vyc4wa8pj6s0",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":1399,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["5vh",{"_index":1405,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["6/6",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["60000",{"_index":839,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["66",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2157,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":2069,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1724,"title":{},"body":{"components/SearchPageComponent.html":{},"coverage.html":{}}}],["71",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["7vh",{"_index":1406,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["8",{"_index":848,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["80",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["80vh",{"_index":1395,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["83",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["992px",{"_index":1720,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["a.segment._embedded.genres.foreach((g:any",{"_index":1794,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["absolute",{"_index":1378,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["action",{"_index":1557,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["activatedroute",{"_index":1149,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["add",{"_index":928,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["addcalendarevent",{"_index":515,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addcalendarevent(calendarevent",{"_index":528,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addclassification(e:idclasstype",{"_index":1635,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["adddoc",{"_index":595,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["adddoc(calcollection",{"_index":641,"title":{},"body":{"injectables/CalendarService.html":{}}}],["adddoc(grpcollection",{"_index":1250,"title":{},"body":{"injectables/GroupService.html":{}}}],["added",{"_index":535,"title":{},"body":{"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["addevent",{"_index":915,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event",{"_index":925,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event:eventinterface",{"_index":936,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["adding",{"_index":1940,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["addresses",{"_index":1475,"title":{},"body":{"injectables/NotificationService.html":{}}}],["adds",{"_index":530,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["adds/removes",{"_index":1951,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["addtowatchlist",{"_index":1563,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addtowatchlist(event",{"_index":1569,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addtowatchlist(event:eventinterface",{"_index":1678,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addwatchlistevent",{"_index":1933,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["addwatchlistevent(user",{"_index":1938,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["adm",{"_index":1333,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["adm.push(grp",{"_index":1337,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["admin",{"_index":1068,"title":{},"body":{"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["admin.id",{"_index":1249,"title":{},"body":{"injectables/GroupService.html":{}}}],["admin:user1",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin:user4",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admingropu",{"_index":1854,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["admingroups",{"_index":1314,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["administrator",{"_index":1320,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["affect",{"_index":549,"title":{},"body":{"injectables/CalendarService.html":{}}}],["afterviewinit",{"_index":1131,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["afterviewinit,ondestroy",{"_index":1152,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["against",{"_index":540,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["aizasydjqng3ye8if6tcspj_pstfymizlnfvoow",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alender",{"_index":434,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["align",{"_index":389,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{}}}],["align:center",{"_index":1730,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["allavailable",{"_index":2084,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allowed",{"_index":667,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allowed.\">confirm",{"_index":1086,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["allprom",{"_index":705,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/ViewGroupFacade.html":{}}}],["allprom.push(this.calsvc.removereservedcalevent(this.group$.value",{"_index":1897,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["allprom.push(updatedoc(caldoc",{"_index":710,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allprom:promise",{"_index":1894,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["allusermap:any",{"_index":673,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[cal[\"uid",{"_index":680,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[group.admin.id",{"_index":674,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[member.id",{"_index":677,"title":{},"body":{"injectables/CalendarService.html":{}}}],["alluuid",{"_index":1101,"title":{},"body":{"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{}}}],["alluuid:[\"user1",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alluuid:[\"user4\",\"user1",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":1214,"title":{},"body":{"injectables/GroupService.html":{},"index.html":{}}}],["amonst",{"_index":362,"title":{},"body":{"components/CalanderComponent.html":{}}}],["angular",{"_index":2065,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":1866,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["angular/common",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["angular/compiler",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/firestore",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["angular/forms",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateGroupFacade.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{},"dependencies.html":{}}}],["animation",{"_index":1741,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["another",{"_index":1681,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["ans",{"_index":1802,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.genre.push({id:g.id",{"_index":1796,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.segment.push({id:a.segment.id",{"_index":1792,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.subgenre.push({id:sg.id",{"_index":1800,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans:classificationinterface",{"_index":1788,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["anum",{"_index":486,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["anum:number",{"_index":482,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["any)._location.origin+\"/group\"+\"/\"+group.id",{"_index":1493,"title":{},"body":{"injectables/NotificationService.html":{}}}],["any)._location.origin+\"/group\"+\"/\"+this.group$.value!.id",{"_index":1892,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["any)._location.origin+\"/ticketmaster",{"_index":1773,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["anything",{"_index":290,"title":{},"body":{"components/CalanderComponent.html":{}}}],["api",{"_index":799,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"index.html":{}}}],["apikey",{"_index":2120,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"index.html":{}}}],["app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":1981,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["appid",{"_index":2129,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1763,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["appmodule",{"_index":93,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":106,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":1473,"title":{},"body":{"injectables/NotificationService.html":{}}}],["arrayremove",{"_index":603,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayremove(this.eventtodbwatchlist(event",{"_index":1987,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayremove(toremove",{"_index":1284,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayremove(user.id",{"_index":1285,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion",{"_index":602,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayunion(this.eventtodbwatchlist(event",{"_index":1979,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayunion(user",{"_index":1270,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion(user.id",{"_index":1271,"title":{},"body":{"injectables/GroupService.html":{}}}],["asking",{"_index":1499,"title":{},"body":{"injectables/NotificationService.html":{}}}],["attempt",{"_index":1980,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["auth",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["authapi.isauthenticated().pipe",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authapi:authenticationservice",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"miscellaneous/variables.html":{}}}],["authapi:authenticationservice,private",{"_index":1434,"title":{},"body":{"components/NavigationComponent.html":{}}}],["authdomain",{"_index":2122,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":1365,"title":{},"body":{"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["authenticationservice",{"_index":39,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"coverage.html":{}}}],["authguard",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authsvc",{"_index":828,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["authsvc:authenticationservice",{"_index":468,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["availabilities",{"_index":552,"title":{},"body":{"injectables/CalendarService.html":{}}}],["availability",{"_index":1194,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["available",{"_index":1089,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"modules.html":{}}}],["b0d04a",{"_index":2089,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backdrop",{"_index":1733,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["background",{"_index":400,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupListComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["bar",{"_index":1426,"title":{},"body":{"components/NavigationComponent.html":{}}}],["base_url",{"_index":1891,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["based",{"_index":1527,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["baseurl",{"_index":1751,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["baseurl:string",{"_index":1771,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["before",{"_index":1364,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/NotificationService.html":{}}}],["behaviorsubject",{"_index":445,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["behaviorsubject(false",{"_index":1610,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["behaviorsubject(undefined",{"_index":1325,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject({id:\"\",email:\"\",name",{"_index":1868,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject({segment",{"_index":1589,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["behaviorsubject({size:20",{"_index":1596,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["being",{"_index":316,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["better",{"_index":465,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["between",{"_index":539,"title":{},"body":{"injectables/CalendarService.html":{}}}],["bgcolor",{"_index":421,"title":{},"body":{"interfaces/CalanderEventColor.html":{}}}],["bgcolor:calandercolor",{"_index":420,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["bgimg",{"_index":1374,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgimgstrip",{"_index":1375,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgleft",{"_index":1385,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgright",{"_index":1387,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["blast",{"_index":1465,"title":{},"body":{"injectables/NotificationService.html":{}}}],["block",{"_index":395,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["blur(5px",{"_index":1734,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bnum",{"_index":487,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["bnum:number",{"_index":484,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["bold",{"_index":1411,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["booekd",{"_index":1215,"title":{},"body":{"injectables/GroupService.html":{}}}],["book\",\"confirm",{"_index":1069,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["booked",{"_index":479,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["booked:false",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookedforevent",{"_index":697,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/enumerations.html":{}}}],["booking",{"_index":1019,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["books",{"_index":1504,"title":{},"body":{"injectables/NotificationService.html":{}}}],["boolean",{"_index":542,"title":{},"body":{"injectables/CalendarService.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/GroupInterface.html":{},"pipes/InwatchlistPipe.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["bootstrap",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["border",{"_index":1392,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["bottom",{"_index":1738,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bought",{"_index":1084,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["box",{"_index":1416,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["brightness(95",{"_index":1129,"title":{},"body":{"components/GroupListComponent.html":{}}}],["browse",{"_index":2153,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":1126,"title":{},"body":{"components/GroupListComponent.html":{}}}],["btn",{"_index":1714,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bud",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.appspot.com",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.firebaseapp.com",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buddy",{"_index":1506,"title":{},"body":{"injectables/NotificationService.html":{}}}],["build",{"_index":1776,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["buto",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["c.name",{"_index":775,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["c.start",{"_index":638,"title":{},"body":{"injectables/CalendarService.html":{}}}],["c.type!==calandertype.personal",{"_index":637,"title":{},"body":{"injectables/CalendarService.html":{}}}],["cal",{"_index":1540,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["cal.some(c",{"_index":636,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calaa",{"_index":1060,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["calander",{"_index":293,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["calander'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["calander.component.css",{"_index":294,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander.component.html",{"_index":295,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calandercolor",{"_index":336,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{}}}],["calandercolor.bookedforevent",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.notfreeatall",{"_index":1889,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercolor.personal",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.reservedforevent",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.somefree",{"_index":1890,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercomponent",{"_index":57,"title":{"components/CalanderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calanderevent",{"_index":309,"title":{"interfaces/CalanderEvent.html":{}},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandereventcolor",{"_index":418,"title":{"interfaces/CalanderEventColor.html":{}},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"coverage.html":{}}}],["calandertype",{"_index":416,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{}}}],["calandertype.bookedforevent",{"_index":617,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["calandertype.personal",{"_index":1536,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"miscellaneous/variables.html":{}}}],["calandertype.reservedforevent",{"_index":616,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"miscellaneous/variables.html":{}}}],["calandertype[dbcalent[\"type",{"_index":612,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calandertypecolor",{"_index":456,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandertypecolor.get(e.type)||calandercolor.default",{"_index":498,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calandertypepriority",{"_index":457,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandertypepriority.get(a.type)||0",{"_index":483,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calandertypepriority.get(b.type)||0",{"_index":485,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calc(3rem",{"_index":1710,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["calc(50",{"_index":1400,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calc(80vh",{"_index":1398,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calcollection",{"_index":623,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc",{"_index":625,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc[\"grp",{"_index":632,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar",{"_index":344,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"dependencies.html":{}}}],["calendar.service",{"_index":1228,"title":{},"body":{"injectables/GroupService.html":{}}}],["calendar/${cal.id",{"_index":706,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar/${calendarevent.id",{"_index":689,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent",{"_index":531,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.detail",{"_index":630,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.end",{"_index":629,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.groupid",{"_index":633,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.groupname",{"_index":634,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.start",{"_index":628,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.type",{"_index":631,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.user.id",{"_index":627,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevents",{"_index":566,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarfacade",{"_index":422,"title":{"injectables/CalendarFacade.html":{}},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["calendarondisplay",{"_index":1520,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["calendarservice",{"_index":452,"title":{"injectables/CalendarService.html":{}},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["calender",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["calenderevent",{"_index":541,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent",{"_index":506,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{}}}],["calevent.groupid",{"_index":618,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.groupname",{"_index":620,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.start",{"_index":655,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type",{"_index":615,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type==calandertype.bookedforevent",{"_index":684,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type==calandertype.reservedforevent",{"_index":683,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevents",{"_index":475,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calevents.map",{"_index":489,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calevents.sort((a,b)=>{//sort",{"_index":476,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["call",{"_index":800,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/SearchPageComponent.html":{}}}],["called",{"_index":970,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["calls",{"_index":663,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/TicketmasterService.html":{}}}],["calsvc",{"_index":469,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["calupdateprom",{"_index":1910,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["canactivate:[authguard",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivate:[authguard]},//for",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalize",{"_index":1717,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["carry",{"_index":640,"title":{},"body":{"injectables/CalendarService.html":{}}}],["cat",{"_index":1560,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["cat$:behaviorsubject",{"_index":1616,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["catch((err:error",{"_index":991,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["catch(err",{"_index":643,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["catch(err=>rej(err",{"_index":510,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["catch(rej",{"_index":1983,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["catcherror",{"_index":1767,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["catcherror((err)=>throwerror(\"network",{"_index":1835,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["categories/genre",{"_index":1591,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["cb",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ccc",{"_index":1709,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["center",{"_index":390,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{}}}],["change",{"_index":695,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["changepage",{"_index":1564,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changepage(pgnum",{"_index":1571,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changepage(pgnum:number",{"_index":1668,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changes",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/GroupDetailComponent.html":{}}}],["check",{"_index":361,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":533,"title":{},"body":{"injectables/CalendarService.html":{}}}],["checkup",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chooose",{"_index":1000,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["choose",{"_index":1001,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["chosegroup",{"_index":1134,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group",{"_index":1137,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group:groupinterface",{"_index":1167,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen.name",{"_index":1176,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen:groupinterface",{"_index":1154,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cid$:behaviorsubject",{"_index":1614,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["clash",{"_index":516,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/ViewGroupFacade.html":{}}}],["clash(event",{"_index":536,"title":{},"body":{"injectables/CalendarService.html":{}}}],["clashes",{"_index":534,"title":{},"body":{"injectables/CalendarService.html":{}}}],["class",{"_index":42,"title":{"classes/EventClass.html":{},"classes/NewCalendarEvent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["class/newcalendarevent",{"_index":461,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["classes",{"_index":875,"title":{},"body":{"classes/EventClass.html":{},"classes/NewCalendarEvent.html":{},"overview.html":{}}}],["classfication",{"_index":741,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["classficiation",{"_index":733,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["classifcation",{"_index":1759,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["classification",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["classification:eventemitter",{"_index":753,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["classificationcomponentcomponent",{"_index":59,"title":{"components/ClassificationComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classificationemitter:eventemitter",{"_index":1689,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationinterface",{"_index":776,"title":{"interfaces/ClassificationInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["classifier/genre",{"_index":719,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["classinput:string",{"_index":1686,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classtype",{"_index":750,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["clean",{"_index":441,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["cli",{"_index":2096,"title":{},"body":{"index.html":{}}}],["click",{"_index":1503,"title":{},"body":{"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["clicked",{"_index":317,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["clickeddate",{"_index":302,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clicks",{"_index":1115,"title":{},"body":{"components/GroupListComponent.html":{}}}],["clipboard",{"_index":1865,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["clipboard:clipboard",{"_index":1869,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["clone",{"_index":2103,"title":{},"body":{"index.html":{}}}],["close",{"_index":962,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["closeresult",{"_index":961,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["cloud",{"_index":2138,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cmicount==group.alluuid.length)return",{"_index":1888,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["code",{"_index":770,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["collection",{"_index":594,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collection(this.fs",{"_index":624,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collectiondata",{"_index":598,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectiondata(q",{"_index":648,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectionreference",{"_index":596,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["color",{"_index":308,"title":{},"body":{"components/CalanderComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupListComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["coloured",{"_index":312,"title":{},"body":{"components/CalanderComponent.html":{}}}],["colours",{"_index":451,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["command",{"_index":2149,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2113,"title":{},"body":{"index.html":{}}}],["common/calander/calander.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["common/navigation/navigation.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["comonepnt",{"_index":1926,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["complete",{"_index":1667,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["completed",{"_index":2114,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["component'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["component.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.css",{"_index":722,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.html",{"_index":723,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts",{"_index":717,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:17",{"_index":922,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:18",{"_index":727,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:21",{"_index":919,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:23",{"_index":931,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:29",{"_index":930,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:30",{"_index":730,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:36",{"_index":926,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:62",{"_index":739,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:70",{"_index":743,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component/classification",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["component/event",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component:grouppagecomponent",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:loginpagecomponent",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:personalcalenderpagecomponent",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:searchpagecomponent",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:watchlistpagecomponent",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["componoent",{"_index":1029,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["concatmap",{"_index":1768,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["concert",{"_index":1496,"title":{},"body":{"injectables/NotificationService.html":{}}}],["config",{"_index":2111,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":1017,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmation",{"_index":1032,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmed",{"_index":551,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["confirmed:string",{"_index":1104,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["confirmgoing",{"_index":1007,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["confirmgroupbooking",{"_index":1008,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmgroupbooking(group",{"_index":1187,"title":{},"body":{"injectables/GroupService.html":{}}}],["confirmgroupevent",{"_index":1178,"title":{},"body":{"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmgroupevent(group",{"_index":1191,"title":{},"body":{"injectables/GroupService.html":{}}}],["confirming",{"_index":1195,"title":{},"body":{"injectables/GroupService.html":{}}}],["congratulations",{"_index":1509,"title":{},"body":{"injectables/NotificationService.html":{}}}],["console",{"_index":2134,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":1898,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["console.log(\"logout",{"_index":1371,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log(cmicount+\"/\"+group.alluuid.length",{"_index":1887,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["console.log(result",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(x",{"_index":1808,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["const",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CalendarService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["constructor(auth",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(calsvc",{"_index":1183,"title":{},"body":{"injectables/GroupService.html":{}}}],["constructor(e",{"_index":881,"title":{},"body":{"classes/EventClass.html":{}}}],["constructor(e:eventinterface",{"_index":896,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["constructor(fs",{"_index":524,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(http",{"_index":1754,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["constructor(private",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(public",{"_index":754,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/NavigationComponent.html":{}}}],["constructor(searchfacade",{"_index":918,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["contact",{"_index":1510,"title":{},"body":{"injectables/NotificationService.html":{}}}],["container",{"_index":1729,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["contains",{"_index":311,"title":{},"body":{"components/CalanderComponent.html":{}}}],["contains\",user.id",{"_index":1258,"title":{},"body":{"injectables/GroupService.html":{}}}],["content",{"_index":1206,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{}}}],["content:ngbmodal",{"_index":982,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["context",{"_index":1113,"title":{},"body":{"components/GroupListComponent.html":{}}}],["controller",{"_index":1519,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["convert",{"_index":558,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["converted",{"_index":1947,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["convertreservedtobooked",{"_index":517,"title":{},"body":{"injectables/CalendarService.html":{}}}],["convertreservedtobooked(grp",{"_index":544,"title":{},"body":{"injectables/CalendarService.html":{}}}],["converts",{"_index":547,"title":{},"body":{"injectables/CalendarService.html":{}}}],["converttolistofstrings",{"_index":1135,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members",{"_index":1139,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members:userinterface",{"_index":1170,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttongbdate(d:date",{"_index":352,"title":{},"body":{"components/CalanderComponent.html":{}}}],["copied",{"_index":1050,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["copy",{"_index":2116,"title":{},"body":{"index.html":{}}}],["copyinvitelink",{"_index":1047,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["corresponding",{"_index":307,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{}}}],["coverage",{"_index":1988,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":433,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["create'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["create.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["create.component.css",{"_index":959,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.html",{"_index":960,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts",{"_index":958,"title":{},"body":{"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:29",{"_index":972,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:51",{"_index":968,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:58",{"_index":966,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:70",{"_index":971,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:77",{"_index":964,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create/group",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["created",{"_index":436,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"index.html":{}}}],["createevent",{"_index":426,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["createevent(newcalevent",{"_index":430,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["creategroup",{"_index":794,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["creategroup(name",{"_index":1196,"title":{},"body":{"injectables/GroupService.html":{}}}],["creategroup(selectedevent",{"_index":796,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["creategroupfacade",{"_index":792,"title":{"injectables/CreateGroupFacade.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["creation",{"_index":870,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["cs.foreach((a",{"_index":1790,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["cs:any",{"_index":1786,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["css",{"_index":1699,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["current",{"_index":444,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/NavigationComponent.html":{}}}],["currently",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuser",{"_index":463,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/NavigationComponent.html":{}}}],["currentuser$:behaviorsubject",{"_index":1867,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["currentuser:string",{"_index":1433,"title":{},"body":{"components/NavigationComponent.html":{}}}],["currentuser?:userinterface",{"_index":1155,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cursor",{"_index":944,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["cursor:pointer",{"_index":1125,"title":{},"body":{"components/GroupListComponent.html":{}}}],["custom",{"_index":386,"title":{},"body":{"components/CalanderComponent.html":{}}}],["d",{"_index":1904,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["d.getdate",{"_index":355,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d.getmonth()+1",{"_index":354,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d9534f",{"_index":2081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d:date",{"_index":843,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["data",{"_index":447,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["data.foreach(cal",{"_index":652,"title":{},"body":{"injectables/CalendarService.html":{}}}],["data.foreach(grp",{"_index":1259,"title":{},"body":{"injectables/GroupService.html":{}}}],["data===undefined",{"_index":1265,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["data['saved'].foreach((event",{"_index":1976,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["database",{"_index":2139,"title":{},"body":{"index.html":{}}}],["date",{"_index":305,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["date()).gettimezoneoffset",{"_index":838,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(2024",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(d.gettime",{"_index":846,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(date.year",{"_index":378,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date(dbevent['enddate']?.todate",{"_index":1971,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(dbevent['startdate']?.todate",{"_index":1969,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(e.dates?.end",{"_index":1819,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(e.dates?.start.datetime",{"_index":1817,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(end.year",{"_index":382,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date(grp.event.enddate",{"_index":859,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(grp.event.startdate",{"_index":857,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(start.gettime",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start.year",{"_index":373,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date(start2.gettime",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start3.gettime",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(this.start",{"_index":1454,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["date.day",{"_index":380,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date.month",{"_index":379,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date:'medium",{"_index":941,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["date:\\'medium",{"_index":950,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["date:ngbdate",{"_index":370,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["dateclicked",{"_index":1522,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["dateclicked(date",{"_index":1525,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["datecolor",{"_index":299,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["datedate:date",{"_index":377,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["dates",{"_index":450,"title":{},"body":{"injectables/CalendarFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":387,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["day.faded",{"_index":408,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.focused",{"_index":399,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.range",{"_index":402,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day:hover",{"_index":403,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dbcalent",{"_index":560,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"detail",{"_index":611,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"end\"].todate",{"_index":610,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"grp\"][\"id",{"_index":619,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"grp\"][\"name",{"_index":621,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"id",{"_index":608,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"start\"].todate",{"_index":609,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbevent",{"_index":1943,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['details",{"_index":1967,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['enddate",{"_index":1970,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['id",{"_index":1963,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['images",{"_index":1966,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['location",{"_index":1965,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['name",{"_index":1964,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['startdate",{"_index":1968,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbgroup",{"_index":1200,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"admin",{"_index":1238,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"alluuid",{"_index":1242,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"booked",{"_index":1241,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"confirmed",{"_index":1240,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].end.todate",{"_index":1234,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].id",{"_index":1231,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].name",{"_index":1232,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].start.todate",{"_index":1233,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"][\"details",{"_index":1235,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"][\"imageurls",{"_index":1236,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"][\"locations",{"_index":1237,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"id",{"_index":1229,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"members",{"_index":1239,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"name",{"_index":1230,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtocalendarevent",{"_index":518,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtocalendarevent(dbcalent",{"_index":555,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtogroupinterface",{"_index":1179,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtogroupinterface(dbgroup",{"_index":1198,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbwatchlisttoevent",{"_index":1934,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbwatchlisttoevent(dbevent",{"_index":1941,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["ddff00",{"_index":1420,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["debouncetime",{"_index":745,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["debouncetime(500",{"_index":757,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["declarations",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":1097,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["default",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/GroupCreateComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/ListEventsComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["del",{"_index":1899,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["delay",{"_index":1769,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["delete",{"_index":439,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["deleted",{"_index":581,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["deletedoc",{"_index":604,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["deletedoc(caldoc).then(birdbird",{"_index":693,"title":{},"body":{"injectables/CalendarService.html":{}}}],["deletedoc(grpdoc).then(_",{"_index":1288,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteevent",{"_index":427,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e",{"_index":437,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e:calanderevent",{"_index":502,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["deletegroup",{"_index":1009,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["deletegroup(group",{"_index":1201,"title":{},"body":{"injectables/GroupService.html":{}}}],["deletes",{"_index":580,"title":{},"body":{"injectables/CalendarService.html":{}}}],["deletion",{"_index":582,"title":{},"body":{"injectables/CalendarService.html":{}}}],["denied",{"_index":1254,"title":{},"body":{"injectables/GroupService.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["destroy",{"_index":428,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["detail",{"_index":413,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["detail'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["detail.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["detail.component.css",{"_index":1005,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.html",{"_index":1006,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts",{"_index":1004,"title":{},"body":{"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:103",{"_index":1015,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":1014,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":1026,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:43",{"_index":1027,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":1020,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:59",{"_index":1024,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:74",{"_index":1021,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:86",{"_index":1030,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:94",{"_index":1018,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail/group",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail:\"dental",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"doctors",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"school",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:string",{"_index":1450,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["details",{"_index":876,"title":{},"body":{"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["details:\"fake",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details:e.description",{"_index":1821,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["details:new",{"_index":825,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["details:string",{"_index":893,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["diplays",{"_index":912,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["directive",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["display",{"_index":289,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"components/SearchPageComponent.html":{}}}],["displayed",{"_index":921,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupListComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["displays",{"_index":718,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["distroy",{"_index":965,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["doc",{"_index":600,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["doc(this.fs",{"_index":688,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata",{"_index":599,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata(grpdoc",{"_index":1263,"title":{},"body":{"injectables/GroupService.html":{}}}],["docdata(watchdoc).subscribe(data",{"_index":1974,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["document",{"_index":561,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["documentation",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":556,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["documentreference",{"_index":593,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["done",{"_index":1457,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["download",{"_index":2099,"title":{},"body":{"index.html":{}}}],["dp:ngbdatepicker|undefined",{"_index":342,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dynamic",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":365,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"classes/EventClass.html":{},"pipes/InwatchlistPipe.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.detail",{"_index":1092,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.details",{"_index":905,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.end",{"_index":1559,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e.end.getmonth()+1,e.end.getdate",{"_index":496,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e.end|date:\"medium",{"_index":1094,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e.id",{"_index":898,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"pipes/InwatchlistPipe.html":{}}}],["e.id)return",{"_index":1639,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["e.images",{"_index":903,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.location",{"_index":901,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.start",{"_index":1558,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e.start.getmonth()+1,e.start.getdate",{"_index":493,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e.start|date:\"medium",{"_index":1093,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e.user.name",{"_index":1091,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e1",{"_index":2025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2",{"_index":2026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e6e6e6",{"_index":401,"title":{},"body":{"components/CalanderComponent.html":{}}}],["e:calanderevent",{"_index":490,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e?.enddate",{"_index":909,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e?.startdate",{"_index":907,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e[1",{"_index":368,"title":{},"body":{"components/CalanderComponent.html":{}}}],["earlier",{"_index":2115,"title":{},"body":{"index.html":{}}}],["ed",{"_index":1826,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ed:date",{"_index":1818,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["efcb00",{"_index":2088,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["em!:eventemitter",{"_index":983,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["email",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/NotificationService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["emaillist",{"_index":1488,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emaillist.push(member.email",{"_index":1490,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emails",{"_index":1474,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emit",{"_index":315,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupListComponent.html":{}}}],["enable",{"_index":2136,"title":{},"body":{"index.html":{}}}],["end",{"_index":306,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end.day",{"_index":384,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["end.month",{"_index":383,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["end2",{"_index":2027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end3",{"_index":2028,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end:end",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end2",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end3",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:ngbdate",{"_index":1545,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end:ngbdate):boolean",{"_index":371,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["end:string",{"_index":1449,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["enddate",{"_index":877,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["enddate:(!number.isnan(ed.valueof",{"_index":1825,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["enddate:date",{"_index":381,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["enddate:new",{"_index":827,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["enddate:ngbdate",{"_index":494,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["enddate?:date",{"_index":895,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["ends",{"_index":670,"title":{},"body":{"injectables/CalendarService.html":{}}}],["enough",{"_index":1484,"title":{},"body":{"injectables/NotificationService.html":{}}}],["enum",{"_index":783,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["enumerations",{"_index":2075,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/calenderenum",{"_index":417,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["env",{"_index":2105,"title":{},"body":{"index.html":{}}}],["environments/env",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":1165,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["err.code",{"_index":1252,"title":{},"body":{"injectables/GroupService.html":{}}}],["err===\"group",{"_index":872,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["error",{"_index":993,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["error$:eventemitter",{"_index":1615,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["error(\"cal",{"_index":639,"title":{},"body":{"injectables/CalendarService.html":{}}}],["error(\"group",{"_index":865,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["error(\"invalid",{"_index":512,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["error:(err",{"_index":1054,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["event!:eventinterface",{"_index":933,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["event\",\"calender",{"_index":1554,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["event.details",{"_index":940,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.enddate",{"_index":942,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.id",{"_index":1245,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.images",{"_index":1247,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.location",{"_index":939,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.name",{"_index":938,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.startdate",{"_index":656,"title":{},"body":{"injectables/CalendarService.html":{},"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event:calanderevent",{"_index":419,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["event:eventinterface",{"_index":1102,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["event:n",{"_index":852,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["event:this.formbuilder.group",{"_index":821,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["eventclass",{"_index":874,"title":{"classes/EventClass.html":{}},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"coverage.html":{}}}],["eventcomponentcomponent",{"_index":62,"title":{"components/EventComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventemitter",{"_index":313,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["eventinput$:behaviorsubject",{"_index":1611,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["eventinput:string",{"_index":1687,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinputemitter:eventemitter",{"_index":1690,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinterface",{"_index":537,"title":{"interfaces/EventInterface.html":{}},"body":{"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventpageinterface",{"_index":951,"title":{"interfaces/EventPageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["events",{"_index":300,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"interfaces/EventPageInterface.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["events!:calanderevent",{"_index":339,"title":{},"body":{"components/CalanderComponent.html":{}}}],["events'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["events.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["events.component.css",{"_index":1353,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.html",{"_index":1354,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts",{"_index":1352,"title":{},"body":{"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events.component.ts:12",{"_index":1355,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts:13",{"_index":1356,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events/inwatchlist.pipe",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["events/inwatchlist.pipe.ts",{"_index":1346,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"coverage.html":{}}}],["events/inwatchlist.pipe.ts:19",{"_index":1348,"title":{},"body":{"pipes/InwatchlistPipe.html":{}}}],["events/list",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events:eventinterface",{"_index":955,"title":{},"body":{"interfaces/EventPageInterface.html":{},"components/ListEventsComponent.html":{}}}],["events:undefined",{"_index":1806,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["eventtodbwatchlist",{"_index":1935,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event",{"_index":1944,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event:eventinterface",{"_index":1955,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["everyone",{"_index":1088,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["evt.enddate",{"_index":850,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["evt.name",{"_index":1002,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["evt.startdate",{"_index":844,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["exist",{"_index":1216,"title":{},"body":{"injectables/GroupService.html":{}}}],["export",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["exports",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":784,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["extension",{"_index":2143,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":2142,"title":{},"body":{"index.html":{}}}],["f0ad4e",{"_index":2083,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade",{"_index":424,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["facade.service",{"_index":749,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["facade.service.ts",{"_index":1312,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"coverage.html":{}}}],["facade.service.ts:105",{"_index":1576,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:135",{"_index":1586,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:17",{"_index":1923,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:170",{"_index":1572,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:197",{"_index":1585,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:206",{"_index":1570,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:23",{"_index":1326,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:27",{"_index":1324,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:31",{"_index":1327,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:35",{"_index":1594,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:39",{"_index":1601,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:48",{"_index":1323,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:50",{"_index":1921,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:51",{"_index":1590,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:55",{"_index":1599,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:56",{"_index":1920,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["facade.service.ts:58",{"_index":1321,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:64",{"_index":1316,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:70",{"_index":1319,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["facade.service.ts:74",{"_index":1583,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:81",{"_index":1574,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:92",{"_index":1581,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade/grouppage",{"_index":1151,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["facade/personalcalendarfacade",{"_index":1538,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["facade/search",{"_index":1685,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["facade/watchlist",{"_index":1928,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["fail",{"_index":1213,"title":{},"body":{"injectables/GroupService.html":{}}}],["false",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{}}}],["fan",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["far",{"_index":1587,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["fascase",{"_index":1061,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["fff",{"_index":1705,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["fields",{"_index":666,"title":{},"body":{"injectables/CalendarService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":1128,"title":{},"body":{"components/GroupListComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["filter((x:any",{"_index":1782,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["filters",{"_index":573,"title":{},"body":{"injectables/CalendarService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{}}}],["firebase",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firebase/auth",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebaseconfig",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firesotre",{"_index":1946,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["firestore",{"_index":525,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["first",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["first:from(this.calsvc.addcalendarevent",{"_index":1295,"title":{},"body":{"injectables/GroupService.html":{}}}],["firstore",{"_index":532,"title":{},"body":{"injectables/CalendarService.html":{}}}],["fit",{"_index":1811,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["fixed",{"_index":1731,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["following",{"_index":2109,"title":{},"body":{"index.html":{}}}],["following.export",{"_index":2119,"title":{},"body":{"index.html":{}}}],["font",{"_index":1409,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["for(var",{"_index":1638,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["forkjoin",{"_index":1223,"title":{},"body":{"injectables/GroupService.html":{}}}],["format",{"_index":562,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["formbuilder",{"_index":815,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["formcontrol",{"_index":816,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["formsmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule,reactiveformsmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1267,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["from(this.authsvc.getcurrentuser()).pipe",{"_index":1329,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["fs",{"_index":527,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["fullscreen:true",{"_index":996,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["further",{"_index":1085,"title":{},"body":{"components/GroupDetailComponent.html":{},"index.html":{}}}],["g",{"_index":1852,"title":{},"body":{"injectables/ViewGroupFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["g._embedded.subgenres.foreach((sg:any",{"_index":1798,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["g.event.name",{"_index":1121,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.members",{"_index":1122,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.name",{"_index":1120,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g1",{"_index":2029,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["g2",{"_index":2030,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":2095,"title":{},"body":{"index.html":{}}}],["genre",{"_index":777,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["genre:[]};//must",{"_index":1789,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["genre:idname",{"_index":781,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["genreinterface",{"_index":788,"title":{"interfaces/GenreInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["genres",{"_index":1749,"title":{},"body":{"interfaces/SegmentInterface.html":{}}}],["genres:genreinterface",{"_index":787,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["getauth",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["getcalendar",{"_index":519,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getcalendar(user",{"_index":564,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getclassification",{"_index":1565,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["getclassification(kw",{"_index":1575,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["getclassification(kw:string",{"_index":1631,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["getclassification(kw:string):observable",{"_index":1778,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getcurrentuser",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["getcurrentuser():promise",{"_index":269,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["geteventsquery",{"_index":1753,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query",{"_index":1760,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query:any):observable",{"_index":1828,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getfirestore",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["getgroup",{"_index":1840,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroup(id",{"_index":1846,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroup(id:string",{"_index":1876,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupbyid",{"_index":1180,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupbyid(groupid",{"_index":1203,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupcalander",{"_index":1841,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalander(g",{"_index":1849,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalander(g:groupinterface",{"_index":1880,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalendar",{"_index":520,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroupcalendar(group",{"_index":569,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroups",{"_index":1181,"title":{},"body":{"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["getgroups(user",{"_index":1207,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgrpbyid(id",{"_index":1341,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["gets",{"_index":571,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getstartdate(d",{"_index":1903,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getting",{"_index":2092,"title":{"index.html":{}},"body":{}}],["getwatchlist",{"_index":1566,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["getwatchlist(user",{"_index":1948,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["go",{"_index":1500,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["going",{"_index":707,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gold",{"_index":949,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["good",{"_index":1483,"title":{},"body":{"injectables/NotificationService.html":{}}}],["google",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{},"index.html":{}}}],["googleauthprovider",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["googleimg",{"_index":1401,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["googlesignin",{"_index":1358,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["gradient(#ffff75,#ffff99,#ddff00",{"_index":1415,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["graph",{"_index":2154,"title":{},"body":{"modules.html":{}}}],["group",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/variables.html":{}}}],["group!:groupinterface",{"_index":1036,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["group's",{"_index":574,"title":{},"body":{"injectables/CalendarService.html":{}}}],["group(s",{"_index":1172,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["group.admin",{"_index":675,"title":{},"body":{"injectables/CalendarService.html":{}}}],["group.admin.name",{"_index":1498,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(member.id",{"_index":1489,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(user.id",{"_index":1286,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.event.enddate",{"_index":1296,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.event.name||'concert",{"_index":1508,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.name||'the",{"_index":1495,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.startdate",{"_index":672,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["group.event.startdate!.todatestring",{"_index":1501,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.id",{"_index":685,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["group.members.foreach(member",{"_index":676,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["group.name",{"_index":1297,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["group/${group.id",{"_index":1279,"title":{},"body":{"injectables/GroupService.html":{}}}],["group/${groupid",{"_index":1262,"title":{},"body":{"injectables/GroupService.html":{}}}],["group:groupinterface",{"_index":1871,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["groupbyid",{"_index":1328,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["groupcalendar",{"_index":1839,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["groupclicked",{"_index":1117,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupcreatecomponent",{"_index":64,"title":{"components/GroupCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdetailcomponent",{"_index":67,"title":{"components/GroupDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdoc",{"_index":1244,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupdoc).then((docref",{"_index":1251,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupid",{"_index":414,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/GroupService.html":{}}}],["groupid:string",{"_index":1156,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["groupinterface",{"_index":545,"title":{"interfaces/GroupInterface.html":{}},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouplistcomponent",{"_index":69,"title":{"components/GroupListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupmemberpipe",{"_index":1123,"title":{},"body":{"components/GroupListComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["groupmemberpipepipe",{"_index":104,"title":{"pipes/GroupmemberPipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groupmemberstatus",{"_index":2078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["groupname",{"_index":415,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/GroupService.html":{}}}],["grouppage",{"_index":1313,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["grouppagecomponent",{"_index":71,"title":{"components/GroupPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grouppagefacadeservice",{"_index":1150,"title":{"injectables/GrouppageFacadeService.html":{}},"body":{"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"coverage.html":{}}}],["grouppipepipe",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["groups",{"_index":1109,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"components/NavigationComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["groups!:groupinterface",{"_index":1116,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupservice",{"_index":810,"title":{"injectables/GroupService.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["grp",{"_index":553,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["grp.admin.id",{"_index":1336,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["grp.alluuid.includes(user.id",{"_index":1275,"title":{},"body":{"injectables/GroupService.html":{}}}],["grp.booked",{"_index":1277,"title":{},"body":{"injectables/GroupService.html":{}}}],["grp.confirmed",{"_index":699,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.event",{"_index":868,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.enddate",{"_index":858,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.images",{"_index":862,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.location",{"_index":860,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.name",{"_index":708,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.event.startdate",{"_index":856,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.group$.value?.event?.details",{"_index":1075,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.enddate|date:'medium",{"_index":1077,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.enddate|date:\\'medium\\'}}invite",{"_index":1100,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.location",{"_index":1074,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.name",{"_index":1073,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.startdate|date:'medium",{"_index":1076,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.startdate|date:\\'medium",{"_index":1099,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.id",{"_index":1071,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.name",{"_index":1072,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$|async)!.admin.name",{"_index":1080,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.id",{"_index":701,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.name",{"_index":709,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp:any",{"_index":854,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grpcal.map(e=>e.user.id).includes(user.id",{"_index":1292,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpcal.sort((a,b)=>{//sort",{"_index":1884,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grpcollection",{"_index":1243,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpdoc",{"_index":1261,"title":{},"body":{"injectables/GroupService.html":{}}}],["grps.foreach(grp",{"_index":1335,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["grpsvc",{"_index":829,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["grpupdateprom",{"_index":1912,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["guard",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guards/auth.guard",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["handles",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["header",{"_index":1752,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["height",{"_index":396,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["height:80vh",{"_index":1376,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hello",{"_index":1497,"title":{},"body":{"injectables/NotificationService.html":{}}}],["help",{"_index":2146,"title":{},"body":{"index.html":{}}}],["here",{"_index":771,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"injectables/NotificationService.html":{},"components/SearchPageComponent.html":{}}}],["highest",{"_index":480,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["hovereddate",{"_index":346,"title":{},"body":{"components/CalanderComponent.html":{}}}],["html",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["http",{"_index":1757,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["httpclient",{"_index":1755,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["httpclientmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1762,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["https://app.ticketmaster.com/discovery/v2",{"_index":1777,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["https://picsum.photos/id/1/900/500",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://picsum.photos/id/2/900/500",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.user.id))].length",{"_index":1886,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["id",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdName.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["id\"}).subscribe(data",{"_index":1264,"title":{},"body":{"injectables/GroupService.html":{}}}],["id'}).subscribe",{"_index":650,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["id'}).subscribe(data",{"_index":703,"title":{},"body":{"injectables/CalendarService.html":{}}}],["id.appspot.com",{"_index":2126,"title":{},"body":{"index.html":{}}}],["id.firebaseapp.com",{"_index":2123,"title":{},"body":{"index.html":{}}}],["id:\"evt1",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"evt2",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp1",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp2",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1id",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:[\"\",validators.required",{"_index":822,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["id:e.id",{"_index":1820,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["id:string",{"_index":790,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["id:string|null",{"_index":1161,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["idclasstype",{"_index":738,"title":{"interfaces/IdClassType.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["identifier",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":649,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["idname",{"_index":751,"title":{"interfaces/IdName.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["ie",{"_index":740,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/GroupService.html":{}}}],["if(!a?.segment?.id",{"_index":1791,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!g?.id",{"_index":1795,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!group.event.enddate",{"_index":681,"title":{},"body":{"injectables/CalendarService.html":{}}}],["if(!sg?.id",{"_index":1799,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!x",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(a.start",{"_index":1885,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["if(changes[\"events",{"_index":348,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(evt.enddate",{"_index":849,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(evt.startdate",{"_index":842,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(grp.event.startdate>=grp.event.enddate",{"_index":864,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(i.id",{"_index":1351,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"injectables/SearchFacadeService.html":{}}}],["if(n",{"_index":1671,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["if(this.currentuser",{"_index":504,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["if(this.isinside(e[0][0],date,e[0][1",{"_index":367,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(x",{"_index":1658,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["ignore",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ignores",{"_index":575,"title":{},"body":{"injectables/CalendarService.html":{}}}],["iif",{"_index":1224,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["image",{"_index":1706,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["images",{"_index":878,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["images:[\"https://picsum.photos/id/0/900/500",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images:e.images.map((img:any)=>img.url",{"_index":1822,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["images:string",{"_index":892,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["images:this.formbuilder.array",{"_index":824,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["imageurls",{"_index":1246,"title":{},"body":{"injectables/GroupService.html":{}}}],["implements",{"_index":291,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["important",{"_index":1711,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["imports",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incompatible",{"_index":866,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["increase",{"_index":661,"title":{},"body":{"injectables/CalendarService.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indidicating",{"_index":1193,"title":{},"body":{"injectables/GroupService.html":{}}}],["inequalities",{"_index":664,"title":{},"body":{"injectables/CalendarService.html":{}}}],["infinite",{"_index":1745,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["inforamtion",{"_index":1848,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["information",{"_index":920,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["init",{"_index":1922,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["initiaate",{"_index":1360,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["initial",{"_index":1486,"title":{},"body":{"injectables/NotificationService.html":{}}}],["initialise",{"_index":622,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["initialise(id",{"_index":1855,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["initialise(id:string",{"_index":1870,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["initialize",{"_index":795,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["initializeapp",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(firebaseconfig",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(firebaseconfig)).html\">providefirebaseapp",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["initializecalender",{"_index":429,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["initializes",{"_index":731,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["initially",{"_index":1363,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["initiate",{"_index":927,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["initiates",{"_index":806,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["initiating",{"_index":732,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["inject",{"_index":329,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(authenticationservice",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(ngbcalendar",{"_index":345,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(router",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":211,"title":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"overview.html":{}}}],["inline",{"_index":394,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["input",{"_index":325,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["inputs",{"_index":298,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["install",{"_index":2100,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2098,"title":{},"body":{"index.html":{}}}],["interface",{"_index":258,"title":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["interface.ts",{"_index":412,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["interface.ts:11",{"_index":884,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:12",{"_index":887,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:13",{"_index":886,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:14",{"_index":885,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:15",{"_index":883,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:16",{"_index":888,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:17",{"_index":882,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:27",{"_index":890,"title":{},"body":{"classes/EventClass.html":{}}}],["interface/calanderevent",{"_index":335,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["interfaces",{"_index":411,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/calander",{"_index":455,"title":{},"body":{"injectables/CalendarFacade.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/clasification",{"_index":1602,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["interfaces/enums/calenderenum",{"_index":458,"title":{},"body":{"injectables/CalendarFacade.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/event",{"_index":814,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["interfaces/group",{"_index":1148,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/page",{"_index":1605,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["interfaces/user",{"_index":454,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["intialize",{"_index":1028,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["intiate",{"_index":967,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["invalid",{"_index":1906,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["invite",{"_index":1078,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["inwatchlist",{"_index":917,"title":{},"body":{"components/EventComponentComponent.html":{},"pipes/InwatchlistPipe.html":{}}}],["inwatchlist!:boolean",{"_index":932,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["inwatchlistpipe",{"_index":105,"title":{"pipes/InwatchlistPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/InwatchlistPipe.html":{},"coverage.html":{},"overview.html":{}}}],["isauth",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isequals",{"_index":880,"title":{},"body":{"classes/EventClass.html":{}}}],["isequals(other",{"_index":889,"title":{},"body":{"classes/EventClass.html":{}}}],["isequals(other:eventclass):boolean",{"_index":910,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["isinside",{"_index":1523,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["isinside(start",{"_index":1530,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["isinside(start:ngbdate",{"_index":369,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isvalid",{"_index":1440,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["join",{"_index":1022,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["joined",{"_index":1173,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["joingroup",{"_index":1010,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["joingroup(groupid",{"_index":1211,"title":{},"body":{"injectables/GroupService.html":{}}}],["joingroup(id",{"_index":1322,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["joining",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/GroupService.html":{}}}],["joins",{"_index":577,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["key",{"_index":2108,"title":{},"body":{"index.html":{}}}],["key.export",{"_index":2110,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":1746,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["keyof",{"_index":613,"title":{},"body":{"injectables/CalendarService.html":{}}}],["keys",{"_index":363,"title":{},"body":{"components/CalanderComponent.html":{}}}],["keyword",{"_index":1580,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"index.html":{}}}],["keyword:kw}}).pipe",{"_index":1781,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["kick",{"_index":1025,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kicked",{"_index":588,"title":{},"body":{"injectables/CalendarService.html":{}}}],["kicker",{"_index":1859,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["kickuser",{"_index":1011,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["kickuser(user",{"_index":1023,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["kickuser(user:userinterface",{"_index":1044,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kw",{"_index":1579,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["kw.length",{"_index":1784,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["lah",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lastclickeddate",{"_index":343,"title":{},"body":{"components/CalanderComponent.html":{}}}],["latest",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["left",{"_index":1396,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["left:0",{"_index":1386,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["left:50",{"_index":1380,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["legend",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["libraries",{"_index":2104,"title":{},"body":{"index.html":{}}}],["limited",{"_index":658,"title":{},"body":{"injectables/CalendarService.html":{}}}],["line",{"_index":1408,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"index.html":{}}}],["linear",{"_index":1744,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["link",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["list",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list.component",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":1106,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.html",{"_index":1107,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts",{"_index":1105,"title":{},"body":{"components/GroupListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":1110,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:25",{"_index":1112,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list/group",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"components/GroupListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":969,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["listeventscomponent",{"_index":73,"title":{"components/ListEventsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaded",{"_index":1595,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loadedevent",{"_index":1588,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loadedevents",{"_index":1561,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loadedevents$:behaviorsubject",{"_index":1612,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loading",{"_index":1684,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["loadingevents$:behaviorsubject",{"_index":1609,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["location",{"_index":879,"title":{},"body":{"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["location.reload",{"_index":1043,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["location:[\"seatle",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:[\"singpoare",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:e._embedded?.venues.map((v:any)=>v.name",{"_index":1823,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["location:string",{"_index":891,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["location:this.formbuilder.array",{"_index":823,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["locations",{"_index":1248,"title":{},"body":{"injectables/GroupService.html":{}}}],["log",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logged",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["loginbtn",{"_index":1389,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginbtn:active",{"_index":1397,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["logingoogle",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpagecomponent",{"_index":76,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{}}}],["look",{"_index":1556,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["m.name",{"_index":1081,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["made",{"_index":563,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["mail",{"_index":1478,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mailcol",{"_index":1477,"title":{},"body":{"injectables/NotificationService.html":{}}}],["maildoc",{"_index":1479,"title":{},"body":{"injectables/NotificationService.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":798,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["management",{"_index":1318,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["manager",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["manages",{"_index":288,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["map",{"_index":364,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["map((x:any",{"_index":1785,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["master",{"_index":1578,"title":{},"body":{"injectables/SearchFacadeService.html":{},"index.html":{}}}],["masterapi",{"_index":1593,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1727,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["mean",{"_index":467,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["means",{"_index":1482,"title":{},"body":{"injectables/NotificationService.html":{}}}],["measurementid",{"_index":2131,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":1718,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["meeting",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":678,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["member.id",{"_index":1283,"title":{},"body":{"injectables/GroupService.html":{}}}],["memberes",{"_index":1861,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["membergroups",{"_index":1315,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["members",{"_index":660,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["members\",\"group",{"_index":1059,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["members.map((x)=>x.name",{"_index":1171,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["members:[user1",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:[user2",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:userinterface",{"_index":1103,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["mergemap",{"_index":1225,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["mergemap((grpcal:calanderevent",{"_index":1291,"title":{},"body":{"injectables/GroupService.html":{}}}],["message",{"_index":1470,"title":{},"body":{"injectables/NotificationService.html":{}}}],["message:any",{"_index":1476,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messagingsenderid",{"_index":2127,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["method",{"_index":572,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["methods",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["milliseconds",{"_index":841,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["min",{"_index":1719,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["miscellaneous",{"_index":2074,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modalservice:ngbmodal",{"_index":986,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["mode",{"_index":2141,"title":{},"body":{"index.html":{}}}],["module",{"_index":92,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2147,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":665,"title":{},"body":{"injectables/CalendarService.html":{}}}],["n",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistFacadeService.html":{}}}],["n)=>this.isauth",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["n.page",{"_index":1672,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["n.push(e",{"_index":1640,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["n.startdate",{"_index":845,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["n:any",{"_index":835,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["n:idclasstype",{"_index":1636,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["nadm",{"_index":1334,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["nadm.push(grp",{"_index":1338,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["name:\"becca",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"go",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"john",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"rick",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"superbowl",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"taylor",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"tom",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"ts",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:a.segment.name",{"_index":1793,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:e.name",{"_index":763,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/TicketmasterService.html":{}}}],["name:e.name,type:classtype.genre",{"_index":766,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:e.name,type:classtype.subgenre",{"_index":768,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:g.name",{"_index":1797,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:sg.name",{"_index":1801,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:string",{"_index":791,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["navigate",{"_index":2135,"title":{},"body":{"index.html":{}}}],["navigateto!:ngbdate",{"_index":338,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigation",{"_index":1425,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["navigation.component.css",{"_index":1427,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":1428,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":78,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navstuff",{"_index":979,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["network",{"_index":1674,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["network/firebase/authentication/authentication.service",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["network/firebase/firestore/calendar.service",{"_index":453,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/group.service",{"_index":811,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/watchlist.service",{"_index":813,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["network/ticketmaster/ticketmaster.service",{"_index":1604,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["new",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcalendarevent",{"_index":431,"title":{"classes/NewCalendarEvent.html":{}},"body":{"injectables/CalendarFacade.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["newcalevent",{"_index":435,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newcalevent.isvalid",{"_index":505,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newcalevent.tocalendarevent(this.currentuser",{"_index":507,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newevent",{"_index":1521,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["newgroupform",{"_index":818,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["next",{"_index":1052,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["next:(n",{"_index":1670,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["next:(x",{"_index":1657,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["ng",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1136,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["ngbcalendar",{"_index":330,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbcarouselmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbdate",{"_index":319,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["ngbdate(d.getfullyear",{"_index":353,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["ngbdate(e.end.getfullyear",{"_index":495,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdate(e.start.getfullyear",{"_index":492,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdate(x.end.getfullyear",{"_index":1546,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate(x.start.getfullyear",{"_index":1543,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate,ngbdate",{"_index":488,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdatepicker",{"_index":331,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbmodal",{"_index":974,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngbmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbnav",{"_index":975,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges(changes",{"_index":347,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngondestroy",{"_index":1012,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["ngoninit",{"_index":724,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["ngx",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"dependencies.html":{}}}],["node.js",{"_index":2101,"title":{},"body":{"index.html":{}}}],["none",{"_index":1096,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["notfreeatall",{"_index":2080,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notgoing",{"_index":2091,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noti",{"_index":1184,"title":{},"body":{"injectables/GroupService.html":{}}}],["notification",{"_index":1222,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["notification.service",{"_index":1227,"title":{},"body":{"injectables/GroupService.html":{}}}],["notifications",{"_index":1456,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["notificationservice",{"_index":1185,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notify",{"_index":1843,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["now",{"_index":1175,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{}}}],["npm",{"_index":2102,"title":{},"body":{"index.html":{}}}],["null",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{}}}],["number",{"_index":1513,"title":{},"body":{"interfaces/PageInterface.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["number.isnan(sd.valueof",{"_index":1824,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["number:0",{"_index":1598,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["number:number",{"_index":1517,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["object",{"_index":559,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":808,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["obs",{"_index":1342,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["obs.error(\"group",{"_index":1266,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(result",{"_index":654,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["obs.next(this.dbtogroupinterface(data",{"_index":1268,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(user!==null",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["obs.next(watchlist",{"_index":1975,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["obs.subscribe(grp",{"_index":1344,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["observable",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["observable(obs",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["of(1).pipe(switchmap(()=>forkjoin",{"_index":1294,"title":{},"body":{"injectables/GroupService.html":{}}}],["of(rtn",{"_index":1827,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["offset",{"_index":840,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["onaddclassification",{"_index":725,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onaddclassification(ie",{"_index":737,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onaddclassification(ie:idclasstype",{"_index":769,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onchanges",{"_index":292,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclick",{"_index":1108,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group",{"_index":1111,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group:groupinterface",{"_index":1118,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclickdate",{"_index":296,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date",{"_index":318,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date:ngbdate",{"_index":357,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ondestroy",{"_index":973,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["one",{"_index":1174,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["ongenre(e:idname",{"_index":765,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["oninit",{"_index":721,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["onremoveclassfication",{"_index":726,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onremoveclassfication(ie",{"_index":742,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onremoveclassfication(ie:idclasstype",{"_index":773,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e:idname",{"_index":761,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e:idname",{"_index":767,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["opacity",{"_index":1421,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["open",{"_index":963,"title":{},"body":{"components/GroupCreateComponent.html":{},"index.html":{}}}],["openmodalemitter",{"_index":1153,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["optional",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["other.id",{"_index":911,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["otherwist",{"_index":924,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["out",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"pipes/InwatchlistPipe.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":326,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupListComponent.html":{}}}],["outputs",{"_index":301,"title":{},"body":{"components/CalanderComponent.html":{}}}],["overview",{"_index":2148,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.number",{"_index":1661,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["p:pageinterface",{"_index":1659,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["package",{"_index":2051,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":391,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":1132,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.html",{"_index":1133,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts",{"_index":1130,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:21",{"_index":1534,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:22",{"_index":1537,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:23",{"_index":1535,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:27",{"_index":1359,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:28",{"_index":1927,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["page.component.ts:34",{"_index":1533,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:35",{"_index":1366,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:40",{"_index":1532,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:47",{"_index":1531,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:50",{"_index":1682,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:55",{"_index":1146,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:57",{"_index":1683,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:59",{"_index":1526,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:62",{"_index":1147,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:68",{"_index":1141,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:70",{"_index":1529,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:72",{"_index":1680,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:74",{"_index":1142,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:78",{"_index":1524,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:88",{"_index":1138,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:93",{"_index":1140,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page/classification",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["page/event",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["page/group",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"coverage.html":{}}}],["page/groupmember",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["page/list",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/personal",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["page/search",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["page/watchlist",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page:pageinterface",{"_index":954,"title":{},"body":{"interfaces/EventPageInterface.html":{}}}],["page:undefined",{"_index":1805,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["pageinfo",{"_index":1562,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["pageinfo$:behaviorsubject",{"_index":1617,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["pageinterface",{"_index":953,"title":{"interfaces/PageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"interfaces/PageInterface.html":{},"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["pane",{"_index":1361,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["param",{"_index":356,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["parameter",{"_index":513,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["parameters",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["params.get('id",{"_index":1162,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["params:query}).pipe",{"_index":1831,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["params:{apikey:ticketmasterapi",{"_index":1780,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["part",{"_index":1209,"title":{},"body":{"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["paste",{"_index":2118,"title":{},"body":{"index.html":{}}}],["path",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group/:id",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"login",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"personalcalender",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"search",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"watchlist",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patriots",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["people",{"_index":1851,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["permission",{"_index":1253,"title":{},"body":{"injectables/GroupService.html":{}}}],["person",{"_index":425,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["personal",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["personal:calandertype",{"_index":1539,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["personalcalenderpagecomponent",{"_index":80,"title":{"components/PersonalCalenderPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pgnum",{"_index":1573,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["pipe",{"_index":1303,"title":{"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{}},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{},"coverage.html":{}}}],["pipe(switchmap(()=>of(void",{"_index":1299,"title":{},"body":{"injectables/GroupService.html":{}}}],["pipe.pipe",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe.pipe.ts",{"_index":1305,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["pipe.pipe.ts:11",{"_index":1308,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["pipes",{"_index":1304,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1309,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{}}}],["platformlocation",{"_index":1461,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["please",{"_index":1502,"title":{},"body":{"injectables/NotificationService.html":{}}}],["pointer",{"_index":945,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["popperjs/core",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["position",{"_index":1377,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["priority",{"_index":481,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["private",{"_index":341,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["prod",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["prod.ts",{"_index":2049,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1775,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["proj",{"_index":2121,"title":{},"body":{"index.html":{}}}],["project",{"_index":2094,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":2124,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":233,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["promise((res",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise((res,rej",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["promise(res",{"_index":690,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["promise.all([calupdateprom,grpupdateprom]).then(_",{"_index":1914,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["promise.all(allprom).then(_",{"_index":711,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/ViewGroupFacade.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"properties.html":{}}}],["protection",{"_index":1280,"title":{},"body":{"injectables/GroupService.html":{}}}],["provideanimations",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["provideauth",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provideauth(()=>getauth",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2117,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["providefirebaseapp",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore(()=>getfirestore",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["provider).then((result",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":913,"title":{},"body":{"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["pull",{"_index":567,"title":{},"body":{"injectables/CalendarService.html":{}}}],["pulling",{"_index":669,"title":{},"body":{"injectables/CalendarService.html":{}}}],["purchased",{"_index":1190,"title":{},"body":{"injectables/GroupService.html":{}}}],["q",{"_index":645,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["queries",{"_index":1645,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["query",{"_index":597,"title":{},"body":{"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["query(calcollection",{"_index":646,"title":{},"body":{"injectables/CalendarService.html":{}}}],["query(grpcollection",{"_index":1256,"title":{},"body":{"injectables/GroupService.html":{}}}],["query.apikey",{"_index":1829,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["query:any",{"_index":1608,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["queryparams",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["question",{"_index":1349,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"injectables/ViewGroupFacade.html":{}}}],["radial",{"_index":1414,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["radius",{"_index":1393,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["radius:0",{"_index":1712,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["range",{"_index":464,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["rate",{"_index":1485,"title":{},"body":{"injectables/NotificationService.html":{}}}],["reactiveformsmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":1837,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["real",{"_index":568,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["received",{"_index":728,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["recipients",{"_index":1472,"title":{},"body":{"injectables/NotificationService.html":{}}}],["recomendation",{"_index":1577,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["recomended",{"_index":1592,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["recommendation",{"_index":720,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["redirect",{"_index":1362,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["redirects",{"_index":1143,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["redirectto:'/search",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":2150,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":1511,"title":{},"body":{"injectables/NotificationService.html":{}}}],["regards",{"_index":1600,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["rej(\"eh",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rej(\"group",{"_index":1255,"title":{},"body":{"injectables/GroupService.html":{}}}],["rej(\"user",{"_index":1276,"title":{},"body":{"injectables/GroupService.html":{}}}],["rej(err",{"_index":644,"title":{},"body":{"injectables/CalendarService.html":{}}}],["rej(new",{"_index":511,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["rej.code",{"_index":1984,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["related",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["relative",{"_index":1721,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["remendation",{"_index":729,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["remind",{"_index":1468,"title":{},"body":{"injectables/NotificationService.html":{}}}],["remove",{"_index":589,"title":{},"body":{"injectables/CalendarService.html":{},"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["removecalendarevent",{"_index":521,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removecalendarevent(calendarevent",{"_index":578,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removeclassification(ie:idclasstype",{"_index":1642,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removed",{"_index":744,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["removeevent",{"_index":916,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event",{"_index":929,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event:eventinterface",{"_index":934,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removefromgroup",{"_index":1182,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromgroup(group",{"_index":1218,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromwatchlist",{"_index":1567,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["removefromwatchlist(event",{"_index":1584,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["removefromwatchlist(event:eventinterface",{"_index":1675,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["removereservedcalevent",{"_index":522,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removereservedcalevent(grp",{"_index":583,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removes",{"_index":585,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removewatchlistevent",{"_index":1936,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["removewatchlistevent(user",{"_index":1952,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["removing",{"_index":1954,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["replaysubject",{"_index":332,"title":{},"body":{"components/CalanderComponent.html":{}}}],["request",{"_index":1082,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["requesting",{"_index":1494,"title":{},"body":{"injectables/NotificationService.html":{}}}],["res",{"_index":267,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["res(user",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reserve",{"_index":586,"title":{},"body":{"injectables/CalendarService.html":{}}}],["reserved",{"_index":548,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["reserved/book",{"_index":576,"title":{},"body":{"injectables/CalendarService.html":{}}}],["reserved/booked",{"_index":682,"title":{},"body":{"injectables/CalendarService.html":{}}}],["reservedforevent",{"_index":696,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/enumerations.html":{}}}],["reset",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolved",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{}}}],["resolves",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["resource",{"_index":1317,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["resources",{"_index":804,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["result",{"_index":651,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["result.push(calevent",{"_index":687,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtocalendarevent(cal,user",{"_index":653,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtogroupinterface(grp",{"_index":1260,"title":{},"body":{"injectables/GroupService.html":{}}}],["results",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1210,"title":{},"body":{"injectables/GroupService.html":{}}}],["retrieved",{"_index":1205,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["return",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["returnevents(x:any):observable",{"_index":1803,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["returns",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["returnurl",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgb(2",{"_index":404,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(0,0,0,0.3",{"_index":1735,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["rgba(2",{"_index":409,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(26",{"_index":1723,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["right:0",{"_index":1388,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["rotate(0deg",{"_index":1747,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["rotate(360deg",{"_index":1748,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["rotation",{"_index":1742,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["route",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route:activatedroute",{"_index":1157,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["router",{"_index":1035,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{}}}],["router.navigate(['login",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router:router",{"_index":1037,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":186,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1124,"title":{},"body":{"components/GroupListComponent.html":{}}}],["row:hover",{"_index":1127,"title":{},"body":{"components/GroupListComponent.html":{}}}],["rtn.events",{"_index":1814,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn.page",{"_index":1807,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn:any",{"_index":1804,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn:subscription",{"_index":473,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["run",{"_index":2145,"title":{},"body":{"index.html":{}}}],["running",{"_index":2144,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":255,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["save",{"_index":1003,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["saved",{"_index":1978,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["sd",{"_index":1816,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["search",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["searchevent",{"_index":1568,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["searchevent(){//this",{"_index":1644,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["searchfacade",{"_index":914,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["searchfacade:searchfacadeservice",{"_index":755,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{}}}],["searchfacadeservice",{"_index":747,"title":{"injectables/SearchFacadeService.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["searchpagecomponent",{"_index":83,"title":{"components/SearchPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sec",{"_index":1700,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["second:from(updatedoc(grpdoc",{"_index":1298,"title":{},"body":{"injectables/GroupService.html":{}}}],["segment",{"_index":778,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["segment:idname",{"_index":780,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["segmentinterface",{"_index":786,"title":{"interfaces/SegmentInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["select",{"_index":1095,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"index.html":{}}}],["selectedevent",{"_index":801,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["selectedevent.images",{"_index":863,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["selectedevent.location",{"_index":861,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["selectedevent?:eventinterface",{"_index":984,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["send",{"_index":1031,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["sendbookingconfirmation",{"_index":1458,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendbookingconfirmation(group",{"_index":1463,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest",{"_index":1459,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest(group",{"_index":1466,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail",{"_index":1460,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail(to",{"_index":1469,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendgroupconfirmation",{"_index":1013,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["sendgroupconfirmation(group",{"_index":1220,"title":{},"body":{"injectables/GroupService.html":{}}}],["sent",{"_index":1058,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["set",{"_index":1487,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["setbgcolor",{"_index":297,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date",{"_index":322,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date:ngbdate):string",{"_index":360,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setdoc",{"_index":605,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/WatchlistService.html":{}}}],["setdoc(watchdoc,update).then(_",{"_index":1985,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["sets",{"_index":324,"title":{},"body":{"components/CalanderComponent.html":{},"components/NavigationComponent.html":{}}}],["shadow",{"_index":1417,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["sign",{"_index":1372,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["signinwithpopup",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithpopup(this.auth",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["simplechanges",{"_index":327,"title":{},"body":{"components/CalanderComponent.html":{}}}],["size",{"_index":1412,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PageInterface.html":{},"components/SearchPageComponent.html":{}}}],["size:number",{"_index":1515,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["sizing",{"_index":1740,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["slt",{"_index":1701,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["solid",{"_index":1708,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["somefree",{"_index":2082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sort",{"_index":478,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["specific",{"_index":1144,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{}}}],["spinner",{"_index":1736,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["split",{"_index":662,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/.../auth.guard.ts",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../calenderenum.ts",{"_index":2076,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../clasification",{"_index":2077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../env",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../groupstatus.ts",{"_index":2079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../testdata.ts",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/class/newcalendarevent.ts",{"_index":1439,"title":{},"body":{"classes/NewCalendarEvent.html":{},"coverage.html":{}}}],["src/app/class/newcalendarevent.ts:16",{"_index":1445,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:22",{"_index":1447,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:6",{"_index":1444,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:7",{"_index":1443,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:8",{"_index":1442,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/common/calander/calander.component.ts",{"_index":287,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{}}}],["src/app/common/calander/calander.component.ts:23",{"_index":303,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:27",{"_index":310,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:31",{"_index":314,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:79",{"_index":320,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:86",{"_index":323,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts",{"_index":1424,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/common/navigation/navigation.component.ts:13",{"_index":1431,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts:23",{"_index":1430,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts:29",{"_index":1429,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/facade/creategroupfacade",{"_index":976,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["src/app/facade/creategroupfacade.ts",{"_index":793,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"coverage.html":{}}}],["src/app/facade/creategroupfacade.ts:103",{"_index":797,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:25",{"_index":809,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:54",{"_index":805,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:65",{"_index":802,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/grouppage",{"_index":1311,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"coverage.html":{}}}],["src/app/facade/personalcalendarfacade.ts",{"_index":423,"title":{},"body":{"injectables/CalendarFacade.html":{},"coverage.html":{}}}],["src/app/facade/personalcalendarfacade.ts:30",{"_index":446,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:34",{"_index":449,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:48",{"_index":440,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:54",{"_index":443,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:88",{"_index":438,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:95",{"_index":432,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/search",{"_index":748,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["src/app/facade/viewgroupfacade",{"_index":1034,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["src/app/facade/viewgroupfacade.ts",{"_index":1838,"title":{},"body":{"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["src/app/facade/viewgroupfacade.ts:104",{"_index":1853,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:126",{"_index":1850,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:177",{"_index":1844,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:199",{"_index":1858,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:216",{"_index":1857,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:247",{"_index":1860,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:263",{"_index":1842,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:35",{"_index":1863,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:39",{"_index":1862,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:43",{"_index":1864,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:70",{"_index":1856,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:78",{"_index":1845,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:93",{"_index":1847,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/watchlist",{"_index":1918,"title":{},"body":{"injectables/WatchlistFacadeService.html":{},"coverage.html":{}}}],["src/app/group",{"_index":957,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":2014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/calander",{"_index":334,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/interfaces/clasification",{"_index":752,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/enums/calenderenum",{"_index":337,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["src/app/interfaces/enums/calenderenum.ts",{"_index":2020,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/enums/groupstatus.ts",{"_index":2090,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/event",{"_index":607,"title":{},"body":{"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/interfaces/eventpage",{"_index":952,"title":{},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/interfaces/group",{"_index":606,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/interfaces/page",{"_index":1512,"title":{},"body":{"interfaces/PageInterface.html":{},"coverage.html":{}}}],["src/app/interfaces/testdata.ts",{"_index":2024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/user",{"_index":257,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"interfaces/UserInterface.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/login",{"_index":1357,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service",{"_index":1432,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:13",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:21",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:35",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:46",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:68",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts",{"_index":514,"title":{},"body":{"injectables/CalendarService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:105",{"_index":538,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:116",{"_index":570,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:159",{"_index":591,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:16",{"_index":526,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:179",{"_index":579,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:196",{"_index":546,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:228",{"_index":584,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:26",{"_index":557,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:48",{"_index":529,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:83",{"_index":565,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts",{"_index":1177,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:112",{"_index":1204,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:133",{"_index":1212,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:163",{"_index":1219,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:18",{"_index":1186,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:193",{"_index":1202,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:207",{"_index":1221,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:217",{"_index":1192,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:251",{"_index":1188,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:27",{"_index":1199,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:56",{"_index":1197,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:91",{"_index":1208,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts",{"_index":1455,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:12",{"_index":1462,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:24",{"_index":1471,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:49",{"_index":1467,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:71",{"_index":1464,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts",{"_index":1932,"title":{},"body":{"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:110",{"_index":1953,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:13",{"_index":1937,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:22",{"_index":1945,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:44",{"_index":1942,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:62",{"_index":1949,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:85",{"_index":1939,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts",{"_index":1750,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:18",{"_index":1756,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:27",{"_index":1764,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:37",{"_index":1758,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:96",{"_index":1761,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/personal",{"_index":1518,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["src/app/search",{"_index":716,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["src/app/watchlist",{"_index":1925,"title":{},"body":{"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["src/environments",{"_index":2107,"title":{},"body":{"index.html":{}}}],["src/environments/env",{"_index":1766,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stadium",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":304,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start,enddate",{"_index":497,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["start.day",{"_index":376,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["start.month",{"_index":374,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["start2",{"_index":2031,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start3",{"_index":2032,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start:ngbdate",{"_index":491,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["start:start",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start2",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start3",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:string",{"_index":1448,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["startdate",{"_index":385,"title":{},"body":{"components/CalanderComponent.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["startdate:date",{"_index":372,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["startdate:new",{"_index":826,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["startdate?:date",{"_index":894,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["started",{"_index":2093,"title":{"index.html":{}},"body":{}}],["startwith",{"_index":1606,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["startwith(undefined",{"_index":1656,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["state",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["state.url",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1064,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["stop",{"_index":735,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["storagebucket",{"_index":2125,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":448,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["streams",{"_index":807,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{}}}],["string",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdName.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(evt",{"_index":836,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["style",{"_index":1407,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["sub",{"_index":1272,"title":{},"body":{"injectables/GroupService.html":{}}}],["sub.unsubscribe",{"_index":1274,"title":{},"body":{"injectables/GroupService.html":{}}}],["subgenre",{"_index":779,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["subgenre:idname",{"_index":782,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subgenres",{"_index":956,"title":{},"body":{"interfaces/GenreInterface.html":{}}}],["subgenres:idname",{"_index":789,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subject",{"_index":459,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["subs:subscription",{"_index":462,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["subscribe",{"_index":760,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["subscribe((d:ngbdate)=>this.onclickdate(d",{"_index":351,"title":{},"body":{"components/CalanderComponent.html":{}}}],["subscription",{"_index":460,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["subscriptions:subscription",{"_index":1688,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["success",{"_index":871,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["success\",\"calender",{"_index":1551,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["successful",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["successfully",{"_index":1217,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["support",{"_index":2151,"title":{},"body":{"modules.html":{}}}],["suppose",{"_index":1145,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["svg",{"_index":2152,"title":{},"body":{"modules.html":{}}}],["swift",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap",{"_index":746,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["switchmap((group:groupinterface)=>this.calsvc.getgroupcalendar(group).pipe",{"_index":1882,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["switchmap((user:userinterface)=>from(this.grpsvc.joingroup(id",{"_index":1330,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["switchmap((x:string",{"_index":758,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["switchmap(this.returnevents",{"_index":1836,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["table",{"_index":1528,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":333,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["take(1",{"_index":350,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{}}}],["taken",{"_index":873,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{}}}],["tap",{"_index":1607,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["tap((grpcal:calanderevent",{"_index":1883,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["tap((x:boolean",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap((x:classificationinterface",{"_index":1633,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["technically",{"_index":1481,"title":{},"body":{"injectables/NotificationService.html":{}}}],["temp",{"_index":702,"title":{},"body":{"injectables/CalendarService.html":{}}}],["temp.unsubscribe",{"_index":704,"title":{},"body":{"injectables/CalendarService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["test",{"_index":2140,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1832,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["text",{"_index":388,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["then(_=>res",{"_index":509,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["then(doc",{"_index":642,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.admingroups$.next(adm",{"_index":1339,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.auth.authstateready().then(_",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.displayname",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.email",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.uid",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.logingoogle().then(_",{"_index":1367,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.logout().then(_",{"_index":1370,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.onauthstatechanged((user",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.signout",{"_index":268,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authapi.getcurrentuser().then((u",{"_index":1676,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.authapi.getcurrentuser().then((u)=>this.currentuser",{"_index":1435,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authapi.getcurrentuser().then((x:userinterface",{"_index":1628,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.authapi.isauthenticated().subscribe",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authapi.logout",{"_index":1437,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authsvc.getcurrentuser().then((u:userinterface)=>new",{"_index":853,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.authsvc.getcurrentuser().then(u=>this.currentuser$.next(u",{"_index":1875,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.authsvc.getcurrentuser().then(user",{"_index":471,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.baseurl",{"_index":1772,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.cal.createevent(this.newevent).then(_",{"_index":1552,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cal.deleteevent(e).then(_",{"_index":1549,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cal.destroy",{"_index":1542,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cal.initializecalender",{"_index":1541,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.calendar$.next(calevents",{"_index":499,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.addcalendarevent(calevent",{"_index":508,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.convertreservedtobooked(this.group$.value",{"_index":1911,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.calsvc.getcalendar(user).subscribe",{"_index":474,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.getgroupcalendar(group).pipe",{"_index":1290,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.calsvc.removecalendarevent(e",{"_index":503,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.removereservedcalevent(this.group$.value",{"_index":1901,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.cat$.next(x",{"_index":1634,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cat$.next({segment",{"_index":1624,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.chosegroup(group",{"_index":1164,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.chosen",{"_index":1168,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.cid$.next",{"_index":1626,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.next(n",{"_index":1641,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.next(n.filter((c)=>c.id!=ie.id",{"_index":1643,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value",{"_index":1637,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.genre).map((x)=>x.id",{"_index":1649,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.segment).map((x)=>x.id",{"_index":1647,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.subgenre).map((x)=>x.id",{"_index":1651,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.clash(group.event,calevent",{"_index":686,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.classification.pipe",{"_index":756,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.clickeddate.next(date",{"_index":359,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.clipboard.copy(base_url",{"_index":1893,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.close",{"_index":990,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.currentuser",{"_index":472,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.currentuser$.value",{"_index":1916,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.datecolor",{"_index":366,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.datecolor$.next(datecolor",{"_index":500,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.dbtocalendarevent(cal",{"_index":679,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.detail",{"_index":1453,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.details",{"_index":904,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.end",{"_index":1452,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.enddate",{"_index":908,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.error$.next({error:err,title:\"ticket",{"_index":1665,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.next",{"_index":1625,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.next(s",{"_index":1620,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.value",{"_index":1653,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.formbuilder.group",{"_index":819,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.getcalendar(calendarevent.user).pipe(take(1)).subscribe(cal",{"_index":635,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.getcurrentuser",{"_index":1872,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.getgroup(id",{"_index":1873,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.getgroupbyid(groupid).subscribe(grp",{"_index":1273,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.getgroupcalander(group",{"_index":1874,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.getgroups",{"_index":1331,"title":{},"body":{"injectables/GrouppageFacadeService.html":{}}}],["this.getwatchlist",{"_index":1622,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.group",{"_index":1039,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.group$.next(group",{"_index":1879,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value",{"_index":1905,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value!).confirmed.foreach(userid",{"_index":1895,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value.alluuid.length",{"_index":1908,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value.confirmed.length",{"_index":1907,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.groupbyid$.next(grp",{"_index":1345,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.groupclicked.emit(group",{"_index":1119,"title":{},"body":{"components/GroupListComponent.html":{}}}],["this.grp.confirmgroupbooking().then(_",{"_index":1062,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.confirmgroupevent().pipe(take(1)).subscribe",{"_index":1065,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.copyinvitelink",{"_index":1048,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.creategroup(this.selectedevent!).then(_",{"_index":988,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.grp.deletegroup().then(_",{"_index":1040,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.destroy",{"_index":998,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["this.grp.getgrpbyid(id).subscribe",{"_index":1163,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.initialise",{"_index":1158,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.initialise(this.group.id",{"_index":1038,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.initialize",{"_index":994,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.grp.joingroup(this.groupid).subscribe({error:(err)=>this.toastr.error(err,\"join",{"_index":1159,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.joingroup(this.grp.group$.value!.id).subscribe",{"_index":1051,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.kickuser(user).then(_",{"_index":1045,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.sendgroupconfirmation().then(_",{"_index":1056,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grpsvc.confirmgroupbooking(this.group$.value",{"_index":1913,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.confirmgroupevent(this.group$.value",{"_index":1915,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.creategroup(grp.name",{"_index":867,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.grpsvc.deletegroup(this.group$.value!).then(_",{"_index":1900,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(g.id).pipe",{"_index":1881,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(id",{"_index":1343,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(id).subscribe(group",{"_index":1878,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroups(user).subscribe(grps",{"_index":1332,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.removefromgroup(this.group$.value",{"_index":1902,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.sendgroupconfirmation(this.group$.value!).then(_",{"_index":1909,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.http.get(this.baseurl+\"/\"+\"classifications.json",{"_index":1779,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.http.get(this.baseurl+\"/events.json",{"_index":1830,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.id",{"_index":897,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.images",{"_index":902,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.isinside(start,date,end",{"_index":1548,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.lastclickeddate.next(date",{"_index":358,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.lastclickeddate.pipe",{"_index":349,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.loadedevents$.next(n.events",{"_index":1673,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.loadedevents$.next(x.events",{"_index":1663,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.loadingevents$.next(false",{"_index":1666,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.loadingevents$.next(true",{"_index":1664,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.location",{"_index":900,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.membergroups$.next(nadm",{"_index":1340,"title":{},"body":{"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.modalservice.dismissall",{"_index":997,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.modalservice.open(this.content,{centered:true",{"_index":995,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.name",{"_index":899,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.navstuff?.select(2",{"_index":1169,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.newgroupform",{"_index":833,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.newgroupform.patchvalue",{"_index":851,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.newgroupform.value",{"_index":855,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.noti.sendbookingconfirmation(group).then(_",{"_index":1302,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.noti.sendconfirmationrequest(group",{"_index":1289,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.onaddclassification({id:e.id",{"_index":762,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.pageinfo$.next(p",{"_index":1662,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.platformlocation",{"_index":1492,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.query",{"_index":1623,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.genreid",{"_index":1648,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.keyword",{"_index":1652,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.page",{"_index":1654,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.segmentid",{"_index":1646,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.subgenreid",{"_index":1650,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.removecalendarevent(this.dbtocalendarevent(data[0",{"_index":714,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1160,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1369,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.router.navigate([\"login",{"_index":1438,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.navigate(['/group",{"_index":1042,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.router.navigatebyurl",{"_index":1368,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.searchevent",{"_index":1621,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.searchfacade.addclassification(ie",{"_index":772,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.addtowatchlist(event",{"_index":937,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.searchfacade.changepage(pgnum",{"_index":1697,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.destroy",{"_index":1691,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.error$.subscribe",{"_index":1695,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.getclassification(x",{"_index":759,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.initialise",{"_index":1693,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.removeclassification(ie",{"_index":774,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.removefromwatchlist(event",{"_index":935,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.searchfacade.searchevent",{"_index":1698,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.selectedevent",{"_index":999,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.sendemail(emaillist,{subject",{"_index":1507,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.start",{"_index":1451,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.startdate",{"_index":906,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.subs.foreach((e)=>e.unsubscribe",{"_index":470,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.subs.foreach((x)=>x.unsubscribe",{"_index":1627,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.subs.push",{"_index":1877,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.subs.push(rtn",{"_index":501,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.subs.push(this.em.subscribe(()=>this.open",{"_index":987,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.subs.push(this.watchlistsvc.getwatchlist(user).subscribe(watchlist",{"_index":831,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.subscriptions.foreach(s=>s.unsubscribe",{"_index":1692,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.subscriptions.push",{"_index":1694,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.tmapi.getclassification(kw).pipe",{"_index":1632,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.tmapi.geteventsquery(this.query).pipe",{"_index":1655,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.tmapi.geteventsquery(this.query).pipe(startwith(undefined)).subscribe",{"_index":1669,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.toastr.error(err,\"cannot",{"_index":1070,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.error(err,\"group",{"_index":1166,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.toastr.error(err,\"joined",{"_index":1055,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.error(err.message,\"calender",{"_index":1555,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.toastr.error(err.message,\"group",{"_index":992,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.toastr.error(n.error,n.title",{"_index":1696,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.toastr.info(\"link",{"_index":1049,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(\"created",{"_index":1553,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.toastr.success(\"delete",{"_index":1550,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.toastr.success(\"email",{"_index":1057,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(\"going",{"_index":1066,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(\"you",{"_index":1063,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(this.group.name,\"delete",{"_index":1041,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(this.group.name,\"joined",{"_index":1053,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.toastr.success(this.grp.newgroupform.value.name?this.grp.newgroupform.value.name:\"\",\"group",{"_index":989,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.toastr.success(user.name,\"kicked",{"_index":1046,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.watchlist$.next(n",{"_index":1630,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.watchlist$.next(watchlist",{"_index":832,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.watchlistfacade.destroy",{"_index":1930,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.watchlistfacade.initialise",{"_index":1931,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["this.watchlistsvc.addwatchlistevent(u,event",{"_index":1679,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.watchlistsvc.getwatchlist(x).subscribe",{"_index":1629,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["this.watchlistsvc.removewatchlistevent(u,event",{"_index":1677,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["throw(rej",{"_index":1986,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["throwerror",{"_index":1226,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["throwerror(\"no",{"_index":1810,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["throwerror(()=>\"user",{"_index":1293,"title":{},"body":{"injectables/GroupService.html":{}}}],["ticket",{"_index":1505,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ticketbuddy",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ticketmaster",{"_index":734,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/TicketmasterService.html":{},"index.html":{}}}],["ticketmasterapi",{"_index":1765,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ticketmasterservice",{"_index":1603,"title":{"injectables/TicketmasterService.html":{}},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["tickets",{"_index":1189,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"components/SearchPageComponent.html":{}}}],["time",{"_index":477,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["timeout",{"_index":1770,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["timeout(5000",{"_index":1834,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["title",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["title=\"tickets",{"_index":1083,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["tmapi",{"_index":1618,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["to.length",{"_index":1480,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toastr",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"dependencies.html":{}}}],["toastr:toastrservice",{"_index":985,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["toastrmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":977,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["tocalendarevent",{"_index":1441,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["tocalendarevent(user",{"_index":1446,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["top",{"_index":946,"title":{},"body":{"components/EventComponentComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["top:0",{"_index":1379,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["toremove",{"_index":1281,"title":{},"body":{"injectables/GroupService.html":{}}}],["totalelements",{"_index":1514,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["totalelements:0",{"_index":1597,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["totalelements:number",{"_index":1516,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["transform",{"_index":1306,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["transform(e",{"_index":1347,"title":{},"body":{"pipes/InwatchlistPipe.html":{}}}],["transform(members",{"_index":1307,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(members:userinterface",{"_index":1310,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["translate",{"_index":1381,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["transparent",{"_index":1739,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["trigger",{"_index":1833,"title":{},"body":{"injectables/TicketmasterService.html":{},"index.html":{}}}],["triggers",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["true",{"_index":543,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{}}}],["tslib",{"_index":2070,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:calandertype.personal",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type:classtype",{"_index":785,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["type:classtype.segment",{"_index":764,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["typeof",{"_index":614,"title":{},"body":{"injectables/CalendarService.html":{}}}],["tzoffset",{"_index":837,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["tzoffset)).toisostring().slice(0",{"_index":847,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["u).then(_",{"_index":869,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["u.name",{"_index":1436,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ui",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["uid",{"_index":626,"title":{},"body":{"injectables/CalendarService.html":{}}}],["unavailable",{"_index":1090,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["uncomment",{"_index":1774,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["undefined",{"_index":980,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["under",{"_index":2106,"title":{},"body":{"index.html":{}}}],["underline",{"_index":1098,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["unsubcribe",{"_index":803,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["up",{"_index":442,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"index.html":{}}}],["update",{"_index":554,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["update).then(_",{"_index":692,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["update[\"confirmed",{"_index":1287,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatecalendarevent",{"_index":523,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatecalendarevent(calendarevent",{"_index":590,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updated",{"_index":592,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["updatedoc",{"_index":601,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["updatedoc(caldoc",{"_index":691,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatedoc(grpdoc",{"_index":1278,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatedoc(watchdoc",{"_index":1982,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["updateeventinput(s:string",{"_index":1619,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateform(evt:eventinterface",{"_index":834,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updatepromise",{"_index":1300,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatepromise.then(_",{"_index":1301,"title":{},"body":{"injectables/GroupService.html":{}}}],["updates",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["ur@brother.com",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@father.com",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@mother.com",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@sister.com",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":1491,"title":{},"body":{"injectables/NotificationService.html":{}}}],["use",{"_index":1114,"title":{},"body":{"components/GroupListComponent.html":{},"index.html":{}}}],["used",{"_index":587,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{}}}],["user",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/WatchlistService.html":{}}}],["user)).then(_",{"_index":715,"title":{},"body":{"injectables/CalendarService.html":{}}}],["user.id",{"_index":713,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/GrouppageFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["user1",{"_index":2033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user2",{"_index":2034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user3",{"_index":2035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user4",{"_index":2036,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user:userinterface",{"_index":1269,"title":{},"body":{"injectables/GroupService.html":{}}}],["user:{name:\"john",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":1896,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["userinterface",{"_index":256,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/GrouppageFacadeService.html":{},"classes/NewCalendarEvent.html":{},"injectables/SearchFacadeService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinterface|undefined",{"_index":1282,"title":{},"body":{"injectables/GroupService.html":{}}}],["username",{"_index":1087,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["users",{"_index":550,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["using",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/GroupListComponent.html":{},"index.html":{}}}],["validators",{"_index":817,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["validators.required",{"_index":820,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["value",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/GroupCreateComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/ListEventsComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["variable",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2159,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1403,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{},"properties.html":{}}}],["version:hover",{"_index":1422,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["via",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["viewchild",{"_index":328,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild(\"dp",{"_index":340,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild('content",{"_index":981,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild(ngbnav",{"_index":978,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewgroupfacade",{"_index":1033,"title":{"injectables/ViewGroupFacade.html":{}},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["void",{"_index":321,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GrouppageFacadeService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{}}}],["waiting",{"_index":1067,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["want",{"_index":1016,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["watchclist",{"_index":1919,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["watchdoc",{"_index":1972,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["watchlist$:behaviorsubject",{"_index":1613,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["watchlist.push(this.dbwatchlisttoevent(event",{"_index":1977,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist/${user.id",{"_index":1973,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist:eventinterface",{"_index":1350,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"injectables/WatchlistService.html":{}}}],["watchlistbtn",{"_index":943,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["watchlistbtnpositive",{"_index":948,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["watchlistevent",{"_index":1956,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.details",{"_index":1960,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.enddate",{"_index":1962,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.images",{"_index":1959,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.location",{"_index":1958,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.name",{"_index":1957,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.startdate",{"_index":1961,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistfacade:watchlistfacadeservice",{"_index":1929,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["watchlistfacadeservice",{"_index":1917,"title":{"injectables/WatchlistFacadeService.html":{}},"body":{"injectables/WatchlistFacadeService.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["watchlistpagecomponent",{"_index":85,"title":{"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["watchlistservice",{"_index":812,"title":{"injectables/WatchlistService.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["watchlistservice,private",{"_index":1924,"title":{},"body":{"injectables/WatchlistFacadeService.html":{}}}],["watchlistsvc",{"_index":830,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["wathclist",{"_index":1582,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistFacadeService.html":{}}}],["web",{"_index":2112,"title":{},"body":{"index.html":{}}}],["weight",{"_index":1410,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["where(\"alluuid\",\"array",{"_index":1257,"title":{},"body":{"injectables/GroupService.html":{}}}],["where(\"end",{"_index":671,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"grp.id",{"_index":700,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"start",{"_index":668,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid",{"_index":712,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"==\",user.id",{"_index":647,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"in",{"_index":698,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"in\",group.alluuid",{"_index":657,"title":{},"body":{"injectables/CalendarService.html":{}}}],["white",{"_index":407,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupListComponent.html":{},"components/LoginPageComponent.html":{}}}],["whose",{"_index":1950,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["width",{"_index":398,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["without",{"_index":923,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["wrn",{"_index":1713,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["wtf",{"_index":466,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["x",{"_index":1812,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x._embedded",{"_index":1813,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x._embedded.classifications",{"_index":1787,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.end.getmonth()+1,x.end.getdate",{"_index":1547,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["x.events.map((e:any",{"_index":1815,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.page",{"_index":1660,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["x.page.totalelements",{"_index":1809,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.page.totalelements>0",{"_index":1783,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.start.getmonth()+1,x.start.getdate",{"_index":1544,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["xxxxx",{"_index":2132,"title":{},"body":{"index.html":{}}}],["xxxxxxxxxxxx",{"_index":2128,"title":{},"body":{"index.html":{}}}],["y4q5tlebgb",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":1383,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["zone.js",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main App UI manager\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ticketbuddy'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from './network/firebase/authentication/authentication.service';\n\n/**\n * Main App UI manager\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ticketbuddy';\n  isAuth = false;\n  /**\n   * \n   * @ignore\n   */\n  constructor(private authApi:AuthenticationService){\n    this.authApi.isAuthenticated().subscribe(\n      (n)=>this.isAuth = n\n    );\n  }\n}\n\n    \n\n    \n        \n\t\n \n\n\n  \n\t\n\t\t\n\t\n\n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t   \t\t\t\t  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nInwatchlistPipe\n\nInwatchlistPipe\n\nAppModule -->\n\nInwatchlistPipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CalanderComponent\n                        \n                        \n                            ClassificationComponentComponent\n                        \n                        \n                            EventComponentComponent\n                        \n                        \n                            GroupCreateComponent\n                        \n                        \n                            GroupDetailComponent\n                        \n                        \n                            GroupListComponent\n                        \n                        \n                            GroupPageComponent\n                        \n                        \n                            GroupmemberPipePipe\n                        \n                        \n                            InwatchlistPipe\n                        \n                        \n                            ListEventsComponent\n                        \n                        \n                            LoginPageComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PersonalCalenderPageComponent\n                        \n                        \n                            SearchPageComponent\n                        \n                        \n                            WatchlistPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(firebaseConfig)).html\">provideFirebaseApp(() => initializeApp(firebaseConfig))\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ListEventsComponent } from './search-page/list-events/list-events.component';\nimport { EventComponentComponent } from './search-page/event-component/event-component.component';\n\n\nimport { ToastrModule } from 'ngx-toastr';\n\n// Firebase\nimport { firebaseConfig } from '../environments/env-prod'\nimport { provideFirebaseApp, initializeApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { getAuth, provideAuth } from '@angular/fire/auth';\n\nimport { provideAnimations, BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { GroupListComponent } from './group-page/group-list/group-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GrouppipePipe } from './group-page/grouppipe.pipe';\nimport { GroupDetailComponent } from './group-page/group-detail/group-detail.component';\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { CalanderComponent } from './common/calander/calander.component';\n\nimport { GroupmemberPipePipe } from './group-page/groupmember-pipe.pipe';\nimport { NavigationComponent } from './common/navigation/navigation.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { GroupCreateComponent } from './group-page/group-create/group-create.component';\nimport { ClassificationComponentComponent } from './search-page/classification-component/classification-component.component';\nimport { InwatchlistPipe } from './search-page/list-events/inwatchlist.pipe';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ListEventsComponent,\n        EventComponentComponent,\n        SearchPageComponent,\n        GroupPageComponent,\n        GroupListComponent,\n        GrouppipePipe,\n        GroupDetailComponent,\n        PersonalCalenderPageComponent,\n        WatchlistPageComponent,\n        GroupmemberPipePipe,\n        CalanderComponent,\n        NavigationComponent,\n        LoginPageComponent,\n        GroupCreateComponent,\n        ClassificationComponentComponent,\n        InwatchlistPipe\n    ],\n    providers: [provideAnimations()],\n    bootstrap: [AppComponent],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        NgbCarouselModule,\n        FormsModule,\n        ReactiveFormsModule,\n        // Firebase\n        provideFirebaseApp(() => initializeApp(firebaseConfig)),\n        provideAuth(()=>getAuth()),\n        provideFirestore(()=>getFirestore()),\n        \n        BrowserAnimationsModule,\n        ToastrModule.forRoot()\n\n    ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport {authGuard} from \"./guards/auth.guard\";\nconst routes: Routes = [\n  {path:\"personalcalender\", component:PersonalCalenderPageComponent, canActivate:[authGuard]},\n  {path:\"search\", component:SearchPageComponent, canActivate:[authGuard]},\n  {path:\"group\", component:GroupPageComponent, canActivate:[authGuard]},\n  {path:\"group/:id\", component:GroupPageComponent, canActivate:[authGuard]},//for joining via link\n  {path:\"watchlist\", component:WatchlistPageComponent, canActivate:[authGuard]},\n  {path:\"login\", component:LoginPageComponent},\n  {path:'', redirectTo:'/search', pathMatch:'full'}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/authentication/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all authentication-related methods.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                loginGoogle\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/authentication/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Get the user that is currently logged in.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The promise resolves with null if user is not logged in.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Get latest authentication state\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                The observable updates when user's authentication state changes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginGoogle\n                        \n                    \n                \n            \n            \n                \nloginGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Triggers a popup using Google authentication.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise is resolved when login is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Triggers log out.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise is resolved when log out is successful.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Auth, GoogleAuthProvider} from '@angular/fire/auth';\nimport { signInWithPopup } from 'firebase/auth';\nimport { Observable } from 'rxjs';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\n/**\n * Handles all authentication-related methods.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  \n  constructor(private auth: Auth) {}\n\n  /**\n   * Triggers a popup using Google authentication.\n   * @returns The promise is resolved when login is successful.\n   */\n  loginGoogle(): Promise {\n    return new Promise((res)=>{\n      let provider = new GoogleAuthProvider();\n      signInWithPopup(this.auth, provider).then((result)=>{\n        console.log(result);\n        res();\n      });\n    });\n  }\n\n  /**\n   * Triggers log out.\n   * @returns The promise is resolved when log out is successful.\n   */\n  logOut(): Promise {\n    return new Promise((res)=>{\n      this.auth.signOut();\n      res();\n    });\n  }\n\n  /**\n   * Get the user that is currently logged in.\n   * @returns The promise resolves with null if user is not logged in.\n   */\n  getCurrentUser():Promise{\n    return new Promise((res,rej)=>{\n      this.auth.authStateReady().then(_=>{\n        if (this.auth.currentUser === null) {\n          rej(\"eh buto login first lah cb\");\n          return;\n        }\n        let user =  {\n          id: this.auth.currentUser.uid,\n          name: this.auth.currentUser.displayName,\n          email: this.auth.currentUser.email\n        };\n        res(user);\n      })\n    })\n   \n  }\n\n  /**\n   * Get latest authentication state\n   * @returns The observable updates when user's authentication state changes.\n   */\n  isAuthenticated(): Observable{\n    return new Observable(obs=>{\n      this.auth.onAuthStateChanged((user)=>{\n        obs.next(user!==null);\n      })\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalanderComponent.html":{"url":"components/CalanderComponent.html","title":"component - CalanderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalanderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/calander/calander.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages UI  display anything related to calender\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calander\n            \n\n\n\n            \n                styleUrls\n                ./calander.component.css\n            \n\n\n\n            \n                templateUrl\n                ./calander.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClickDate\n                            \n                            \n                                setBGColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateColor\n                            \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickedDate\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dateColor\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:23\n                            \n                        \n                \n                    \n                        [start date, end date] and its corresponding color\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:27\n                            \n                        \n                \n                    \n                         list of events which contains date to be coloured in the calender\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickedDate\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:31\n                            \n                        \n                \n                    \n                        emit what date was being clicked\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClickDate\n                        \n                    \n                \n            \n            \n                \nonClickDate(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    date that was clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBGColor\n                        \n                    \n                \n            \n            \n                \nsetBGColor(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    sets color for that date\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild, inject} from '@angular/core';\nimport { NgbCalendar, NgbDate, NgbDatepicker } from '@ng-bootstrap/ng-bootstrap';\nimport { ReplaySubject, take } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor } from 'src/app/interfaces/enums/calenderenum';\n/**\n * manages UI  display anything related to calender\n */\n@Component({\n  selector: 'app-calander',\n  templateUrl: './calander.component.html',\n  styleUrls: ['./calander.component.css']\n})\nexport class CalanderComponent implements OnChanges{\n\n\t/**\n\t * @ignore \n\t */\n\t@Input() navigateTo!:NgbDate;\n\t/**\n\t * [start date, end date] and its corresponding color\n\t */\n\t@Input() dateColor!: [[NgbDate, NgbDate], CalanderColor][];\n\t/**\n\t *  list of events which contains date to be coloured in the calender\n\t */\n\t@Input() events!:CalanderEvent[];\n\t/**\n\t * emit what date was being clicked\n\t */\n\t@Output() clickedDate = new EventEmitter();\n\t/**\n\t * @ignore\n\t */\n\t@ViewChild(\"dp\") private dp:NgbDatepicker|undefined;\n\t\n\t/**\n\t * @ignore\n\t */\n\tlastClickedDate = new ReplaySubject();\n\t/**\n\t * @ignore\n\t */\n  \tcalendar = inject(NgbCalendar);\n\t/**\n\t * @ignore\n\t */\n\thoveredDate: NgbDate | null = null;\n\t/**\n\t * @ignore\n\t */\n\tconstructor(){\n\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif(changes[\"events\"]){\n\t\t\tthis.lastClickedDate.pipe(\n\t\t\t\ttake(1),\n\t\t\t).subscribe((d:NgbDate)=>this.onClickDate(d));\n\t\t}\n\t\n\t}\n\n\t\n\t/**\n\t * @ignore\n\t */\n\tconvertToNgbDate(d:Date){\n\t\treturn new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n\t}\n\t/**\n\t * \n\t * @param {NgbDate} date date that was clicked\n\t */\n\tonClickDate(date:NgbDate){\n\t\tthis.lastClickedDate.next(date);\n\t\tthis.clickedDate.next(date);\n\t}\n\t/**\n\t * @param {NgbDate} date sets color for that date\n\t */\n\tsetBGColor(date:NgbDate):string{\n\t\t//check amonst all keys in dateColor map\n\t\tfor( var e of this.dateColor){\n\t\t\tif(this.isInside(e[0][0],date,e[0][1])){\n\t\t\t\treturn e[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn \"\"\n\t}\n\t/**\n\t * @ignore\n\t */\n\tprivate isInside(start:NgbDate, date:NgbDate, end:NgbDate):boolean{\n\t\tvar startDate:Date = new Date(start.year, start.month - 1, start.day);\n\t\tvar dateDate:Date = new Date(date.year, date.month - 1, date.day);\n\t\tvar endDate:Date = new Date(end.year, end.month - 1, end.day);\n\t\t\n\t\treturn startDate\n    \n\n    \n        \n\n\n\n\n\t\n\t\t{{ date.day }}\n\t\n\n    \n\n    \n                \n                    ./calander.component.css\n                \n                .custom-day {\n    text-align: center;\n    padding: 0.185rem 0.25rem;\n    display: inline-block;\n    height: 2rem;\n    width: 2rem;\n}\n.custom-day.focused {\n    background-color: #e6e6e6;\n}\n.custom-day.range,\n.custom-day:hover {\n    background-color: rgb(2, 117, 216);\n    color: white;\n}\n.custom-day.faded {\n    background-color: rgba(2, 117, 216, 0.5);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ date.day }}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalanderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEvent.html":{"url":"interfaces/CalanderEvent.html","title":"interface - CalanderEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            detail\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         CalanderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n    groupId?: string,\n    groupName?: string\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEventColor.html":{"url":"interfaces/CalanderEventColor.html","title":"interface - CalanderEventColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEventColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bgColor\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bgColor:         CalanderColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         CalanderEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n    groupId?: string,\n    groupName?: string\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarFacade.html":{"url":"injectables/CalendarFacade.html","title":"injectable - CalendarFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/PersonalCalendarFacade.ts\n        \n\n\n            \n                Description\n            \n            \n                Facade for person calender component\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar$\n                            \n                            \n                                dateColor$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                destroy\n                            \n                            \n                                initializeCalender\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent(newCalEvent: NewCalendarEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:95\n                        \n                    \n\n\n            \n                \n                        create new alender event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newCalEvent\n                                            \n                                                            NewCalendarEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    new calender event to be created\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:88\n                        \n                    \n\n\n            \n                \n                        delete calender event from personal calender\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Calender event user wants to delete\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:48\n                        \n                    \n\n\n            \n                \n                        clean up for destroy\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeCalender\n                        \n                    \n                \n            \n            \n                \ninitializeCalender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:54\n                        \n                    \n\n\n            \n                \n                        get personal calender events for current user\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:30\n                        \n                    \n\n            \n                \n                    data stream for list of calender events\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:34\n                        \n                    \n\n            \n                \n                    data stream of list of dates and their corresponding colours\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { NewCalendarEvent } from \"../class/NewCalendarEvent\"\n\n/**\n * Facade for person calender component\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarFacade {\n    /**\n     * @ignore\n     */\n    private subs:Subscription[] = [];\n    /**\n     * @ignore\n     */\n    currentUser?: UserInterface;\n    /**\n     * data stream for list of calender events\n     */\n    calendar$: BehaviorSubject = new BehaviorSubject([]);\n    /**\n     * data stream of list of dates and their corresponding colours\n     */\n    dateColor$: BehaviorSubject = new BehaviorSubject([]); //should be date range better // wtf does this mean\n    /**\n     * \n     * @ignore\n     */\n    constructor(\n        private authSvc:AuthenticationService,\n        private calSvc: CalendarService\n    ) {\n        \n    }\n    /**\n     * clean up for destroy\n     */\n    destroy(){\n        this.subs.forEach((e)=>e.unsubscribe());\n    }\n    /**\n     * get personal calender events for current user\n     */\n    initializeCalender(){\n        this.authSvc.getCurrentUser().then(user=>{\n            this.currentUser  = user;\n            var rtn:Subscription = this.calSvc.getCalendar(user).subscribe(\n            calEvents=>{\n                \n                calEvents.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n                    var aNum:number = CalanderTypePriority.get(a.type)||0;\n                    var bNum:number = CalanderTypePriority.get(b.type)||0;\n                    return aNum-bNum;\n                });\n                \n                let dateColor: [[NgbDate,NgbDate], CalanderColor][] = calEvents.map(\n                    (e:CalanderEvent)=>{\n                        var start:NgbDate = new NgbDate(e.start.getFullYear() , e.start.getMonth()+1,e.start.getDate());\n                        var endDate:NgbDate = new NgbDate(e.end.getFullYear() , e.end.getMonth()+1,e.end.getDate());\n                        return [[start,endDate], CalanderTypeColor.get(e.type)||CalanderColor.Default]\n                    }\n                );\n                \n                \n                this.calendar$.next(calEvents);\n                this.dateColor$.next(dateColor);\n            });\n            \n            this.subs.push(rtn);\n        });\n\n    }\n    /**\n     * delete calender event from personal calender\n     * @param e Calender event user wants to delete\n     * \n     */\n    deleteEvent(e:CalanderEvent): Promise{\n        return this.calSvc.removeCalendarEvent(e);\n    }\n    /**\n     * create new alender event\n     * @param {NewCalendarEvent} newCalEvent new calender event to be created\n     */\n    createEvent(newCalEvent: NewCalendarEvent): Promise{\n        return new Promise((res,rej)=>{\n            if(this.currentUser && newCalEvent.isValid()){\n                let calEvent = newCalEvent.toCalendarevent(this.currentUser);\n\n                this.calSvc.addCalendarEvent(calEvent)\n                    .then(_=>res())\n                    .catch(err=>rej(err));\n\n                \n            }\n            else {\n                rej(new Error(\"invalid-parameter\"));\n            }\n        })\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarService.html":{"url":"injectables/CalendarService.html","title":"injectable - CalendarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/calendar.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all calendar-related methods.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCalendarEvent\n                            \n                            \n                                clash\n                            \n                            \n                                convertReservedToBooked\n                            \n                            \n                                    Private\n                                dbToCalendarEvent\n                            \n                            \n                                getCalendar\n                            \n                            \n                                getGroupCalendar\n                            \n                            \n                                removeCalendarEvent\n                            \n                            \n                                removeReservedCalEvent\n                            \n                            \n                                updateCalendarEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/calendar.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCalendarEvent\n                        \n                    \n                \n            \n            \n                \naddCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Adds CalendarEvent to firstore.\nChecks if the CalendarEvent is a personal event that clashes with a group event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event to be added.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when the event has been added.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clash\n                        \n                    \n                \n            \n            \n                \nclash(event: EventInterface, calEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Checks if there is a clash between an event and a calendar event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event to check against.\n\n                                            \n                                        \n                                        \n                                                calEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CalenderEvent to check with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Returns true if there is a clash.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertReservedToBooked\n                        \n                    \n                \n            \n            \n                \nconvertReservedToBooked(grp: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:196\n                        \n                    \n\n\n            \n                \n                        Converts all group user's Reserved CalendarEvent to Booked.\nThis should only affect users who have confirmed their availabilities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                grp\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group that is being \"booked\".\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when update is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToCalendarEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToCalendarEvent(dbCalEnt: DocumentData | , user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Convert firestore object to CalendarEvent object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dbCalEnt\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Calendar event from firestore in document format.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User that this CalendarEvent is made for.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderEvent\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalendar\n                        \n                    \n                \n            \n            \n                \ngetCalendar(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Get all of the user's CalendarEvents\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User to pull CalendarEvents for.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The observable updates in real time when user's calendar updates.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupCalendar\n                        \n                    \n                \n            \n            \n                \ngetGroupCalendar(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Gets all CalendarEvents of all users in a group.\nThe method filters out CalendarEvents that does not clash with the Group's Event.\nThe method also ignores reserved/book CalendarEvents that are made for the Group.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group to pull CalendarEvents for.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The observable updates in real time when any of the user's calendar updates or when new users joins the group.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCalendarEvent\n                        \n                    \n                \n            \n            \n                \nremoveCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:179\n                        \n                    \n\n\n            \n                \n                        Deletes a calendar event in firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CalendarEvent to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when deletion is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReservedCalEvent\n                        \n                    \n                \n            \n            \n                \nremoveReservedCalEvent(grp: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:228\n                        \n                    \n\n\n            \n                \n                        Removes Reserve CalendarEvent from a user that is in a group.\nThis is used when a user is kicked from the group.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                grp\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group that the user is being kicked from.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User that is being kicked.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when remove is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCalendarEvent\n                        \n                    \n                \n            \n            \n                \nupdateCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:159\n                        \n                    \n\n\n            \n                \n                        Updates a calendar event in firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated calendarEvent.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when update is successful.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, and, deleteDoc, setDoc} from '@angular/fire/firestore';\nimport { Observable, take } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderType } from 'src/app/interfaces/enums/calenderenum';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\n\n/**\n * Handles all calendar-related methods.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n\n  constructor(private fs: Firestore) { }\n\n  /**\n   * Convert firestore object to CalendarEvent object\n   * @param dbCalEnt  Calendar event from firestore in document format.\n   * @param user User that this CalendarEvent is made for.\n   * @returns \n   */\n  private dbToCalendarEvent(dbCalEnt: DocumentData | DocumentData & {id: string;}, user: UserInterface): CalanderEvent { \n    let calEvent: CalanderEvent = { \n      id: dbCalEnt[\"id\"],\n      user: user, \n      start: dbCalEnt[\"start\"].toDate(), \n      end: dbCalEnt[\"end\"].toDate(), \n      detail: dbCalEnt[\"detail\"], \n      type: CalanderType[dbCalEnt[\"type\"] as keyof typeof CalanderType] \n    } \n    if (calEvent.type == CalanderType.ReservedForEvent || calEvent.type == CalanderType.BookedForEvent){\n      calEvent.groupId = dbCalEnt[\"grp\"][\"id\"];\n      calEvent.groupName = dbCalEnt[\"grp\"][\"name\"];\n    }\n    return calEvent;\n  } \n\n  /**\n   * Adds CalendarEvent to firstore.\n   * Checks if the CalendarEvent is a personal event that clashes with a group event.\n   * @param calendarEvent Event to be added.\n   * @returns The promise resolves when the event has been added.\n   */\n  addCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    // Initialise\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let calDoc: any = {\n      uid: calendarEvent.user.id,\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n    if (calendarEvent.type == CalanderType.ReservedForEvent || calendarEvent.type == CalanderType.BookedForEvent)\n      calDoc[\"grp\"] = {\n        id: calendarEvent.groupId,\n        name: calendarEvent.groupName\n      };\n\n    return new Promise((res,rej)=>{\n      this.getCalendar(calendarEvent.user).pipe(take(1)).subscribe(cal=>{\n        // check clash with events\n        const clash = cal.some(c => (c.type!==CalanderType.Personal && calendarEvent.start  c.start));\n        if (clash)\n          return rej(new Error(\"cal-event-clash\"));\n        // no clash carry on\n        addDoc(calCollection, calDoc)\n        .then(doc => res()).\n        catch(err => rej(err));\n      });\n    });\n  }\n\n  /**\n   * Get all of the user's CalendarEvents\n   * @param user User to pull CalendarEvents for.\n   * @returns The observable updates in real time when user's calendar updates.\n   */\n  getCalendar(user: UserInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, where(\"uid\",\"==\",user.id));\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            result.push(this.dbToCalendarEvent(cal,user));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  /**\n   * Checks if there is a clash between an event and a calendar event.\n   * @param event Event to check against.\n   * @param calEvent CalenderEvent to check with.\n   * @returns Returns true if there is a clash.\n   */\n\tclash(event: EventInterface, calEvent: CalanderEvent): boolean {\n\t\treturn calEvent.start = event.startDate!;\n\t}\n\n  /**\n   * Gets all CalendarEvents of all users in a group.\n   * The method filters out CalendarEvents that does not clash with the Group's Event.\n   * The method also ignores reserved/book CalendarEvents that are made for the Group.\n   * @param group Group to pull CalendarEvents for.\n   * @returns The observable updates in real time when any of the user's calendar updates or when new users joins the group.\n   */\n  getGroupCalendar(group: GroupInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, and(\n      where(\"uid\",\"in\",group.allUUID), //Limited to 29 members, can increase if we split the calls up.\n      // inequalities on multiple fields not allowed\n      // where(\"start\", \"=\", start)\n      // pulling only calendar events that ends after the start of the event\n      where(\"end\", \">\" , group.event.startDate)\n    ));\n\n    let allUserMap:any = {}\n    allUserMap[group.admin.id] = group.admin;\n    group.members.forEach(member => {\n      allUserMap[member.id] = member;\n    });\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            let calEvent = this.dbToCalendarEvent(cal, allUserMap[cal[\"uid\"]]);\n            if(!group.event.endDate || !group.event.startDate)\n              return;\n            // Reserved/Booked for the group\n            if ((calEvent.type==CalanderType.ReservedForEvent || calEvent.type==CalanderType.BookedForEvent) && calEvent.groupId == group.id)\n              return;\n            // Clash with group date\n\t\t\t\t\t\tif (this.clash(group.event,calEvent))\n              result.push(calEvent);\n          });\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  /**\n   * Updates a calendar event in firestore.\n   * @param calendarEvent Updated calendarEvent.\n   * @returns The promise resolves when update is successful.\n   */\n  updateCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    let update = {\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n    return new Promise(res=>{\n      updateDoc(calDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n  \n  /**\n   * Deletes a calendar event in firestore.\n   * @param calendarEvent CalendarEvent to be deleted.\n   * @returns The promise resolves when deletion is successful.\n   */\n  removeCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    return new Promise(res=>{\n      deleteDoc(calDoc).then(birdbird=>{\n        res();\n      })\n    });\n  }\n\n\t// 1. Pull all \"Reserved\" calendar event of all who has confirmed\n\t// 2. Change type from \"ReservedForEvent\" to \"BookedForEvent\" & update detail\n  /**\n   * Converts all group user's Reserved CalendarEvent to Booked.\n   * This should only affect users who have confirmed their availabilities.\n   * @param grp Group that is being \"booked\".\n   * @returns The promise resolves when update is successful.\n   */\n  convertReservedToBooked(grp: GroupInterface): Promise{\n    return new Promise(res=>{\n      let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n      let q = query(calCollection, and(\n        where(\"uid\",\"in\", grp.confirmed),\n        where(\"grp.id\", \"==\" , grp.id)\n      ));\n      let temp = collectionData(q, {idField: 'id'}).subscribe(data=>{\n\t\t\t\ttemp.unsubscribe();\n\t\t\t\tlet allProm: Promise[] = [];\n\t\t\t\tdata.forEach(cal=>{\n\t\t\t\t\tlet calDoc = doc(this.fs, `calendar/${cal.id}`);\n\t\t\t\t\tlet update = {\n\t\t\t\t\t\ttype: CalanderType.BookedForEvent,\n\t\t\t\t\t\tdetail: `Going to ${grp.event.name} with ${grp.name}.`\n\t\t\t\t\t}\n\t\t\t\t\tallProm.push(updateDoc(calDoc, update));\n\t\t\t\t});\n\t\t\t\tPromise.all(allProm).then(_=>{\n\t\t\t\t\treturn res();\n\t\t\t\t});\n\t\t\t});\n    });\n  }\n\n  /**\n   * Removes Reserve CalendarEvent from a user that is in a group.\n   * This is used when a user is kicked from the group.\n   * @param grp   Group that the user is being kicked from.\n   * @param user  User that is being kicked.\n   * @returns The promise resolves when remove is successful.\n   */\n  removeReservedCalEvent(grp: GroupInterface, user: UserInterface): Promise{\n    return new Promise(res=>{\n      let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n      let q = query(calCollection, and(\n        where(\"uid\",\"==\", user.id),\n        where(\"grp.id\", \"==\" , grp.id)\n      ));\n      let temp = collectionData(q, {idField: 'id'}).subscribe(data=>{\n\t\t\t\ttemp.unsubscribe();\n\t\n        this.removeCalendarEvent(this.dbToCalendarEvent(data[0], user)).then(_=>{\n          return res();\n        });\n\t\t\t});\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassificationComponentComponent.html":{"url":"components/ClassificationComponentComponent.html","title":"component - ClassificationComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassificationComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/classification-component/classification-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages UI that displays the list of classifier/genre recommendation\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classification-component\n            \n\n\n\n            \n                styleUrls\n                ./classification-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./classification-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAddClassification\n                            \n                            \n                                onRemoveClassfication\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                classification\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        classification\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/classification-component/classification-component.component.ts:18\n                            \n                        \n                \n                    \n                        string input received from user about the classification he wants classification remendation on\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:30\n                        \n                    \n\n\n            \n                \n                        initializes component by initiating for classficiation from ticketmaster after the user stop input classification for 500ms\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClassification\n                        \n                    \n                \n            \n            \n                \nonAddClassification(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    classfication to be added in to query\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveClassfication\n                        \n                    \n                \n            \n            \n                \nonRemoveClassfication(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    classfication to be removed from query\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { debounceTime, switchMap } from 'rxjs';\nimport { SearchFacadeService } from 'src/app/facade/search-facade.service';\nimport { ClassType, IdClassType, IdName } from 'src/app/interfaces/clasification-interface';\n\n/**\n * manages UI that displays the list of classifier/genre recommendation\n */\n@Component({\n  selector: 'app-classification-component',\n  templateUrl: './classification-component.component.html',\n  styleUrls: ['./classification-component.component.css']\n})\nexport class ClassificationComponentComponent implements OnInit{\n  /**\n   * string input received from user about the classification he wants classification remendation on\n   */\n  @Input() classification:EventEmitter = new EventEmitter();\n  \n  /**\n   * \n   * @ignore\n   */\n  constructor(public searchFacade:SearchFacadeService){\n    \n  }\n  /**\n   * initializes component by initiating for classficiation from ticketmaster after the user stop input classification for 500ms\n   */\n  ngOnInit(){\n    this.classification.pipe(\n      debounceTime(500),\n      switchMap((x:string)=> this.searchFacade.getClassification(x)\n      )\n    ).subscribe();\n  }\n  /**\n   * \n   * @ignore\n   */\n  onSegment(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name, type:ClassType.Segment});\n  }\n  /**\n   * \n   * @ignore\n   */\n  onGenre(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name,type:ClassType.Genre});\n  }\n  /**\n   * \n   * @ignore\n   */\n  onSubGenre(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name,type:ClassType.Subgenre});\n  }\n  /**\n   * \n   * @param {IdClassType} ie classfication to be added in to query\n   */\n  onAddClassification(ie:IdClassType){\n    //code here\n    this.searchFacade.addClassification(ie);\n  }\n  /**\n   * \n   * @param {IdClassType} ie classfication to be removed from query \n   */\n  onRemoveClassfication(ie:IdClassType){\n    \n    this.searchFacade.removeClassification(ie);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    {{c.name}}\n    {{c.name}}\n    {{c.name}}\n\n\n\n    {{c.name}}\n\n    \n\n    \n                \n                    ./classification-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{c.name}}    {{c.name}}    {{c.name}}    {{c.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClassificationComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationInterface.html":{"url":"interfaces/ClassificationInterface.html","title":"interface - ClassificationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            segment\n                                        \n                                \n                                \n                                        \n                                            subGenre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segment:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subGenre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateGroupFacade.html":{"url":"injectables/CreateGroupFacade.html","title":"injectable - CreateGroupFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateGroupFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/CreateGroupFacade.ts\n        \n\n\n            \n                Description\n            \n            \n                Facade for create Group UI\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroup\n                            \n                            \n                                destroy\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(selectedEvent: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:103\n                        \n                    \n\n\n            \n                \n                        make api call to create group\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selectedEvent\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    event for the created group\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:65\n                        \n                    \n\n\n            \n                \n                        unsubcribe to all resources and clean up\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:54\n                        \n                    \n\n\n            \n                \n                        initiates all the data streams objects\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:25\n                        \n                    \n\n            \n                \n                    data stream for watchlist\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { WatchlistService } from \"../network/firebase/firestore/watchlist.service\"\n\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { EventInterface } from \"../interfaces/event-interface\"\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport {  FormBuilder, FormControl, Validators } from '@angular/forms';\n\n/**\n * Facade for create Group UI\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateGroupFacade {\n\t/**\n\t * @ignore\n\t */\n\tprivate subs:Subscription[] = [];\n\t/**\n\t * data stream for watchlist\n\t */\n    watchlist$: BehaviorSubject = new BehaviorSubject([]);\n\t/**\n\t * @ignore\n\t */\n\tnewGroupForm = this.formBuilder.group({\n\t\tname:['', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['', Validators.required],\n\t\t\tdetails:new FormControl(\"\", Validators.required),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t});\n\t/**\n\t * @ignore \n\t */\n    constructor(\n        private authSvc: AuthenticationService,\n\t\tprivate formBuilder: FormBuilder,\n        private grpSvc: GroupService,\n        private watchlistSvc: WatchlistService\n    ) {\n  \t}\n\t/**\n\t * initiates all the data streams objects\n\t */\n  \tinitialize(){\n\t\tthis.authSvc.getCurrentUser().then(user=>{\n\t\t\tthis.subs.push(this.watchlistSvc.getWatchlist(user).subscribe(watchlist=>{\n\t\t\t\tthis.watchlist$.next(watchlist);\n\t\t\t\n\t\t\t}));\n\t\t});\n\t}\n\t/**\n\t * unsubcribe to all resources and clean up\n\t */\n\tdestroy(){\n\t\tthis.subs.forEach((e)=>e.unsubscribe());\n\t\tthis.newGroupForm = this.formBuilder.group({\n\t\t\tname:['', Validators.required],\n\t\t\tevent:this.formBuilder.group({\n\t\t\t\tid:[\"\",Validators.required],\n\t\t\t\tlocation:this.formBuilder.array([]),\n\t\t\t\timages:this.formBuilder.array([]),\n\t\t\t\tname:['', Validators.required],\n\t\t\t\tdetails:new FormControl(\"\", Validators.required),\n\t\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t\t})\n\t\t});\n\t}\n\t/**\n\t * @ignore\n\t */\n\tupdateForm(evt:EventInterface){\n\t\tvar n:any = structuredClone(evt);\n\t\tvar tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds \n\t\t\n\t\tif(evt.startDate){\n\t\t\tlet d:Date = evt.startDate;\n\t\t\tn.startDate = (new Date(d.getTime() - tzoffset)).toISOString().slice(0, -8);\n\t\t} \n\t\tif(evt.endDate){\n\t\t\tlet d:Date = evt.endDate;\n\t\t\tn.startDate = (new Date(d.getTime() - tzoffset)).toISOString().slice(0, -8);\n\t\t} \n\t\tthis.newGroupForm.patchValue({\n\t\t\tevent:n\n\t\t});\n\t}\n\t/**\n\t * make api call to create group\n\t * @param selectedEvent event for the created group \n\t */\n  \tcreateGroup(selectedEvent: EventInterface): Promise{\n\t\treturn this.authSvc.getCurrentUser().then((u:UserInterface)=>new Promise((res,rej)=>{\n\t\t\tvar grp:any = this.newGroupForm.value;\n\t\t\tgrp.event.startDate = new Date(grp.event.startDate);\n\t\t\tgrp.event.endDate = new Date(grp.event.endDate);\n\t\t\tgrp.event.location = selectedEvent.location;\n\t\t\tgrp.event.images = selectedEvent.images;\n\t\t\tif(grp.event.startDate>=grp.event.endDate) return rej(new Error(\"group-date-incompatible\"));\t\t\t\n\t\t\tthis.grpSvc.createGroup(grp.name, grp.event as EventInterface, u).then(_=>{\n\n\t\t\t\treturn res(); // Group creation success;\n\t\t\t}).catch(err=>{\n\n\t\t\t\tif (err===\"group-name-taken\"){\n\t\t\t\t\treturn rej(new Error(\"group-name-taken\"));\n\t\t\t\t}\n\t\t\t})\n\t\t}))\n\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventClass.html":{"url":"classes/EventClass.html","title":"class - EventClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                    Optional\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                images\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEquals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: EventInterface)\n                    \n                \n                        \n                            \n                                Defined in src/app/interfaces/event-interface.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        EventInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isEquals\n                        \n                    \n                \n            \n            \n                \nisEquals(other: EventClass)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interfaces/event-interface.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            EventClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\nexport class EventClass {\n    id: string=\"\";\n    name:string=\"\";\n    location:string[]=[];\n    images:string[]=[];\n    details:string=\"\";\n    startDate?:Date;\n    endDate?:Date;\n    constructor(e:EventInterface){\n        this.id = e.id;\n        this.name = e.id;\n        this.location = e.location;\n        this.images = e.images;\n        this.details = e.details;\n        this.startDate = e?.startDate;\n        this.endDate = e?.endDate;\n    }\n    isEquals(other:EventClass):boolean{\n        return other.id == this.id;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventComponentComponent.html":{"url":"components/EventComponentComponent.html","title":"component - EventComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/event-component/event-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages UI which diplays event details\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-component\n            \n\n\n\n            \n                styleUrls\n                ./event-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                removeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                inWatchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/event-component/event-component.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:21\n                            \n                        \n                \n                    \n                        Event information to be displayed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        inWatchlist\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:17\n                            \n                        \n                \n                    \n                        if in watchlist event will be displayed without start on with start otherwist\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEvent\n                        \n                    \n                \n            \n            \n                \naddEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:36\n                        \n                    \n\n\n            \n                \n                        initiate add to watchlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    event the user wants to add to watchlist\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEvent\n                        \n                    \n                \n            \n            \n                \nremoveEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:29\n                        \n                    \n\n\n            \n                \n                        initiate remove from watchlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    event the user wants to remove from watchlist\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/event-component/event-component.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { EventInterface } from '../../interfaces/event-interface';\n\nimport { SearchFacadeService } from 'src/app/facade/search-facade.service';\n/**\n * manages UI which diplays event details\n */\n@Component({\n  selector: 'app-event-component',\n  templateUrl: './event-component.component.html',\n  styleUrls: ['./event-component.component.css']\n})\nexport class EventComponentComponent {\n  /**\n   * if in watchlist event will be displayed without start on with start otherwist\n   */\n  @Input() inWatchlist!:boolean;\n  /**\n   * Event information to be displayed\n   */\n  @Input() event!:EventInterface;\n  constructor(\n    public searchFacade:SearchFacadeService\n  ){}\n  /**\n   * initiate remove from watchlist\n   * @param {EventInterface} event event the user wants to remove from watchlist\n   */\n  removeEvent(event:EventInterface){\n    this.searchFacade.removeFromWatchList(event);\n  }\n  /**\n   * initiate add to watchlist\n   * @param {EventInterface} event event the user wants to add to watchlist\n   */\n  addEvent(event:EventInterface){\n    this.searchFacade.addToWatchList(event);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            \n                \n                \n            \n        \n          \n                          \n    \n    \n      \n        {{event.name}}\n        \n          Add to watchlist\n          \n        \n        \n          Remove from watchlist\n          \n        \n      \n      Location: {{event.location}}\n      {{event.details}}\n      \n      \n      {{event.startDate | date:'medium'}}\n\n       - {{event.endDate | date:'medium'}}\n      \n      \n  \n    \n\n    \n                \n                    ./event-component.component.css\n                \n                .watchlistBtn{\n    cursor: pointer;\n    top: 0;\n}\n\n\n.watchlistBtnPositive {\n    color: gold;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                              {{event.name}}                  Add to watchlist                                    Remove from watchlist                              Location: {{event.location}}      {{event.details}}                  {{event.startDate | date:\\'medium\\'}}       - {{event.endDate | date:\\'medium\\'}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventInterface.html":{"url":"interfaces/EventInterface.html","title":"interface - EventInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            details\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\nexport class EventClass {\n    id: string=\"\";\n    name:string=\"\";\n    location:string[]=[];\n    images:string[]=[];\n    details:string=\"\";\n    startDate?:Date;\n    endDate?:Date;\n    constructor(e:EventInterface){\n        this.id = e.id;\n        this.name = e.id;\n        this.location = e.location;\n        this.images = e.images;\n        this.details = e.details;\n        this.startDate = e?.startDate;\n        this.endDate = e?.endDate;\n    }\n    isEquals(other:EventClass):boolean{\n        return other.id == this.id;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventPageInterface.html":{"url":"interfaces/EventPageInterface.html","title":"interface - EventPageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventPageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/eventpage-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            events\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events:         EventInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         PageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { PageInterface } from \"./page-interface\";\n\nexport interface EventPageInterface {\n    page:PageInterface,\n    events:EventInterface[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenreInterface.html":{"url":"interfaces/GenreInterface.html","title":"interface - GenreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GenreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            subgenres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        subgenres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subgenres:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCreateComponent.html":{"url":"components/GroupCreateComponent.html","title":"component - GroupCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-create/group-create.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages UI that create group\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-create\n            \n\n\n\n            \n                styleUrls\n                ./group-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:77\n                        \n                    \n\n\n            \n                \n                        distroy component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:58\n                        \n                    \n\n\n            \n                \n                        intiate create group\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:51\n                        \n                    \n\n\n            \n                \n                        listen to when group create ui is being called to open\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:70\n                        \n                    \n\n\n            \n                \n                        intiate component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { CreateGroupFacade } from 'src/app/facade/CreateGroupFacade';\nimport { Subscription } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n/**\n * manages UI that create group\n */\n@Component({\n  selector: 'app-group-create',\n  templateUrl: './group-create.component.html',\n  styleUrls: ['./group-create.component.css']\n})\nexport class GroupCreateComponent implements OnInit{\n\t/**\n\t * @ignore\n\t */\n\tprivate subs:Subscription[] = [];\n\t/**\n\t * @ignore\n\t */\n\t@ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n\t/**\n\t * @ignore\n\t */\n\t@ViewChild('content') private content:NgbModal | undefined; \n\t\tcloseResult = '';\n\t\t/**\n\t * @ignore\n\t */\n\t@Input() em!:EventEmitter;\n\n\t/**\n\t * @ignore\n\t */\n\tselectedEvent?:EventInterface;\n\t/**\n\t * @ignore\n\t */\n\tconstructor(\n\t\tprivate toastr:ToastrService,\n\t\tprivate modalService:NgbModal,\n\t\tpublic grp: CreateGroupFacade\n\t){}\n\n\t/**\n\t * listen to when group create ui is being called to open\n\t *  */ \n\tngOnInit(){\n\t\t\n\t\tthis.subs.push(this.em.subscribe(()=>this.open()));\n\t}\n\t/**\n\t * intiate create group\n\t */\n\tcreateGroup(){\n\t\tthis.grp.createGroup(this.selectedEvent!).then(_=>{\n\t\t\tthis.toastr.success(this.grp.newGroupForm.value.name?this.grp.newGroupForm.value.name:\"\",\"Group Created\");\n\t\t\tthis.close();\n\t\t}).catch((err:Error)=>{\n\t\t\tthis.toastr.error(err.message,\"Group Creation Error\");\n\t\t})\n\t}\n\n\t/**\n\t * intiate component\n\t *  */ \n\topen() {\n\t\tthis.grp.initialize();\n\t\tthis.modalService.open(this.content,{centered:true, fullscreen:true});\n\t}\n/**\n\t * distroy component\n\t *  */ \n\tclose(){\n\t\tthis.modalService.dismissAll();\n\t\tthis.grp.destroy();\n\t\tthis.selectedEvent = undefined;\n\t}\n\t\n\t\n}\n\n    \n\n    \n        \n\t\n\t\tNew Group\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t  Group Name\n\t\t\t  \n\t\t\t\t\n\t\t\t  \n\t\t\t\n\t\t\t\n\t\t\t\tChooose Event\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tCHOOSE HERE\n\t\t\t\t\t{{evt.name}}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t  \n\t\t\t  \n\t\t\t\n\t\t\t\tEvent Details\n\t\t\t\t\n\t\t\t\t\tEvent Name\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEvent details\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tStart Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEnd Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\n\t\t\tSave\n\t\t  \n\t\n\t\n\n\n\n\n    \n\n    \n                \n                    ./group-create.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tNew Group\t\t\t\t\t\t\t\t\t\t\t\t  Group Name\t\t\t  \t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\tChooose Event\t\t\t\t\t\t\t\t\t\t\t\t\tCHOOSE HERE\t\t\t\t\t{{evt.name}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t  \t\t\t\t\t\t\tEvent Details\t\t\t\t\t\t\t\t\tEvent Name\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEvent details\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tStart Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEnd Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t\t\tSave\t\t  \t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupDetailComponent.html":{"url":"components/GroupDetailComponent.html","title":"component - GroupDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-detail/group-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages group detail UI\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-detail\n            \n\n\n\n            \n                styleUrls\n                ./group-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGoing\n                            \n                            \n                                confirmGroupbooking\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendGroupConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-detail/group-detail.component.ts:24\n                            \n                        \n                \n                    \n                        Group information to be used\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGoing\n                        \n                    \n                \n            \n            \n                \nconfirmGoing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:103\n                        \n                    \n\n\n            \n                \n                        initiate user want confirm going to event\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupbooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupbooking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:94\n                        \n                    \n\n\n            \n                \n                        initiate group booking\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:49\n                        \n                    \n\n\n            \n                \n                        initiate delete group\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:74\n                        \n                    \n\n\n            \n                \n                        initiate join group\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:59\n                        \n                    \n\n\n            \n                \n                        initiate kick user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:37\n                        \n                    \n\n\n            \n                \n                        destroy component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:43\n                        \n                    \n\n\n            \n                \n                        intialize componoent\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:86\n                        \n                    \n\n\n            \n                \n                        initiate send group confirmation\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\nimport { ViewGroupFacade } from 'src/app/facade/ViewGroupFacade'\nimport { take } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport {  Router } from '@angular/router';\n\n/**\n * manages group detail UI\n */\n\n@Component({\n  selector: 'app-group-detail',\n  templateUrl: './group-detail.component.html',\n  styleUrls: ['./group-detail.component.css']\n})\nexport class GroupDetailComponent implements OnInit, OnDestroy{\n  /**\n   * Group information to be used\n   */\n  @Input() group!:GroupInterface;\n/**\n * \n * @ignore \n */\n  constructor(\n    public grp: ViewGroupFacade,\n    private toastr:ToastrService,\n    private router:Router\n  ){}\n  /**\n   * destroy component\n   */\n  ngOnDestroy(): void {\n    this.grp.destroy();\n  }\n   /**\n   * intialize componoent\n   */\n  ngOnInit(){\n    this.grp.initialise(this.group.id, this.group);\n  }\n  /**\n   * initiate delete group\n   */\n  deleteGroup(){\n    this.grp.deleteGroup().then(_=>{\n      this.toastr.success(this.group.name,\"Delete Group\");\n      this.router.navigate(['/group'])\n      location.reload();\n    })\n  }\n  /**\n   * initiate kick user\n   */\n  kickUser(user:UserInterface){\n    this.grp.kickUser(user).then(_=>{\n      this.toastr.success(user.name,\"Kicked User\");\n    })\n  }\n  /**\n   * @ignore\n   */\n  copyInviteLink() {\n    if (this.grp.copyInviteLink())\n      this.toastr.info(\"Link copied!\");\n  }\n  /**\n   * initiate join group\n   */\n  joinGroup(){\n    this.grp.joinGroup(this.grp.group$.value!.id).subscribe({\n     next:()=>{\n      this.toastr.success(this.group.name,\"Joined Group\");\n     },error:(err)=>{\n      this.toastr.error(err,\"Joined Group Error\");\n     } \n    }) \n  }\n  /**\n   * initiate send group confirmation \n   */\n  sendGroupConfirmation(){\n    this.grp.sendGroupConfirmation().then(_=>{\n      this.toastr.success(\"Email Sent to Members\",\"Group Confirmation\");\n    })\n  }\n  /**\n   * initiate group booking\n   */\n  confirmGroupbooking(){\n    //calaa fascase\n    this.grp.confirmGroupbooking().then(_=>{\n      this.toastr.success(\"You have updated the status of this event to booked\", \"Booked\");\n    })\n  }\n  /**\n   * initiate user want confirm going to event\n   */\n  confirmGoing(){\n    this.grp.confirmGroupEvent().pipe(take(1)).subscribe({\n      next:()=>{\n        this.toastr.success(\"Going for this event waiting for admin to book\",\"Confirm Going\");\n      },\n      error:(err)=>{\n        this.toastr.error(err,\"Cannot got for event\");\n        \n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \n\n    ID: {{grp.group$.value?.id}}\n\n\n    {{grp.group$.value?.name}}\n\n\n    {{grp.group$.value?.event?.name}}\n\n\n    BOOKED\n\n\n    {{grp.group$.value?.event?.location}}\n\n\n    {{grp.group$.value?.event?.details}}\n\n\n    {{grp.group$.value?.event?.startDate|date:'medium'}} - {{grp.group$.value?.event?.endDate|date:'medium'}}\n\n\nInvite Link\n\n\n\n\n\n\n    \n        I will be going!\n    \n    \n        \n            \n                \n                    \n                        Name\n                        Going\n                        0\">Kick\n                    \n                \n                \n                     \n                    \n                        \n                        {{(grp.group$|async)!.admin.name}}\n                        \n                        \n                            \n                                {{(grp.group$|async)!.admin.name}} has not confirmed that they are going.\n                                \n                            \n                            \n                                {{(grp.group$|async)!.admin.name}} is going!\n                                \n                                \n                            \n                        \n                        \n                        0\">\n                    \n                     \n                    \n                        \n                        {{ m.name }} \n                        \n                        \n                            \n                                {{m.name}} has not confirmed that they are going.\n                                \n                            \n                            \n                                {{m.name}} is going!\n                                \n                                \n                            \n                        \n                        \n                        0\">Kick\n                          \n                \n            \n        \n        \n            Delete Group\n            Request confirmation\n             0\" title=\"Tickets bought for all members who have confirmed! No further changes will be allowed.\">Confirm booking\n        \n    \n\n\n    \n        I will be going!\n    \n    \n        \n            \n                \n                    \n                        Username\n                        Going\n                    \n                \n                \n                    \n                        \n                        {{(grp.group$|async)!.admin.name}}\n                        \n                        \n                            \n                                {{(grp.group$|async)!.admin.name}} has not confirmed that they are going.\n                                \n                            \n                            \n                                {{(grp.group$|async)!.admin.name}} is going!\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                        {{ m.name }} \n                        \n                        \n                            \n                                {{m.name}} has not confirmed that they are going.\n                                \n                            \n                            \n                                {{m.name}} is going!\n                                \n                                \n                            \n                        \n                          \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n    Everyone is available!\n     0\">\n        \n            \n                Name\n                Unavailable because\n                Start\n                End\n            \n        \n        \n           \n                {{e.user.name}}\n                {{e.detail}}\n                {{e.start|date:\"medium\"}}\n                {{e.end|date:\"medium\"}}     \n           \n           \n        \n    \n\n\n\n\n    JOIN GROUP\n\n\n\n\n    \n\n    \n                \n                    ./group-detail.component.css\n                \n                .invite{\n    cursor: pointer;\n    user-select: none;\n    text-decoration: underline;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ID: {{grp.group$.value?.id}}    {{grp.group$.value?.name}}    {{grp.group$.value?.event?.name}}    BOOKED    {{grp.group$.value?.event?.location}}    {{grp.group$.value?.event?.details}}    {{grp.group$.value?.event?.startDate|date:\\'medium\\'}} - {{grp.group$.value?.event?.endDate|date:\\'medium\\'}}Invite Link            I will be going!                                                                                        Name                        Going                        0\">Kick                                                                                                                                             {{(grp.group$|async)!.admin.name}}                                                                                                            {{(grp.group$|async)!.admin.name}} has not confirmed that they are going.                                                                                                                        {{(grp.group$|async)!.admin.name}} is going!                                                                                                                                                                    0\">                                                                                                             {{ m.name }}                                                                                                             {{m.name}} has not confirmed that they are going.                                                                                                                        {{m.name}} is going!                                                                                                                                                                    0\">Kick                                                                                  Delete Group            Request confirmation             0\" title=\"Tickets bought for all members who have confirmed! No further changes will be allowed.\">Confirm booking                        I will be going!                                                                                        Username                        Going                                                                                                                        {{(grp.group$|async)!.admin.name}}                                                                                                            {{(grp.group$|async)!.admin.name}} has not confirmed that they are going.                                                                                                                        {{(grp.group$|async)!.admin.name}} is going!                                                                                                                                                                                                            {{ m.name }}                                                                                                             {{m.name}} has not confirmed that they are going.                                                                                                                        {{m.name}} is going!                                                                                                                                                                                              Everyone is available!     0\">                                    Name                Unavailable because                Start                End                                                       {{e.user.name}}                {{e.detail}}                {{e.start|date:\"medium\"}}                {{e.end|date:\"medium\"}}                                           JOIN GROUP'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/group-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            allUUID\n                                        \n                                \n                                \n                                        \n                                            booked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allUUID:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        booked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        booked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         EventInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         UserInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { UserInterface } from \"./user-interface\";\n\nexport interface GroupInterface {\n    id: string;\n    name:string;\n    event:EventInterface;\n    admin: UserInterface;\n    members:UserInterface[];\n    confirmed:string[];\n    booked: boolean;\n    allUUID: string[]; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupListComponent.html":{"url":"components/GroupListComponent.html","title":"component - GroupListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-list/group-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages UI for how a list of group should be displayed\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-list\n            \n\n\n\n            \n                styleUrls\n                ./group-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groups\n                    \n                \n                \n                    \n                        Type :         GroupInterface[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:15\n                            \n                        \n                \n                    \n                        list groups to be displayed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-list/group-list.component.ts:25\n                        \n                    \n\n\n            \n                \n                        emit group for context using this component to use\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    group user clicks on\nemit group for context using this component to use\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n/**\n * manages UI for how a list of group should be displayed\n */\n@Component({\n  selector: 'app-group-list',\n  templateUrl: './group-list.component.html',\n  styleUrls: ['./group-list.component.css']\n})\nexport class GroupListComponent {\n  /**\n   * list groups to be displayed\n   */\n  @Input() groups!:GroupInterface[];\n  /**\n   * @ignore\n   */\n  @Output() groupClicked = new EventEmitter();\n  /**\n   * \n   * @param {GroupInterface} group group user clicks on\n   * emit group for context using this component to use \n   */\n  onClick(group:GroupInterface){\n    this.groupClicked.emit(group);\n  }\n\n  \n}\n\n    \n\n    \n        \n\n\n\t\n\t\t\n\t\t\tName\n\t\t\tEvent\n\t\t\tMembers\n\t\t\n\t\n\t\n\t\t\t\n\t\t\t\t{{ g.name }}\n\t\t\t\t{{ g.event.name }}\n\t\t\t\t{{ g.members |groupmemberPipe}}\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./group-list.component.css\n                \n                .event-row {\n    cursor:pointer;\n    background-color: var(--bs-white);\n}\n\n\n.event-row:hover {\n    filter: brightness(95%);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\tName\t\t\tEvent\t\t\tMembers\t\t\t\t\t\t\t\t\t\t\t{{ g.name }}\t\t\t\t{{ g.event.name }}\t\t\t\t{{ g.members |groupmemberPipe}}\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupPageComponent.html":{"url":"components/GroupPageComponent.html","title":"component - GroupPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages UI for group page\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-page\n            \n\n\n\n            \n                styleUrls\n                ./group-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                choseGroup\n                            \n                            \n                                convertToListofStrings\n                            \n                            \n                                joinGroup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        choseGroup\n                        \n                    \n                \n            \n            \n                \nchoseGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToListofStrings\n                        \n                    \n                \n            \n            \n                \nconvertToListofStrings(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:68\n                        \n                    \n\n\n            \n                \n                        initiate join group\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:74\n                        \n                    \n\n\n            \n                \n                        redirects to specific group detail suppose user join group via link\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:55\n                        \n                    \n\n\n            \n                \n                        destroy component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:62\n                        \n                    \n\n\n            \n                \n                        initialize component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { GrouppageFacadeService } from '../facade/grouppage-facade.service';\n/**\n * manages UI for group page\n */\n@Component({\n  selector: 'app-group-page',\n  templateUrl: './group-page.component.html',\n  styleUrls: ['./group-page.component.css']\n})\n\nexport class GroupPageComponent implements OnInit, AfterViewInit,OnDestroy{\n  /**\n   * @ignore\n   */\n  @ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n  /**\n   * @ignore\n   */\n  @ViewChild('content') private content:NgbModal | undefined; \n  /**\n   * @ignore\n   */\n  openModalEmitter = new EventEmitter();\n  /**\n   * @ignore\n   */\n  chosen:GroupInterface | undefined;\n  /**\n   * @ignore\n   */\n  currentUser?:UserInterface;\n  /**\n   * @ignore\n   */\n  groupID:string =\"\";\n\n  /**\n   * \n   * @ignore \n   */\n  constructor(\n    public grp: GrouppageFacadeService,\n    private route:ActivatedRoute,\n    private toastr:ToastrService \n  ){}\n  /**\n   * destroy component\n   */\n  ngOnDestroy(): void {\n    \n    this.grp.destroy();\n  }\n/**\n   * initialize component\n   */\n  ngOnInit(): void {\n    this.grp.initialise();\n  }\n  /**\n   * initiate join group\n   */\n  joinGroup(){\n    this.grp.joinGroup(this.groupID).subscribe({error:(err)=>this.toastr.error(err,\"Join Group Error\")});\n  }\n  /**\n   * redirects to specific group detail suppose user join group via link\n   */\n  ngAfterViewInit(): void {\n    this.route.paramMap.subscribe(params=>{\n      var id:string|null;\n      id =  params.get('id');\n      if (id){\n        this.grp.getGrpById(id).subscribe({\n          next: (group) => this.choseGroup(group),\n          error: (err) => this.toastr.error(err,\"Group ID Error\")\n        })\n      }\n    });\n\n\n  }\n  choseGroup(group:GroupInterface){\n    this.chosen = group;\n    this.navStuff?.select(2);\n  }\n\n  convertToListofStrings(members:UserInterface[]){\n    return members.map((x)=>x.name);\n  }\n  \n  \n}\n\n    \n\n    \n        \n\n\n  \n    Groups\n    \n      \n        \n          \n        \n        \n            JOIN\n        \n      \n      \n        Create Group\n      \n      0\">\n        Group(s) you made\n        \n      \n      0\">\n        Group(s) you joined\n        \n      \n      \n        You are not in any groups, create one now!\n      \n    \n  \n  \n    {{chosen.name}}\n    \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./group-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Groups                                                        JOIN                            Create Group            0\">        Group(s) you made                    0\">        Group(s) you joined                            You are not in any groups, create one now!                  {{chosen.name}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/group.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all group-related methods.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGroupBooking\n                            \n                            \n                                confirmGroupEvent\n                            \n                            \n                                createGroup\n                            \n                            \n                                    Private\n                                dbToGroupInterface\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                getGroupById\n                            \n                            \n                                getGroups\n                            \n                            \n                                joinGroup\n                            \n                            \n                                removeFromGroup\n                            \n                            \n                                sendGroupConfirmation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(calSvc: CalendarService, fs: Firestore, noti: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/group.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noti\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupBooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupBooking(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Tickets have been purchased, admin \"Booked\" the Group.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group being booked.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when update is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupEvent\n                        \n                    \n                \n            \n            \n                \nconfirmGroupEvent(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:217\n                        \n                    \n\n\n            \n                \n                        User is indidicating availability, ie confirming that they are available at the time of the Group Event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group that is being confirmed.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User confirming their availability.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(name: string, event: EventInterface, admin: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Adds a new group to firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the group.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event that the group is made for.\n\n                                            \n                                        \n                                        \n                                                admin\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User who is the admin of the group\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when creation is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToGroupInterface\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToGroupInterface(dbGroup: DocumentData | )\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Convert firestore object to Group object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dbGroup\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group from firestore in document format.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:193\n                        \n                    \n\n\n            \n                \n                        Delete group from firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when delete is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupById\n                        \n                    \n                \n            \n            \n                \ngetGroupById(groupId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Get a group by its Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the group to be retrieved.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The observable updates in real time when the content of the group is updated.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Get all groups that the user is a part of.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User to retrieve groups of.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The observable updates in real time when user joins or is removed from a group. Content in the group is also updated in real time.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(groupId: string, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Add a user to a group. This method will fail if User is already in Group, if the Group is already booekd, or if the Group does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    GroupID of the Group the User is joining.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User who is joining the Group.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise is resolved when the User successfully joins the Group.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromGroup\n                        \n                    \n                \n            \n            \n                \nremoveFromGroup(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Remove a user from group.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group that the user is being removed from.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User that is being removed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when remove is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:207\n                        \n                    \n\n\n            \n                \n                        Send confirmation notification to all in group.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group to send confirmation notification to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when notification is sent.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, deleteDoc} from '@angular/fire/firestore';\nimport { Observable, forkJoin, from, iif, mergeMap, of, switchMap, take, throwError } from 'rxjs';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { NotificationService } from './notification.service';\nimport { CalanderType } from 'src/app/interfaces/enums/calenderenum';\nimport { CalendarService } from './calendar.service';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\n\n/**\n * Handles all group-related methods.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  constructor(private calSvc: CalendarService, private fs: Firestore, private noti: NotificationService) { }\n\n  /**\n   * Convert firestore object to Group object\n   * @param dbGroup  Group from firestore in document format.\n   * @returns \n   */\n  private dbToGroupInterface(dbGroup: DocumentData | DocumentData & {id: string;}): GroupInterface{\n    let grp: GroupInterface = {\n      id: dbGroup[\"id\"],\n      name: dbGroup[\"name\"],\n      event: {\n        id: dbGroup[\"event\"].id,\n        name: dbGroup[\"event\"].name,\n        startDate: dbGroup[\"event\"].start.toDate(),\n        endDate: dbGroup[\"event\"].end.toDate(),\n        details: dbGroup[\"event\"][\"details\"],\n        images: dbGroup[\"event\"][\"imageUrls\"],\n        location: dbGroup[\"event\"][\"locations\"]\n      },\n      admin: dbGroup[\"admin\"],\n      members: dbGroup[\"members\"],\n      confirmed: dbGroup[\"confirmed\"],\n      booked: dbGroup[\"booked\"],\n      allUUID: dbGroup[\"allUUID\"]\n    }\n    return grp;\n  }\n\n  /**\n   * Adds a new group to firestore.\n   * @param name Name of the group.\n   * @param event Event that the group is made for.\n   * @param admin User who is the admin of the group\n   * @returns The promise resolves when creation is successful.\n   */\n  createGroup(name: string, event: EventInterface, admin: UserInterface): Promise{\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n    let groupDoc = {\n      name: name,\n      event: {\n        id: event.id,\n        name: event.name,\n        start: event.startDate,\n        end: event.endDate,\n        details: event.details,\n        imageUrls: event.images,\n        locations: event.location\n      },\n      admin: admin,\n      members: [],\n      confirmed: [],\n      booked: false,\n      allUUID: [admin.id]\n    }\n\n    return new Promise((res,rej)=>{\n      addDoc(grpCollection, groupDoc).then((docRef: DocumentReference)=>{\n        res();\n      }).catch(err =>{\n        if (err.code === \"permission-denied\")\n          rej(\"group-name-taken\");\n      })\n    })\n  }\n\n  /**\n   * Get all groups that the user is a part of.\n   * @param user User to retrieve groups of.\n   * @returns The observable updates in real time when user joins or is removed from a group. Content in the group is also updated in real time.\n   */\n  getGroups(user: UserInterface): Observable{\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n    let q = query(grpCollection, where(\"allUUID\",\"array-contains\",user.id));\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: GroupInterface[] = [];\n          data.forEach(grp=>{\n            result.push(this.dbToGroupInterface(grp));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  /**\n   * Get a group by its Id.\n   * @param groupId Id of the group to be retrieved.\n   * @returns The observable updates in real time when the content of the group is updated.\n   */\n  getGroupById(groupId: string): Observable\n  {\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n    return new Observable(obs=>{\n      docData(grpDoc, {idField: \"id\"}).subscribe(data=>{\n        if (data===undefined){\n          obs.error(\"Group not found\");\n          return;\n        } \n        obs.next(this.dbToGroupInterface(data));\n      });\n    });\n\n  }\n\n  /**\n   * Add a user to a group. This method will fail if User is already in Group, if the Group is already booekd, or if the Group does not exist.\n   * @param groupId GroupID of the Group the User is joining.\n   * @param user User who is joining the Group.\n   * @returns The promise is resolved when the User successfully joins the Group.\n   */\n  joinGroup(groupId: string, user:UserInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n    let update = {\n      members: arrayUnion(user),\n      allUUID: arrayUnion(user.id),\n    }\n    return new Promise((res,rej)=>{\n\n      let sub = this.getGroupById(groupId).subscribe(grp=>{\n        sub.unsubscribe();\n        if (grp.allUUID.includes(user.id))\n          return rej(\"User already in group\");\n        if (grp.booked)\n          return rej(\"Group is already booked\");\n        updateDoc(grpDoc, update).then(_=>{\n          res();\n        }).catch(err =>{\n          if (err.code === \"permission-denied\")\n            rej(\"Group Not Found\");\n        })\n      })\n    })\n  }\n\n  /**\n   * Remove a user from group.\n   * @param group Group that the user is being removed from.\n   * @param user User that is being removed.\n   * @returns The promise resolves when remove is successful.\n   */\n  removeFromGroup(group: GroupInterface, user: UserInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    // Protection against display name change\n    let toRemove: UserInterface|undefined = undefined;\n    group.members.forEach(member=>{\n      if (member.id === user.id){\n        toRemove = member;\n        return;\n      }\n    });\n    return new Promise(res=>{\n      // Check if user is a member in group\n      if (toRemove === undefined) res();\n      let update: any = {\n        members: arrayRemove(toRemove),\n        allUUID: arrayRemove(user.id)\n      }\n      if (group.confirmed.includes(user.id))\n        update[\"confirmed\"] = arrayRemove(user.id);\n      updateDoc(grpDoc, update).then(_=>{\n        res();\n      });\n    });\n  }\n\n  /**\n   * Delete group from firestore.\n   * @param group Group to be deleted.\n   * @returns The promise resolves when delete is successful.\n   */\n  deleteGroup(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    return new Promise(res=>{\n      deleteDoc(grpDoc).then(_=>{\n        res();\n      })\n    });\n  }\n\n  /**\n   * Send confirmation notification to all in group.\n   * @param group Group to send confirmation notification to.\n   * @returns The promise resolves when notification is sent.\n   */\n  sendGroupConfirmation(group: GroupInterface): Promise{\n    return this.noti.sendConfirmationRequest(group);\n  }\n\n  /**\n   * User is indidicating availability, ie confirming that they are available at the time of the Group Event.\n   * @param group Group that is being confirmed.\n   * @param user User confirming their availability.\n   * @returns \n   */\n  confirmGroupEvent(group: GroupInterface, user: UserInterface): Observable{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {confirmed: arrayUnion(user.id)};\n    return this.calSvc.getGroupCalendar(group).pipe(\n      take(1),\n      mergeMap((grpCal:CalanderEvent[])=>\n        iif(\n          ()=> grpCal.map(e=>e.user.id).includes(user.id), \n          throwError(()=>\"User not available at that time\"), \n          of(1).pipe(switchMap(()=>forkJoin(\n            {first:from(this.calSvc.addCalendarEvent({\n              user: user,\n              start: group.event.startDate!,\n              end: group.event.endDate!,\n              detail: `Reserved for ${group.name}.`,\n              type: CalanderType.ReservedForEvent,\n              groupId: group.id,\n              groupName: group.name\n            })), second:from(updateDoc(grpDoc, update))}\n\n          ).pipe(switchMap(()=>of(void 0))))\n          \n          )\n          ,\n        )\n      )\n    );\n  }\n\n  /**\n   * Tickets have been purchased, admin \"Booked\" the Group.\n   * @param group Group being booked.\n   * @returns The promise resolves when update is successful.\n   */\n  confirmGroupBooking(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {booked: true};\n    return new Promise(res=>{\n      let updatePromise = updateDoc(grpDoc, update);\n      updatePromise.then(_=>{\n        this.noti.sendBookingConfirmation(group).then(_=>{\n          res();\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupmemberPipePipe.html":{"url":"pipes/GroupmemberPipePipe.html","title":"pipe - GroupmemberPipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupmemberPipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/groupmember-pipe.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                filters list of members to check if they are a group member of a specific group\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        groupmemberPipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/groupmember-pipe.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     String[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { UserInterface } from '../interfaces/user-interface';\n/**\n * filters list of members to check if they are a group member of a specific group\n */\n@Pipe({\n  name: 'groupmemberPipe'\n})\nexport class GroupmemberPipePipe implements PipeTransform {\n\n  transform(members:UserInterface[]): String[] {\n    return members.map((x)=>x.name);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GrouppageFacadeService.html":{"url":"injectables/GrouppageFacadeService.html","title":"injectable - GrouppageFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GrouppageFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/grouppage-facade.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Facade grouppage component\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminGroups$\n                            \n                            \n                                group$\n                            \n                            \n                                memberGroups$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                getGroups\n                            \n                            \n                                initialise\n                            \n                            \n                                joinGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:64\n                        \n                    \n\n\n            \n                \n                        clean up for better resource management\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:70\n                        \n                    \n\n\n            \n                \n                        get all groups user is administrator and member of\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialise\n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:58\n                        \n                    \n\n\n            \n                \n                        initialise data streams\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/grouppage-facade.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/grouppage-facade.service.ts:27\n                        \n                    \n\n            \n                \n                    data stream for groups user is admin of\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/grouppage-facade.service.ts:23\n                        \n                    \n\n            \n                \n                    data stream for group data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/grouppage-facade.service.ts:31\n                        \n                    \n\n            \n                \n                    data stream for groups user is member of\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { GroupInterface } from \"../interfaces/group-interface\"\n\nimport { BehaviorSubject, Observable, Subscription, from, switchMap } from 'rxjs';\n/**\n * Facade grouppage component\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrouppageFacadeService {\n  /**\n   * @ignore\n   */\n  private subs:Subscription[] = [];\n  /**\n   * data stream for group data\n   */\n    group$: BehaviorSubject = new BehaviorSubject(undefined);\n   /**\n   * data stream for groups user is admin of\n   */\n    adminGroups$: BehaviorSubject = new BehaviorSubject([]);\n    /**\n   * data stream for groups user is member of \n   */\n    memberGroups$: BehaviorSubject = new BehaviorSubject([]);\n    /**\n     * @ignore\n     */\n    groupById$: BehaviorSubject = new BehaviorSubject(undefined);\n\n    /**\n     * \n     * @ignore\n     */\n    constructor(\n        private authSvc:AuthenticationService, \n        private grpSvc: GroupService\n    ) {\n\n    \n  }\n  joinGroup(id: string): Observable {\n    return from(this.authSvc.getCurrentUser()).pipe(\n        switchMap((user:UserInterface)=>from(this.grpSvc.joinGroup(id, user)))\n    );\n    \n\n}\n  /**\n   * initialise data streams\n   */\n  initialise(){\n    this.getGroups();\n  }\n  /**\n   * clean up for better resource management\n   */\n  destroy(){\n    this.subs.forEach((e)=>e.unsubscribe());\n  }\n  /**\n   * get all groups user is administrator and member of\n   */\n  getGroups(){\n    this.authSvc.getCurrentUser().then(user=>{\n        \n        var rtn:Subscription = this.grpSvc.getGroups(user).subscribe(grps=>{\n            let adm: GroupInterface[] = [];\n            let nadm: GroupInterface[] = [];\n            grps.forEach(grp=>{\n                if (grp.admin.id === user.id)\n                    adm.push(grp);\n                else \n                    nadm.push(grp);\n            });     \n            this.adminGroups$.next(adm);\n            this.memberGroups$.next(nadm);\n        })\n        this.subs.push(rtn);\n    });\n  }\n  /**\n   * \n   * @ignore\n   */\n  getGrpById(id: string): Observable{\n    let obs: Observable = this.grpSvc.getGroupById(id);\n    var rtn:Subscription = obs.subscribe(grp=>{\n        this.groupById$.next(grp);\n    });\n    this.subs.push(rtn);\n    return obs;\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdClassType.html":{"url":"interfaces/IdClassType.html","title":"interface - IdClassType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdClassType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ClassType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClassType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdName.html":{"url":"interfaces/IdName.html","title":"interface - IdName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/InwatchlistPipe.html":{"url":"pipes/InwatchlistPipe.html","title":"pipe - InwatchlistPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  InwatchlistPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search-page/list-events/inwatchlist.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Filters out if event is in watchlist on the html page\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        inwatchlist\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(e: EventInterface, watchlist: EventInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/list-events/inwatchlist.pipe.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    specific event in question\n\n                                            \n                                        \n                                        \n                                                watchlist\n                                            \n                                                            EventInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    watchlist of the user\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                if that specific event is in watchlist\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\n\n/**\n * \n * Filters out if event is in watchlist on the html page\n */\n@Pipe({\n  name: 'inwatchlist'\n})\n\nexport class InwatchlistPipe implements PipeTransform {\n  /**\n   * \n   * @param {EventInterface} e specific event in question\n   * @param {EventInterface[]} watchlist watchlist of the user\n   * @returns {boolean} if that specific event is in watchlist\n   */\n  transform(e: EventInterface, watchlist:EventInterface[]): boolean {\n    for( var i of watchlist){\n      if(i.id == e.id) return true;\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListEventsComponent.html":{"url":"components/ListEventsComponent.html","title":"component - ListEventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListEventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/list-events/list-events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-events\n            \n\n\n\n            \n                styleUrls\n                ./list-events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        watchlist\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component ,Input } from '@angular/core';\nimport {EventInterface} from '../../interfaces/event-interface';\n@Component({\n  selector: 'app-list-events',\n  templateUrl: './list-events.component.html',\n  styleUrls: ['./list-events.component.css']\n})\n/**\n * manages list of events \n */\nexport class ListEventsComponent {\n  @Input() events:EventInterface[]=[];\n  @Input() watchlist:EventInterface[] = [];\n  \n}\n\n    \n\n    \n        \n      \n          \n                  \n                    \n          \n      \n\n    \n\n    \n                \n                    ./list-events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListEventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages Login UI\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n\n\n            \n                styleUrls\n                ./login-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        googleSignIn\n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:27\n                        \n                    \n\n\n            \n                \n                        initiaate login pane and redirect to page the the user initially wants to redirect to before he was authenticated\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:35\n                        \n                    \n\n\n            \n                \n                        initiate logout\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n/**\n * manages Login UI\n */\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\n\nexport class LoginPageComponent {\n  /**\n   * \n   * @ignore \n   */\n  constructor(\n    private auth: AuthenticationService,\n    private router:Router,\n    private route:ActivatedRoute\n  ) {}\n  /**\n   * initiaate login pane and redirect to page the the user initially wants to redirect to before he was authenticated\n   */\n  googleSignIn(){\n    this.auth.loginGoogle().then(_=>{\n      this.router.navigateByUrl( this.route.snapshot.queryParams['returnUrl'] || '/');\n    })\n  }\n/**\n * initiate logout\n */\n  logOut(){\n    this.auth.logOut().then(_=>{\n      console.log(\"logout\");\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    Sign in with Google\n\n\n\n    4.16.4\n\n    \n\n    \n                \n                    ./login-page.component.css\n                \n                .bgImg, .bgImgStrip{\n    height:80vh;\n    position: absolute;\n    top:0;\n}\n\n.bgImg {\n    left:50%;\n    transform: translate(-50%);\n    z-index: -1;\n}\n\n.bgImgStrip {\n    z-index: -2;\n    width: 50vw;\n}\n\n.bgLeft {left:0;}\n.bgRight {right:0;}\n\n.loginBtn{\n    background-color: #2A2568;\n    color: white;\n    position: absolute;\n    padding: 1em;\n    border-radius: 2px;\n    top: 80vh;\n    left: 50%;\n    transform: translate(-50%);\n    cursor: pointer;\n    user-select: none;\n}\n\n.loginBtn:active {\n    top: calc(80vh + 5px);\n    left: calc(50% + 5px);\n}\n\n.googleImg {\n    height: 2em;\n}\n\n.version {\n    /* Position*/\n    position: absolute;\n    top: 31.5vh;\n    width: 5vh;\n    height: 5vh;\n    left: calc(50% - 7vh);\n    transform: translate(-50%);\n\n    /* Style */\n    text-align: center;\n    line-height: 5vh;\n    border-radius: 50%;\n    font-weight: bold;\n    font-size: 1.5vh;\n    background: radial-gradient(#ffff75,#ffff99,#ddff00);\n    box-shadow: 0 0 50px 15px #ddff00;\n    opacity: 0;\n    cursor: pointer;\n    user-select: none;\n}\n\n.version:hover {\n    opacity: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Sign in with Google    4.16.4'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/navigation/navigation.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages navigation bar ui\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/navigation/navigation.component.ts:29\n                        \n                    \n\n\n            \n                \n                        initiate logout\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/navigation/navigation.component.ts:23\n                        \n                    \n\n\n            \n                \n                        sets current user name to be displayed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/common/navigation/navigation.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\n/**\n * manages navigation bar ui\n */\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit{\n  currentUser:string = \"\";\n  /**\n   * @ignore\n   */\n  constructor(public authApi:AuthenticationService,private router:Router){\n\n  }\n  /**\n   * sets current user name to be displayed\n   */\n  ngOnInit(){\n    this.authApi.getCurrentUser().then((u)=>this.currentUser = u.name)\n  }\n  /**\n   * initiate logout\n   */\n  logout(){\n    this.authApi.logOut();\n    this.router.navigate([\"login\"]);\n  }\n}\n\n    \n\n    \n        \n    {{currentUser}}\n    \n      \n    \n  \n    \n      \n        \n          Search (current)\n        \n        \n          Groups\n        \n        \n            Personal Calendar\n        \n        \n            Watchlist\n        \n        \n      \n        \n      \n      Logout\n    \n  \n    \n\n    \n                \n                    ./navigation.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{currentUser}}                                            Search (current)                          Groups                            Personal Calendar                            Watchlist                                          Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewCalendarEvent.html":{"url":"classes/NewCalendarEvent.html","title":"class - NewCalendarEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewCalendarEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/class/NewCalendarEvent.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detail\n                            \n                            \n                                end\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                            \n                                toCalendarevent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/class/NewCalendarEvent.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        detail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/class/NewCalendarEvent.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCalendarevent\n                        \n                    \n                \n            \n            \n                \ntoCalendarevent(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/class/NewCalendarEvent.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderEvent\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderType } from '../interfaces/enums/calenderenum';\nimport { UserInterface } from '../interfaces/user-interface';\n\nexport class NewCalendarEvent{\n    start:string;\n    end:string;\n    detail:string;\n\n    constructor(){\n        this.start = \"\";\n        this.end = \"\";\n        this.detail = \"\";\n    }\n\n    isValid() {\n        if (this.start && this.end && this.detail)\n            return new Date(this.start) \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/notification.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all notification-related methods, all notifications are done via email.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendBookingConfirmation\n                            \n                            \n                                sendConfirmationRequest\n                            \n                            \n                                    Private\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/notification.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendBookingConfirmation\n                        \n                    \n                \n            \n            \n                \nsendBookingConfirmation(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Send an email to all members in a group that has confirmed that they are available. Used when the group is booked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group to email blast.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when notification is sent.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendConfirmationRequest\n                        \n                    \n                \n            \n            \n                \nsendConfirmationRequest(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Send an email to all members in a group that has not confirmed that they are available. Used to remind users to confirm availability.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Group to email blast.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when notification is sent.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(to: string[], message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Send an email to all recipients\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of emails addresses of recipients\n\n                                            \n                                        \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    content of the email.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when notification is sent.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PlatformLocation } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference} from '@angular/fire/firestore';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n/**\n * Handles all notification-related methods, all notifications are done via email.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(\n    private fs: Firestore, \n    private platformLocation: PlatformLocation) { }\n\n  /**\n   * Send an email to all recipients\n   * @param to Array of emails addresses of recipients\n   * @param message content of the email.\n   * @returns The promise resolves when notification is sent.\n   */\n  private sendEmail(to: string[], message:any): Promise{\n    let mailCol: CollectionReference = collection(this.fs, \"mail\");\n    let mailDoc = {\n      to: to,\n      message: message\n    }\n    return new Promise(res=>{\n      if (to.length{\n        // technically this is not success yet\n        // this means \"request to send email has been successfully sent\"\n        // however, this is good enough for now, success rate has been 100% since initial set up.\n        res();\n      });\n    })\n  }\n\n  /**\n   * Send an email to all members in a group that has not confirmed that they are available. Used to remind users to confirm availability.\n   * @param group Group to email blast.\n   * @returns The promise resolves when notification is sent.\n   */\n  sendConfirmationRequest(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      if (!group.confirmed.includes(member.id))\n        emailList.push(member.email);\n    });\n    var url = (this.platformLocation as any)._location.origin+\"/group\"+\"/\"+group.id;\n    let content = `\n    Requesting confirmation for ${group.event.name||'the concert'}!\n    \n    Hello! ${group.admin.name} is asking for your confirmation to go to ${group.event.name||'the concert'} with ${group.name} on ${group.event.startDate!.toDateString()}.\n    Please click here to confirm your availability before ${group.admin.name} books the tickets!\n    -Ticket Buddy\n    `\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Confirmation`, html: content})\n  }\n\n  /**\n   * Send an email to all members in a group that has confirmed that they are available. Used when the group is booked.\n   * @param group Group to email blast.\n   * @returns The promise resolves when notification is sent.\n   */\n  sendBookingConfirmation(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      if (group.confirmed.includes(member.id))\n        emailList.push(member.email);\n    });\n    let content = `\n    Booking confirmed for ${group.event.name||'the concert'}!\n    \n    Congratulations! ${group.name} has booked the tickets for ${group.event.name||'the concert'}.\n    Contact ${group.admin.name} for details regarding the booking!\n    - Ticket Buddy\n    `\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Booking Confirmed!`, html: content})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageInterface.html":{"url":"interfaces/PageInterface.html","title":"interface - PageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/page-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            totalElements\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PageInterface {\n    size:number;\n    totalElements:number;\n    number:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalCalenderPageComponent.html":{"url":"components/PersonalCalenderPageComponent.html","title":"component - PersonalCalenderPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonalCalenderPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/personal-calender-page/personal-calender-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        UI controller for the personal calander page\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personal-calender-page\n            \n\n\n\n            \n                styleUrls\n                ./personal-calender-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./personal-calender-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarOnDisplay\n                            \n                            \n                                newEvent\n                            \n                            \n                                personal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                dateClicked\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                    Private\n                                isInside\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:78\n                        \n                    \n\n\n            \n                \n                        initiates create calender event\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateClicked\n                        \n                    \n                \n            \n            \n                \ndateClicked(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Based on what date clicked the calender events displayed in the table will be updated\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    date user clicked on\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:70\n                        \n                    \n\n\n            \n                \n                        initiates delete calander event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the calender event the user want to delete from his personal calender\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInside\n                        \n                    \n                \n            \n            \n                \n                        \n                    isInside(start: NgbDate, date: NgbDate, end: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:47\n                        \n                    \n\n\n            \n                \n                        ignore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:40\n                        \n                    \n\n\n            \n                \n                        clean up\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:34\n                        \n                    \n\n\n            \n                \n                        initialize component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarOnDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewCalendarEvent\n\n                    \n                \n                \n                    \n                        Default value : new NewCalendarEvent()\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderType\n\n                    \n                \n                \n                    \n                        Default value : CalanderType.Personal\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport {CalanderType} from \"../interfaces/enums/calenderenum\";\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarFacade } from '../facade/PersonalCalendarFacade';\nimport { NewCalendarEvent } from '../class/NewCalendarEvent';\nimport { ToastrService } from 'ngx-toastr';\n\n/**\n * UI controller for the personal calander page\n */\n@Component({\n  selector: 'app-personal-calender-page',\n  templateUrl: './personal-calender-page.component.html',\n  styleUrls: ['./personal-calender-page.component.css'],\n\n})\nexport class PersonalCalenderPageComponent implements OnInit, OnDestroy{\n\n  calendarOnDisplay: CalanderEvent[] = [];\n  personal:CalanderType = CalanderType.Personal;\n  newEvent: NewCalendarEvent = new NewCalendarEvent();\n  /**\n   * @ignore\n   */\n  constructor(\n    private toastr:ToastrService,\n    public cal: CalendarFacade\n  ){}\n  /**\n   * initialize component\n   */\n  ngOnInit(): void {\n    this.cal.initializeCalender();\n  }\n  /**\n   * clean up\n   */\n  ngOnDestroy(): void {\n    this.cal.destroy();\n  }\n  /**\n   * \n   * ignore\n   */\n  private isInside(start:NgbDate, date:NgbDate, end:NgbDate):boolean{\n\t\tvar startDate:Date = new Date(start.year, start.month - 1, start.day);\n\t\tvar dateDate:Date = new Date(date.year, date.month - 1, date.day);\n\t\tvar endDate:Date = new Date(end.year, end.month - 1, end.day);\n\t\t\n\t\treturn startDate{\n      var start:NgbDate = new NgbDate(x.start.getFullYear() , x.start.getMonth()+1,x.start.getDate());\n      var end:NgbDate = new NgbDate(x.end.getFullYear() , x.end.getMonth()+1,x.end.getDate());\n      return this.isInside(start,date,end);\n    });\n  }\n  /**\n   * initiates delete calander event \n   * @param {CalanderEvent} e the calender event the user want to delete from his personal calender \n   */\n  deleteEvent(e: CalanderEvent){\n    this.cal.deleteEvent(e).then(_=>{\n      this.toastr.success(\"delete event success\",\"Calender Event Success\");\n    })\n  }\n  /**\n   * initiates create calender event\n   */\n  createEvent(){\n    \n    this.cal.createEvent(this.newEvent).then(_=>{\n      this.toastr.success(\"Created Personal Event\",\"Calender Event Success\");\n    }).catch(err=>{\n      this.toastr.error(err.message,\"Calender Event Error\");\n    })\n  }\n}\n\n  \n\n    \n\n    \n        \n\n    Personal Calendar\n    (Click on a day to look at events on that day.)\n    \n        \n    \n\n\n    \n        \n            \n                Event Detail\n                Start\n                End\n                Action\n            \n        \n        \n           \n                {{e.detail}}\n                {{e.start}}\n                {{e.end}}\n                Delete\n                \n           \n           \n            \n            \n            \n            Add\n            \n           \n        \n    \n\n    \n\n    \n                \n                    ./personal-calender-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Personal Calendar    (Click on a day to look at events on that day.)                                                        Event Detail                Start                End                Action                                                       {{e.detail}}                {{e.start}}                {{e.end}}                Delete                                                                                      Add                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalCalenderPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFacadeService.html":{"url":"injectables/SearchFacadeService.html","title":"injectable - SearchFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/search-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cat$\n                            \n                            \n                                    Public\n                                loadedEvents$\n                            \n                            \n                                    Public\n                                pageInfo$\n                            \n                            \n                                    Public\n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToWatchList\n                            \n                            \n                                changePage\n                            \n                            \n                                destroy\n                            \n                            \n                                getClassification\n                            \n                            \n                                    Private\n                                getWatchList\n                            \n                            \n                                initialise\n                            \n                            \n                                removeFromWatchList\n                            \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToWatchList\n                        \n                    \n                \n            \n            \n                \naddToWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:206\n                        \n                    \n\n\n            \n                \n                        add event to watchlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:170\n                        \n                    \n\n\n            \n                \n                        get events based on input page number\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    page number for query\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:81\n                        \n                    \n\n\n            \n                \n                        clean up code\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:105\n                        \n                    \n\n\n            \n                \n                        update classification data stream based on recomendation from ticket master API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    keyword used for recomendation\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getWatchList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWatchList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:92\n                        \n                    \n\n\n            \n                \n                        initialize wathclist data stream\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialise\n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:74\n                        \n                    \n\n\n            \n                \n                        initialize facade\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromWatchList\n                        \n                    \n                \n            \n            \n                \nremoveFromWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:197\n                        \n                    \n\n\n            \n                \n                        remove event from wathclist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:135\n                        \n                    \n\n\n            \n                \n                        search for event based on the user query so far, will update loadedevent$ data stream\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cat$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({segment:[], genre:[], subGenre:[]})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:51\n                        \n                    \n\n            \n                \n                    data stream for list of categories/genre being recomended by ticket masterAPI\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedEvents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:35\n                        \n                    \n\n            \n                \n                    data stream for list of events loaded from ticket master api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({size:20, totalElements:0, number:0})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:55\n                        \n                    \n\n            \n                \n                    data stream for page information with regards to ticket masterAPI return value of events\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:39\n                        \n                    \n\n            \n                \n                    data stream for events in user watchlist\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { EventInterface } from '../interfaces/event-interface';\n\nimport { ClassType, ClassificationInterface, IdClassType } from '../interfaces/clasification-interface';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { TicketmasterService } from '../network/ticketmaster/ticketmaster.service';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\nimport { PageInterface } from '../interfaces/page-interface';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { BehaviorSubject, Subscription, map, of, startWith, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchFacadeService {\n  /**\n   * @ignore\n   */\n  private query:any = {};\n  /**\n   * @ignore\n   */\n  private subs:Subscription[] = [];\n  /**\n   * @ignore\n   */\n  public loadingEvents$:BehaviorSubject = new BehaviorSubject(false);\n  /**\n   * @ignore\n   */\n  public eventInput$:BehaviorSubject = new BehaviorSubject(\"\");\n  /**\n   * data stream for list of events loaded from ticket master api\n   */\n  public loadedEvents$:BehaviorSubject = new BehaviorSubject([]);\n  /**\n   * data stream for events in user watchlist\n   */\n  public watchlist$:BehaviorSubject = new BehaviorSubject([]);\n  /**\n   * @ignore\n   */\n  public cid$:BehaviorSubject = new BehaviorSubject([]); \n  /**\n   * @ignore\n   */\n  public error$:EventEmitter = new EventEmitter();\n  /**\n   * data stream for list of categories/genre being recomended by ticket masterAPI\n   */\n  public cat$:BehaviorSubject = new BehaviorSubject({segment:[], genre:[], subGenre:[]});\n  /**\n   * data stream for page information with regards to ticket masterAPI return value of events\n   */\n  public pageInfo$:BehaviorSubject = new BehaviorSubject({size:20, totalElements:0, number:0});\n  /**\n   * \n   * @ignore \n   */\n  constructor( private authApi:AuthenticationService,\n    private tmApi: TicketmasterService,\n    private watchlistSvc: WatchlistService) {\n  }\n  /**\n   * \n   * @ignore \n   */\n  updateEventInput(s:string){\n    this.eventInput$.next(s);\n  }\n  /**\n   * initialize facade\n   */\n  initialise(){\n    this.searchEvent();\n    this.getWatchList();\n  }\n  /**\n   * clean up code\n   */\n  destroy(){\n    this.query = {};\n    this.cat$.next({segment:[], genre:[], subGenre:[]});\n    this.eventInput$.next(\"\");\n    this.cid$.next([]);\n\n    this.subs.forEach((x)=>x.unsubscribe());\n  }\n  /**\n   * initialize wathclist data stream\n   */\n  private getWatchList(){\n    this.authApi.getCurrentUser().then((x:UserInterface)=>{\n      var rtn:Subscription = this.watchlistSvc.getWatchlist(x).subscribe(\n        (n)=> this.watchlist$.next(n)\n      );\n      this.subs.push(rtn);\n    });\n  }\n  /**\n   * \n   * update classification data stream based on recomendation from ticket master API\n   * @param {string} kw keyword used for recomendation\n   */\n  getClassification(kw:string){\n    return this.tmApi.getClassification(kw).pipe(\n      tap((x:ClassificationInterface)=>{\n        this.cat$.next(x);\n      })\n    );\n  }\n  /**\n   * \n   * @ignore\n   */\n  addClassification(e:IdClassType){\n    var n:IdClassType[] = this.cid$.value;\n    for(var i of n){\n      if(i.id == e.id)return;\n    }\n    n.push(e);\n    this.cid$.next(n);\n  }\n  /**\n   * \n   * @ignore \n   */\n  removeClassification(ie:IdClassType){\n    var n:IdClassType[] = this.cid$.value;\n    this.cid$.next(n.filter((c)=>c.id!=ie.id));\n  }\n  /**\n   * search for event based on the user query so far, will update loadedevent$ data stream\n   */\n  searchEvent(){//this one got the queries\n    this.query.segmentId = this.cid$.value.filter((c)=>c.type==ClassType.Segment).map((x)=>x.id);\n    this.query.genreId = this.cid$.value.filter((c)=>c.type==ClassType.Genre).map((x)=>x.id);\n    this.query.subGenreId = this.cid$.value.filter((c)=>c.type==ClassType.Subgenre).map((x)=>x.id);\n    this.query.keyword = this.eventInput$.value;\n    this.query.page = 0;\n    this.tmApi.getEventsQuery(this.query).pipe(\n      startWith(undefined)\n    ).subscribe(\n      {next:(x)=>{\n        if(x){\n          var p:PageInterface = x.page;\n          p.number +=1;\n          this.pageInfo$.next(p);\n          this.loadedEvents$.next(x.events);\n        } else {\n          this.loadingEvents$.next(true);\n        }\n      },\n      error:(err)=>{\n        this.error$.next({error:err,title:\"Ticket Master Error\"});\n        this.loadingEvents$.next(false);\n      },\n      complete:()=>{\n        this.loadingEvents$.next(false);\n        \n      }\n  });\n \n  }\n  /**\n   * get events based on input page number\n   * @param {number} pgNum page number for query\n   * \n   */\n  changePage(pgNum:number){\n    this.query.page = pgNum-1;\n    this.tmApi.getEventsQuery(this.query).pipe(startWith(undefined)).subscribe({\n      next:(n)=>{\n        if(n){\n          var p:PageInterface = n.page;\n          p.number = pgNum;\n          this.pageInfo$.next(p);\n          this.loadedEvents$.next(n.events);\n        }else{\n          \n          this.loadingEvents$.next(true);\n        }          \n      },\n      error:(err)=>{\n        this.error$.next({error:err,title:\"Ticket Master Network Error\"});\n        this.loadingEvents$.next(false);\n      },\n      complete:()=>{\n        this.loadingEvents$.next(false);\n      }\n    });\n  }\n  /**\n   * remove event from wathclist\n   * @param event \n   */\n  removeFromWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.removeWatchlistEvent(u,event);\n    });\n  }\n  /**\n   * add event to watchlist\n   * @param event \n   */\n  addToWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.addWatchlistEvent(u,event);\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchPageComponent.html":{"url":"components/SearchPageComponent.html","title":"component - SearchPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/search-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        UI controller for the Search page\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-page\n            \n\n\n\n            \n                styleUrls\n                ./search-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    initiate call to get tickets from another page\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:50\n                        \n                    \n\n\n            \n                \n                        destroy component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:57\n                        \n                    \n\n\n            \n                \n                        initialize component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:78\n                        \n                    \n\n\n            \n                \n                        initiate loading of events\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { SearchFacadeService } from '../facade/search-facade.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * UI controller for the Search page\n */\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\n\nexport class SearchPageComponent implements OnInit, OnDestroy{\n  /**\n   * @ignore\n   */\n  classInput:string = \"\";\n  /**\n   * @ignore\n   */\n  eventInput:string = \"\";\n  /**\n   * @ignore\n   */\n  private subscriptions:Subscription[] = [];\n  /**\n   * @ignore\n   */\n  classificationEmitter:EventEmitter = new EventEmitter();\n  /**\n   * @ignore\n   */\n  eventInputEmitter:EventEmitter = new EventEmitter();\n  /**\n   * @ignore\n   */\n  constructor(\n    public searchFacade:SearchFacadeService,\n    private toastr:ToastrService\n  ){\n\n  }\n  /**\n   * destroy component\n   */\n  ngOnDestroy(): void {\n    this.searchFacade.destroy();\n    this.subscriptions.forEach(s=>s.unsubscribe());\n  }\n  /**\n   * initialize component\n   */\n  ngOnInit(){\n    \n    this.searchFacade.initialise();\n    this.subscriptions.push(\n      this.searchFacade.error$.subscribe(\n        (n)=>{\n          this.toastr.error(n.error,n.title)\n        }\n      )\n    );\n    \n  }\n  /**\n   * @param {number} pgNum initiate call to get tickets from another page\n   */\n  changePage(pgNum:number){\n    this.searchFacade.changePage(pgNum);\n  }\n  /**\n   * initiate loading of events \n   */\n  searchEvent(){//this one got the queries\n    this.searchFacade.searchEvent();\n  }\n  \n\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    Search\n                \n                \n            \n        \n    \n\n\n\n\n\n\n   \n 0\">\n    \n        \n    \n\n\n\n    \n        \n        Loading...\n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./search-page.component.css\n                \n                /*search box css start here*/\n.search-sec{\n    padding: 2rem;\n}\n.search-slt{\n    display: block;\n    width: 100%;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    color: #55595c;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n.wrn-btn{\n    width: 100%;\n    font-size: 16px;\n    font-weight: 400;\n    text-transform: capitalize;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n@media (min-width: 992px){\n    .search-sec{\n        position: relative;\n        top: -114px;\n        background: rgba(26, 70, 104, 0.51);\n    }\n}\n\n@media (max-width: 992px){\n    .search-sec{\n        background: #1A4668;\n    }\n}\n\n.loading-container {\n    text-align:center;\n    position: fixed;\n    width: 100vw;\n    height: 100%;\n    top: 0;\n    backdrop-filter: blur(5px);\n    background-color: rgba(0,0,0,0.3);\n    color: #FFF;\n}\n\n.loading{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n}\n\n.loading-spinner {\n    width: 48px;\n    height: 48px;\n    border: 5px solid #FFF;\n    border-bottom-color: transparent;\n    border-radius: 50%;\n    display: inline-block;\n    box-sizing: border-box;\n    animation: rotation 1s linear infinite;\n}\n\n@keyframes rotation {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n    } \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                    Search                                                            0\">                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentInterface.html":{"url":"interfaces/SegmentInterface.html","title":"interface - SegmentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:         GenreInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GenreInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketmasterService.html":{"url":"injectables/TicketmasterService.html","title":"injectable - TicketmasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketmasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/ticketmaster/ticketmaster.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all ticketmaster api calls.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseurl\n                            \n                            \n                                header\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClassification\n                            \n                            \n                                getEventsQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, platformLocation: PlatformLocation, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Get classifcation based on keyword from ticketmaster api.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyword\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventsQuery\n                        \n                    \n                \n            \n            \n                \ngetEventsQuery(query: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Get Events based on query\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { PlatformLocation } from '@angular/common';\n\nimport { ticketMasterApi } from 'src/environments/env-prod';\nimport { Observable, catchError, concatMap, delay, filter, iif, map, mergeMap, of, switchMap, take, throwError, timeout } from 'rxjs';\nimport { EventPageInterface } from 'src/app/interfaces/eventpage-interface';\nimport { ClassificationInterface } from 'src/app/interfaces/clasification-interface';\n\n/**\n * Handles all ticketmaster api calls.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketmasterService {\n  private baseurl:string;\n  constructor(private http: HttpClient,\n    private platformLocation: PlatformLocation,\n    private router: Router) {\n      this.baseurl = (this.platformLocation as any)._location.origin+\"/ticketmaster\";\n      // uncomment for production build\n      // this.baseurl = \"https://app.ticketmaster.com/discovery/v2\";\n    }\n    \n    header = \n      new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n\n    /**\n     * Get classifcation based on keyword from ticketmaster api.\n     * @param kw Keyword\n     * @returns \n     */\n    getClassification(kw:string):Observable{\n      return this.http.get(this.baseurl+\"/\"+\"classifications.json\", {params:{apikey:ticketMasterApi, keyword:kw}}).pipe(\n        filter((x:any)=>{\n          return x.page.totalElements>0 && kw.length > 0;\n        }),\n        map((x:any)=>{\n          var cs:any[] = x._embedded.classifications;\n          var ans:ClassificationInterface = {segment:[], subGenre:[], genre:[]};//must\n          cs.forEach((a)=>{\n            if(!a?.segment?.id) return;\n            ans.segment.push({id:a.segment.id, name:a.segment.name});\n            a.segment._embedded.genres.forEach((g:any)=> {\n              if(!g?.id) return;\n              ans.genre.push({id:g.id, name:g.name});\n              g._embedded.subgenres.forEach((sg:any)=>{\n                if(!sg?.id) return;\n                ans.subGenre.push({id:sg.id, name:sg.name});\n              });\n            });\n          });\n          return ans;\n        })\n      );\n    }\n\n    /**\n     * @ignore\n     */\n    private returnEvents(x:any):Observable{\n      var rtn:any = {page:undefined, events:undefined};\n      rtn.page = x.page;\n      console.log(x);\n      if (x.page.totalElements == 0){\n\n        return throwError(\"No events that fit this query\")\n      }\n      x = x._embedded;\n      rtn.events = x.events.map((e:any)=>{\n        var sd = new Date(e.dates?.start.dateTime);\n        var ed:Date = new Date(e.dates?.end);\n        \n        return {\n          id:e.id, details:e.description, \n          images:e.images.map((img:any)=>img.url),\n          location:e._embedded?.venues.map((v:any)=>v.name), \n          name:e.name,\n          startDate: (!Number.isNaN(sd.valueOf()))? sd: undefined, \n          endDate:(!Number.isNaN(ed.valueOf()))? ed: undefined\n        };\n      });\n      \n      return of(rtn as EventPageInterface)\n    }\n\n    /**\n     * Get Events based on query\n     * @param query \n     * @returns \n     */\n    getEventsQuery(query:any):Observable{\n      query.apikey = ticketMasterApi;\n      return this.http.get(this.baseurl+\"/events.json\", {params:query}).pipe(\n        //delete this after testing, this is to trigger error\n        timeout(5000),\n        catchError((err)=>throwError(\"network error\")),\n        switchMap(this.returnEvents)\n      )\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    readonly id: string;\n    readonly name: string;\n    readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewGroupFacade.html":{"url":"injectables/ViewGroupFacade.html","title":"injectable - ViewGroupFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViewGroupFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/ViewGroupFacade.ts\n        \n\n\n            \n                Description\n            \n            \n                facade for group page and group detail page\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminGroups$\n                            \n                            \n                                groupCalendar$\n                            \n                            \n                                memberGroups$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGroupbooking\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                destroy\n                            \n                            \n                                getGroup\n                            \n                            \n                                getGroupCalander\n                            \n                            \n                                getGroups\n                            \n                            \n                                initialise\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                sendGroupConfirmation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupbooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupbooking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:263\n                        \n                    \n\n\n            \n                \n                        notify confirm booking\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:177\n                        \n                    \n\n\n            \n                \n                        delete group\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:78\n                        \n                    \n\n\n            \n                \n                        clean up for resource management\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroup\n                        \n                    \n                \n            \n            \n                \ngetGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:93\n                        \n                    \n\n\n            \n                \n                        get inforamtion about group\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    group id\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupCalander\n                        \n                    \n                \n            \n            \n                \ngetGroupCalander(g: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:126\n                        \n                    \n\n\n            \n                \n                        get calender information for people in group\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    group in question\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:104\n                        \n                    \n\n\n            \n                \n                        get groups user is part of then initialize data admingropu$ and membergroups$ data stream\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialise\n                        \n                    \n                \n            \n            \n                \ninitialise(id: string, group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:70\n                        \n                    \n\n\n            \n                \n                        initialize data stream based on parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user id\n\n                                            \n                                        \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    group in question\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:216\n                        \n                    \n\n\n            \n                \n                        join group\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:199\n                        \n                    \n\n\n            \n                \n                        kicker user from group\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:247\n                        \n                    \n\n\n            \n                \n                        send confirmation to group memberes\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:39\n                        \n                    \n\n            \n                \n                    data stream for groups user is admin of\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupCalendar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:35\n                        \n                    \n\n            \n                \n                    data stream for what calender event clash with event in question\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:43\n                        \n                    \n\n            \n                \n                    data stream for groups user is member of\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { GroupInterface } from \"../interfaces/group-interface\"\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { PlatformLocation } from '@angular/common';\nimport { BehaviorSubject, Observable, Subscription, from, iif, map, of, switchMap, tap } from 'rxjs';\nimport { CalanderEvent } from \"../interfaces/calander-interface/CalanderEvent-interface\"\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { Clipboard } from '@angular/cdk/clipboard';\n/**\n * facade for group page and group detail page\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewGroupFacade {\n    /**\n     * @ignore\n     */\n  \tprivate subs:Subscription[] = [];\n     /**\n     * @ignore\n     */\n    group$: BehaviorSubject = new BehaviorSubject(undefined);\n     /**\n     * @ignore\n     */\n    dateColor$: BehaviorSubject = new BehaviorSubject([]); //should be date range better // wtf does this mean\n     /**\n      * data stream for what calender event clash with event in question\n      */\n    groupCalendar$: BehaviorSubject = new BehaviorSubject([]);\n    /**\n      * data stream for groups user is admin of \n      */\n    adminGroups$: BehaviorSubject = new BehaviorSubject([]);\n    /**\n      * data stream for groups user is member of \n      */\n    memberGroups$: BehaviorSubject = new BehaviorSubject([]);\n    /**\n     * @ignore\n     */\n    groupById$: BehaviorSubject = new BehaviorSubject(undefined);\n    /**\n     * @ignore\n     */\n    currentUser$:BehaviorSubject = new BehaviorSubject({id:\"\",email:\"\",name:\"\"});\n    /**\n     * @ignore\n     */\n    constructor(\n        private authSvc:AuthenticationService, \n        private calSvc: CalendarService,\n        private clipboard:Clipboard,\n        private grpSvc: GroupService,\n        private platformLocation: PlatformLocation,\n    ) {\n\n    \n  }\n  /**\n   * initialize data stream based on parameters\n   * @param id user id\n   * @param group group in question\n   */\n    initialise(id:string, group:GroupInterface){\n        this.getCurrentUser();\n    this.getGroup(id);\n    this.getGroupCalander(group);\n    }\n    /**\n     * clean up for resource management \n     */\n    destroy(){\n        this.subs.forEach((e)=>e.unsubscribe());\n    }\n    /**\n     * \n     * @ignore\n     */\n    getCurrentUser(){\n        return this.authSvc.getCurrentUser().then(u=>this.currentUser$.next(u));\n    }\n    /**\n     * \n     * get inforamtion about group\n     * @param id group id\n     */\n    getGroup(id:string){       \n        this.subs.push(\n            this.grpSvc.getGroupById(id).subscribe(group=>{\n                this.group$.next(group);\n            })\n        ); \n            \n    }\n    /**\n     * get groups user is part of then initialize data admingropu$ and membergroups$ data stream\n     */\n    getGroups(){\n        this.authSvc.getCurrentUser().then(user=>{\n            \n            var rtn:Subscription = this.grpSvc.getGroups(user).subscribe(grps=>{\n                let adm: GroupInterface[] = [];\n                let nadm: GroupInterface[] = [];\n                grps.forEach(grp=>{\n                    if (grp.admin.id === user.id)\n                        adm.push(grp);\n                    else \n                        nadm.push(grp);\n                });     \n                this.adminGroups$.next(adm);\n                this.memberGroups$.next(nadm);\n            })\n            this.subs.push(rtn);\n        });\n    }\n    /**\n     * get calender information for people in group\n     * @param g group in question\n     */\n    getGroupCalander(g:GroupInterface){\n        // Get latest group\n        var rtn:Subscription = this.grpSvc.getGroupById(g.id).pipe(\n            switchMap((group:GroupInterface)=>this.calSvc.getGroupCalendar(group).pipe(\n                tap((grpCal:CalanderEvent[])=>{\n                    grpCal.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n                        if(a.start i.user.id))].length;\n        console.log(cmiCount+\"/\"+group.allUUID.length);\n        if (cmiCount==group.allUUID.length)return CalanderColor.NotFreeAtAll\n        return CalanderColor.SomeFree\n        \n    }\n    /**\n     * \n     * @ignore \n     */\n    copyInviteLink(): boolean {\n        var base_url = (this.platformLocation as any)._location.origin+\"/group\"+\"/\"+this.group$.value!.id;\n        return this.clipboard.copy(base_url);\n    }\n    /**\n     * \n     * delete group\n     */\n    deleteGroup(): Promise {\n        return new Promise(res=>{\n            let allProm:Promise[] = [];\n            // Remove cal events if they are confirm\n            (this.group$.value!).confirmed.forEach(userID=>{\n                let user: UserInterface = {id: userID, email: \"\", name: \"\"}\n                allProm.push(this.calSvc.removeReservedCalEvent(this.group$.value!, user));\n            })\n\n            Promise.all(allProm).then(_=>{\n                console.log(\"all del\");\n                this.grpSvc.deleteGroup(this.group$.value!).then(_=>{\n                    return res();\n                })\n            });\n        })\n    }\n    /**\n     * kicker user from group\n     * @param user \n     * \n     */\n    kickUser(user: UserInterface): Promise {\n        let allProm = [\n            this.calSvc.removeReservedCalEvent(this.group$.value!, user),\n            this.grpSvc.removeFromGroup(this.group$.value!, user)\n        ]\n        return new Promise(res=>{\n            Promise.all(allProm).then(_=>{\n                return res();\n            })\n        })\n\n\n    }\n    /**\n     * join group\n     * @param id \n     */\n    joinGroup(id: string): Observable {\n        return from(this.authSvc.getCurrentUser()).pipe(\n            switchMap((user:UserInterface)=>from(this.grpSvc.joinGroup(id, user)))\n        );\n        \n    \n    }\n    /**\n     * \n     * @ignore\n     */\n    getStartDate(d?: Date): NgbDate{\n        if (!d)\n            d = new Date();\n        return new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n    }\n    /**\n     * @ignore\n     */\n    getGrpById(id: string): Observable{\n        let obs: Observable = this.grpSvc.getGroupById(id);\n        var rtn:Subscription = obs.subscribe(grp=>{\n            this.groupById$.next(grp);\n        });\n        this.subs.push(rtn);\n        return obs;\n    }\n    /**\n     * \n     * send confirmation to group memberes\n     */\n    sendGroupConfirmation(): Promise{\n        //groupInterface\n        return new Promise((res,rej)=>{\n            if (!this.group$.value)\n                return rej(new Error(\"Group invalid.\"));\n            if (this.group$.value.confirmed.length === this.group$.value.allUUID.length)\n                return rej(new Error(\"Group all members confirmed\"));\n            this.grpSvc.sendGroupConfirmation(this.group$.value!).then(_=>{\n                return res();\n            });\n        });\n    }   \n    /**\n     * \n     * notify confirm booking\n     */\n    confirmGroupbooking(): Promise{\n        //groupInterface\n        return new Promise((res,rej)=>{\n            if (!this.group$.value)\n                return rej(new Error(\"Group invalid.\"));\n            if (this.group$.value.confirmed.length === 0)\n                return rej(new Error(\"Group no members confirmed\"));\n            let calUpdateProm = this.calSvc.convertReservedToBooked(this.group$.value);\n            let grpUpdateProm = this.grpSvc.confirmGroupBooking(this.group$.value!)\n\n            Promise.all([calUpdateProm,grpUpdateProm]).then(_=>{\n                return res();\n            })\n        });\n        \n    }\n    /**\n     * \n     * @ignore\n     */\n    confirmGroupEvent(): Observable{\n        return this.grpSvc.confirmGroupEvent(this.group$.value!, this.currentUser$.value);\n       \n    }\n\t\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistFacadeService.html":{"url":"injectables/WatchlistFacadeService.html","title":"injectable - WatchlistFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/watchlist-facade.service.ts\n        \n\n\n            \n                Description\n            \n            \n                facade for watchclist component\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                getWatchList\n                            \n                            \n                                initialise\n                            \n                            \n                                removeFromWatchList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/watchlist-facade.service.ts:56\n                        \n                    \n\n\n            \n                \n                        clean up code\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchList\n                        \n                    \n                \n            \n            \n                \ngetWatchList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/watchlist-facade.service.ts:39\n                        \n                    \n\n\n            \n                \n                        initialize watchlist$ data stream\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialise\n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/watchlist-facade.service.ts:50\n                        \n                    \n\n\n            \n                \n                        init facade\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromWatchList\n                        \n                    \n                \n            \n            \n                \nremoveFromWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/watchlist-facade.service.ts:31\n                        \n                    \n\n\n            \n                \n                        remove event from wathclist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/watchlist-facade.service.ts:17\n                        \n                    \n\n            \n                \n                    data stream for wathclist events\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { EventInterface } from '../interfaces/event-interface';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { UserInterface } from '../interfaces/user-interface';\n/**\n * facade for watchclist component\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistFacadeService {\n  /**\n   * data stream for wathclist events\n   */\n  public watchlist$:BehaviorSubject = new BehaviorSubject([]);\n  /**\n   * @ignore\n   */\n  private subs:Subscription[] = [];\n  /**\n   * \n   * @ignore\n   */\n  constructor(private watchlistSvc: WatchlistService,private authApi:AuthenticationService) {}\n  /**\n   * remove event from wathclist\n   * @param event \n   */\n  removeFromWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.removeWatchlistEvent(u,event);\n    });\n  }\n  /**\n   * initialize watchlist$ data stream\n   */\n  getWatchList(){\n    this.authApi.getCurrentUser().then((x:UserInterface)=>{\n      var rtn:Subscription = this.watchlistSvc.getWatchlist(x).subscribe(\n        (n)=> this.watchlist$.next(n)\n      );\n      this.subs.push(rtn);\n    });\n  }\n  /**\n   * init facade\n   */\n  initialise(){\n    this.getWatchList();\n  }\n  /**\n   * clean up code\n   */\n  destroy(){\n    this.subs.forEach((x)=>x.unsubscribe());\n  }\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WatchlistPageComponent.html":{"url":"components/WatchlistPageComponent.html","title":"component - WatchlistPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WatchlistPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/watchlist-page/watchlist-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        manages UI for watchlist\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-watchlist-page\n            \n\n\n\n            \n                styleUrls\n                ./watchlist-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./watchlist-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/watchlist-page/watchlist-page.component.ts:22\n                        \n                    \n\n\n            \n                \n                        distroy comonepnt\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/watchlist-page/watchlist-page.component.ts:28\n                        \n                    \n\n\n            \n                \n                        initiate component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { WatchlistFacadeService } from '../facade/watchlist-facade.service';\n\n/**\n * manages UI for watchlist\n */\n@Component({\n  selector: 'app-watchlist-page',\n  templateUrl: './watchlist-page.component.html',\n  styleUrls: ['./watchlist-page.component.css']\n})\nexport class WatchlistPageComponent implements OnDestroy, OnInit{\n  /**\n   * \n   * @ignore\n   */\n  constructor(\n    public watchlistFacade:WatchlistFacadeService){}\n    /**\n     * distroy comonepnt\n     */\n  ngOnDestroy(): void {\n      this.watchlistFacade.destroy();\n  }\n  /**\n   * initiate component\n   */\n  ngOnInit(){\n    this.watchlistFacade.initialise();  \n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n\n    \n    \n    \n        You have no events added to your watchlist.\n    \n\n\n    \n\n    \n                \n                    ./watchlist-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    You have no events added to your watchlist.    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WatchlistPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistService.html":{"url":"injectables/WatchlistService.html","title":"injectable - WatchlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/watchlist.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles all watchlist-related methods, all notifications are done via email.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addWatchlistEvent\n                            \n                            \n                                    Private\n                                dbwatchlistToEvent\n                            \n                            \n                                    Private\n                                eventToDbWatchlist\n                            \n                            \n                                getWatchlist\n                            \n                            \n                                removeWatchlistEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/watchlist.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addWatchlistEvent\n                        \n                    \n                \n            \n            \n                \naddWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Add Event to User's watchlist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User adding the Event to watchlist.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event to be added.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when update is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbwatchlistToEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbwatchlistToEvent(dbEvent: DocumentData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Convert firestore object to EventInterface object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dbEvent\n                                            \n                                                        DocumentData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event from firestore in document format.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         EventInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventToDbWatchlist\n                        \n                    \n                \n            \n            \n                \n                        \n                    eventToDbWatchlist(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Convert EventInterface object to firesotre document object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event being converted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchlist\n                        \n                    \n                \n            \n            \n                \ngetWatchlist(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Get all Events in a User's watchlist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User whose watchlist is retrieved for.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The observable updates in real time when the User adds/removes events from their watchlist.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeWatchlistEvent\n                        \n                    \n                \n            \n            \n                \nremoveWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:110\n                        \n                    \n\n\n            \n                \n                        Remove Event to User's watchlist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User removing the Event to watchlist.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event to be removed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The promise resolves when update is successful.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { Firestore, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, setDoc} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n/**\n * Handles all watchlist-related methods, all notifications are done via email.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistService {\n\n  constructor(private fs: Firestore) { }\n\n  /**\n   * Convert EventInterface object to firesotre document object.\n   * @param event Event being converted.\n   * @returns \n   */\n  private eventToDbWatchlist(event:EventInterface): any{\n    let watchListEvent: any = {id: event.id}\n    if (event.name !== undefined)\n      watchListEvent.name = event.name\n    if (event.location !== undefined)\n      watchListEvent.location = event.location\n    if (event.images !== undefined)\n      watchListEvent.images = event.images\n    if (event.details !== undefined)\n      watchListEvent.details = event.details\n    if (event.startDate !== undefined)\n      watchListEvent.startDate = event.startDate\n    if (event.endDate !== undefined)\n      watchListEvent.endDate = event.endDate\n    return watchListEvent;\n  }\n\n  /**\n   * Convert firestore object to EventInterface object\n   * @param dbEvent  Event from firestore in document format.\n   * @returns \n   */\n  private dbwatchlistToEvent(dbEvent: DocumentData ): EventInterface{\n    let event: EventInterface = {\n      id: dbEvent['id'],\n      name: dbEvent['name'],\n      location: dbEvent['location'],\n      images: dbEvent['images'],\n      details: dbEvent['details'],\n      startDate: dbEvent['startDate']? new Date(dbEvent['startDate']?.toDate()): undefined,\n      endDate: dbEvent['endDate']? new Date(dbEvent['endDate']?.toDate()): undefined\n    }\n    return event\n  }\n\n  /**\n   * Get all Events in a User's watchlist.\n   * @param user User whose watchlist is retrieved for.\n   * @returns The observable updates in real time when the User adds/removes events from their watchlist.\n   */\n  getWatchlist(user: UserInterface): Observable{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    return new Observable(obs=>{\n      docData(watchDoc).subscribe(data=>{\n        let watchlist:EventInterface[] = [];\n        if (data===undefined){\n          obs.next(watchlist);\n          return;\n        } \n        data['saved'].forEach((event: DocumentData)=>{\n          watchlist.push(this.dbwatchlistToEvent(event))\n        })\n        obs.next(watchlist);\n      });\n    });\n  }\n\n  /**\n   * Add Event to User's watchlist.\n   * @param user User adding the Event to watchlist.\n   * @param event Event to be added.\n   * @returns The promise resolves when update is successful.\n   */\n  addWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    let update = {saved: arrayUnion(this.eventToDbWatchlist(event))}\n    // Attempt to append to document, if not found, initialise a new one.\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      }).catch(rej=>{\n        if (rej.code == \"not-found\"){\n          setDoc(watchDoc,update).then(_=>{\n            res();\n          })\n        } else {\n          throw(rej);\n        }\n      })\n    })\n  }\n\n  /**\n   * Remove Event to User's watchlist.\n   * @param user User removing the Event to watchlist.\n   * @param event Event to be removed.\n   * @returns The promise resolves when update is successful.\n   */\n  removeWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    let update = {saved: arrayRemove(this.eventToDbWatchlist(event))}\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/class/NewCalendarEvent.ts\n            \n            class\n            NewCalendarEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/common/calander/calander.component.ts\n            \n            component\n            CalanderComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/common/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/facade/CreateGroupFacade.ts\n            \n            injectable\n            CreateGroupFacade\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/facade/PersonalCalendarFacade.ts\n            \n            injectable\n            CalendarFacade\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/facade/ViewGroupFacade.ts\n            \n            injectable\n            ViewGroupFacade\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/facade/grouppage-facade.service.ts\n            \n            injectable\n            GrouppageFacadeService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/facade/search-facade.service.ts\n            \n            injectable\n            SearchFacadeService\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/facade/watchlist-facade.service.ts\n            \n            injectable\n            WatchlistFacadeService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/group-page/group-create/group-create.component.ts\n            \n            component\n            GroupCreateComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/group-page/group-detail/group-detail.component.ts\n            \n            component\n            GroupDetailComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/group-page/group-list/group-list.component.ts\n            \n            component\n            GroupListComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/group-page/group-page.component.ts\n            \n            component\n            GroupPageComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/group-page/groupmember-pipe.pipe.ts\n            \n            pipe\n            GroupmemberPipePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEvent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEventColor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            ClassificationInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            GenreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdClassType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdName\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            SegmentInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypePriority\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            class\n            EventClass\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            interface\n            EventInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/eventpage-interface.ts\n            \n            interface\n            EventPageInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/group-interface.ts\n            \n            interface\n            GroupInterface\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/page-interface.ts\n            \n            interface\n            PageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            dates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            watchlist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user-interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/network/firebase/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/calendar.service.ts\n            \n            injectable\n            CalendarService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/group.service.ts\n            \n            injectable\n            GroupService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/watchlist.service.ts\n            \n            injectable\n            WatchlistService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/network/ticketmaster/ticketmaster.service.ts\n            \n            injectable\n            TicketmasterService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/personal-calender-page/personal-calender-page.component.ts\n            \n            component\n            PersonalCalenderPageComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/search-page/classification-component/classification-component.component.ts\n            \n            component\n            ClassificationComponentComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/search-page/event-component/event-component.component.ts\n            \n            component\n            EventComponentComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/inwatchlist.pipe.ts\n            \n            pipe\n            InwatchlistPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/list-events.component.ts\n            \n            component\n            ListEventsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/search-page/search-page.component.ts\n            \n            component\n            SearchPageComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/watchlist-page/watchlist-page.component.ts\n            \n            component\n            WatchlistPageComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            ticketMasterApi\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.12\n        \n            @angular/cdk : ^16.2.14\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/fire : ^16.0.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @ng-bootstrap/ng-bootstrap : ^15.1.2\n        \n            @popperjs/core : ^2.11.8\n        \n            angular-calendar : ^0.31.0\n        \n            bootstrap : ^5.2.3\n        \n            ngx-toastr : ^18.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CalanderColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderType   (src/.../calenderenum.ts)\n                        \n                        \n                            ClassType   (src/.../clasification-interface.ts)\n                        \n                        \n                            GroupMemberStatus   (src/.../GroupStatus.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n            \n                \n                    \n                        \n                        CalanderColor\n                    \n                \n                        \n                            \n                                 NotFreeAtAll\n                            \n                        \n                        \n                            \n                                Value : #d9534f\n                            \n                        \n                        \n                            \n                                 SomeFree\n                            \n                        \n                        \n                            \n                                Value : #f0ad4e\n                            \n                        \n                        \n                            \n                                 AllAvailable\n                            \n                        \n                        \n                            \n                                Value : #5cb85c\n                            \n                        \n                        \n                            \n                                 Default\n                            \n                        \n                        \n                            \n                                Value : #0275D8\n                            \n                        \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : #00a2a8\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : #efcb00\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : #b0d04a\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CalanderType\n                    \n                \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : Personal\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : ReservedForEvent\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : BookedForEvent\n                            \n                        \n            \n        \n\n    src/app/interfaces/clasification-interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ClassType\n                    \n                \n                        \n                            \n                                 Segment\n                            \n                        \n                        \n                            \n                                 Genre\n                            \n                        \n                        \n                            \n                                 Subgenre\n                            \n                        \n            \n        \n\n    src/app/interfaces/enums/GroupStatus.ts\n    \n        \n            \n                \n                    \n                        \n                        GroupMemberStatus\n                    \n                \n                        \n                            \n                                 Going\n                            \n                        \n                        \n                            \n                                Value : Going\n                            \n                        \n                        \n                            \n                                 NotGoing\n                            \n                        \n                        \n                            \n                                Value : Not Going\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTicketbuddy\nThis project was generated with Angular CLI version 16.1.5.\nInstallation\n\nDownload and install Node.js and npm.\nClone the project.\nInstall libraries using npm install\n\nSet up\nCreate a file 'env-prod.ts' under './src/environments'.\n1. Ticketmaster\n\nGet an API key from Ticketmaster.\nAdd the following line into env-prod.ts with the ticket master api key.export const ticketMasterApi = \"your-ticket-master-api-key\";\n\n2. Firebase config\n\nCreate a new Firebase project.\nAdd Firebase to your Web App.\nIgnore any npm install commands, this is already completed earlier.\nCopy the firebaseConfig provided.\nPaste the config into env-prod.ts with the export keyword. It should look like the following.export const firebaseConfig = {  apiKey: \"your-proj-api-key\",  authDomain: \"your-proj-id.firebaseapp.com\",  projectId: \"your-proj-id\",  storageBucket: \"your-proj-id.appspot.com\",  messagingSenderId: \"XXXXXXXXXXXX\",  appId: \"1:XXXXXXXXXXXX:web:XXXXXXXXXXXXXXXXXXXXXXXX\",  measurementId: \"G-XXXXX\"};\n\n3. Firebase Authentication set up\n\nOpen firebase console, navigate to the project created earlier.\nSelect Authentication. \nEnable Google as a sign-in provider.\n\n4. Firebase Firestore set up\n\nOpen firebase console, navigate to the project created earlier.\nCreate Cloud Firestore database in test mode.\nUnder Extensions, install the \"Trigger Email from Firestore\" extension.\n\nRunning the project\nRun the project using npm start\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nInwatchlistPipe\n\nInwatchlistPipe\n\nAppModule -->\n\nInwatchlistPipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            CalanderTypeColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderTypePriority   (src/.../calenderenum.ts)\n                        \n                        \n                            dates   (src/.../testdata.ts)\n                        \n                        \n                            e1   (src/.../testdata.ts)\n                        \n                        \n                            e2   (src/.../testdata.ts)\n                        \n                        \n                            end   (src/.../testdata.ts)\n                        \n                        \n                            end2   (src/.../testdata.ts)\n                        \n                        \n                            end3   (src/.../testdata.ts)\n                        \n                        \n                            firebaseConfig   (src/.../env-prod.ts)\n                        \n                        \n                            g1   (src/.../testdata.ts)\n                        \n                        \n                            g2   (src/.../testdata.ts)\n                        \n                        \n                            start   (src/.../testdata.ts)\n                        \n                        \n                            start2   (src/.../testdata.ts)\n                        \n                        \n                            start3   (src/.../testdata.ts)\n                        \n                        \n                            ticketMasterApi   (src/.../env-prod.ts)\n                        \n                        \n                            user1   (src/.../testdata.ts)\n                        \n                        \n                            user2   (src/.../testdata.ts)\n                        \n                        \n                            user3   (src/.../testdata.ts)\n                        \n                        \n                            user4   (src/.../testdata.ts)\n                        \n                        \n                            watchlist   (src/.../testdata.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  /**\n   * @ignore\n   */\n  const authApi:AuthenticationService = inject(AuthenticationService);\n  /**\n   * @ignore\n   */\n  const router:Router = inject(Router);\n  return authApi.isAuthenticated().pipe(\n    tap((x:boolean)=>{\n      if(!x){\n        router.navigate(['login'], {queryParams: {returnUrl: state.url }});\n        \n      }\n      \n    })\n  );\n  \n}\n                    \n                \n\n            \n                \n                    guard to check if user is authenticated\n\n                \n            \n\n        \n    \n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CalanderTypeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, CalanderColor.BookedForEvent],\n    [CalanderType.ReservedForEvent, CalanderColor.ReservedForEvent],\n    [CalanderType.Personal, CalanderColor.Personal]  \n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CalanderTypePriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, 1],\n    [CalanderType.ReservedForEvent, 2],\n    [CalanderType.Personal, 3]  \n])\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/testdata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start, \n    end:end, \n    detail:\"Doctors Appointment\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start2, \n    end:end2, \n    detail:\"School project meeting\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start3, \n    end:end3, \n    detail:\"Dental Checkup\", \n    type:CalanderType.Personal}\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt1\", name:\"Superbowl\", location:[\"Seatle stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event\", startDate: new Date(2024, 3, 27, 17,30), endDate:new Date(2024, 3, 27, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt2\", name:\"Taylor Swift\", location:[\"Singpoare Stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event 2\", startDate: new Date(2024, 3, 17, 17,30), endDate:new Date(2024, 3, 17, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start3.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp1\", name:\"TS fan group\", \n    event: e2, admin:user1, members:[user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp2\", name:\"GO Patriots Group\", \n    event: e1, admin:user4, members:[user1, user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user4\",\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(2024, 2, 27, 3 ,30,0)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 5*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"john\", email: \"ur@mother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"becca\", email: \"ur@father.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Tom\", email: \"ur@sister.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Rick\", email: \"ur@brother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : [e1, e2]\n                    \n                \n\n\n        \n    \n\n    src/environments/env-prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiKey: \"AIzaSyDjqnG3Ye8IF6TcSPj_psTFYMizlnFvoOw\",\n    authDomain: \"ticket-bud.firebaseapp.com\",\n    projectId: \"ticket-bud\",\n    storageBucket: \"ticket-bud.appspot.com\",\n    messagingSenderId: \"297938436292\",\n    appId: \"1:297938436292:web:f09902d21ddd4fde388991\",\n    measurementId: \"G-Y4Q5TLEBGB\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketMasterApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"5Jqei2SXCUbEHOfAy9F6vyC4wA8Pj6s0\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
