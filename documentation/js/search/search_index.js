var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.597,1,1.073]],["body/components/AppComponent.html",[0,0.962,1,1.846,2,1.792,3,0.215,4,0.215,5,1.413,6,1.413,7,1.413,8,1.413,9,0.166,10,3.329,11,1.208,12,2.681,13,2.414,14,2.227,15,1.89,16,5.855,17,1.89,18,5.197,19,0.267,20,0.758,21,5.855,22,5.855,23,0.841,24,2.962,25,2.51,26,0.962,27,5.197,28,0.676,29,0.02,30,0.753,31,0.288,32,0.602,33,2.962,34,1.701,35,1.615,36,3.962,37,0.983,38,4.452,39,3.886,40,0.626,41,0.602,42,2.287,43,0.191,44,0.437,45,1.995,46,2.962,47,3.886,48,3.886,49,2.962,50,1.272,51,1.792,52,1.89,53,1.413,54,1.666,55,1.413,56,1.413,57,1.147,58,1.413,59,1.147,60,1.413,61,1.89,62,1.147,63,0.841,64,1.147,65,1.502,66,1.413,67,1.147,68,1.413,69,1.147,70,1.413,71,1.09,72,2.273,73,1.147,74,1.413,75,1.413,76,1.09,77,1.208,78,1.147,79,1.413,80,1.09,81,1.208,82,1.208,83,1.09,84,1.272,85,1.09,86,0.983,87,1.272,88,1.413,89,1.413,90,0.014,91,0.014]],["title/modules/AppModule.html",[92,2.513,93,2.513]],["body/modules/AppModule.html",[1,1.971,3,0.14,4,0.14,9,0.108,13,0.829,29,0.02,40,0.885,41,0.393,43,0.124,44,0.285,50,0.829,57,1.716,59,1.716,62,1.716,64,1.716,65,1.397,67,1.716,69,1.716,71,1.63,73,1.716,76,1.63,77,0.787,78,1.716,80,1.63,81,0.787,82,1.19,83,1.63,84,1.809,85,1.63,86,0.641,90,0.01,91,0.01,92,1.753,93,5.194,94,1.61,95,1.753,96,3.956,97,2.665,98,3.281,99,1.931,100,2.17,101,2.17,102,2.17,103,2.17,104,3.694,105,3.694,106,3.694,107,3.694,108,5.171,109,4.409,110,5.171,111,4.734,112,5.171,113,4.409,114,3.281,115,2.17,116,1.931,117,2.533,118,3.281,119,2.533,120,2.533,121,2.533,122,3.281,123,3.83,124,3.281,125,1.931,126,3.83,127,1.753,128,2.533,129,2.533,130,3.83,131,1.847,132,1.966,133,2.533,134,1.931,135,3.83,136,2.649,137,1.931,138,2.533,139,1.931,140,1.931,141,3.83,142,2.533,143,1.931,144,1.931,145,2.919,146,1.753,147,2.533,148,2.17,149,2.533,150,2.533,151,1.61,152,2.17,153,3.83,154,3.83,155,2.533,156,1.753,157,4.734,158,2.823,159,1.931,160,2.533,161,3.83,162,2.17,163,2.533,164,1.931,165,2.533,166,1.753,167,1.753,168,2.533,169,1.931,170,2.533,171,2.533,172,1.753,173,1.931,174,2.533,175,1.931,176,1.931,177,2.533,178,2.533,179,2.533,180,2.533,181,2.533,182,2.533]],["title/modules/AppRoutingModule.html",[92,2.513,107,2.309]],["body/modules/AppRoutingModule.html",[3,0.257,4,0.257,9,0.198,29,0.02,40,0.869,41,0.718,43,0.227,44,0.521,65,1.113,71,1.299,76,1.299,77,1.44,80,1.299,81,1.44,82,1.81,83,1.299,84,1.516,85,1.299,86,1.172,90,0.015,91,0.015,94,2.944,99,3.531,107,3.701,118,3.968,122,4.99,156,3.204,157,5.901,158,2.541,166,3.204,167,3.204,172,3.204,183,4.632,184,4.632,185,5.824,186,4.407,187,2.727,188,3.531,189,4.632,190,3.531,191,4.632,192,4.632,193,6.684,194,4.632,195,4.632,196,4.632,197,5.824,198,4.632,199,4.632,200,4.632,201,4.632,202,3.968,203,4.632,204,4.632,205,4.632,206,4.632,207,4.632,208,4.632,209,4.632,210,4.632]],["title/injectables/AuthenticationService.html",[25,1.557,211,0.919]],["body/injectables/AuthenticationService.html",[3,0.225,4,0.225,9,0.173,14,1.737,19,0.278,23,0.877,25,2.291,26,1.086,28,0.705,29,0.02,30,0.688,31,0.225,32,0.628,40,0.796,41,0.628,43,0.199,44,0.456,45,2.081,77,1.26,90,0.014,91,0.014,152,3.472,211,1.353,212,1.737,213,3.472,214,0.984,215,5.122,216,6.357,217,6.357,218,4.846,219,3.472,220,5.813,221,4.053,222,4.053,223,1.17,224,3.392,225,4.053,226,3.52,227,4.053,228,4.053,229,5.344,230,4.053,231,4.053,232,1.642,233,1.08,234,2.223,235,0.078,236,1.841,237,1.76,238,1.76,239,5.344,240,3.472,241,4.053,242,4.053,243,4.053,244,2.931,245,4.053,246,4.053,247,4.053,248,2.576,249,4.053,250,4.053,251,3.472,252,4.053,253,4.053,254,4.053,255,4.053,256,4.053,257,1.398,258,1.474,259,4.053,260,4.053,261,2.386,262,4.053,263,4.053,264,2.804,265,4.053,266,4.053]],["title/components/CalanderComponent.html",[0,0.597,57,1.073]],["body/components/CalanderComponent.html",[0,0.733,1,0.707,2,1.266,3,0.133,4,0.133,5,0.871,6,0.871,7,0.871,8,0.871,9,0.103,11,0.745,12,2.497,13,2.248,15,1.335,17,1.335,19,0.164,20,0.536,23,0.966,26,1.119,28,0.99,29,0.02,30,0.786,31,0.365,32,0.882,34,1.461,35,1.387,37,0.606,40,0.649,41,0.371,43,0.117,44,0.269,50,0.784,51,1.266,52,1.335,53,0.871,54,1.437,55,0.871,56,0.871,57,1.476,58,0.871,59,0.707,60,0.871,61,1.335,62,0.707,63,0.794,64,0.707,65,1.202,66,0.871,67,0.707,68,0.871,69,0.707,70,0.871,71,0.672,72,1.818,73,0.707,74,1.335,75,0.871,76,0.672,77,0.745,78,0.707,79,0.871,80,0.672,81,0.745,82,0.745,83,0.672,84,0.784,85,0.672,86,0.606,87,0.784,88,0.871,89,0.871,90,0.01,91,0.01,97,1.155,131,1.155,132,1.23,214,0.676,223,1.047,232,0.971,235,0.046,237,1.437,238,1.332,251,4.284,267,2.053,268,1.77,269,4.462,270,4.462,271,4.462,272,3.671,273,2.626,274,2.221,275,3.671,276,4.462,277,4.462,278,3.671,279,3.145,280,3.671,281,3.671,282,3.671,283,3.671,284,2.013,285,3.812,286,2.567,287,3.671,288,3.145,289,5.001,290,3.671,291,2.396,292,1.487,293,2.396,294,4.751,295,2.396,296,2.447,297,2.396,298,2.396,299,2.271,300,2.396,301,1.826,302,2.053,303,3.615,304,3.145,305,3.145,306,2.396,307,1.884,308,2.396,309,1.573,310,2.396,311,0.919,312,3.671,313,5.001,314,2.396,315,2.396,316,1.539,317,2.396,318,2.396,319,2.396,320,2.396,321,3.671,322,2.396,323,3.671,324,1.41,325,1.826,326,2.396,327,2.396,328,4.462,329,2.396,330,2.743,331,3.812,332,1.826,333,2.396,334,2.396,335,1.826,336,1.41,337,1.088,338,2.626,339,1.826,340,2.539,341,2.396,342,2.396,343,2.396,344,2.161,345,2.396,346,1.826,347,2.396,348,2.396,349,1.826,350,2.396,351,2.396,352,2.396,353,2.396,354,2.396,355,2.396,356,1.826,357,2.396,358,2.396,359,2.053,360,2.053,361,2.053,362,2.396,363,2.396,364,2.396,365,2.396,366,1.658,367,2.396,368,2.396,369,1.23,370,2.396,371,2.396,372,2.396,373,2.053,374,2.053,375,2.396,376,3.145,377,5.391,378,2.396,379,2.053,380,2.396,381,2.396,382,1.826,383,2.396,384,2.396,385,1.826,386,2.396,387,2.053,388,1.826,389,3.145,390,1.826,391,2.396,392,3.401,393,3.812,394,2.396,395,2.396,396,2.396,397,2.396,398,3.671,399,3.671,400,2.053,401,2.396,402,2.396,403,2.396]],["title/interfaces/CalanderEvent.html",[235,0.07,292,1.472]],["body/interfaces/CalanderEvent.html",[3,0.249,4,0.249,9,0.192,19,0.308,20,0.834,29,0.02,31,0.409,32,1.081,37,1.869,40,0.688,43,0.28,90,0.015,91,0.015,233,1.761,235,0.12,257,2.354,258,2.403,292,2.315,299,2.676,309,2.833,311,2.536,336,2.644,337,2.04,338,2.644,404,1.723,405,1.549,406,3.626,407,4.573,408,4.573,409,3.394,410,3.848,411,3.107,412,3.848,413,3.848]],["title/interfaces/CalanderEventColor.html",[235,0.07,411,2.513]],["body/interfaces/CalanderEventColor.html",[3,0.278,4,0.278,9,0.215,19,0.344,20,0.893,29,0.02,31,0.366,37,1.739,40,0.737,43,0.3,63,1.429,90,0.016,91,0.016,233,1.63,235,0.126,257,2.109,258,1.822,292,2.675,299,2.346,309,2.148,311,1.923,336,2.951,337,2.276,338,3.885,404,1.923,405,1.729,406,2.749,407,3.468,408,3.468,409,3.14,410,4.294,411,4.231,412,4.294,413,4.294,414,6.6]],["title/injectables/CalendarFacade.html",[211,0.919,415,2.513]],["body/injectables/CalendarFacade.html",[3,0.193,4,0.193,9,0.149,14,1.49,19,0.238,20,0.703,23,1.043,25,2.369,26,1.066,28,0.962,29,0.02,30,0.711,31,0.359,32,0.972,34,1.577,35,1.497,40,0.829,41,0.539,42,2.046,43,0.17,44,0.391,54,1.283,63,0.752,90,0.013,91,0.013,97,1.676,131,1.676,132,1.784,211,1.219,212,1.49,214,0.887,223,0.887,224,3.064,232,1.408,233,1.473,235,0.092,236,1.578,237,1.473,238,1.772,248,2.209,257,1.199,273,3.254,274,1.751,285,4.214,292,2.24,294,2.405,299,1.333,337,1.578,338,2.046,369,1.784,409,2.473,415,3.332,416,2.978,417,3.824,418,4.127,419,4.127,420,2.65,421,4.214,422,3.274,423,4.817,424,2.65,425,4.817,426,3.793,427,3.476,428,3.476,429,2.978,430,3.476,431,4.761,432,3.476,433,3.476,434,2.65,435,1.784,436,2.405,437,2.405,438,2.405,439,2.65,440,3.476,441,2.978,442,2.978,443,2.978,444,2.978,445,2.978,446,2.978,447,2.65,448,2.978,449,3.476,450,3.476,451,3.476,452,2.209,453,2.978,454,2.209,455,2.978,456,2.978,457,2.978,458,2.978,459,3.476,460,3.476,461,3.476,462,3.476,463,3.476,464,3.476,465,3.476,466,3.476,467,3.476,468,3.476,469,3.476,470,2.978,471,3.476,472,2.978,473,3.476,474,3.476,475,2.65,476,3.476,477,2.978]],["title/injectables/CalendarService.html",[211,0.919,422,1.993]],["body/injectables/CalendarService.html",[3,0.123,4,0.123,9,0.095,14,0.954,19,0.153,23,0.482,26,1.007,28,1.066,29,0.02,30,0.806,31,0.368,32,0.949,37,0.563,40,0.718,41,0.345,43,0.109,44,0.25,45,1.143,63,0.751,65,1.024,90,0.009,91,0.009,151,1.415,211,0.878,212,0.954,214,0.638,223,1.097,224,3.145,226,3.068,232,0.902,233,1.536,234,1.221,235,0.092,236,1.011,237,1.7,238,1.471,244,2.638,257,1.904,258,1.549,264,2.399,273,3.25,274,1.549,286,1.143,292,2.787,299,0.854,307,1.781,309,2.061,311,1.845,336,1.311,337,1.011,339,1.697,346,1.697,406,2.859,409,1.781,422,1.902,472,4.73,478,1.907,479,3.468,480,4.26,481,3.468,482,3.468,483,3.468,484,3.468,485,3.468,486,3.468,487,1.697,488,3.056,489,2.226,490,2.399,491,3.468,492,2.226,493,4.26,494,3.468,495,1.574,496,2.226,497,3.468,498,2.336,499,2.226,500,1.415,501,3.468,502,3.974,503,2.226,504,2.226,505,3.468,506,2.226,507,3.468,508,2.226,509,3.468,510,2.226,511,3.468,512,2.226,513,2.644,514,1.697,515,1.697,516,3.974,517,1.54,518,1.907,519,1.697,520,1.697,521,1.697,522,1.697,523,1.697,524,1.907,525,1.907,526,1.221,527,1.143,528,2.226,529,2.226,530,2.226,531,2.226,532,2.226,533,2.226,534,2.226,535,3.468,536,2.644,537,3.65,538,3.468,539,2.226,540,2.226,541,2.226,542,4.809,543,3.666,544,4.809,545,2.226,546,2.226,547,3.468,548,3.468,549,3.468,550,4.809,551,2.226,552,2.226,553,2.226,554,3.327,555,2.226,556,2.226,557,3.65,558,4.26,559,2.226,560,3.65,561,3.65,562,2.971,563,2.971,564,2.971,565,4.26,566,2.226,567,2.971,568,2.226,569,1.54,570,2.226,571,2.226,572,2.226,573,1.221,574,2.226,575,2.226,576,2.226,577,1.907,578,2.226,579,2.226,580,2.226,581,2.226,582,2.226,583,2.226,584,2.226,585,2.971,586,2.226,587,2.226,588,2.226,589,1.697,590,2.226,591,1.697,592,2.226,593,2.226,594,2.226,595,2.226,596,2.226,597,2.226,598,1.907,599,2.226,600,2.226,601,3.248,602,3.468,603,3.327,604,2.226,605,1.697,606,2.226,607,1.415,608,2.226,609,1.907,610,1.311,611,1.415,612,1.907,613,1.907,614,2.226,615,2.226,616,2.226,617,2.226,618,2.226,619,2.226,620,2.226,621,2.226,622,2.226,623,1.697,624,2.226,625,2.226,626,2.226,627,2.226]],["title/components/ClassificationComponentComponent.html",[0,0.597,59,1.073]],["body/components/ClassificationComponentComponent.html",[0,0.956,1,0.845,2,1.446,3,0.159,4,0.159,5,1.041,6,1.041,7,1.041,8,1.041,9,0.122,11,0.89,12,2.572,13,2.315,15,1.525,17,1.525,19,0.196,20,0.612,23,0.619,26,1.08,28,1.058,29,0.02,30,0.829,31,0.357,32,0.942,34,0.937,35,0.89,40,0.701,41,0.444,43,0.14,44,0.322,50,0.937,51,1.446,52,1.525,53,1.041,54,1.456,55,1.041,56,1.041,57,0.845,58,1.041,59,1.614,60,2.429,61,1.525,62,0.845,63,0.619,64,0.845,65,1.313,66,1.041,67,0.845,68,1.041,69,0.845,70,1.041,71,0.803,72,1.987,73,0.845,74,1.041,75,1.041,76,0.803,77,0.89,78,0.845,79,1.041,80,0.803,81,0.89,82,0.89,83,0.803,84,0.937,85,0.803,86,0.724,87,0.937,88,1.041,89,1.041,90,0.011,91,0.011,175,5.092,176,5.092,214,0.772,223,1.119,232,1.16,235,0.055,238,1.117,268,2.022,284,2.3,296,2.998,316,2.097,330,2.3,331,2.182,344,1.685,369,2.548,628,3.932,629,2.182,630,3.154,631,4.252,632,3.593,633,2.022,634,3.434,635,2.806,636,4.194,637,4.194,638,4.194,639,4.194,640,4.194,641,1.98,642,2.998,643,3.593,644,2.452,645,2.862,646,2.805,647,2.862,648,3.593,649,2.862,650,3.225,651,2.862,652,2.862,653,2.862,654,2.862,655,2.862,656,2.862,657,2.862,658,2.452,659,2.862,660,2.182,661,1.98,662,1.98,663,1.469,664,1.3,665,1.38,666,1.819,667,2.862,668,2.862,669,2.862,670,1.98,671,2.862,672,2.862,673,2.862,674,2.862,675,2.862,676,2.862,677,4.963,678,2.452,679,2.862,680,2.862,681,2.862,682,2.862,683,2.862,684,2.862,685,2.862,686,2.862,687,2.862,688,2.862,689,2.862,690,2.862,691,6.441]],["title/interfaces/ClassificationInterface.html",[235,0.07,664,1.65]],["body/interfaces/ClassificationInterface.html",[3,0.272,4,0.272,9,0.21,19,0.337,20,0.881,29,0.02,31,0.362,43,0.35,90,0.016,91,0.016,235,0.134,404,1.882,405,1.692,646,2.366,650,3.799,663,2.519,664,2.741,665,2.366,692,3.742,693,3.742,694,3.502,695,3.118,696,3.118,697,3.118,698,3.118,699,4.155,700,3.118,701,2.691,702,3.118,703,2.691,704,3.118,705,3.118,706,2.519]],["title/injectables/CreateGroupFacade.html",[211,0.919,707,2.513]],["body/injectables/CreateGroupFacade.html",[3,0.18,4,0.18,9,0.139,14,1.39,19,0.222,20,0.67,23,0.993,25,2.481,26,1.042,28,0.798,29,0.02,30,0.857,31,0.321,32,0.897,34,1.502,35,1.426,40,0.816,41,0.503,42,1.909,43,0.159,44,0.364,54,1.222,65,0.779,86,1.348,90,0.012,91,0.012,134,2.472,211,1.161,212,1.39,214,0.844,223,0.844,224,2.355,232,1.314,233,1.419,235,0.088,236,1.472,237,1.628,238,1.628,244,1.778,248,2.06,257,1.118,274,2.105,299,1.244,316,1.118,417,3.683,420,2.472,422,1.778,424,3.497,431,4.226,434,2.472,435,1.665,447,2.472,448,2.778,470,2.778,475,4.059,495,1.895,707,3.174,708,2.778,709,5.324,710,4.413,711,4.588,712,6.521,713,4.561,714,3.679,715,4.561,716,3.408,717,3.242,718,3.242,719,3.242,720,3.242,721,3.242,722,3.242,723,4.588,724,6.661,725,4.588,726,4.588,727,4.588,728,4.588,729,4.588,730,6.521,731,4.588,732,3.93,733,3.242,734,3.242,735,2.778,736,2.778,737,2.243,738,3.242,739,3.242,740,3.242,741,3.242,742,3.242,743,3.242,744,3.242,745,4.588,746,3.242,747,4.588,748,3.242,749,3.242,750,3.242,751,3.242,752,3.242,753,3.242,754,3.242,755,3.242,756,3.242,757,3.242,758,3.242,759,3.93,760,2.778,761,3.242,762,3.242,763,3.242,764,3.242,765,2.06,766,2.243,767,3.242,768,3.497,769,3.242,770,2.778]],["title/classes/EventClass.html",[44,0.408,771,2.513]],["body/classes/EventClass.html",[3,0.219,4,0.219,9,0.169,19,0.271,20,0.766,23,0.854,26,1.161,28,0.914,29,0.02,30,0.809,31,0.392,32,1.044,34,2.144,35,2.036,37,1.739,43,0.257,44,0.443,90,0.014,91,0.014,214,0.966,223,0.726,235,0.076,237,1.051,258,2.287,299,2.014,307,2.025,369,2.025,405,1.361,495,1.931,527,3.664,706,2.695,771,4.351,772,3.007,773,3.09,774,3.632,775,3.632,776,3.336,777,3.09,778,5.249,779,3.945,780,5.249,781,3.945,782,3.945,783,3.945,784,3.945,785,3.945,786,3.945,787,3.945,788,3.945,789,4.497,790,4.497,791,4.497,792,4.497,793,4.497,794,3.38,795,4.497,796,4.002,797,3.38,798,3.38,799,3.38,800,3.38,801,3.38,802,3.38,803,3.38,804,3.38,805,3.38,806,3.38,807,3.38,808,3.38,809,3.38]],["title/components/EventComponentComponent.html",[0,0.597,62,1.073]],["body/components/EventComponentComponent.html",[0,0.999,1,0.945,2,1.568,3,0.177,4,0.177,5,1.164,6,1.164,7,1.164,8,1.164,9,0.137,11,0.995,12,2.615,13,2.354,15,1.653,17,1.653,19,0.22,20,0.664,23,0.984,25,1.372,26,1.038,28,0.92,29,0.02,30,0.782,31,0.35,32,0.82,40,0.732,41,0.496,43,0.157,44,0.36,50,1.048,51,1.568,52,1.653,53,1.164,54,1.534,55,1.164,56,1.164,57,0.945,58,1.164,59,0.945,60,1.164,61,1.653,62,1.7,63,1.515,64,0.945,65,1.384,66,1.164,67,0.945,68,1.164,69,0.945,70,1.164,71,0.898,72,2.093,73,0.945,74,1.164,75,1.164,76,0.898,77,0.995,78,0.945,79,1.164,80,0.898,81,0.995,82,0.995,83,0.898,84,1.048,85,0.898,86,1.539,87,1.048,88,1.164,89,1.164,90,0.012,91,0.012,139,4.953,140,4.953,214,0.837,223,0.837,235,0.061,284,2.494,307,1.644,316,1.568,330,2.901,495,2.068,569,3.146,628,3.825,629,2.441,631,4.53,632,3.896,633,2.55,634,3.658,641,2.215,642,3.158,643,2.743,644,2.743,658,2.743,661,2.215,662,2.215,670,2.215,716,1.885,737,2.215,776,2.89,810,4.547,811,4.547,812,3.896,813,4.547,814,3.202,815,3.202,816,3.202,817,2.743,818,3.202,819,3.202,820,3.202,821,3.202,822,3.202,823,3.202,824,3.202,825,3.467,826,3.467,827,3.467,828,4.547,829,3.467,830,3.467,831,4.547,832,4.547]],["title/interfaces/EventInterface.html",[235,0.07,495,1.189]],["body/interfaces/EventInterface.html",[3,0.246,4,0.246,9,0.19,19,0.304,20,0.827,29,0.02,30,0.803,31,0.392,32,1.02,37,1.865,43,0.278,44,0.498,90,0.015,91,0.015,235,0.085,237,1.181,258,2.472,299,2.524,404,1.701,405,1.529,495,1.854,527,2.276,706,2.909,771,3.068,773,3.675,774,4.319,775,4.319,776,3.968,777,3.675,789,4.853,790,4.853,791,4.853,792,4.853,793,4.853,794,3.799,795,4.853,796,4.319,797,3.799,798,3.799,799,3.799,800,3.799,801,3.799,802,3.799,803,3.799,804,3.799,805,3.799,806,3.799,807,3.799,808,3.799,809,3.799]],["title/interfaces/EventPageInterface.html",[235,0.07,833,2.513]],["body/interfaces/EventPageInterface.html",[3,0.293,4,0.293,9,0.226,19,0.362,20,0.921,29,0.02,31,0.35,40,0.76,43,0.259,63,1.143,87,2.29,90,0.017,91,0.017,235,0.129,286,3.466,404,2.026,405,1.821,495,2.21,833,4.366,834,4.025,835,4.29,836,5.28,837,4.524]],["title/interfaces/GenreInterface.html",[235,0.07,703,1.993]],["body/interfaces/GenreInterface.html",[3,0.28,4,0.28,9,0.216,19,0.346,20,0.897,29,0.02,31,0.28,43,0.352,90,0.016,91,0.016,235,0.135,404,1.937,405,1.741,646,2.435,650,3.732,663,2.592,664,2.293,665,2.435,692,2.77,693,2.77,694,2.592,695,3.209,696,3.209,697,3.209,698,3.209,699,4.379,700,3.209,701,2.77,702,3.209,703,3.37,704,3.209,705,3.209,706,2.592,838,6.621]],["title/components/GroupCreateComponent.html",[0,0.597,64,1.073]],["body/components/GroupCreateComponent.html",[0,0.787,1,0.795,2,1.382,3,0.149,4,0.149,5,0.978,6,0.978,7,0.978,8,0.978,9,0.115,11,0.837,12,2.547,13,2.293,15,1.457,17,1.457,19,0.185,20,0.585,23,0.867,26,1.098,28,0.468,29,0.02,30,0.832,31,0.341,32,0.742,34,0.881,35,0.837,37,0.681,40,0.639,41,0.417,43,0.132,44,0.303,50,0.881,51,1.382,52,1.457,53,0.978,54,1.413,55,0.978,56,0.978,57,0.795,58,0.978,59,0.795,60,0.978,61,1.457,62,0.795,63,1.4,64,1.566,65,1.694,66,0.978,67,0.795,68,0.978,69,0.795,70,0.978,71,0.755,72,1.929,73,0.795,74,0.978,75,0.978,76,0.755,77,0.837,78,0.795,79,0.978,80,0.755,81,0.837,82,0.837,83,0.755,84,0.881,85,0.755,86,0.681,87,0.881,88,0.978,89,0.978,90,0.011,91,0.011,97,1.298,131,1.298,132,1.382,158,3.71,173,5.156,214,0.738,223,0.976,235,0.052,238,1.068,257,0.928,268,1.932,274,2.239,284,2.198,296,2.198,299,2.281,309,1.718,311,1.537,316,1.829,324,3.122,325,3.055,330,2.198,332,2.052,495,1.312,500,3.604,527,1.382,630,3.043,633,2.309,635,2.723,707,3.924,710,4.044,760,2.306,765,1.71,766,1.862,768,3.055,770,3.433,773,3.122,839,3.71,840,2.306,841,3.65,842,4.788,843,4.007,844,4.788,845,2.772,846,4.102,847,4.007,848,5.304,849,4.544,850,4.007,851,2.691,852,4.544,853,4.007,854,2.691,855,2.691,856,2.691,857,2.691,858,2.691,859,2.691,860,2.691,861,3.433,862,2.691,863,2.691,864,4.102,865,3.433,866,2.691,867,2.691,868,2.306,869,2.691,870,2.691,871,2.691,872,2.691,873,2.691,874,4.102,875,4.102,876,2.691,877,2.052,878,2.052,879,2.691,880,2.691,881,2.691,882,4.007,883,4.007,884,4.007]],["title/components/GroupDetailComponent.html",[0,0.597,67,1.073]],["body/components/GroupDetailComponent.html",[0,0.751,1,0.735,2,1.304,3,0.138,4,0.138,5,0.906,6,0.906,7,0.906,8,0.906,9,0.107,11,0.774,12,2.514,13,2.263,15,1.375,17,1.375,19,0.171,20,0.552,23,0.818,26,1.078,28,0.658,29,0.02,30,0.657,31,0.283,32,0.586,40,0.614,41,0.386,43,0.122,44,0.28,50,0.815,51,1.304,52,1.375,53,0.906,54,1.359,55,0.906,56,0.906,57,0.735,58,0.906,59,0.735,60,0.906,61,1.375,62,0.735,63,0.989,64,0.735,65,1.684,66,0.906,67,1.506,68,0.906,69,0.735,70,0.906,71,0.699,72,1.855,73,0.735,74,0.906,75,0.906,76,0.699,77,0.774,78,0.735,79,0.906,80,0.699,81,0.774,82,0.774,83,0.699,84,0.815,85,0.699,86,0.63,87,0.815,88,0.906,89,0.906,90,0.01,91,0.01,158,3.649,164,5.071,202,3.239,214,0.696,223,1.138,233,1.218,234,1.366,235,0.072,257,1.304,261,1.466,268,1.823,284,2.074,286,1.279,309,1.621,311,1.45,316,2.132,330,2.074,406,2.799,452,3.243,498,1.532,500,3.486,526,1.366,623,4.921,630,2.904,633,2.204,635,2.346,765,3.243,839,3.649,874,4.371,878,1.899,885,2.134,886,4.57,887,3.781,888,5.102,889,3.889,890,4.371,891,3.889,892,3.53,893,3.239,894,3.889,895,2.134,896,3.486,897,3.781,898,2.491,899,2.491,900,2.491,901,2.491,902,2.491,903,2.134,904,2.491,905,2.491,906,2.491,907,2.491,908,2.491,909,2.491,910,2.491,911,2.491,912,2.491,913,2.491,914,2.491,915,2.491,916,2.491,917,2.491,918,5.485,919,2.491,920,2.491,921,2.491,922,2.491,923,3.915,924,2.491,925,2.491,926,2.491,927,3.915,928,4.182,929,2.491,930,2.134,931,2.491,932,2.491,933,3.781,934,3.781,935,3.781,936,2.491,937,2.491,938,3.781,939,5.775,940,5.102,941,5.102,942,5.102,943,5.102,944,5.102,945,3.239,946,3.239,947,3.781,948,3.239,949,3.781,950,3.781,951,3.239,952,2.134,953,2.134,954,1.899,955,1.899,956,2.491,957,2.491]],["title/interfaces/GroupInterface.html",[235,0.07,498,1.472]],["body/interfaces/GroupInterface.html",[3,0.258,4,0.258,9,0.2,19,0.32,20,0.854,29,0.02,30,0.822,31,0.4,37,1.858,40,0.704,43,0.229,63,1.45,90,0.016,91,0.016,233,1.876,235,0.122,257,1.608,258,2.436,307,3.281,404,1.789,405,1.608,454,4.258,495,2.092,498,2.37,526,2.558,573,3.505,610,3.762,706,2.394,958,5.108,959,5.74,960,4.663,961,4.663,962,4.663]],["title/components/GroupListComponent.html",[0,0.597,69,1.073]],["body/components/GroupListComponent.html",[0,0.91,1,1.03,2,1.665,3,0.193,4,0.193,5,1.268,6,1.268,7,1.268,8,1.268,9,0.149,11,1.084,12,2.645,13,2.381,15,1.755,17,1.755,19,0.239,26,0.982,28,0.607,29,0.02,30,0.713,31,0.307,32,0.541,40,0.581,41,0.541,43,0.171,44,0.392,50,1.142,51,1.665,52,1.755,53,1.268,54,1.593,55,1.268,56,1.268,57,1.03,58,1.268,59,1.03,60,1.268,61,1.755,62,1.03,63,0.755,64,1.03,65,1.707,66,1.268,67,1.03,68,1.268,69,1.765,70,1.268,71,0.978,72,2.173,73,1.03,74,2.013,75,1.268,76,0.978,77,1.084,78,1.03,79,1.268,80,0.978,81,1.084,82,1.084,83,0.978,84,1.142,85,0.978,86,0.883,87,1.142,88,1.268,89,1.268,90,0.013,91,0.013,158,3.442,159,4.784,214,0.889,223,0.889,235,0.067,238,0.929,284,2.648,288,4.136,296,3.037,316,1.665,330,2.648,331,3.68,408,3.34,498,2.422,526,1.913,573,2.648,635,3.068,839,3.442,963,2.988,964,5.537,965,4.828,966,4.828,967,3.68,968,5.537,969,3.487,970,3.487,971,3.487,972,3.487,973,3.487,974,3.487,975,3.487,976,3.487,977,3.487,978,3.487,979,4.828,980,4.828,981,4.828,982,4.828,983,4.136]],["title/components/GroupPageComponent.html",[0,0.597,71,1.019]],["body/components/GroupPageComponent.html",[0,0.763,1,0.755,2,1.331,3,0.214,4,0.142,5,0.93,6,0.93,7,0.93,8,0.93,9,0.11,11,0.795,12,2.526,13,2.274,15,1.403,17,1.403,19,0.176,20,0.563,23,0.835,26,1.112,28,0.808,29,0.02,30,0.714,31,0.353,32,0.86,34,1.263,35,1.199,37,0.648,40,0.703,41,0.397,43,0.125,44,0.288,50,0.837,51,1.331,52,1.403,53,0.93,54,1.479,55,0.93,56,0.93,57,0.755,58,0.93,59,0.755,60,0.93,61,1.403,62,0.755,63,0.554,64,0.755,65,1.669,66,0.93,67,0.755,68,0.93,69,0.755,70,0.93,71,1.451,72,1.881,73,0.755,74,0.93,75,0.93,76,0.718,77,0.795,78,0.755,79,0.93,80,0.718,81,0.795,82,0.795,83,0.718,84,0.837,85,0.718,86,0.648,87,1.52,88,0.93,89,0.93,90,0.01,91,0.01,97,1.234,131,1.234,132,1.314,145,1.95,158,3.749,187,1.506,214,0.71,223,1.021,233,1.378,235,0.074,237,0.682,238,1.028,258,1.403,268,1.86,274,2.202,296,2.548,316,2.012,324,3.434,325,2.941,332,1.95,344,2.271,369,1.314,407,2.669,417,2.669,435,1.314,498,2.096,500,3.287,573,1.403,591,2.941,630,2.952,633,2.24,635,2.655,839,3.749,841,2.941,845,2.669,846,3.979,852,3.305,861,3.305,864,3.979,865,3.305,868,2.192,878,1.95,892,3.578,895,2.192,896,3.527,930,2.192,951,3.305,958,2.941,967,2.941,984,1.506,985,4.645,986,2.952,987,2.452,988,3.858,989,4.645,990,3.858,991,3.858,992,5.172,993,2.941,994,3.979,995,3.858,996,2.558,997,2.558,998,2.558,999,2.558,1000,2.558,1001,2.558,1002,2.558,1003,2.558,1004,2.558,1005,2.192,1006,2.558,1007,2.192,1008,1.77,1009,1.95,1010,2.558,1011,2.558,1012,2.558,1013,2.558,1014,2.192,1015,2.558,1016,2.558,1017,2.558,1018,2.558,1019,2.558,1020,2.558,1021,2.558,1022,3.858,1023,2.192,1024,3.858,1025,2.558,1026,2.558,1027,2.558,1028,2.558,1029,1.626,1030,2.558,1031,2.558,1032,2.558,1033,2.192,1034,3.858]],["title/injectables/GroupService.html",[211,0.919,714,2.309]],["body/injectables/GroupService.html",[3,0.107,4,0.107,9,0.083,14,0.828,19,0.133,23,0.418,26,1.008,28,1.068,29,0.02,30,0.869,31,0.352,32,0.951,36,1.473,37,1.52,40,0.723,41,0.299,43,0.095,44,0.217,45,0.992,63,1.053,65,1.443,90,0.008,91,0.008,151,1.228,211,0.785,212,0.828,214,0.571,223,1.105,224,3.208,226,3.213,232,0.783,233,1.736,234,1.06,235,0.085,236,0.877,237,1.665,238,1.454,244,2.993,248,1.228,257,2.271,258,1.616,264,2.145,273,1.137,274,1.769,292,0.783,309,1.664,311,1.49,324,1.825,335,1.473,336,1.137,337,0.877,339,1.473,346,1.473,356,1.473,366,2.686,385,1.473,406,1.7,407,3.074,408,2.145,409,0.992,421,2.363,422,2.437,452,1.97,454,2.468,488,2.824,490,2.686,495,1.455,498,2.756,500,1.97,502,3.709,513,2.363,514,1.473,515,1.473,516,2.96,517,1.337,518,1.655,519,1.473,520,1.473,521,1.473,522,1.473,523,1.473,524,1.655,526,1.06,527,0.992,536,2.363,543,2.363,554,3.074,557,1.655,560,1.655,561,2.656,562,1.655,563,1.655,564,1.655,567,1.655,569,1.337,573,2.437,585,2.656,589,1.473,591,2.363,598,2.656,601,3.959,603,4.049,605,2.363,609,2.656,610,2.286,660,1.473,710,2.363,714,1.97,766,1.337,768,1.473,773,1.825,774,1.337,775,1.337,776,1.228,777,1.137,825,1.473,826,1.473,827,1.473,829,1.473,889,2.363,891,2.363,892,2.145,894,2.363,928,1.473,958,3.959,959,3.807,1029,1.228,1035,1.655,1036,2.656,1037,3.1,1038,3.1,1039,2.656,1040,3.1,1041,1.932,1042,3.883,1043,3.074,1044,1.932,1045,3.1,1046,1.932,1047,3.1,1048,1.932,1049,3.1,1050,1.932,1051,3.1,1052,1.932,1053,1.932,1054,3.1,1055,1.932,1056,3.1,1057,1.932,1058,3.1,1059,1.932,1060,3.1,1061,1.932,1062,3.1,1063,1.932,1064,3.1,1065,1.932,1066,1.932,1067,3.1,1068,2.363,1069,1.655,1070,1.473,1071,1.655,1072,1.932,1073,1.932,1074,1.932,1075,1.932,1076,1.932,1077,1.932,1078,1.932,1079,1.932,1080,1.932,1081,1.932,1082,1.932,1083,1.932,1084,1.932,1085,1.932,1086,1.932,1087,1.932,1088,3.1,1089,1.932,1090,1.655,1091,1.932,1092,1.655,1093,1.932,1094,1.932,1095,1.932,1096,1.932,1097,1.932,1098,1.932,1099,1.932,1100,1.932,1101,1.932,1102,1.932,1103,1.932,1104,1.932,1105,1.932,1106,5.194,1107,3.1,1108,1.932,1109,1.932,1110,1.655,1111,1.932,1112,1.655,1113,1.932,1114,1.932,1115,1.655,1116,1.655,1117,1.932,1118,3.1,1119,3.883,1120,4.444,1121,1.932,1122,1.932,1123,3.883,1124,1.932,1125,1.932,1126,1.655,1127,1.932,1128,3.1,1129,1.932,1130,1.932,1131,1.932,1132,1.932,1133,3.1,1134,3.1,1135,3.807,1136,1.932,1137,3.1,1138,3.1,1139,1.932,1140,1.932,1141,1.932,1142,1.655,1143,1.932,1144,1.932,1145,1.137,1146,1.655,1147,1.932,1148,1.932,1149,1.932,1150,1.932,1151,1.932,1152,1.932,1153,1.932,1154,1.932,1155,1.655,1156,1.932,1157,1.932,1158,1.655,1159,1.932,1160,1.932,1161,1.932]],["title/pipes/GroupmemberPipePipe.html",[104,2.309,1162,1.993]],["body/pipes/GroupmemberPipePipe.html",[3,0.282,4,0.282,9,0.218,11,1.581,26,0.836,28,0.885,29,0.02,30,0.855,31,0.282,32,0.788,37,1.562,40,0.743,41,0.788,43,0.249,44,0.572,90,0.016,91,0.016,104,3.922,169,4.704,214,0.936,223,0.936,233,1.77,235,0.097,237,1.355,268,2.453,435,2.611,573,2.79,839,3.385,983,5.286,1033,4.357,1162,3.385,1163,3.519,1164,4.357,1165,3.232,1166,5.086,1167,5.086,1168,4.704,1169,5.086]],["title/pipes/GrouppipePipe.html",[105,2.309,1162,1.993]],["body/pipes/GrouppipePipe.html",[3,0.271,4,0.271,9,0.209,11,1.521,26,0.804,28,0.852,29,0.02,30,0.84,31,0.271,32,0.759,35,1.521,40,0.787,41,0.759,43,0.24,44,0.55,90,0.016,91,0.016,105,3.83,214,0.901,223,0.901,233,1.74,235,0.116,237,1.606,257,2.079,268,2.36,307,3.094,435,2.513,498,2.836,839,3.306,1009,3.731,1116,4.193,1162,3.306,1163,3.386,1165,3.11,1168,4.595,1170,4.193,1171,6.027,1172,4.894,1173,6.027,1174,4.894,1175,4.894,1176,4.894,1177,4.894,1178,4.894,1179,4.894]],["title/interfaces/IdClassType.html",[235,0.07,646,1.752]],["body/interfaces/IdClassType.html",[3,0.28,4,0.28,9,0.216,19,0.346,20,0.897,29,0.02,31,0.382,43,0.352,90,0.016,91,0.016,235,0.135,404,1.937,405,1.741,646,2.962,650,3.625,663,3.4,664,2.293,665,2.435,692,2.77,693,2.77,694,2.592,695,3.209,696,3.209,697,3.209,698,3.209,699,4.379,700,3.209,701,2.77,702,3.209,703,2.77,704,3.209,705,3.209,706,2.592]],["title/interfaces/IdName.html",[235,0.07,650,1.865]],["body/interfaces/IdName.html",[3,0.276,4,0.276,9,0.214,19,0.342,20,0.89,29,0.02,30,0.848,31,0.338,37,1.737,43,0.351,90,0.016,91,0.016,235,0.135,258,2.395,404,1.914,405,1.72,646,2.405,650,3.613,663,2.561,664,2.265,665,2.405,692,2.736,693,2.736,694,2.561,695,3.17,696,3.17,697,3.17,698,3.17,699,4.186,700,3.17,701,2.736,702,3.17,703,2.736,704,3.17,705,3.17,706,2.561]],["title/pipes/InwatchlistPipe.html",[106,2.309,1162,1.993]],["body/pipes/InwatchlistPipe.html",[3,0.272,4,0.272,9,0.21,11,1.529,26,0.808,28,0.856,29,0.02,30,0.842,31,0.272,32,0.762,36,3.749,40,0.728,41,0.762,43,0.241,44,0.553,54,1.31,86,1.656,90,0.016,91,0.016,106,3.842,136,4.182,214,0.905,223,0.905,235,0.094,237,1.611,268,2.371,307,3.103,369,2.525,495,2.336,527,2.525,628,3.558,796,3.749,812,5.179,1146,4.213,1162,3.316,1163,3.402,1165,3.125,1168,4.608,1180,4.213,1181,6.045,1182,4.917,1183,3.749,1184,4.213]],["title/components/ListEventsComponent.html",[0,0.597,73,1.073]],["body/components/ListEventsComponent.html",[0,0.963,1,1.149,2,1.795,3,0.216,4,0.216,5,1.416,6,1.416,7,1.416,8,1.416,9,0.167,11,1.21,12,2.681,13,2.414,15,1.892,17,1.892,19,0.267,26,0.855,29,0.02,30,0.67,31,0.288,34,1.703,35,1.617,40,0.627,41,0.603,43,0.191,44,0.438,50,1.274,51,1.795,52,1.892,53,1.416,54,1.667,55,1.416,56,1.416,57,1.149,58,1.416,59,1.149,60,1.416,61,1.892,62,1.149,63,0.843,64,1.149,65,1.504,66,1.416,67,1.149,68,1.416,69,1.149,70,1.416,71,1.092,72,2.275,73,1.847,74,2.531,75,1.416,76,1.092,77,1.21,78,1.149,79,1.416,80,1.092,81,1.21,82,1.21,83,1.092,84,1.274,85,1.092,86,1.483,87,1.274,88,1.416,89,1.416,90,0.014,91,0.014,136,4.055,137,4.468,235,0.075,284,2.854,286,3.212,330,3.215,495,1.918,628,3.45,737,2.693,837,3.335,1183,2.968,1185,3.335,1186,5.861,1187,5.203,1188,3.893,1189,3.893]],["title/components/LoginPageComponent.html",[0,0.597,76,1.019]],["body/components/LoginPageComponent.html",[0,0.87,1,0.947,2,1.57,3,0.178,4,0.178,5,1.166,6,1.166,7,1.166,8,1.166,9,0.137,11,0.997,12,2.615,13,2.355,15,1.655,17,1.655,19,0.363,23,0.985,25,2.469,26,0.87,28,0.558,29,0.02,30,0.681,31,0.178,32,0.497,40,0.637,41,0.497,42,1.888,43,0.157,44,0.361,50,1.05,51,1.57,52,1.655,53,1.166,54,1.535,55,1.166,56,1.166,57,0.947,58,1.166,59,0.947,60,1.166,61,1.655,62,0.947,63,0.694,64,0.947,65,1.385,66,1.166,67,0.947,68,1.166,69,0.947,70,1.166,71,0.9,72,2.095,73,0.947,74,1.166,75,1.166,76,1.616,77,2.065,78,0.947,79,1.166,80,0.9,81,0.997,82,0.997,83,0.9,84,1.05,85,0.9,86,0.812,87,1.733,88,1.166,89,1.166,90,0.012,91,0.012,172,3.985,187,1.888,214,0.838,218,4.392,219,2.747,220,3.9,223,0.838,257,1.106,274,1.924,316,1.57,382,2.445,388,2.445,390,2.445,392,2.445,393,3.47,400,2.747,607,2.038,611,2.038,952,2.747,953,2.747,954,2.445,955,2.445,984,1.888,986,3.364,987,2.893,993,3.47,994,4.534,1008,2.219,1014,2.747,1165,2.893,1190,4.935,1191,5.761,1192,4.638,1193,3.207,1194,3.207,1195,2.445,1196,3.207,1197,3.207,1198,3.207,1199,3.207,1200,3.207,1201,3.9,1202,3.9,1203,4.552,1204,4.552,1205,3.207,1206,3.9,1207,4.552,1208,3.207,1209,3.207,1210,4.552,1211,5.293,1212,4.552,1213,3.207,1214,3.207,1215,3.207,1216,3.207,1217,3.207,1218,3.207,1219,3.207,1220,3.207,1221,2.747,1222,3.207,1223,2.747,1224,3.9,1225,3.207,1226,4.552,1227,3.207,1228,3.207,1229,4.552,1230,3.207,1231,3.207,1232,3.207]],["title/components/NavigationComponent.html",[0,0.597,78,1.073]],["body/components/NavigationComponent.html",[0,0.953,1,1.126,2,1.77,3,0.211,4,0.211,5,1.387,6,1.387,7,1.387,8,1.387,9,0.163,11,1.186,12,2.675,13,2.408,15,1.866,17,1.866,19,0.262,23,0.826,24,2.908,25,2.486,26,0.844,28,0.664,29,0.02,30,0.746,31,0.211,32,0.591,33,2.908,40,0.699,41,0.591,43,0.187,44,0.429,45,1.958,50,1.249,51,1.77,52,1.866,53,1.387,54,1.653,55,1.387,56,1.387,57,1.126,58,1.387,59,1.126,60,1.387,61,1.866,62,1.126,63,0.826,64,1.126,65,1.491,66,1.387,67,1.126,68,1.387,69,1.126,70,1.387,71,1.07,72,2.256,73,1.126,74,1.387,75,1.387,76,1.07,77,1.186,78,1.832,79,1.387,80,1.07,81,1.803,82,1.186,83,1.07,84,1.899,85,1.07,86,1.468,87,1.249,88,1.387,89,1.387,90,0.014,91,0.014,187,2.245,214,0.945,218,5.084,223,0.702,273,3.021,316,1.316,817,3.268,967,3.913,1192,4.936,1195,2.908,1233,3.268,1234,5.133,1235,5.801,1236,5.133,1237,3.814,1238,3.814,1239,3.814,1240,3.814,1241,3.814,1242,3.551,1243,4.397,1244,5.133]],["title/classes/NewCalendarEvent.html",[44,0.408,426,2.309]],["body/classes/NewCalendarEvent.html",[3,0.243,4,0.243,9,0.188,19,0.301,20,0.821,23,1.345,26,1.139,28,0.763,29,0.02,30,0.565,31,0.375,32,0.68,37,1.658,40,0.748,43,0.215,44,0.493,90,0.015,91,0.015,214,1.036,223,1.036,233,1.746,235,0.108,237,1.499,257,2.142,292,2.517,309,2.412,311,2.159,337,1.992,406,3.407,409,2.252,426,3.576,435,2.252,436,3.035,439,3.344,772,3.344,1245,3.758,1246,6.552,1247,5.627,1248,5.627,1249,4.387,1250,4.387,1251,4.387,1252,5.627,1253,4.387,1254,4.387,1255,4.387,1256,4.387,1257,5.627,1258,5.627,1259,6.212,1260,4.387,1261,4.387,1262,4.387,1263,4.387,1264,3.758]],["title/injectables/NotificationService.html",[211,0.919,1043,2.513]],["body/injectables/NotificationService.html",[3,0.201,4,0.201,9,0.156,14,1.558,19,0.249,23,0.787,26,1,28,1.058,29,0.02,30,0.783,31,0.337,32,0.943,37,1.612,40,0.681,41,0.563,43,0.178,44,0.409,45,1.866,51,1.713,65,1.194,90,0.013,91,0.013,151,2.31,211,1.257,212,1.558,214,0.914,223,1.041,224,3.375,235,0.07,236,1.65,237,1.508,238,0.968,244,1.993,261,2.139,274,2.057,344,2.139,454,2.31,487,2.77,488,3.865,490,3.436,498,2.727,513,2.77,514,2.77,515,2.77,516,3.786,526,1.993,543,2.77,554,2.514,589,3.786,610,2.924,765,2.31,773,2.139,845,4.207,923,4.255,927,4.847,928,2.77,946,3.113,1043,3.436,1135,4.255,1158,3.113,1242,3.436,1243,4.255,1265,3.113,1266,4.967,1267,4.967,1268,4.967,1269,3.634,1270,4.967,1271,3.634,1272,4.967,1273,3.634,1274,4.967,1275,6.082,1276,3.634,1277,3.634,1278,3.634,1279,3.634,1280,3.634,1281,3.634,1282,3.634,1283,3.634,1284,3.634,1285,3.634,1286,4.967,1287,4.967,1288,4.967,1289,3.634,1290,5.658,1291,3.634,1292,3.113,1293,5.658,1294,5.658,1295,3.634,1296,3.634,1297,3.634,1298,3.634,1299,3.634,1300,3.634,1301,4.967,1302,4.967,1303,4.967,1304,3.634,1305,3.634,1306,3.634]],["title/interfaces/PageInterface.html",[235,0.07,835,2.309]],["body/interfaces/PageInterface.html",[3,0.296,4,0.296,9,0.228,19,0.366,20,0.927,29,0.02,31,0.376,43,0.262,90,0.017,91,0.017,235,0.102,303,4.737,404,2.047,405,1.84,835,4.036,1307,4.57,1308,5.809,1309,6.78,1310,5.335,1311,5.335,1312,5.335]],["title/components/PersonalCalenderPageComponent.html",[0,0.597,80,1.019]],["body/components/PersonalCalenderPageComponent.html",[0,0.777,1,0.777,2,1.36,3,0.146,4,0.146,5,0.957,6,0.957,7,0.957,8,0.957,9,0.113,11,0.818,12,2.538,13,2.285,15,1.433,17,1.433,19,0.181,20,0.575,23,0.853,26,1.057,28,0.913,29,0.02,30,0.759,31,0.339,32,0.813,34,1.291,35,1.226,40,0.677,41,0.408,43,0.129,44,0.296,50,0.862,51,1.36,52,1.433,53,0.957,54,1.572,55,0.957,56,0.957,57,0.777,58,0.957,59,0.777,60,0.957,61,1.433,62,0.777,63,1.216,64,0.777,65,1.261,66,0.957,67,0.777,68,0.957,69,0.777,70,0.957,71,0.739,72,1.908,73,0.777,74,0.957,75,0.957,76,0.739,77,0.818,78,0.777,79,0.957,80,1.472,81,1.954,82,2.277,83,0.739,84,0.862,85,0.739,86,0.666,87,1.547,88,0.957,89,0.957,90,0.01,91,0.01,97,1.27,131,1.27,132,1.352,166,4.53,214,0.726,223,1.034,235,0.05,237,1.051,238,1.398,268,1.901,279,3.378,292,2.39,294,3.269,299,1.01,302,2.256,303,3.748,304,3.378,305,3.378,307,1.352,309,1.69,311,1.513,316,1.938,337,1.196,369,1.352,373,2.256,374,2.256,376,2.256,406,2.163,415,3.887,418,4.495,419,3.378,426,3.571,429,3.378,436,1.822,441,2.256,452,3.335,458,2.256,477,3.378,603,2.728,630,3.003,633,2.279,635,2.694,765,1.673,766,1.822,830,3.005,875,2.256,877,2.007,945,4.495,948,3.378,984,1.55,986,3.003,987,2.506,1005,3.378,1008,1.822,1029,1.673,1313,5.609,1314,5.247,1315,4.726,1316,4.726,1317,3.943,1318,2.633,1319,2.633,1320,2.633,1321,2.256,1322,2.633,1323,2.633,1324,2.633,1325,2.256,1326,2.633,1327,2.633,1328,2.633,1329,2.633,1330,2.633,1331,2.633,1332,2.633,1333,2.633,1334,2.633,1335,2.633,1336,2.633,1337,2.633,1338,2.633,1339,2.633,1340,2.633,1341,2.633,1342,2.633,1343,2.633,1344,2.633,1345,2.633,1346,2.633,1347,2.633,1348,2.633,1349,3.943,1350,3.943,1351,3.943]],["title/injectables/SearchFacadeService.html",[211,0.919,642,1.993]],["body/injectables/SearchFacadeService.html",[3,0.133,4,0.133,9,0.103,14,1.031,19,0.165,20,0.537,23,0.797,24,1.833,25,1.916,26,1.145,28,1.064,29,0.02,30,0.787,31,0.381,32,0.948,33,1.833,34,2.001,35,1.9,37,1.268,40,0.755,41,0.373,42,1.415,43,0.118,44,0.27,46,1.833,49,2.806,54,1.335,63,0.797,86,0.931,90,0.01,91,0.01,211,0.931,212,1.031,214,0.677,223,1.154,232,0.974,233,0.641,235,0.096,236,1.092,237,0.641,238,1.799,274,2.071,286,1.234,296,2.748,303,2.339,316,2.109,369,1.234,431,4.715,435,1.234,495,1.768,517,3.093,607,2.339,633,3.414,642,2.019,646,2.604,648,2.06,661,4.848,663,1.234,664,1.092,666,3.184,692,2.019,694,1.889,715,3.831,716,2.949,736,2.06,737,1.663,835,1.528,1029,2.339,1070,1.833,1145,2.166,1184,2.06,1352,2.06,1353,3.68,1354,3.68,1355,3.153,1356,3.68,1357,3.68,1358,3.68,1359,3.68,1360,3.153,1361,3.153,1362,4.292,1363,3.68,1364,3.68,1365,3.831,1366,3.68,1367,4.471,1368,3.68,1369,2.404,1370,2.404,1371,2.404,1372,2.404,1373,2.06,1374,2.404,1375,3.831,1376,2.06,1377,2.404,1378,2.06,1379,2.404,1380,2.404,1381,2.404,1382,2.404,1383,2.404,1384,2.404,1385,2.404,1386,2.404,1387,2.404,1388,3.68,1389,2.404,1390,2.404,1391,2.404,1392,2.404,1393,2.404,1394,3.68,1395,3.68,1396,3.68,1397,2.404,1398,2.404,1399,2.404,1400,2.404,1401,2.404,1402,2.404,1403,2.404,1404,2.404,1405,2.404,1406,2.404,1407,2.404,1408,2.404,1409,2.404,1410,2.404,1411,2.404,1412,2.404,1413,2.404,1414,2.404,1415,2.404,1416,2.404,1417,2.404,1418,2.404,1419,2.404,1420,3.68,1421,3.68,1422,2.404,1423,2.404,1424,2.404,1425,2.404,1426,2.404,1427,2.404,1428,2.06,1429,1.833,1430,2.06,1431,2.404,1432,2.404,1433,2.404,1434,2.404,1435,2.404,1436,2.404,1437,2.404,1438,2.404,1439,3.68,1440,2.404,1441,3.68,1442,2.06,1443,3.68,1444,3.68,1445,2.404,1446,2.404,1447,2.404,1448,2.06,1449,2.06,1450,2.404,1451,2.404,1452,2.404,1453,2.404,1454,2.404,1455,3.68,1456,2.404,1457,2.404,1458,2.404]],["title/components/SearchPageComponent.html",[0,0.597,83,1.019]],["body/components/SearchPageComponent.html",[0,0.791,1,0.802,2,1.391,3,0.15,4,0.15,5,0.987,6,0.987,7,0.987,8,0.987,9,0.116,11,0.844,12,2.551,13,2.296,15,1.467,17,1.467,19,0.186,20,0.589,23,0.873,26,1.065,28,0.702,29,0.02,30,0.686,31,0.342,32,0.625,34,1.744,35,1.656,37,1.021,40,0.58,41,0.421,43,0.133,44,0.305,49,2.07,50,0.889,51,1.391,52,1.467,53,0.987,54,1.42,55,0.987,56,0.987,57,0.802,58,0.987,59,0.802,60,0.987,61,1.467,62,0.802,63,0.588,64,0.802,65,1.281,66,0.987,67,0.802,68,0.987,69,0.802,70,0.987,71,0.762,72,1.937,73,0.802,74,0.987,75,0.987,76,0.762,77,0.844,78,0.802,79,0.987,80,0.762,81,0.844,82,0.844,83,1.494,84,2.28,85,0.762,86,0.687,87,1.576,88,0.987,89,0.987,90,0.011,91,0.011,143,2.07,144,3.67,156,4.564,214,0.743,223,0.886,238,1.42,274,0.987,286,1.394,296,3.388,303,2.564,311,1.042,316,1.66,344,1.599,379,2.327,382,2.07,385,2.07,387,2.327,388,3.67,389,2.327,390,4.062,392,4.062,393,3.076,628,3.884,633,2.321,634,3.33,635,2.736,641,1.879,642,2.923,662,1.879,670,1.879,955,2.07,984,1.599,986,3.059,987,2.564,1007,3.456,1008,1.879,1145,2.375,1165,1.726,1206,2.327,1221,4.124,1223,3.456,1224,2.327,1308,3.456,1321,2.327,1325,2.327,1355,3.456,1360,3.456,1365,4.124,1373,2.327,1375,2.327,1428,2.327,1429,2.07,1430,2.327,1448,2.327,1449,2.327,1459,4.035,1460,4.035,1461,4.035,1462,4.814,1463,2.716,1464,2.716,1465,2.716,1466,2.327,1467,2.327,1468,2.716,1469,2.716,1470,2.716,1471,2.716,1472,2.716,1473,2.716,1474,2.327,1475,2.716,1476,2.716,1477,2.716,1478,2.716,1479,2.716,1480,2.716,1481,2.716,1482,4.814,1483,2.716,1484,4.035,1485,4.814,1486,2.716,1487,2.327,1488,2.716,1489,2.716,1490,2.716,1491,2.716,1492,2.716,1493,2.716,1494,2.716,1495,4.035,1496,4.035,1497,4.035,1498,2.716,1499,2.716,1500,2.716,1501,2.716,1502,2.716,1503,2.716,1504,4.035,1505,2.716,1506,4.035,1507,2.716,1508,2.716,1509,2.716,1510,2.716,1511,2.716,1512,2.716,1513,2.716,1514,2.716]],["title/interfaces/SegmentInterface.html",[235,0.07,701,1.993]],["body/interfaces/SegmentInterface.html",[3,0.28,4,0.28,9,0.216,19,0.346,20,0.897,29,0.02,31,0.28,43,0.352,90,0.016,91,0.016,235,0.135,404,1.937,405,1.741,646,2.435,650,3.625,663,2.592,664,2.293,665,2.435,692,2.77,693,2.77,694,2.592,695,3.209,696,3.209,697,3.209,698,3.209,699,4.379,700,3.209,701,3.37,702,3.209,703,3.632,704,3.209,705,3.209,706,2.592,1515,6.621]],["title/injectables/TicketmasterService.html",[211,0.919,666,2.309]],["body/injectables/TicketmasterService.html",[3,0.153,4,0.153,9,0.118,14,1.183,19,0.189,20,0.596,23,0.597,26,1.02,28,0.934,29,0.02,30,0.691,31,0.344,32,0.832,34,0.903,35,0.858,37,1.23,40,0.768,41,0.428,43,0.135,44,0.31,45,1.417,54,1.79,90,0.011,91,0.011,127,1.909,148,2.364,162,2.364,187,1.624,211,1.033,212,1.183,214,0.751,223,0.988,226,3.161,232,1.118,235,0.078,236,1.253,237,1.847,238,1.654,274,2.084,286,1.417,299,1.864,301,2.103,324,3.161,335,2.103,340,1.909,344,1.624,356,3.112,366,1.909,517,1.909,664,1.253,665,1.331,666,2.594,678,3.497,693,1.513,694,1.417,777,2.403,833,3.361,834,2.103,845,2.824,1023,4.163,1029,1.754,1068,3.112,1069,2.364,1071,2.364,1145,2.86,1192,4.733,1361,3.497,1376,2.364,1378,2.364,1442,3.497,1516,2.364,1517,4.082,1518,4.859,1519,4.859,1520,4.082,1521,4.082,1522,2.759,1523,5.369,1524,5.319,1525,4.082,1526,4.082,1527,2.759,1528,2.759,1529,2.759,1530,2.759,1531,2.759,1532,2.759,1533,4.859,1534,4.082,1535,2.759,1536,2.824,1537,2.103,1538,2.759,1539,2.759,1540,2.759,1541,4.082,1542,2.364,1543,2.759,1544,2.759,1545,2.759,1546,2.759,1547,2.759,1548,2.759,1549,2.759,1550,4.082,1551,2.759,1552,2.759,1553,2.759,1554,2.759,1555,4.859,1556,2.759,1557,2.759,1558,2.759,1559,2.759,1560,2.759,1561,2.759,1562,2.759,1563,2.759,1564,2.759,1565,2.759,1566,2.759,1567,2.759,1568,2.759,1569,2.759,1570,2.759,1571,2.759,1572,2.759,1573,2.759,1574,2.759,1575,4.082,1576,2.759,1577,2.759,1578,2.759,1579,2.759,1580,4.082,1581,2.759,1582,4.082,1583,4.082,1584,4.082,1585,4.082,1586,4.082,1587,4.082,1588,4.082,1589,5.369,1590,4.082,1591,4.082,1592,4.082,1593,4.082,1594,4.082,1595,4.082,1596,4.082,1597,4.082,1598,4.082,1599,4.082,1600,4.082,1601,2.759,1602,2.759,1603,2.759,1604,2.759,1605,2.759,1606,2.364,1607,2.759,1608,2.759,1609,2.759,1610,2.759,1611,2.759,1612,2.759,1613,2.759,1614,4.082,1615,2.759,1616,2.759,1617,2.759,1618,2.759]],["title/interfaces/UserInterface.html",[233,0.968,235,0.07]],["body/interfaces/UserInterface.html",[3,0.291,4,0.291,9,0.225,19,0.36,20,0.918,29,0.019,30,0.899,31,0.373,37,1.882,43,0.258,90,0.017,91,0.017,233,1.677,234,2.882,235,0.101,258,2.539,261,4.11,404,2.015,405,1.812,1619,6.736]],["title/injectables/ViewGroupFacade.html",[211,0.919,896,2.309]],["body/injectables/ViewGroupFacade.html",[3,0.115,4,0.115,9,0.089,14,0.888,19,0.142,20,0.478,23,0.709,25,1.742,26,1.15,28,1.042,29,0.02,30,0.771,31,0.37,32,0.928,34,1.836,35,1.744,37,1.472,40,0.766,41,0.321,42,1.219,43,0.102,44,0.233,54,0.873,63,0.448,65,1.348,90,0.009,91,0.009,97,0.999,127,1.433,131,0.999,132,1.063,211,0.829,212,0.888,214,0.603,215,3.96,223,1.217,224,2.986,226,3.525,232,0.839,233,1.232,235,0.078,236,0.94,237,1.834,238,1.822,244,1.797,248,2.082,257,1.402,258,1.478,274,2.115,285,3.099,292,1.647,294,2.812,299,1.932,301,3.099,316,1.402,337,0.94,338,1.929,340,1.433,359,1.774,360,1.774,361,1.774,409,1.682,417,2.267,420,1.579,421,3.099,422,2.535,424,1.579,431,4.816,434,1.579,435,1.063,436,1.433,437,1.433,438,1.433,439,1.579,442,1.774,443,1.774,444,1.774,445,1.774,446,1.774,447,1.579,452,1.316,453,1.774,454,1.316,455,1.774,456,1.774,457,1.774,475,3.523,498,2.536,573,1.797,610,1.929,660,1.579,713,3.483,714,2.937,735,1.774,759,3.96,877,2.498,889,3.523,890,3.96,891,3.523,892,2.267,893,2.807,894,3.523,896,2.082,903,2.807,1009,1.579,1036,3.96,1039,3.96,1068,1.579,1070,1.579,1126,1.774,1145,1.219,1524,4.805,1542,1.774,1620,1.774,1621,4.065,1622,4.065,1623,4.065,1624,4.065,1625,3.276,1626,3.276,1627,3.276,1628,3.276,1629,3.276,1630,3.276,1631,5.035,1632,3.276,1633,2.071,1634,2.071,1635,2.071,1636,2.071,1637,2.071,1638,2.071,1639,2.071,1640,2.071,1641,2.071,1642,1.579,1643,2.071,1644,3.276,1645,2.071,1646,3.276,1647,2.071,1648,2.071,1649,2.071,1650,2.071,1651,3.276,1652,2.071,1653,2.071,1654,2.071,1655,2.071,1656,2.071,1657,2.071,1658,2.071,1659,3.276,1660,2.071,1661,4.622,1662,2.071,1663,2.071,1664,2.071,1665,2.071,1666,2.071,1667,2.071,1668,2.071,1669,2.071,1670,2.071,1671,2.071,1672,2.071,1673,2.071,1674,2.071,1675,2.071,1676,2.071,1677,2.071,1678,2.071,1679,2.071,1680,2.071,1681,2.071,1682,2.071,1683,2.071,1684,2.071,1685,2.071,1686,2.071,1687,2.071,1688,3.276,1689,2.071,1690,2.071,1691,2.071,1692,2.071,1693,2.071,1694,2.071,1695,2.071,1696,2.071,1697,2.071,1698,2.071,1699,2.071,1700,2.071,1701,2.071,1702,2.071,1703,2.071,1704,2.071,1705,2.071,1706,2.071,1707,2.071,1708,2.071,1709,3.276,1710,2.071,1711,2.071,1712,2.071,1713,3.276,1714,3.276,1715,2.071,1716,2.071,1717,2.071,1718,2.071,1719,2.071,1720,2.071,1721,2.071,1722,2.071,1723,2.071]],["title/components/WatchlistPageComponent.html",[0,0.597,85,1.019]],["body/components/WatchlistPageComponent.html",[0,0.955,1,1.13,2,1.775,3,0.212,4,0.212,5,1.392,6,1.392,7,1.392,8,1.392,9,0.164,11,1.19,12,2.676,13,2.409,15,1.871,17,1.871,19,0.263,20,0.751,23,1.114,26,0.955,28,0.666,29,0.02,30,0.748,31,0.285,32,0.593,40,0.62,41,0.593,43,0.188,44,0.43,50,1.253,51,1.775,52,1.871,53,1.392,54,1.656,55,1.392,56,1.392,57,1.13,58,1.392,59,1.13,60,1.392,61,1.871,62,1.13,63,0.829,64,1.13,65,1.493,66,1.392,67,1.13,68,1.392,69,1.13,70,1.392,71,1.074,72,2.259,73,1.13,74,1.392,75,1.392,76,1.074,77,1.19,78,1.13,79,1.392,80,1.074,81,1.19,82,1.19,83,1.074,84,1.253,85,1.743,86,1.755,87,1.902,88,1.392,89,1.392,90,0.014,91,0.014,167,4.299,214,0.947,223,0.705,316,1.32,633,2.802,634,4.021,635,3.19,641,2.649,642,3.408,662,2.649,670,2.649,984,2.254,986,3.693,987,3.27,1466,3.28,1467,3.28,1474,3.28,1724,5.323,1725,3.828,1726,3.828]],["title/injectables/WatchlistService.html",[211,0.919,716,2.139]],["body/injectables/WatchlistService.html",[3,0.17,4,0.17,9,0.131,14,1.316,19,0.211,23,0.664,26,1.024,28,1.084,29,0.02,30,0.826,31,0.345,32,0.965,40,0.72,41,0.476,43,0.151,44,0.345,45,1.576,63,1.447,90,0.012,91,0.012,151,1.951,211,1.117,212,1.316,214,0.812,223,1.101,224,2.899,226,3.041,232,1.244,233,1.808,234,1.684,235,0.085,236,1.394,237,1.66,238,1.66,244,2.833,257,1.781,258,1.604,264,2.124,274,2.265,324,3.865,487,2.34,488,3.589,490,3.052,495,2.273,502,4.56,519,2.34,520,2.34,521,2.34,522,2.34,523,2.34,525,2.63,527,1.576,554,3.052,569,3.052,601,3.938,603,3.052,605,3.363,716,2.597,773,1.807,774,2.124,775,2.124,776,1.951,777,1.807,825,3.363,826,3.363,827,3.363,829,3.363,1090,2.63,1092,3.78,1110,2.63,1112,3.78,1183,2.34,1362,3.78,1429,2.34,1727,2.63,1728,4.412,1729,4.412,1730,4.412,1731,4.412,1732,3.069,1733,4.412,1734,3.069,1735,4.412,1736,3.069,1737,3.069,1738,3.069,1739,3.069,1740,4.412,1741,3.069,1742,4.412,1743,3.069,1744,3.069,1745,4.412,1746,3.069,1747,3.069,1748,3.069,1749,3.069,1750,3.069,1751,3.069,1752,3.069,1753,3.069,1754,3.069,1755,3.069,1756,3.069,1757,3.069,1758,3.069,1759,3.069,1760,3.069,1761,5.165,1762,5.165,1763,3.069,1764,4.412,1765,3.069,1766,3.069,1767,4.412,1768,3.069,1769,3.069,1770,3.069,1771,3.069,1772,3.069,1773,4.412,1774,3.069,1775,3.069,1776,3.069,1777,3.069,1778,3.069]],["title/coverage.html",[1779,4.254]],["body/coverage.html",[0,1.13,1,0.781,9,0.113,10,2.267,25,1.134,29,0.02,31,0.147,44,0.445,57,0.781,59,0.781,62,0.781,64,0.781,67,0.781,69,0.781,71,0.742,73,0.781,76,0.742,78,0.781,80,0.742,82,1.23,83,0.742,85,0.742,86,0.67,90,0.011,91,0.011,104,1.682,105,1.682,106,1.682,136,2.738,137,2.018,139,2.018,140,2.018,146,1.831,156,1.831,158,2.886,159,2.018,164,2.018,166,1.831,167,1.831,169,2.018,172,1.831,173,2.018,175,2.018,176,2.018,188,2.018,211,1.659,213,2.267,233,0.705,234,1.452,235,0.129,238,0.705,267,2.267,292,1.072,309,1.134,311,1.015,336,2.33,337,1.797,349,2.018,405,2.35,411,1.831,415,1.831,416,2.267,422,1.452,426,1.682,437,1.831,438,1.831,478,2.267,495,0.866,498,1.072,526,1.452,527,2.032,628,3.315,629,3.017,642,1.452,646,1.276,650,1.359,661,1.831,664,1.202,665,2.716,666,1.682,701,1.452,703,1.452,707,1.831,708,2.267,714,1.682,716,1.558,771,1.831,833,1.831,834,2.018,835,1.682,839,3.241,840,2.267,885,2.267,896,1.682,963,2.267,984,3.315,1035,2.267,1043,1.831,1145,4.475,1162,2.6,1164,2.267,1170,2.267,1180,2.267,1185,2.267,1190,2.267,1233,2.267,1245,2.267,1265,2.267,1307,2.267,1313,2.267,1352,2.267,1516,2.267,1536,1.831,1537,3.017,1620,2.267,1724,2.267,1727,2.267,1779,2.267,1780,2.647,1781,2.647,1782,2.647,1783,5.909,1784,5.631,1785,2.647,1786,5.631,1787,2.647,1788,2.647,1789,4.74,1790,3.958,1791,2.647,1792,7.25,1793,2.267,1794,7.172,1795,3.958,1796,4.74,1797,3.017,1798,5.631,1799,3.958,1800,5.984,1801,2.267,1802,2.267,1803,2.267,1804,2.267,1805,2.267,1806,2.267,1807,2.267,1808,2.267,1809,2.267,1810,2.267,1811,2.267,1812,2.267,1813,2.647,1814,3.017,1815,2.647,1816,2.647]],["title/dependencies.html",[95,3.024,1817,2.596]],["body/dependencies.html",[29,0.02,41,0.775,90,0.016,91,0.016,95,3.459,97,2.945,124,5.232,125,4.655,127,3.459,131,2.411,132,2.567,134,3.812,143,3.812,144,3.812,187,2.944,232,2.026,273,2.944,1818,5,1819,5,1820,5,1821,6.107,1822,7.254,1823,5,1824,5,1825,5,1826,5,1827,5,1828,5,1829,5,1830,5,1831,4.284,1832,5,1833,5,1834,5,1835,5,1836,5,1837,5,1838,5,1839,5]],["title/miscellaneous/enumerations.html",[1840,2.096,1841,3.745]],["body/miscellaneous/enumerations.html",[19,0.338,29,0.02,34,1.614,35,2.323,81,2.037,90,0.016,91,0.016,338,3.564,405,2.088,409,3.108,612,5.613,613,5.613,623,4.995,663,3.108,665,2.377,692,2.704,693,2.704,694,2.531,1797,3.758,1840,3.41,1841,4.223,1842,5.186,1843,4.929,1844,6.054,1845,4.929,1846,4.929,1847,4.929,1848,4.929,1849,4.929,1850,4.929,1851,4.929,1852,4.929,1853,4.929,1854,4.929,1855,4.929,1856,4.929,1857,4.929]],["title/index.html",[19,0.208,1858,3.03,1859,3.03]],["body/index.html",[9,0.17,13,1.301,29,0.018,38,3.406,43,0.29,87,1.301,90,0.014,91,0.014,116,3.03,131,1.917,145,5.249,146,3.65,190,4.022,238,1.059,240,3.406,258,1.445,261,2.34,311,1.525,366,2.75,488,3.764,577,5.073,607,2.526,611,2.526,830,4.022,841,4.515,849,4.52,954,3.03,1115,3.406,1155,3.406,1201,3.406,1202,3.406,1242,3.65,1292,3.406,1487,3.406,1536,2.75,1606,3.406,1642,3.03,1814,4.515,1831,5.073,1860,5.899,1861,3.975,1862,5.922,1863,3.406,1864,3.975,1865,3.975,1866,3.975,1867,6.565,1868,3.975,1869,6.308,1870,3.975,1871,3.975,1872,5.276,1873,5.922,1874,5.922,1875,5.276,1876,3.975,1877,5.276,1878,6.308,1879,6.308,1880,5.276,1881,5.276,1882,5.276,1883,3.975,1884,3.975,1885,3.975,1886,3.975,1887,5.922,1888,3.975,1889,3.975,1890,3.975,1891,3.975,1892,3.975,1893,3.406,1894,6.308,1895,3.406,1896,3.975,1897,3.406,1898,3.406,1899,3.975,1900,3.406,1901,3.975,1902,3.406,1903,3.975,1904,3.406,1905,3.975,1906,3.03,1907,5.276,1908,5.276,1909,5.276,1910,5.276,1911,3.975,1912,3.975,1913,3.975,1914,3.975,1915,3.975,1916,3.975,1917,3.975,1918,3.975,1919,3.975,1920,3.975,1921,5.922,1922,3.975,1923,3.975,1924,3.03,1925,3.975,1926,3.975]],["title/modules.html",[94,3.156]],["body/modules.html",[29,0.018,90,0.018,91,0.018,93,3.988,94,3.664,107,3.664,125,4.394,1142,4.939,1927,5.765,1928,5.765,1929,6.645,1930,5.765]],["title/overview.html",[1924,3.785]],["body/overview.html",[1,2.015,2,1.323,29,0.02,50,1.256,57,1.717,59,1.717,62,1.717,64,1.717,67,1.717,69,1.717,71,1.632,73,1.717,76,1.632,78,1.717,80,1.632,83,1.632,85,1.632,90,0.014,91,0.014,92,2.654,93,5.303,94,2.438,95,2.654,96,3.286,97,1.85,98,3.286,99,2.924,100,3.286,101,3.286,102,3.286,103,3.286,104,3.697,105,3.697,106,3.697,107,3.697,108,5.558,109,4.983,110,5.558,111,4.983,112,5.558,113,4.983,114,4.413,115,3.286,116,2.924,186,2.654,212,1.644,404,1.471,611,3.274,772,2.924,1163,2.654,1906,2.924,1924,2.924,1931,3.836,1932,3.836,1933,3.836,1934,3.836]],["title/properties.html",[20,0.638,1817,2.596]],["body/properties.html",[20,0.856,29,0.019,90,0.018,91,0.018,1863,5.022,1935,5.862]],["title/routes.html",[186,3.435]],["body/routes.html",[29,0.018,90,0.018,91,0.018,186,4.09]],["title/miscellaneous/variables.html",[1840,2.096,1936,3.745]],["body/miscellaneous/variables.html",[19,0.192,29,0.02,31,0.388,34,2.364,35,2.245,37,0.708,46,2.132,63,1.17,65,0.991,86,1.043,90,0.011,91,0.011,146,2.852,188,3.143,190,3.143,233,1.44,237,0.745,238,1.77,261,3.67,292,1.133,299,1.073,309,1.767,311,1.582,340,3.739,349,3.143,437,2.852,438,2.852,495,1.603,498,1.671,536,3.143,537,3.532,607,1.777,610,2.427,611,3.112,732,3.532,777,2.427,993,2.132,1195,2.132,1242,3.388,1264,3.532,1536,2.852,1537,2.132,1642,2.132,1793,2.396,1797,2.132,1800,2.396,1801,4.63,1802,4.63,1803,3.532,1804,3.532,1805,3.532,1806,3.532,1807,3.532,1808,3.532,1809,3.532,1810,4.937,1811,5.165,1812,3.532,1814,3.733,1840,1.935,1842,3.532,1860,2.396,1893,2.396,1895,2.396,1897,2.396,1898,2.396,1900,2.396,1902,2.396,1904,2.396,1906,4.596,1936,2.396,1937,2.796,1938,7.048,1939,4.123,1940,2.796,1941,2.796,1942,2.796,1943,2.796,1944,2.796,1945,2.796,1946,2.796,1947,2.796,1948,2.796,1949,2.796,1950,2.796,1951,2.796,1952,2.796,1953,2.796,1954,4.897,1955,4.897,1956,5.404,1957,2.796,1958,2.796,1959,2.796,1960,2.796,1961,4.897,1962,2.796,1963,2.796,1964,2.796,1965,2.796,1966,2.796,1967,2.796,1968,2.796,1969,2.796,1970,2.796,1971,2.796,1972,2.796,1973,4.123,1974,4.123,1975,4.123,1976,4.123,1977,4.123,1978,5.763,1979,4.897,1980,4.123,1981,4.123,1982,2.796,1983,2.796,1984,2.796,1985,2.796,1986,4.123,1987,2.796,1988,4.897,1989,4.123,1990,2.796,1991,2.796,1992,2.796,1993,2.796,1994,2.796,1995,2.796,1996,4.123,1997,2.796,1998,2.796,1999,2.796,2000,2.796,2001,2.796,2002,2.796,2003,2.796,2004,2.796,2005,2.796,2006,5.404,2007,2.796,2008,2.796,2009,2.796,2010,2.796,2011,2.796,2012,2.796,2013,2.796,2014,2.796,2015,2.796,2016,2.796,2017,2.796,2018,2.796,2019,2.796,2020,2.796,2021,2.796,2022,2.796]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1145,"title":{},"body":{"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1935,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["0.185rem",{"_index":383,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.25rem",{"_index":384,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.31.0",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":403,"title":{},"body":{"components/CalanderComponent.html":{}}}],["0.51",{"_index":1512,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0.875rem",{"_index":1486,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["0/1",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["00a2a8",{"_index":1853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["0275d8",{"_index":1852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1",{"_index":607,"title":{},"body":{"injectables/CalendarService.html":{},"components/LoginPageComponent.html":{},"injectables/SearchFacadeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1.5",{"_index":1488,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["10",{"_index":1932,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1484,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["104",{"_index":1511,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["114px",{"_index":1508,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["117",{"_index":398,"title":{},"body":{"components/CalanderComponent.html":{}}}],["12",{"_index":1933,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1931,"title":{},"body":{"overview.html":{}}}],["15.1.2",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["16.0.0",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["16.1.0",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":1864,"title":{},"body":{"index.html":{}}}],["16.2.12",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["16.2.14",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":1500,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["17",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17,30",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.0.0",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["19,30",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:297938436292:web:f09902d21ddd4fde388991",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:xxxxxxxxxxxx:web:xxxxxxxxxxxxxxxxxxxxxxxx",{"_index":1903,"title":{},"body":{"index.html":{}}}],["1a4668",{"_index":1514,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["1em",{"_index":1220,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["1px",{"_index":1492,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["2",{"_index":611,"title":{},"body":{"injectables/CalendarService.html":{},"components/LoginPageComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2*60*60*1000",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.11.8",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["216",{"_index":399,"title":{},"body":{"components/CalanderComponent.html":{}}}],["27",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":572,"title":{},"body":{"injectables/CalendarService.html":{}}}],["297938436292",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a2568",{"_index":1219,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2em",{"_index":1232,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["2px",{"_index":1223,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["2rem",{"_index":389,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["3",{"_index":1906,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30,0",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1606,"title":{},"body":{"injectables/TicketmasterService.html":{},"index.html":{}}}],["400",{"_index":1502,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5).concat(\"z",{"_index":1579,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["5*60*60*1000",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1211,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["50vw",{"_index":1213,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["55595c",{"_index":1489,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["5cb85c",{"_index":1851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5jqei2sxcubehofay9f6vyc4wa8pj6s0",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":1229,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["7",{"_index":1934,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1510,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["8",{"_index":747,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["80vh",{"_index":1225,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["992px",{"_index":1506,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["a.segment._embedded.genres.foreach((g:any",{"_index":1564,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["absolute",{"_index":1207,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["action",{"_index":1349,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["activatedroute",{"_index":994,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["add",{"_index":830,"title":{},"body":{"components/EventComponentComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"index.html":{}}}],["addcalendarevent",{"_index":479,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addcalendarevent(calendarevent",{"_index":491,"title":{},"body":{"injectables/CalendarService.html":{}}}],["addclassification",{"_index":1358,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addclassification(e",{"_index":1369,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addclassification(e:idclasstype",{"_index":1419,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["adddoc",{"_index":515,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["adddoc(calcollection",{"_index":555,"title":{},"body":{"injectables/CalendarService.html":{}}}],["adddoc(grpcollection",{"_index":1095,"title":{},"body":{"injectables/GroupService.html":{}}}],["addevent",{"_index":810,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event",{"_index":814,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addevent(event:eventinterface",{"_index":823,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["addtowatchlist",{"_index":1359,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addtowatchlist(event",{"_index":1371,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addtowatchlist(event:eventinterface",{"_index":1457,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["addwatchlistevent",{"_index":1728,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["addwatchlistevent(user",{"_index":1733,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["adm",{"_index":1674,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["adm.push(grp",{"_index":1678,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["admin",{"_index":958,"title":{},"body":{"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["admin.id",{"_index":1094,"title":{},"body":{"injectables/GroupService.html":{}}}],["admin:user1",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin:user4",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admingroups",{"_index":1621,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["afterviewinit",{"_index":985,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["against",{"_index":1122,"title":{},"body":{"injectables/GroupService.html":{}}}],["aizasydjqng3ye8if6tcspj_pstfymizlnfvoow",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":380,"title":{},"body":{"components/CalanderComponent.html":{}}}],["allavailable",{"_index":1850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allowed",{"_index":581,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allprom",{"_index":621,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allprom.push(updatedoc(caldoc",{"_index":626,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap:any",{"_index":586,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[cal[\"uid",{"_index":593,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[group.admin.id",{"_index":587,"title":{},"body":{"injectables/CalendarService.html":{}}}],["allusermap[member.id",{"_index":590,"title":{},"body":{"injectables/CalendarService.html":{}}}],["alluuid",{"_index":959,"title":{},"body":{"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{}}}],["alluuid:[\"user1",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alluuid:[\"user4\",\"user1",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":1115,"title":{},"body":{"injectables/GroupService.html":{},"index.html":{}}}],["amonst",{"_index":367,"title":{},"body":{"components/CalanderComponent.html":{}}}],["angular",{"_index":1831,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":1666,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["angular/common",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["angular/compiler",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/firestore",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["angular/forms",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateGroupFacade.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{},"dependencies.html":{}}}],["ans",{"_index":1572,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.genre.push({id:g.id",{"_index":1566,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.segment.push({id:a.segment.id",{"_index":1562,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans.subgenre.push({id:sg.id",{"_index":1570,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ans:classificationinterface",{"_index":1558,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["any)._location.origin+\"/group\"+\"/\"+this.group$.value!.id",{"_index":1704,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["any)._location.origin+\"/ticketmaster",{"_index":1543,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["api",{"_index":1878,"title":{},"body":{"index.html":{}}}],["apikey",{"_index":1893,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"index.html":{}}}],["app.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":1770,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["appid",{"_index":1902,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1534,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["appmodule",{"_index":93,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":107,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arrayremove",{"_index":523,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayremove(this.eventtodbwatchlist(event",{"_index":1778,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayremove(toremove",{"_index":1127,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayremove(user.id",{"_index":1128,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion",{"_index":522,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["arrayunion(this.eventtodbwatchlist(event",{"_index":1768,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["arrayunion(user",{"_index":1117,"title":{},"body":{"injectables/GroupService.html":{}}}],["arrayunion(user.id",{"_index":1118,"title":{},"body":{"injectables/GroupService.html":{}}}],["asking",{"_index":1291,"title":{},"body":{"injectables/NotificationService.html":{}}}],["attempt",{"_index":1769,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["auth",{"_index":220,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["authapi",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["authapi.isauthenticated().pipe",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authapi:authenticationservice",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchFacadeService.html":{},"miscellaneous/variables.html":{}}}],["authapi:authenticationservice,private",{"_index":1239,"title":{},"body":{"components/NavigationComponent.html":{}}}],["authdomain",{"_index":1895,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":1907,"title":{},"body":{"index.html":{}}}],["authenticationservice",{"_index":25,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["authguard",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authsvc",{"_index":424,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["authsvc:authenticationservice",{"_index":446,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["availability",{"_index":1298,"title":{},"body":{"injectables/NotificationService.html":{}}}],["available",{"_index":1142,"title":{},"body":{"injectables/GroupService.html":{},"modules.html":{}}}],["b",{"_index":304,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["b0d04a",{"_index":1855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b:number",{"_index":374,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["background",{"_index":392,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["base_url",{"_index":1703,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["baseurl",{"_index":1517,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["baseurl:string",{"_index":1540,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["before",{"_index":1299,"title":{},"body":{"injectables/NotificationService.html":{}}}],["behaviorsubject",{"_index":431,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject(undefined",{"_index":1661,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject({id:\"\",email:\"\",name",{"_index":1659,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["behaviorsubject({segment",{"_index":1388,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["behaviorsubject({size:20",{"_index":1394,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["better",{"_index":443,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["bgcolor",{"_index":414,"title":{},"body":{"interfaces/CalanderEventColor.html":{}}}],["bgcolor:calandercolor",{"_index":413,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["bgimg",{"_index":1203,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgimgstrip",{"_index":1204,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgleft",{"_index":1214,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["bgright",{"_index":1216,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["block",{"_index":387,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["booked",{"_index":454,"title":{},"body":{"injectables/CalendarFacade.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["booked:false",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookedforevent",{"_index":613,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/enumerations.html":{}}}],["booking",{"_index":927,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["books",{"_index":1300,"title":{},"body":{"injectables/NotificationService.html":{}}}],["boolean",{"_index":307,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/GroupInterface.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["bootstrap",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{}}}],["border",{"_index":1221,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["both",{"_index":1148,"title":{},"body":{"injectables/GroupService.html":{}}}],["box",{"_index":1480,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["browse",{"_index":1929,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1499,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bud",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.appspot.com",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bud.firebaseapp.com",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buddy",{"_index":1243,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NotificationService.html":{}}}],["build",{"_index":1546,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["buto",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["c",{"_index":305,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["c.name",{"_index":691,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["c:number",{"_index":375,"title":{},"body":{"components/CalanderComponent.html":{}}}],["c:number):boolean",{"_index":1327,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["cal",{"_index":1314,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["calaa",{"_index":924,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["calander",{"_index":270,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["calander.component.css",{"_index":271,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calander.component.html",{"_index":272,"title":{},"body":{"components/CalanderComponent.html":{}}}],["calandercolor",{"_index":338,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{}}}],["calandercolor.allavailable",{"_index":1696,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercolor.bookedforevent",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.notfreeatall",{"_index":1701,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercolor.personal",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.reservedforevent",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calandercolor.somefree",{"_index":1702,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["calandercomponent",{"_index":57,"title":{"components/CalanderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calanderevent",{"_index":292,"title":{"interfaces/CalanderEvent.html":{}},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandereventcolor",{"_index":411,"title":{"interfaces/CalanderEventColor.html":{}},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"coverage.html":{}}}],["calandertype",{"_index":409,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{}}}],["calandertype.bookedforevent",{"_index":537,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["calandertype.personal",{"_index":1264,"title":{},"body":{"classes/NewCalendarEvent.html":{},"miscellaneous/variables.html":{}}}],["calandertype.reservedforevent",{"_index":536,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"miscellaneous/variables.html":{}}}],["calandertype[dbcalent[\"type",{"_index":532,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calandertypecolor",{"_index":437,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calandertypecolor.get(e.type)||calandercolor.default",{"_index":465,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calandertypepriority",{"_index":438,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calc(3rem",{"_index":1495,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["calc(50",{"_index":1230,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calc(80vh",{"_index":1228,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["calcollection",{"_index":542,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc",{"_index":544,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc).then((docref",{"_index":556,"title":{},"body":{"injectables/CalendarService.html":{}}}],["caldoc[\"grp",{"_index":551,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar",{"_index":273,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"components/NavigationComponent.html":{},"dependencies.html":{}}}],["calendar.service",{"_index":1073,"title":{},"body":{"injectables/GroupService.html":{}}}],["calendar/${cal.id",{"_index":622,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar/${calendarevent.id",{"_index":602,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent",{"_index":493,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.detail",{"_index":549,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.end",{"_index":548,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.groupid",{"_index":552,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.groupname",{"_index":553,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.start",{"_index":547,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.type",{"_index":550,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarevent.user.id",{"_index":546,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendarfacade",{"_index":415,"title":{"injectables/CalendarFacade.html":{}},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["calendarondisplay",{"_index":1315,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["calendarservice",{"_index":422,"title":{"injectables/CalendarService.html":{}},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["calender",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["calevent",{"_index":472,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{}}}],["calevent.groupid",{"_index":538,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.groupname",{"_index":540,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.start",{"_index":568,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type",{"_index":535,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type==calandertype.bookedforevent",{"_index":597,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevent.type==calandertype.reservedforevent",{"_index":596,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calevents",{"_index":450,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calevents.sort((a,b)=>{//sort",{"_index":451,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["calls",{"_index":576,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calsvc",{"_index":421,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["calupdateprom",{"_index":1717,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["canactivate:[authguard",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivate:[authguard]},//for",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalize",{"_index":1503,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["cat",{"_index":1353,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["cat$:behaviorsubject",{"_index":1408,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["catch(err",{"_index":766,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["catch(rej",{"_index":1774,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["cb",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ccc",{"_index":1494,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["center",{"_index":381,"title":{},"body":{"components/CalanderComponent.html":{}}}],["change",{"_index":346,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["changed",{"_index":353,"title":{},"body":{"components/CalanderComponent.html":{}}}],["changepage",{"_index":1360,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changepage(pgnum",{"_index":1373,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changepage(pgnum:number",{"_index":1449,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["changes",{"_index":315,"title":{},"body":{"components/CalanderComponent.html":{}}}],["check",{"_index":366,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"index.html":{}}}],["checkup",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chooose",{"_index":882,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["chosegroup",{"_index":990,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group",{"_index":996,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosegroup(group:groupinterface",{"_index":1031,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen",{"_index":988,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen.name",{"_index":1034,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["chosen:groupinterface",{"_index":1011,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cid",{"_index":1354,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["cid$:behaviorsubject",{"_index":1406,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["clash",{"_index":480,"title":{},"body":{"injectables/CalendarService.html":{}}}],["clash(event",{"_index":494,"title":{},"body":{"injectables/CalendarService.html":{}}}],["class",{"_index":44,"title":{"classes/EventClass.html":{},"classes/NewCalendarEvent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["class/newcalendarevent",{"_index":441,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["classes",{"_index":772,"title":{},"body":{"classes/EventClass.html":{},"classes/NewCalendarEvent.html":{},"overview.html":{}}}],["classification",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["classification:eventemitter",{"_index":668,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["classificationcomponentcomponent",{"_index":59,"title":{"components/ClassificationComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classificationemitter",{"_index":1459,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationemitter:eventemitter",{"_index":1470,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classificationinterface",{"_index":664,"title":{"interfaces/ClassificationInterface.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["classinput",{"_index":1460,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classinput:string",{"_index":1468,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["classtype",{"_index":663,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":1862,"title":{},"body":{"index.html":{}}}],["click",{"_index":1297,"title":{},"body":{"injectables/NotificationService.html":{}}}],["clicked",{"_index":350,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clickeddate",{"_index":289,"title":{},"body":{"components/CalanderComponent.html":{}}}],["clipboard",{"_index":1631,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["clipboard:clipboard",{"_index":1668,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["clone",{"_index":1870,"title":{},"body":{"index.html":{}}}],["close",{"_index":848,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["closeresult",{"_index":844,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["cloud",{"_index":1912,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cmicount",{"_index":1697,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["cmicount==group.alluuid.length)return",{"_index":1700,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["code",{"_index":685,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["collection",{"_index":514,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collection(this.fs",{"_index":543,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["collectiondata",{"_index":518,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectiondata(q",{"_index":560,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["collectionreference",{"_index":516,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["color",{"_index":393,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["command",{"_index":1925,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1885,"title":{},"body":{"index.html":{}}}],["common/calander/calander.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["common/navigation/navigation.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["completed",{"_index":1886,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["component'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["component.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.css",{"_index":631,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.html",{"_index":632,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts",{"_index":629,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:13",{"_index":643,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:14",{"_index":813,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:16",{"_index":658,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:19",{"_index":644,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{}}}],["component.component.ts:23",{"_index":815,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["component.component.ts:26",{"_index":655,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:29",{"_index":651,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:32",{"_index":657,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:35",{"_index":647,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component.component.ts:39",{"_index":653,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["component/classification",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["component/event",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["component:grouppagecomponent",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:loginpagecomponent",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:personalcalenderpagecomponent",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:searchpagecomponent",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:watchlistpagecomponent",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":1538,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["concert",{"_index":1294,"title":{},"body":{"injectables/NotificationService.html":{}}}],["config",{"_index":1882,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":928,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["confirmation",{"_index":923,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["confirmed",{"_index":610,"title":{},"body":{"injectables/CalendarService.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["confirmed:string",{"_index":962,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["confirmgoing",{"_index":888,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["confirmgroupbooking",{"_index":889,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmgroupbooking(group",{"_index":1045,"title":{},"body":{"injectables/GroupService.html":{}}}],["confirmgroupevent",{"_index":1036,"title":{},"body":{"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["confirmgroupevent(group",{"_index":1047,"title":{},"body":{"injectables/GroupService.html":{}}}],["congratulations",{"_index":1304,"title":{},"body":{"injectables/NotificationService.html":{}}}],["console",{"_index":1908,"title":{},"body":{"index.html":{}}}],["console.log(\"create",{"_index":1344,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["console.log(\"dasdas",{"_index":977,"title":{},"body":{"components/GroupListComponent.html":{}}}],["console.log(\"delete",{"_index":1342,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["console.log(\"error",{"_index":1026,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["console.log(\"group",{"_index":874,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{}}}],["console.log(\"invalid",{"_index":1348,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["console.log(\"join",{"_index":921,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["console.log(\"logout",{"_index":1200,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log(\"remoe",{"_index":688,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["console.log(\"signout",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(\"sjucces",{"_index":931,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["console.log(\"user",{"_index":876,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["console.log(cmicount+\"/\"+group.alluuid.length",{"_index":1699,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["console.log(err",{"_index":878,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["console.log(query",{"_index":1603,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["console.log(result",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(this.groups",{"_index":978,"title":{},"body":{"components/GroupListComponent.html":{}}}],["const",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["constructor(auth",{"_index":219,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{}}}],["constructor(authapi",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["constructor(authsvc",{"_index":420,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["constructor(cal",{"_index":1318,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["constructor(calsvc",{"_index":1041,"title":{},"body":{"injectables/GroupService.html":{}}}],["constructor(e",{"_index":779,"title":{},"body":{"classes/EventClass.html":{}}}],["constructor(e:eventinterface",{"_index":794,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["constructor(fs",{"_index":487,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(grp",{"_index":895,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["constructor(http",{"_index":1522,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["constructor(modalservice",{"_index":851,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["constructor(public",{"_index":669,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["constructor(searchfacade",{"_index":641,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["contact",{"_index":1305,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contains\",user.id",{"_index":1103,"title":{},"body":{"injectables/GroupService.html":{}}}],["content",{"_index":845,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{},"injectables/TicketmasterService.html":{}}}],["content:ngbmodal",{"_index":868,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["convertreservedtobooked",{"_index":481,"title":{},"body":{"injectables/CalendarService.html":{}}}],["convertreservedtobooked(grp",{"_index":497,"title":{},"body":{"injectables/CalendarService.html":{}}}],["converttolistofstrings",{"_index":991,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members",{"_index":998,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttolistofstrings(members:userinterface",{"_index":1032,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["converttongbdate",{"_index":278,"title":{},"body":{"components/CalanderComponent.html":{}}}],["converttongbdate(d",{"_index":298,"title":{},"body":{"components/CalanderComponent.html":{}}}],["converttongbdate(d:date",{"_index":358,"title":{},"body":{"components/CalanderComponent.html":{}}}],["copy",{"_index":1888,"title":{},"body":{"index.html":{}}}],["copyinvitelink",{"_index":890,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["coverage",{"_index":1779,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":841,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"index.html":{}}}],["create'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["create.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["create.component.css",{"_index":842,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.html",{"_index":843,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts",{"_index":840,"title":{},"body":{"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:13",{"_index":866,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:14",{"_index":862,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:15",{"_index":860,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:16",{"_index":855,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:19",{"_index":853,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:23",{"_index":863,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:26",{"_index":858,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:30",{"_index":857,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:46",{"_index":859,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:50",{"_index":856,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create/group",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["created",{"_index":1910,"title":{},"body":{"index.html":{}}}],["createevent",{"_index":418,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["createevent(newcalevent",{"_index":425,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["creategroup",{"_index":710,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["creategroup(name",{"_index":1049,"title":{},"body":{"injectables/GroupService.html":{}}}],["creategroupfacade",{"_index":707,"title":{"injectables/CreateGroupFacade.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["creation",{"_index":764,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["cs.foreach((a",{"_index":1560,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["cs:any",{"_index":1556,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["css",{"_index":1481,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["current",{"_index":1244,"title":{},"body":{"components/NavigationComponent.html":{}}}],["currently",{"_index":1114,"title":{},"body":{"injectables/GroupService.html":{}}}],["currentuser",{"_index":417,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["currentuser$:behaviorsubject",{"_index":1667,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["currentuser?:userinterface",{"_index":1012,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["cursor",{"_index":952,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["custom",{"_index":377,"title":{},"body":{"components/CalanderComponent.html":{}}}],["d",{"_index":301,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["d.getdate",{"_index":361,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d.getmonth()+1",{"_index":360,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["d9534f",{"_index":1847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":563,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["data.foreach(cal",{"_index":565,"title":{},"body":{"injectables/CalendarService.html":{}}}],["data.foreach(grp",{"_index":1104,"title":{},"body":{"injectables/GroupService.html":{}}}],["data===undefined",{"_index":1110,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["data['saved'].foreach((event",{"_index":1765,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["database",{"_index":1155,"title":{},"body":{"injectables/GroupService.html":{},"index.html":{}}}],["date",{"_index":299,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["date(2024",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(dbevent['enddate']?.todate",{"_index":1760,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(dbevent['startdate']?.todate",{"_index":1758,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["date(e.dates?.end",{"_index":1592,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(e.dates?.start.datetime",{"_index":1590,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["date(grp.event.enddate",{"_index":757,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(grp.event.startdate",{"_index":755,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["date(start.gettime",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start2.gettime",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(start3.gettime",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(this.end",{"_index":1263,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["date(this.start",{"_index":1261,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["date.day",{"_index":376,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["date.month",{"_index":1337,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["date.year",{"_index":1334,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["date:'medium",{"_index":828,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["date:\\'medium",{"_index":832,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["dateclicked",{"_index":1317,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["dateclicked(date",{"_index":1320,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["datecolor",{"_index":285,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["dates",{"_index":349,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":378,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.faded",{"_index":401,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.focused",{"_index":391,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day.range",{"_index":395,"title":{},"body":{"components/CalanderComponent.html":{}}}],["day:hover",{"_index":396,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dbcalent",{"_index":504,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"detail",{"_index":531,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"end\"].todate",{"_index":530,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"grp\"][\"id",{"_index":539,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"grp\"][\"name",{"_index":541,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"id",{"_index":528,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbcalent[\"start\"].todate",{"_index":529,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbevent",{"_index":1737,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['details",{"_index":1756,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['enddate",{"_index":1759,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['id",{"_index":1752,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['images",{"_index":1755,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['location",{"_index":1754,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['name",{"_index":1753,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbevent['startdate",{"_index":1757,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbgroup",{"_index":1053,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"admin",{"_index":1083,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"alluuid",{"_index":1087,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"booked",{"_index":1086,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"confirmed",{"_index":1085,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"details",{"_index":1080,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].end.todate",{"_index":1079,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].id",{"_index":1076,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].name",{"_index":1077,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"event\"].start.todate",{"_index":1078,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"id",{"_index":1074,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"imageurls",{"_index":1081,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"locations",{"_index":1082,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"members",{"_index":1084,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbgroup[\"name",{"_index":1075,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtocalendarevent",{"_index":482,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtocalendarevent(dbcalent",{"_index":501,"title":{},"body":{"injectables/CalendarService.html":{}}}],["dbtogroupinterface",{"_index":1037,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbtogroupinterface(dbgroup",{"_index":1051,"title":{},"body":{"injectables/GroupService.html":{}}}],["dbwatchlisttoevent",{"_index":1729,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["dbwatchlisttoevent(dbevent",{"_index":1735,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["debouncetime",{"_index":659,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["debouncetime(500",{"_index":672,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["declarations",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":325,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["delete",{"_index":945,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleted",{"_index":915,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["deletedoc",{"_index":524,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["deletedoc(caldoc).then(birdbird",{"_index":606,"title":{},"body":{"injectables/CalendarService.html":{}}}],["deletedoc(grpdoc).then(_",{"_index":1131,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteevent",{"_index":419,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e",{"_index":429,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["deleteevent(e:calanderevent",{"_index":468,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["deletegroup",{"_index":891,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["deletegroup(group",{"_index":1054,"title":{},"body":{"injectables/GroupService.html":{}}}],["denied",{"_index":1099,"title":{},"body":{"injectables/GroupService.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":406,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["detail'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["detail.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["detail.component.css",{"_index":886,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.html",{"_index":887,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts",{"_index":885,"title":{},"body":{"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:15",{"_index":897,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:18",{"_index":907,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":905,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":901,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":904,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":900,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":902,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":906,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":899,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail.component.ts:56",{"_index":898,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["detail/group",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/GroupDetailComponent.html":{},"coverage.html":{}}}],["detail:\"dental",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"doctors",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:\"school",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail:string",{"_index":1256,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["details",{"_index":773,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["details:\"fake",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details:e.description",{"_index":1594,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["details:new",{"_index":729,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["details:string",{"_index":791,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["directive",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["display",{"_index":385,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"components/SearchPageComponent.html":{}}}],["doc",{"_index":520,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["doc(this.fs",{"_index":601,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata",{"_index":519,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["docdata(grpdoc",{"_index":1108,"title":{},"body":{"injectables/GroupService.html":{}}}],["docdata(watchdoc).subscribe(data",{"_index":1763,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["document",{"_index":1771,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["documentation",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":502,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["documentreference",{"_index":513,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["download",{"_index":1866,"title":{},"body":{"index.html":{}}}],["dp",{"_index":275,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dp:ngbdatepicker|undefined",{"_index":352,"title":{},"body":{"components/CalanderComponent.html":{}}}],["dynamic",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":369,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"classes/EventClass.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["e.detail",{"_index":948,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["e.details",{"_index":803,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.end",{"_index":1351,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e.end.getmonth()+1,e.end.getdate",{"_index":463,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e.end|date:\"medium",{"_index":950,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e.id",{"_index":796,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"pipes/InwatchlistPipe.html":{}}}],["e.id)return",{"_index":1423,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["e.images",{"_index":801,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.location",{"_index":799,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e.start",{"_index":1350,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["e.start.getmonth()+1,e.start.getdate",{"_index":460,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["e.start|date:\"medium",{"_index":949,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e.user.name",{"_index":947,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["e1",{"_index":1801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e2",{"_index":1802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["e6e6e6",{"_index":394,"title":{},"body":{"components/CalanderComponent.html":{}}}],["e?.enddate",{"_index":807,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e?.startdate",{"_index":805,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["e[1",{"_index":372,"title":{},"body":{"components/CalanderComponent.html":{}}}],["earlier",{"_index":1887,"title":{},"body":{"index.html":{}}}],["ed",{"_index":1599,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["ed:date",{"_index":1591,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["efcb00",{"_index":1854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["em",{"_index":850,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["em!:eventemitter",{"_index":869,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["email",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{},"interfaces/UserInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["emaillist",{"_index":1286,"title":{},"body":{"injectables/NotificationService.html":{}}}],["emaillist.push(member.email",{"_index":1288,"title":{},"body":{"injectables/NotificationService.html":{}}}],["enable",{"_index":1911,"title":{},"body":{"index.html":{}}}],["end",{"_index":309,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end.day",{"_index":1340,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end.month",{"_index":1338,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end.year",{"_index":1335,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end2",{"_index":1803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end3",{"_index":1804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end:end",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end2",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:end3",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end:new",{"_index":1262,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["end:ngbdate",{"_index":1330,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["end:string",{"_index":1255,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["enddate",{"_index":774,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["enddate:(!this.invaliddate(ed",{"_index":1598,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["enddate:new",{"_index":732,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["enddate:ngbdate",{"_index":461,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["enddate?:date",{"_index":793,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["ensure",{"_index":1154,"title":{},"body":{"injectables/GroupService.html":{}}}],["enum",{"_index":698,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["enumerations",{"_index":1841,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/calenderenum",{"_index":410,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["env",{"_index":1874,"title":{},"body":{"index.html":{}}}],["environments/env",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":1030,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["err.code",{"_index":1097,"title":{},"body":{"injectables/GroupService.html":{}}}],["err.message",{"_index":875,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["err===\"group",{"_index":767,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["error",{"_index":1029,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["error$:eventemitter",{"_index":1407,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["error(\"group",{"_index":759,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["error(\"invalid",{"_index":476,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["error(\"user",{"_index":769,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["error:(e",{"_index":1025,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["error:(err",{"_index":932,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["event!:eventinterface",{"_index":820,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["event.details",{"_index":827,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.enddate",{"_index":829,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.id",{"_index":1090,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.images",{"_index":1092,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.location",{"_index":826,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.name",{"_index":825,"title":{},"body":{"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event.startdate",{"_index":569,"title":{},"body":{"injectables/CalendarService.html":{},"components/EventComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["event:calanderevent",{"_index":412,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{}}}],["event:eventinterface",{"_index":960,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["event:n",{"_index":751,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["event:this.formbuilder.group",{"_index":725,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["eventclass",{"_index":771,"title":{"classes/EventClass.html":{}},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"coverage.html":{}}}],["eventcomponentcomponent",{"_index":62,"title":{"components/EventComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventemitter",{"_index":296,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["eventinput",{"_index":1355,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["eventinput$:behaviorsubject",{"_index":1403,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["eventinput:string",{"_index":1469,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinputemitter",{"_index":1461,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinputemitter:eventemitter",{"_index":1471,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["eventinterface",{"_index":495,"title":{"interfaces/EventInterface.html":{}},"body":{"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventname",{"_index":979,"title":{},"body":{"components/GroupListComponent.html":{}}}],["eventpageinterface",{"_index":833,"title":{"interfaces/EventPageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["events",{"_index":286,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"interfaces/EventPageInterface.html":{},"components/GroupDetailComponent.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["events!:calanderevent[];//should",{"_index":342,"title":{},"body":{"components/CalanderComponent.html":{}}}],["events'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["events.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["events.component.css",{"_index":1186,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.html",{"_index":1187,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts",{"_index":1185,"title":{},"body":{"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events.component.ts:10",{"_index":1189,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events.component.ts:9",{"_index":1188,"title":{},"body":{"components/ListEventsComponent.html":{}}}],["events/inwatchlist.pipe",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["events/inwatchlist.pipe.ts",{"_index":1180,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"coverage.html":{}}}],["events/inwatchlist.pipe.ts:9",{"_index":1182,"title":{},"body":{"pipes/InwatchlistPipe.html":{}}}],["events/list",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["events:eventinterface",{"_index":837,"title":{},"body":{"interfaces/EventPageInterface.html":{},"components/ListEventsComponent.html":{}}}],["events:undefined",{"_index":1584,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["eventtodbwatchlist",{"_index":1730,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event",{"_index":1738,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["eventtodbwatchlist(event:eventinterface",{"_index":1744,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["evt",{"_index":721,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["evt.enddate.toisostring().slice(0",{"_index":749,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["evt.name",{"_index":883,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["evt.startdate.toisostring().slice(0",{"_index":746,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["exports",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":699,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["extension",{"_index":1917,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":1915,"title":{},"body":{"index.html":{}}}],["f0ad4e",{"_index":1849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["facade.service",{"_index":662,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["facade.service.ts",{"_index":1352,"title":{},"body":{"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["facade.service.ts:15",{"_index":1397,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:17",{"_index":1392,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:18",{"_index":1393,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:19",{"_index":1398,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:20",{"_index":1390,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:21",{"_index":1391,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:22",{"_index":1389,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:23",{"_index":1368,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:29",{"_index":1386,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:32",{"_index":1379,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:39",{"_index":1377,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:46",{"_index":1370,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:54",{"_index":1381,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:59",{"_index":1384,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:77",{"_index":1374,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:88",{"_index":1383,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade.service.ts:93",{"_index":1372,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["facade/personalcalendarfacade",{"_index":1326,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["facade/search",{"_index":1467,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["facade/viewgroupfacade",{"_index":1010,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["false",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{}}}],["fan",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fascase",{"_index":925,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["fff",{"_index":1490,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["fields",{"_index":580,"title":{},"body":{"injectables/CalendarService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":1539,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["filter((x:any",{"_index":1552,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["firebase",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/GroupPageComponent.html":{},"index.html":{}}}],["firebase/auth",{"_index":231,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebaseconfig",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firestore",{"_index":488,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["firestoreerror",{"_index":1066,"title":{},"body":{"injectables/GroupService.html":{}}}],["first",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["first:from(this.calsvc.addcalendarevent",{"_index":1133,"title":{},"body":{"injectables/GroupService.html":{}}}],["fit",{"_index":1448,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["following",{"_index":1880,"title":{},"body":{"index.html":{}}}],["font",{"_index":1485,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["for(var",{"_index":1422,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["forkjoin",{"_index":1067,"title":{},"body":{"injectables/GroupService.html":{}}}],["formbuilder",{"_index":712,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["formcontrol",{"_index":730,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["formsmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule,reactiveformsmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1112,"title":{},"body":{"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["from(this.authsvc.getcurrentuser()).pipe",{"_index":1688,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["fs",{"_index":490,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["fullscreen:true",{"_index":880,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["further",{"_index":1920,"title":{},"body":{"index.html":{}}}],["g",{"_index":1642,"title":{},"body":{"injectables/ViewGroupFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["g._embedded.subgenres.foreach((sg:any",{"_index":1568,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["g.event.name",{"_index":981,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.members",{"_index":982,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g.name",{"_index":980,"title":{},"body":{"components/GroupListComponent.html":{}}}],["g1",{"_index":1805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["g2",{"_index":1806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":1861,"title":{},"body":{"index.html":{}}}],["genre",{"_index":692,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["genre:[]};//must",{"_index":1559,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["genre:idname",{"_index":696,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["genreinterface",{"_index":703,"title":{"interfaces/GenreInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["genres",{"_index":1515,"title":{},"body":{"interfaces/SegmentInterface.html":{}}}],["genres:genreinterface",{"_index":702,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["getauth",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["getcalendar",{"_index":483,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getcalendar(user",{"_index":505,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getclassification",{"_index":1361,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["getclassification(kw",{"_index":1376,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["getclassification(kw:string",{"_index":1415,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["getclassification(kw:string):observable",{"_index":1548,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getcurrentuser",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ViewGroupFacade.html":{}}}],["getcurrentuser():promise",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getevents",{"_index":1519,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getevents():observable",{"_index":1573,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery",{"_index":1520,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query",{"_index":1529,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["geteventsquery(query:any):observable",{"_index":1601,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["getfirestore",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["getgroup",{"_index":1625,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroup(id",{"_index":1638,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroup(id:string",{"_index":1670,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupbyid",{"_index":1038,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupbyid(groupid",{"_index":1056,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupcalander",{"_index":1626,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalander(g",{"_index":1640,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalander(g:groupinterface",{"_index":1682,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgroupcalendar",{"_index":484,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroupcalendar(group",{"_index":507,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getgroups",{"_index":1039,"title":{},"body":{"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["getgroups(user",{"_index":1058,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgrpbyid",{"_index":1627,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getgrpbyid(id",{"_index":1644,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getstartdate",{"_index":1628,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getstartdate(d",{"_index":1646,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["getting",{"_index":1858,"title":{"index.html":{}},"body":{}}],["getwatchlist",{"_index":1362,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/WatchlistService.html":{}}}],["getwatchlist(user",{"_index":1740,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["go",{"_index":1292,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["going",{"_index":623,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["google",{"_index":1202,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["googleauthprovider",{"_index":229,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["googleimg",{"_index":1231,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["googlesignin",{"_index":1191,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["graph",{"_index":1930,"title":{},"body":{"modules.html":{}}}],["group",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/variables.html":{}}}],["group!:groupinterface",{"_index":909,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["group.admin",{"_index":588,"title":{},"body":{"injectables/CalendarService.html":{}}}],["group.admin.name",{"_index":1290,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(member.id",{"_index":1287,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.confirmed.includes(user.id",{"_index":1129,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.event.enddate",{"_index":1134,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.event.name||'concert",{"_index":1303,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.name||'the",{"_index":1293,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.event.startdate",{"_index":585,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["group.event.startdate!.todatestring",{"_index":1295,"title":{},"body":{"injectables/NotificationService.html":{}}}],["group.id",{"_index":598,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["group.members.foreach(member",{"_index":589,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["group.name",{"_index":1135,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["group/${group.id",{"_index":1120,"title":{},"body":{"injectables/GroupService.html":{}}}],["group/${groupid",{"_index":1107,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupbyid",{"_index":1622,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["groupcalendar",{"_index":1623,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["groupclicked",{"_index":968,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupcreatecomponent",{"_index":64,"title":{"components/GroupCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdetailcomponent",{"_index":67,"title":{"components/GroupDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdoc",{"_index":1089,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupdoc).then((docref",{"_index":1096,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupid",{"_index":407,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["groupid:string",{"_index":1013,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["groupinterface",{"_index":498,"title":{"interfaces/GroupInterface.html":{}},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grouplistcomponent",{"_index":69,"title":{"components/GroupListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupmemberpipe",{"_index":983,"title":{},"body":{"components/GroupListComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["groupmemberpipepipe",{"_index":104,"title":{"pipes/GroupmemberPipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groupmemberstatus",{"_index":1844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["groupname",{"_index":408,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{}}}],["grouppagecomponent",{"_index":71,"title":{"components/GroupPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grouppipe",{"_index":1171,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["grouppipepipe",{"_index":105,"title":{"pipes/GrouppipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":967,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/NavigationComponent.html":{}}}],["groups!:groupinterface",{"_index":974,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupservice",{"_index":714,"title":{"injectables/GroupService.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["grp",{"_index":500,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["grp.admin.id",{"_index":1677,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grp.confirmed",{"_index":615,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.event",{"_index":762,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.enddate",{"_index":756,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.event.name",{"_index":624,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.event.startdate",{"_index":754,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grp.group$.value)!.confirmed.includes(grp.group$.value!.admin.id)?\"going\":\"not",{"_index":942,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value)!.confirmed.includes(m.id)?\"going\":\"not",{"_index":944,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.enddate|date:'medium",{"_index":937,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.enddate|date:\\'medium\\'}}invite",{"_index":957,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.location",{"_index":935,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.name",{"_index":934,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.startdate|date:'medium",{"_index":936,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.event?.startdate|date:\\'medium",{"_index":956,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$.value?.name",{"_index":933,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.group$|async)!.admin.name",{"_index":941,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["grp.id",{"_index":617,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp.name",{"_index":625,"title":{},"body":{"injectables/CalendarService.html":{}}}],["grp:any",{"_index":752,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["grpcal",{"_index":1657,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grpcal.map(e=>e.user.id).includes(user.id",{"_index":1138,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpcal.sort((a,b)=>{//sort",{"_index":1687,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grpcollection",{"_index":1088,"title":{},"body":{"injectables/GroupService.html":{}}}],["grpdoc",{"_index":1106,"title":{},"body":{"injectables/GroupService.html":{}}}],["grps.foreach(grp",{"_index":1676,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["grpsvc",{"_index":713,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["grpupdateprom",{"_index":1719,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["guards/auth.guard",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["handle",{"_index":1347,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["header",{"_index":1518,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["height",{"_index":388,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["height:80vh",{"_index":1205,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hello",{"_index":1289,"title":{},"body":{"injectables/NotificationService.html":{}}}],["help",{"_index":1921,"title":{},"body":{"index.html":{}}}],["here",{"_index":344,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupPageComponent.html":{},"injectables/NotificationService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["highest",{"_index":455,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["hovereddate",{"_index":276,"title":{},"body":{"components/CalanderComponent.html":{}}}],["html",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["http",{"_index":1526,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["httpclient",{"_index":1523,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["httpclientmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1533,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["https://app.ticketmaster.com/discovery/v2",{"_index":1547,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["https://picsum.photos/id/1/900/500",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://picsum.photos/id/2/900/500",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"interfaces/IdName.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"index.html":{}}}],["id\"}).subscribe(data",{"_index":1109,"title":{},"body":{"injectables/GroupService.html":{}}}],["id'}).subscribe",{"_index":562,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["id'}).subscribe(data",{"_index":619,"title":{},"body":{"injectables/CalendarService.html":{}}}],["id.appspot.com",{"_index":1899,"title":{},"body":{"index.html":{}}}],["id.firebaseapp.com",{"_index":1896,"title":{},"body":{"index.html":{}}}],["id:\"evt1",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"evt2",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp1",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"grp2",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:\"user1id",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id:[\"\",validators.required",{"_index":726,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["id:e.id",{"_index":1593,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["id:string",{"_index":705,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["id:string|null",{"_index":1018,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["idclasstype",{"_index":646,"title":{"interfaces/IdClassType.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["identifier",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":561,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["idname",{"_index":650,"title":{"interfaces/IdName.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["ie",{"_index":648,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["if(!a?.segment?.id",{"_index":1561,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!g?.id",{"_index":1565,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!group.event.enddate",{"_index":594,"title":{},"body":{"injectables/CalendarService.html":{}}}],["if(!sg?.id",{"_index":1569,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(!x",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(a.start",{"_index":457,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["if(changes[\"events",{"_index":354,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(evt.enddate",{"_index":748,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(evt.startdate",{"_index":744,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(grp.event.startdate>=grp.event.enddate",{"_index":758,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["if(grpcal.length==0",{"_index":1695,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["if(i.id",{"_index":1184,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"injectables/SearchFacadeService.html":{}}}],["if(id",{"_index":1020,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["if(isadmin",{"_index":1177,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["if(rtn.page.totalelements==0",{"_index":1611,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["if(this.currentuser",{"_index":470,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{}}}],["if(this.isinside(e[0][0],date,e[0][1",{"_index":371,"title":{},"body":{"components/CalanderComponent.html":{}}}],["if(x.events.length",{"_index":1446,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["ignore",{"_index":1884,"title":{},"body":{"index.html":{}}}],["iif",{"_index":1068,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["iif(()=>grp.alluuid.includes(u.id",{"_index":1691,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["image",{"_index":1491,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["images",{"_index":775,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["images:[\"https://picsum.photos/id/0/900/500",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images:e.images.map((img:any)=>img.url",{"_index":1595,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["images:string",{"_index":790,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["images:this.formbuilder.array",{"_index":728,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["imageurls",{"_index":1091,"title":{},"body":{"injectables/GroupService.html":{}}}],["implements",{"_index":268,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["import",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["important",{"_index":1496,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["imports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incompatible",{"_index":760,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{}}}],["increase",{"_index":574,"title":{},"body":{"injectables/CalendarService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["inequalities",{"_index":578,"title":{},"body":{"injectables/CalendarService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["inghs",{"_index":689,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["initialise",{"_index":1772,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["initializeapp",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(firebaseconfig",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(firebaseconfig)).html\">providefirebaseapp",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["inject",{"_index":333,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(authenticationservice",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(ngbcalendar",{"_index":321,"title":{},"body":{"components/CalanderComponent.html":{}}}],["inject(router",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":211,"title":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"overview.html":{}}}],["inline",{"_index":386,"title":{},"body":{"components/CalanderComponent.html":{}}}],["input",{"_index":330,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["inputs",{"_index":284,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/ListEventsComponent.html":{}}}],["install",{"_index":1867,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1865,"title":{},"body":{"index.html":{}}}],["interface",{"_index":235,"title":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["interface.ts",{"_index":405,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["interface.ts:11",{"_index":782,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:12",{"_index":785,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:13",{"_index":784,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:14",{"_index":783,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:15",{"_index":781,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:16",{"_index":786,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:17",{"_index":780,"title":{},"body":{"classes/EventClass.html":{}}}],["interface.ts:27",{"_index":788,"title":{},"body":{"classes/EventClass.html":{}}}],["interface/calanderevent",{"_index":337,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["interfaces",{"_index":404,"title":{},"body":{"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/PageInterface.html":{},"interfaces/SegmentInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/calander",{"_index":436,"title":{},"body":{"injectables/CalendarFacade.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/clasification",{"_index":1399,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["interfaces/enums/calenderenum",{"_index":439,"title":{},"body":{"injectables/CalendarFacade.html":{},"classes/NewCalendarEvent.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/event",{"_index":737,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/ListEventsComponent.html":{},"injectables/SearchFacadeService.html":{}}}],["interfaces/group",{"_index":1009,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GrouppipePipe.html":{},"injectables/ViewGroupFacade.html":{}}}],["interfaces/page",{"_index":1401,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["interfaces/user",{"_index":435,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["invalid",{"_index":877,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["invaliddate",{"_index":1521,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invaliddate(d",{"_index":1531,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invaliddate(d:date",{"_index":1617,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["invite",{"_index":938,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["inwatchlist",{"_index":812,"title":{},"body":{"components/EventComponentComponent.html":{},"pipes/InwatchlistPipe.html":{}}}],["inwatchlist!:boolean",{"_index":819,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["inwatchlistpipe",{"_index":106,"title":{"pipes/InwatchlistPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/InwatchlistPipe.html":{},"coverage.html":{},"overview.html":{}}}],["isadmin",{"_index":1173,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["isadmin:boolean",{"_index":1176,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["isauth",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isbetween",{"_index":279,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isbetween(a",{"_index":302,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isbetween(a:number",{"_index":373,"title":{},"body":{"components/CalanderComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["isequals",{"_index":778,"title":{},"body":{"classes/EventClass.html":{}}}],["isequals(other",{"_index":787,"title":{},"body":{"classes/EventClass.html":{}}}],["isequals(other:eventclass):boolean",{"_index":808,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["isingroup",{"_index":1629,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["isingroup(group",{"_index":1649,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["isinside",{"_index":280,"title":{},"body":{"components/CalanderComponent.html":{}}}],["isinside(start",{"_index":308,"title":{},"body":{"components/CalanderComponent.html":{}}}],["isvalid",{"_index":1246,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["join",{"_index":951,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["joingroup",{"_index":892,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["joingroup(groupid",{"_index":1060,"title":{},"body":{"injectables/GroupService.html":{}}}],["joingroup(id",{"_index":1651,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["joining",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["key",{"_index":1879,"title":{},"body":{"index.html":{}}}],["keyof",{"_index":533,"title":{},"body":{"injectables/CalendarService.html":{}}}],["keys",{"_index":368,"title":{},"body":{"components/CalanderComponent.html":{}}}],["keyword",{"_index":1891,"title":{},"body":{"index.html":{}}}],["keyword:kw}}).pipe",{"_index":1551,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["kick",{"_index":918,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kickuser",{"_index":893,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["kickuser(user",{"_index":903,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["kickuser(user:userinterface",{"_index":916,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["kw",{"_index":1378,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["kw.length",{"_index":1554,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["lah",{"_index":255,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lastclickeddate",{"_index":277,"title":{},"body":{"components/CalanderComponent.html":{}}}],["latest",{"_index":1683,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["left",{"_index":1226,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["left:0",{"_index":1215,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["left:50",{"_index":1209,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["legend",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"overview.html":{}}}],["libraries",{"_index":1871,"title":{},"body":{"index.html":{}}}],["limited",{"_index":571,"title":{},"body":{"injectables/CalendarService.html":{}}}],["line",{"_index":1487,"title":{},"body":{"components/SearchPageComponent.html":{},"index.html":{}}}],["link",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailComponent.html":{}}}],["list",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["list.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":964,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.html",{"_index":965,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts",{"_index":963,"title":{},"body":{"components/GroupListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":969,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:11",{"_index":970,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:12",{"_index":973,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:16",{"_index":971,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list/group",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/GroupListComponent.html":{},"coverage.html":{}}}],["listernere",{"_index":343,"title":{},"body":{"components/CalanderComponent.html":{}}}],["listeventscomponent",{"_index":73,"title":{"components/ListEventsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listof",{"_index":347,"title":{},"body":{"components/CalanderComponent.html":{}}}],["loadedevents",{"_index":1356,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["loadedevents$:behaviorsubject",{"_index":1404,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["location",{"_index":776,"title":{},"body":{"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["location:[\"seatle",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:[\"singpoare",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location:e._embedded?.venues.map((v:any)=>v.name",{"_index":1596,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["location:string",{"_index":789,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["location:this.formbuilder.array",{"_index":727,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["locations",{"_index":1093,"title":{},"body":{"injectables/GroupService.html":{}}}],["login",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["loginbtn",{"_index":1218,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginbtn:active",{"_index":1227,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["logingoogle",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpagecomponent",{"_index":76,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":218,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{}}}],["look",{"_index":1892,"title":{},"body":{"index.html":{}}}],["m.name",{"_index":943,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["mail",{"_index":1279,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mailcol",{"_index":1278,"title":{},"body":{"injectables/NotificationService.html":{}}}],["maildoc",{"_index":1280,"title":{},"body":{"injectables/NotificationService.html":{}}}],["map",{"_index":340,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["map((x:any",{"_index":1555,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["master",{"_index":1881,"title":{},"body":{"index.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.min(20*20",{"_index":1615,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["max",{"_index":1513,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["mean",{"_index":445,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["means",{"_index":1283,"title":{},"body":{"injectables/NotificationService.html":{}}}],["measurementid",{"_index":1904,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":1504,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["meeting",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":591,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{}}}],["member.id",{"_index":1125,"title":{},"body":{"injectables/GroupService.html":{}}}],["membergroups",{"_index":1624,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["members",{"_index":573,"title":{},"body":{"injectables/CalendarService.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"injectables/ViewGroupFacade.html":{}}}],["members.map((x)=>x.name",{"_index":1033,"title":{},"body":{"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{}}}],["members:[user1",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:[user2",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members:userinterface",{"_index":961,"title":{},"body":{"interfaces/GroupInterface.html":{}}}],["mergemap",{"_index":1069,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["mergemap((grpcal:calanderevent",{"_index":1140,"title":{},"body":{"injectables/GroupService.html":{}}}],["message",{"_index":1275,"title":{},"body":{"injectables/NotificationService.html":{}}}],["message:any",{"_index":1277,"title":{},"body":{"injectables/NotificationService.html":{}}}],["messagingsenderid",{"_index":1900,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["methods",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["min",{"_index":1505,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["miscellaneous",{"_index":1840,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modalservice",{"_index":854,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["modalservice:ngbmodal",{"_index":871,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["mode",{"_index":1914,"title":{},"body":{"index.html":{}}}],["module",{"_index":92,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1922,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":579,"title":{},"body":{"injectables/CalendarService.html":{}}}],["n",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["n)=>this.isauth",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["n.page",{"_index":1452,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["n.push(e",{"_index":1424,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["n.startdate",{"_index":745,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["n:any",{"_index":742,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["n:idclasstype",{"_index":1420,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["nadm",{"_index":1675,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["nadm.push(grp",{"_index":1679,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["name:\"becca",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"go",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"john",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"rick",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"superbowl",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"taylor",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"tom",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:\"ts",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name:a.segment.name",{"_index":1563,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:e.name",{"_index":678,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/TicketmasterService.html":{}}}],["name:e.name,type:classtype.genre",{"_index":681,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:e.name,type:classtype.subgenre",{"_index":683,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["name:g.name",{"_index":1567,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:sg.name",{"_index":1571,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["name:string",{"_index":706,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/GroupInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["navigate",{"_index":1909,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":287,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigateto!:ngbdate",{"_index":341,"title":{},"body":{"components/CalanderComponent.html":{}}}],["navigation",{"_index":1234,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["navigation.component.css",{"_index":1235,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":1236,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":78,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navstuff",{"_index":846,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["network/firebase/authentication/authentication.service",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"components/LoginPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/calendar.service",{"_index":434,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/group.service",{"_index":735,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["network/firebase/firestore/watchlist.service",{"_index":736,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{}}}],["network/ticketmaster/ticketmaster.service",{"_index":1400,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["new",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcalendarevent",{"_index":426,"title":{"classes/NewCalendarEvent.html":{}},"body":{"injectables/CalendarFacade.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["newcalevent",{"_index":428,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newcalevent.isvalid",{"_index":471,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newcalevent.tocalendarevent(this.currentuser",{"_index":473,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["newevent",{"_index":1316,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["newgroupform",{"_index":709,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["next",{"_index":930,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{}}}],["next:(n",{"_index":1451,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["ng",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":992,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["ngbcalendar",{"_index":334,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbcarouselmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbdate",{"_index":294,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["ngbdate(d.getfullyear",{"_index":359,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["ngbdate(e.end.getfullyear",{"_index":462,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdate(e.start.getfullyear",{"_index":459,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["ngbdate(x.end.getfullyear",{"_index":1331,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdate(x.start.getfullyear",{"_index":1328,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["ngbdatepicker",{"_index":323,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngbmodal",{"_index":852,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngbmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbnav",{"_index":864,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["ngmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":281,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngonchanges(changes",{"_index":312,"title":{},"body":{"components/CalanderComponent.html":{}}}],["ngoninit",{"_index":635,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["ngoninit(){//given",{"_index":910,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["ngx",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/SearchPageComponent.html":{},"dependencies.html":{}}}],["node.js",{"_index":1868,"title":{},"body":{"index.html":{}}}],["none",{"_index":955,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["notfreeatall",{"_index":1846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notgoing",{"_index":1857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noti",{"_index":1042,"title":{},"body":{"injectables/GroupService.html":{}}}],["notification",{"_index":1159,"title":{},"body":{"injectables/GroupService.html":{}}}],["notification.service",{"_index":1072,"title":{},"body":{"injectables/GroupService.html":{}}}],["notificationservice",{"_index":1043,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notipromise",{"_index":1150,"title":{},"body":{"injectables/GroupService.html":{}}}],["notipromise]).then(_",{"_index":1153,"title":{},"body":{"injectables/GroupService.html":{}}}],["npm",{"_index":1869,"title":{},"body":{"index.html":{}}}],["null",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{}}}],["number",{"_index":303,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["number.isnan(d.valueof",{"_index":1618,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["number:0",{"_index":1396,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["number:number",{"_index":1312,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["object",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs",{"_index":1709,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["obs.error(\"group",{"_index":1111,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(result",{"_index":567,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["obs.next(this.dbtogroupinterface(data",{"_index":1113,"title":{},"body":{"injectables/GroupService.html":{}}}],["obs.next(user!==null",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["obs.next(watchlist",{"_index":1764,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["obs.subscribe(grp",{"_index":1711,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["observable",{"_index":226,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["observable(obs",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["of(1).pipe(switchmap(()=>forkjoin",{"_index":1143,"title":{},"body":{"injectables/GroupService.html":{}}}],["of(false",{"_index":1693,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["of(true",{"_index":1692,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["onaddclassification",{"_index":636,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onaddclassification(ie",{"_index":645,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onaddclassification(ie:idclasstype",{"_index":684,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onchanges",{"_index":269,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclick",{"_index":966,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group",{"_index":972,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclick(group:groupinterface",{"_index":975,"title":{},"body":{"components/GroupListComponent.html":{}}}],["onclickdate",{"_index":282,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date",{"_index":317,"title":{},"body":{"components/CalanderComponent.html":{}}}],["onclickdate(date:ngbdate",{"_index":362,"title":{},"body":{"components/CalanderComponent.html":{}}}],["one",{"_index":1429,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["ongenre",{"_index":637,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["ongenre(e",{"_index":649,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["ongenre(e:idname",{"_index":680,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["oninit",{"_index":630,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["onremoveclassfication",{"_index":638,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onremoveclassfication(ie",{"_index":652,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onremoveclassfication(ie:idclasstype",{"_index":687,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment",{"_index":639,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e",{"_index":654,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsegment(e:idname",{"_index":676,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre",{"_index":640,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e",{"_index":656,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["onsubgenre(e:idname",{"_index":682,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["open",{"_index":849,"title":{},"body":{"components/GroupCreateComponent.html":{},"index.html":{}}}],["openmodalemitter",{"_index":989,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["other.id",{"_index":809,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["out",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":331,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/GroupListComponent.html":{}}}],["outputs",{"_index":288,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupListComponent.html":{}}}],["overview",{"_index":1924,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.number",{"_index":1443,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["p:pageinterface",{"_index":1441,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["package",{"_index":1817,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":382,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"interfaces/EventPageInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":986,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.html",{"_index":987,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts",{"_index":984,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1193,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:11",{"_index":1726,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["page.component.ts:12",{"_index":1465,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:13",{"_index":1466,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["page.component.ts:15",{"_index":1464,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:16",{"_index":1007,"title":{},"body":{"components/GroupPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:17",{"_index":1004,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:18",{"_index":1008,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:19",{"_index":1003,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:20",{"_index":1005,"title":{},"body":{"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:21",{"_index":995,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:23",{"_index":1325,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:24",{"_index":1194,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:25",{"_index":1006,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:26",{"_index":1324,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:29",{"_index":1002,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:30",{"_index":1323,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:33",{"_index":1000,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:34",{"_index":1321,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:36",{"_index":1001,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:37",{"_index":1463,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:44",{"_index":1322,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:50",{"_index":1319,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["page.component.ts:59",{"_index":997,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:64",{"_index":999,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["page.component.ts:9",{"_index":1725,"title":{},"body":{"components/WatchlistPageComponent.html":{}}}],["page.totalelements",{"_index":1609,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["page/classification",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"components/ClassificationComponentComponent.html":{},"coverage.html":{}}}],["page/event",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/EventComponentComponent.html":{},"coverage.html":{}}}],["page/group",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"coverage.html":{}}}],["page/groupmember",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["page/grouppipe.pipe.ts",{"_index":1170,"title":{},"body":{"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["page/grouppipe.pipe.ts:9",{"_index":1174,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["page/list",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/personal",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["page/search",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["page/watchlist",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["page:pageinterface",{"_index":836,"title":{},"body":{"interfaces/EventPageInterface.html":{}}}],["page:rtn.page",{"_index":1612,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["page:undefined",{"_index":1583,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["pageinfo",{"_index":1357,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["pageinfo$:behaviorsubject",{"_index":1409,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["pageinterface",{"_index":835,"title":{"interfaces/PageInterface.html":{}},"body":{"interfaces/EventPageInterface.html":{},"interfaces/PageInterface.html":{},"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["parameter",{"_index":477,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["params.get('id",{"_index":1019,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["params:query}).pipe",{"_index":1608,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["params:{apikey:ticketmasterapi",{"_index":1550,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["paste",{"_index":1890,"title":{},"body":{"index.html":{}}}],["path",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"group/:id",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"login",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"personalcalender",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"search",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"watchlist",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patriots",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":1098,"title":{},"body":{"injectables/GroupService.html":{}}}],["personal",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"miscellaneous/enumerations.html":{}}}],["personalcalenderpagecomponent",{"_index":80,"title":{"components/PersonalCalenderPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pgnum",{"_index":1375,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["pipe",{"_index":1162,"title":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{}},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"coverage.html":{}}}],["pipe(mergemap(v",{"_index":1604,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["pipe(switchmap(()=>of(void",{"_index":1144,"title":{},"body":{"injectables/GroupService.html":{}}}],["pipe(tap(()=>console.log(\"got",{"_index":1136,"title":{},"body":{"injectables/GroupService.html":{}}}],["pipe.pipe",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe.pipe.ts",{"_index":1164,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"coverage.html":{}}}],["pipe.pipe.ts:9",{"_index":1167,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["pipes",{"_index":1163,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1168,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{}}}],["platformlocation",{"_index":1524,"title":{},"body":{"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["please",{"_index":1296,"title":{},"body":{"injectables/NotificationService.html":{}}}],["pointer",{"_index":953,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{}}}],["popperjs/core",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":1206,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["priority",{"_index":456,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["private",{"_index":274,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"components/LoginPageComponent.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["prod",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/TicketmasterService.html":{}}}],["prod.ts",{"_index":1814,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1545,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["proj",{"_index":1894,"title":{},"body":{"index.html":{}}}],["project",{"_index":1860,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":1897,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":224,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["promise((res",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise((res,rej",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["promise(res",{"_index":554,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/WatchlistService.html":{}}}],["promise.all([calupdateprom,grpupdateprom]).then(_",{"_index":1721,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["promise.all([updatepromise",{"_index":1152,"title":{},"body":{"injectables/GroupService.html":{}}}],["promise.all(allprom).then(_",{"_index":627,"title":{},"body":{"injectables/CalendarService.html":{}}}],["properly",{"_index":1156,"title":{},"body":{"injectables/GroupService.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"classes/NewCalendarEvent.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"properties.html":{}}}],["protection",{"_index":1121,"title":{},"body":{"injectables/GroupService.html":{}}}],["provideanimations",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["provideauth",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provideauth(()=>getauth",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1889,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["providefirebaseapp",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore(()=>getfirestore",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["provider).then((result",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":633,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["pull",{"_index":608,"title":{},"body":{"injectables/CalendarService.html":{}}}],["pulling",{"_index":583,"title":{},"body":{"injectables/CalendarService.html":{}}}],["q",{"_index":557,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["queries",{"_index":1430,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["query",{"_index":517,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["query\",\"error",{"_index":1477,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["query(calcollection",{"_index":558,"title":{},"body":{"injectables/CalendarService.html":{}}}],["query(grpcollection",{"_index":1101,"title":{},"body":{"injectables/GroupService.html":{}}}],["query.apikey",{"_index":1602,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["query:any",{"_index":1402,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["queryparams",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["r",{"_index":1607,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["radius",{"_index":1222,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["radius:0",{"_index":1497,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["range",{"_index":442,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["reactiveformsmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":1619,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["redirectto:'/search",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1926,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":345,"title":{},"body":{"components/CalanderComponent.html":{}}}],["regarding",{"_index":1306,"title":{},"body":{"injectables/NotificationService.html":{}}}],["regards",{"_index":348,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rej(\"eh",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rej(\"group",{"_index":1100,"title":{},"body":{"injectables/GroupService.html":{}}}],["rej(new",{"_index":475,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["rej.code",{"_index":1775,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["relative",{"_index":1507,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["remove",{"_index":831,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removecalendarevent",{"_index":485,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removecalendarevent(calendarevent",{"_index":509,"title":{},"body":{"injectables/CalendarService.html":{}}}],["removeclassification",{"_index":1363,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeclassification(ie",{"_index":1380,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeclassification(ie:idclasstype",{"_index":1426,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removeevent",{"_index":811,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event",{"_index":816,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removeevent(event:eventinterface",{"_index":821,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["removefromgroup",{"_index":1040,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromgroup(group",{"_index":1062,"title":{},"body":{"injectables/GroupService.html":{}}}],["removefromwatchlist",{"_index":1364,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removefromwatchlist(event",{"_index":1382,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removefromwatchlist(event:eventinterface",{"_index":1454,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["removewatchlistevent",{"_index":1731,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["removewatchlistevent(user",{"_index":1742,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["replaysubject",{"_index":328,"title":{},"body":{"components/CalanderComponent.html":{}}}],["request",{"_index":946,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["res",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["res(user",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reserved",{"_index":609,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["reserved/booked",{"_index":595,"title":{},"body":{"injectables/CalendarService.html":{}}}],["reservedforevent",{"_index":612,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/enumerations.html":{}}}],["reset",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":564,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["result.push(calevent",{"_index":600,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtocalendarevent(cal,user",{"_index":566,"title":{},"body":{"injectables/CalendarService.html":{}}}],["result.push(this.dbtogroupinterface(grp",{"_index":1105,"title":{},"body":{"injectables/GroupService.html":{}}}],["results",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":223,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["returnurl",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgb(2",{"_index":397,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(2",{"_index":402,"title":{},"body":{"components/CalanderComponent.html":{}}}],["rgba(26",{"_index":1509,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["right:0",{"_index":1217,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["route",{"_index":993,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["route:activatedroute",{"_index":1014,"title":{},"body":{"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["router",{"_index":1192,"title":{},"body":{"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/TicketmasterService.html":{}}}],["router.navigate(['login",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router:router",{"_index":1195,"title":{},"body":{"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":186,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rtn",{"_index":1600,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn.events",{"_index":1587,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn.page",{"_index":1585,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtn:any",{"_index":1582,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtnn",{"_index":1616,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtnn.page.totalelements",{"_index":1614,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["rtnn:eventpageinterface",{"_index":1613,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["run",{"_index":1919,"title":{},"body":{"index.html":{}}}],["running",{"_index":1918,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":232,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"dependencies.html":{}}}],["s",{"_index":1387,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["same",{"_index":1149,"title":{},"body":{"injectables/GroupService.html":{}}}],["save",{"_index":884,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["saved",{"_index":1767,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["sd",{"_index":1589,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["search",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["searchevent",{"_index":1365,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["searchevent(){//this",{"_index":1428,"title":{},"body":{"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{}}}],["searchfacade",{"_index":634,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["searchfacade:searchfacadeservice",{"_index":670,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["searchfacadeservice",{"_index":642,"title":{"injectables/SearchFacadeService.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["searchpagecomponent",{"_index":83,"title":{"components/SearchPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sec",{"_index":1482,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["second:from(updatedoc(grpdoc",{"_index":1137,"title":{},"body":{"injectables/GroupService.html":{}}}],["segment",{"_index":693,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["segment:idname",{"_index":695,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["segmentinterface",{"_index":701,"title":{"interfaces/SegmentInterface.html":{}},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"coverage.html":{}}}],["select",{"_index":954,"title":{},"body":{"components/GroupDetailComponent.html":{},"components/LoginPageComponent.html":{},"index.html":{}}}],["selectedevent",{"_index":847,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["selectedevent?:eventinterface",{"_index":870,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["send",{"_index":1158,"title":{},"body":{"injectables/GroupService.html":{},"injectables/NotificationService.html":{}}}],["sendbookingconfirmation",{"_index":1266,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendbookingconfirmation(group",{"_index":1270,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest",{"_index":1267,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendconfirmationrequest(group",{"_index":1272,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail",{"_index":1268,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendemail(to",{"_index":1274,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendgroupconfirmation",{"_index":894,"title":{},"body":{"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["sendgroupconfirmation(group",{"_index":1064,"title":{},"body":{"injectables/GroupService.html":{}}}],["sent",{"_index":1285,"title":{},"body":{"injectables/NotificationService.html":{}}}],["set",{"_index":1873,"title":{},"body":{"index.html":{}}}],["set(grpcal.map(i=>i.user.id))].length",{"_index":1698,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["setbgcolor",{"_index":283,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date",{"_index":319,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setbgcolor(date:ngbdate):string",{"_index":365,"title":{},"body":{"components/CalanderComponent.html":{}}}],["setdoc",{"_index":525,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/WatchlistService.html":{}}}],["setdoc(watchdoc,update).then(_",{"_index":1776,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["setgroupcalandercolor",{"_index":1630,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["setgroupcalandercolor(grpcal",{"_index":1655,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["setgroupcalandercolor(grpcal:calanderevent[],group:groupinterface):calandercolor",{"_index":1694,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["sign",{"_index":1201,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["signed",{"_index":770,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{}}}],["signinwithpopup",{"_index":230,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithpopup(this.auth",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["simplechanges",{"_index":313,"title":{},"body":{"components/CalanderComponent.html":{}}}],["size",{"_index":1308,"title":{},"body":{"interfaces/PageInterface.html":{},"components/SearchPageComponent.html":{}}}],["size:number",{"_index":1310,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["slt",{"_index":1483,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["solid",{"_index":1493,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["somefree",{"_index":1848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sort",{"_index":453,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["split",{"_index":575,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/.../auth.guard.ts",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../calenderenum.ts",{"_index":1842,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../clasification",{"_index":1843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../env",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../groupstatus.ts",{"_index":1845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../testdata.ts",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/class/newcalendarevent.ts",{"_index":1245,"title":{},"body":{"classes/NewCalendarEvent.html":{},"coverage.html":{}}}],["src/app/class/newcalendarevent.ts:16",{"_index":1251,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:20",{"_index":1253,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:6",{"_index":1250,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:7",{"_index":1249,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/class/newcalendarevent.ts:8",{"_index":1248,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["src/app/common/calander/calander.component.ts",{"_index":267,"title":{},"body":{"components/CalanderComponent.html":{},"coverage.html":{}}}],["src/app/common/calander/calander.component.ts:15",{"_index":295,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:16",{"_index":291,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:17",{"_index":293,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:19",{"_index":297,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:20",{"_index":327,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:23",{"_index":329,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:24",{"_index":322,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:25",{"_index":290,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:31",{"_index":314,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:42",{"_index":300,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:45",{"_index":318,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:49",{"_index":320,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:59",{"_index":306,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/calander/calander.component.ts:62",{"_index":310,"title":{},"body":{"components/CalanderComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts",{"_index":1233,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/common/navigation/navigation.component.ts:10",{"_index":1237,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/common/navigation/navigation.component.ts:14",{"_index":1238,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/facade/creategroupfacade",{"_index":867,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["src/app/facade/creategroupfacade.ts",{"_index":708,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"coverage.html":{}}}],["src/app/facade/creategroupfacade.ts:17",{"_index":722,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:18",{"_index":734,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:19",{"_index":733,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:30",{"_index":717,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:47",{"_index":720,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/creategroupfacade.ts:58",{"_index":718,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts",{"_index":416,"title":{},"body":{"injectables/CalendarFacade.html":{},"coverage.html":{}}}],["src/app/facade/personalcalendarfacade.ts:18",{"_index":433,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:19",{"_index":432,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:20",{"_index":423,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:54",{"_index":430,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/personalcalendarfacade.ts:58",{"_index":427,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["src/app/facade/search",{"_index":661,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"coverage.html":{}}}],["src/app/facade/viewgroupfacade",{"_index":908,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["src/app/facade/viewgroupfacade.ts",{"_index":1620,"title":{},"body":{"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["src/app/facade/viewgroupfacade.ts:107",{"_index":1635,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:112",{"_index":1636,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:116",{"_index":1653,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:120",{"_index":1652,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:128",{"_index":1647,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:134",{"_index":1645,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:141",{"_index":1654,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:153",{"_index":1633,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:170",{"_index":1634,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:20",{"_index":1662,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:21",{"_index":1660,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:22",{"_index":1664,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:23",{"_index":1658,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:24",{"_index":1665,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:25",{"_index":1663,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:26",{"_index":1632,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:37",{"_index":1637,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:40",{"_index":1639,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:45",{"_index":1643,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:61",{"_index":1641,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:86",{"_index":1650,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/facade/viewgroupfacade.ts:98",{"_index":1656,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["src/app/group",{"_index":839,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/calander",{"_index":336,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/interfaces/clasification",{"_index":665,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/enums/calenderenum",{"_index":339,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/CalendarService.html":{},"injectables/GroupService.html":{}}}],["src/app/interfaces/enums/calenderenum.ts",{"_index":1797,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/enums/groupstatus.ts",{"_index":1856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/interfaces/event",{"_index":527,"title":{},"body":{"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/interfaces/eventpage",{"_index":834,"title":{},"body":{"interfaces/EventPageInterface.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/interfaces/group",{"_index":526,"title":{},"body":{"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/interfaces/page",{"_index":1307,"title":{},"body":{"interfaces/PageInterface.html":{},"coverage.html":{}}}],["src/app/interfaces/testdata.ts",{"_index":1800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/user",{"_index":234,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CalendarService.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"interfaces/UserInterface.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/login",{"_index":1190,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service",{"_index":817,"title":{},"body":{"components/EventComponentComponent.html":{},"components/NavigationComponent.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:10",{"_index":221,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:15",{"_index":227,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:25",{"_index":228,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:33",{"_index":222,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/authentication/authentication.service.ts:52",{"_index":225,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts",{"_index":478,"title":{},"body":{"injectables/CalendarService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:124",{"_index":512,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:13",{"_index":489,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:139",{"_index":510,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:150",{"_index":499,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:17",{"_index":503,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:37",{"_index":492,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:62",{"_index":506,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:79",{"_index":496,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/calendar.service.ts:83",{"_index":508,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts",{"_index":1035,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:114",{"_index":1061,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:129",{"_index":1063,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:16",{"_index":1044,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:160",{"_index":1055,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:169",{"_index":1065,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:186",{"_index":1048,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:20",{"_index":1052,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:225",{"_index":1046,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:44",{"_index":1050,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:77",{"_index":1059,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/group.service.ts:97",{"_index":1057,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts",{"_index":1265,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:13",{"_index":1276,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:32",{"_index":1273,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:48",{"_index":1271,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/notification.service.ts:8",{"_index":1269,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service",{"_index":818,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts",{"_index":1727,"title":{},"body":{"injectables/WatchlistService.html":{},"coverage.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:10",{"_index":1732,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:14",{"_index":1739,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:33",{"_index":1736,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:48",{"_index":1741,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:67",{"_index":1734,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/firebase/firestore/watchlist.service.ts:88",{"_index":1743,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service",{"_index":667,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts",{"_index":1516,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:118",{"_index":1532,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:15",{"_index":1525,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:24",{"_index":1535,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:29",{"_index":1527,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:53",{"_index":1528,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/network/ticketmaster/ticketmaster.service.ts:86",{"_index":1530,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["src/app/personal",{"_index":1313,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{},"coverage.html":{}}}],["src/app/search",{"_index":628,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["src/app/watchlist",{"_index":1724,"title":{},"body":{"components/WatchlistPageComponent.html":{},"coverage.html":{}}}],["src/environments",{"_index":1876,"title":{},"body":{"index.html":{}}}],["src/environments/env",{"_index":1537,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stadium",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":311,"title":{},"body":{"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"classes/NewCalendarEvent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start,enddate",{"_index":464,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["start2",{"_index":1807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start3",{"_index":1808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start:new",{"_index":1260,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["start:ngbdate",{"_index":458,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["start:start",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start2",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:start3",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:string",{"_index":1254,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["startdate",{"_index":777,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{},"miscellaneous/variables.html":{}}}],["startdate:new",{"_index":731,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["startdate?:date",{"_index":792,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["startdatetime:str}}).pipe",{"_index":1581,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["started",{"_index":1859,"title":{"index.html":{}},"body":{}}],["state",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.url",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":940,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["storagebucket",{"_index":1898,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["str",{"_index":1575,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["str.length",{"_index":1578,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["str.slice(0",{"_index":1577,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["string",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarService.html":{},"classes/EventClass.html":{},"interfaces/EventInterface.html":{},"components/GroupCreateComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"interfaces/IdName.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(evt",{"_index":743,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["subgenre",{"_index":694,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"injectables/SearchFacadeService.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"miscellaneous/enumerations.html":{}}}],["subgenre:idname",{"_index":697,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subgenres",{"_index":838,"title":{},"body":{"interfaces/GenreInterface.html":{}}}],["subgenres:idname",{"_index":704,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["subject",{"_index":440,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["subscribe",{"_index":675,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["subscribe((d:ngbdate)=>this.onclickdate(d",{"_index":357,"title":{},"body":{"components/CalanderComponent.html":{}}}],["success",{"_index":765,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"injectables/NotificationService.html":{},"components/PersonalCalenderPageComponent.html":{}}}],["successfully",{"_index":1284,"title":{},"body":{"injectables/NotificationService.html":{}}}],["successs",{"_index":1345,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["support",{"_index":1927,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1928,"title":{},"body":{"modules.html":{}}}],["swift",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap",{"_index":660,"title":{},"body":{"components/ClassificationComponentComponent.html":{},"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["switchmap((group:groupinterface)=>this.calsvc.getgroupcalendar(group).pipe",{"_index":1685,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["switchmap((grp:groupinterface",{"_index":1690,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["switchmap((user:userinterface)=>from(this.grpsvc.joingroup(id",{"_index":1708,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["switchmap((x:string",{"_index":673,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["switchmap(u=>this.grpsvc.getgroupbyid(group.id).pipe",{"_index":1689,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["table",{"_index":1816,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":335,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["take(1",{"_index":356,"title":{},"body":{"components/CalanderComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["taken",{"_index":768,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["tap",{"_index":1070,"title":{},"body":{"injectables/GroupService.html":{},"injectables/SearchFacadeService.html":{},"injectables/ViewGroupFacade.html":{}}}],["tap((grpcal:calanderevent",{"_index":1686,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["tap((x:boolean",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap((x:classificationinterface",{"_index":1417,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["technically",{"_index":1282,"title":{},"body":{"injectables/NotificationService.html":{}}}],["temp",{"_index":618,"title":{},"body":{"injectables/CalendarService.html":{}}}],["temp.unsubscribe",{"_index":620,"title":{},"body":{"injectables/CalendarService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["test",{"_index":1913,"title":{},"body":{"index.html":{}}}],["text",{"_index":379,"title":{},"body":{"components/CalanderComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.admingroups$.next(adm",{"_index":1680,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.auth.authstateready().then(_",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.displayname",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.email",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.currentuser.uid",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.logingoogle().then(_",{"_index":1196,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.logout().then(_",{"_index":1199,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.auth.onauthstatechanged((user",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.signout",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authapi.getcurrentuser().then((u",{"_index":1455,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.authapi.getcurrentuser().then((x:userinterface",{"_index":1412,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.authapi.isauthenticated().subscribe",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authapi.logout",{"_index":1240,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authsvc.getcurrentuser().then(u=>this.currentuser$.next(u",{"_index":1669,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.authsvc.getcurrentuser().then(user",{"_index":447,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.baseurl",{"_index":1541,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.cal.createevent(this.newevent).then(_",{"_index":1343,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.cal.deleteevent(e).then(_",{"_index":1341,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.calendar$.next(calevents",{"_index":466,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.addcalendarevent(calevent).then(_=>res",{"_index":474,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.convertreservedtobooked(this.group$.value",{"_index":1718,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.calsvc.getcalendar(user).subscribe",{"_index":449,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.calsvc.getgroupcalendar(group).pipe",{"_index":1139,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.calsvc.removecalendarevent(e",{"_index":469,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.cat$.next(x",{"_index":1418,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.chosegroup(group",{"_index":1028,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.chosen",{"_index":1022,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.cid$.next(n",{"_index":1425,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.next(n.filter((c)=>c.id!=ie.id",{"_index":1427,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value",{"_index":1421,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.genre).map((x)=>x.id",{"_index":1434,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.segment).map((x)=>x.id",{"_index":1432,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.cid$.value.filter((c)=>c.type==classtype.subgenre).map((x)=>x.id",{"_index":1436,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.clash(group.event,calevent",{"_index":599,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.classification.pipe",{"_index":671,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.clickeddate.next(date",{"_index":364,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.clipboard.copy(base_url",{"_index":1705,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.currentuser",{"_index":448,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/CreateGroupFacade.html":{}}}],["this.currentuser$.value",{"_index":1723,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.currentuser).then(_",{"_index":763,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.datecolor",{"_index":370,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.datecolor$.next(datecolor",{"_index":467,"title":{},"body":{"injectables/CalendarFacade.html":{}}}],["this.dbtocalendarevent(cal",{"_index":592,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.detail",{"_index":1259,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.details",{"_index":802,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.em.subscribe(()=>this.open",{"_index":872,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.end",{"_index":1258,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.enddate",{"_index":806,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.error$.emit(\"no",{"_index":1447,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.next(s",{"_index":1411,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.eventinput$.value",{"_index":1438,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.formbuilder.group",{"_index":723,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.group$.next(group",{"_index":1672,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value",{"_index":1713,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value.alluuid.length",{"_index":1715,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.group$.value.confirmed.length",{"_index":1714,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.groupbyid$.next(grp",{"_index":1712,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.groupclicked.emit(group",{"_index":976,"title":{},"body":{"components/GroupListComponent.html":{}}}],["this.grp.confirmgroupbooking().then(_",{"_index":926,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.confirmgroupevent().subscribe",{"_index":929,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.copyinvitelink",{"_index":919,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.creategroup().then(_",{"_index":873,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.grp.deletegroup().then(_",{"_index":914,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.get.getgroupbyid(id).subscribe({next:(x",{"_index":1021,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.getcurrentuser",{"_index":911,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.getgroup(this.group.id",{"_index":912,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.getgroupcalander(this.group",{"_index":913,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.getgroups",{"_index":1015,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.getgrpbyid(id).subscribe",{"_index":1027,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.joingroup(this.groupid).subscribe",{"_index":1016,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.grp.joingroup(this.grp.group$.value!.id).subscribe(_",{"_index":920,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.kickuser(user).then(_",{"_index":917,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grp.sendgroupconfirmation().then(_",{"_index":922,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["this.grpsvc.confirmgroupbooking(this.group$.value",{"_index":1720,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.confirmgroupevent(this.group$.value",{"_index":1722,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.creategroup(grp.name",{"_index":761,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.grpsvc.deletegroup(this.group$.value",{"_index":1706,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(g.id).pipe",{"_index":1684,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(id",{"_index":1710,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroupbyid(id).subscribe(group",{"_index":1671,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.getgroups(user).subscribe(grps",{"_index":1673,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.removefromgroup(this.group$.value",{"_index":1707,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.grpsvc.sendgroupconfirmation(this.group$.value!).then(_",{"_index":1716,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.http.get(this.baseurl+\"/\"+\"classifications.json",{"_index":1549,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.http.get(this.baseurl+\"/events.json",{"_index":1580,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.id",{"_index":795,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.images",{"_index":800,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.invaliddate(sd",{"_index":1597,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["this.isbetween(start.day",{"_index":1339,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.isbetween(start.month",{"_index":1336,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.isbetween(start.year",{"_index":1333,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["this.lastclickeddate.next(date",{"_index":363,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.lastclickeddate.pipe",{"_index":355,"title":{},"body":{"components/CalanderComponent.html":{}}}],["this.loadedevents$.next(n.events",{"_index":1453,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.loadedevents$.next(x.events",{"_index":1445,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.location",{"_index":798,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.membergroups$.next(nadm",{"_index":1681,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["this.modalservice.dismissall",{"_index":881,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.modalservice.open(this.content,{centered:true",{"_index":879,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.name",{"_index":797,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.navstuff?.select(2",{"_index":1024,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.newgroupform.patchvalue",{"_index":750,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.newgroupform.value",{"_index":753,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.noti.sendbookingconfirmation(group).then(_",{"_index":1161,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.noti.sendconfirmation(group",{"_index":1151,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.noti.sendconfirmationrequest(group",{"_index":1132,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.onaddclassification({id:e.id",{"_index":677,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.pageinfo$.next(p",{"_index":1444,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.platformlocation",{"_index":1542,"title":{},"body":{"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{}}}],["this.query.genreid",{"_index":1433,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.keyword",{"_index":1437,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.page",{"_index":1439,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.segmentid",{"_index":1431,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.query.subgenreid",{"_index":1435,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1017,"title":{},"body":{"components/GroupPageComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1198,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.router.navigate([\"login",{"_index":1241,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.navigatebyurl",{"_index":1197,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.searchevent",{"_index":1473,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.addclassification(ie",{"_index":686,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.addtowatchlist(event",{"_index":824,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.searchfacade.changepage(pgnum",{"_index":1478,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.error$.subscribe",{"_index":1475,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchfacade.getclassification(x",{"_index":674,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.getwatchlist",{"_index":1474,"title":{},"body":{"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["this.searchfacade.removeclassification(ie",{"_index":690,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["this.searchfacade.removefromwatchlist(event",{"_index":822,"title":{},"body":{"components/EventComponentComponent.html":{}}}],["this.searchfacade.searchevent",{"_index":1479,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.sendemail(emaillist,{subject",{"_index":1302,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.start",{"_index":1257,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["this.startdate",{"_index":804,"title":{},"body":{"classes/EventClass.html":{},"interfaces/EventInterface.html":{}}}],["this.tmapi.getclassification(kw).pipe",{"_index":1416,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.tmapi.geteventsquery(this.query).subscribe",{"_index":1450,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.tmapi.geteventsquery(this.query).subscribe((x",{"_index":1440,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.toastr.error(\"no",{"_index":1476,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.watchlist$.next(n",{"_index":1414,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.watchlist$.next(watchlist",{"_index":740,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.watchlistsvc.addwatchlistevent(u,event",{"_index":1458,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.watchlistsvc.getwatchlist(user).subscribe(watchlist",{"_index":739,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["this.watchlistsvc.getwatchlist(x).subscribe",{"_index":1413,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["this.watchlistsvc.removewatchlistevent(u,event",{"_index":1456,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["throw",{"_index":1610,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["throw(rej",{"_index":1777,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["throwerror",{"_index":1071,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{}}}],["throwerror(()=>\"user",{"_index":1141,"title":{},"body":{"injectables/GroupService.html":{}}}],["ticket",{"_index":1242,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NotificationService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ticketbuddy",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ticketmaster",{"_index":1877,"title":{},"body":{"index.html":{}}}],["ticketmasterapi",{"_index":1536,"title":{},"body":{"injectables/TicketmasterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ticketmasterservice",{"_index":666,"title":{"injectables/TicketmasterService.html":{}},"body":{"components/ClassificationComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{},"coverage.html":{}}}],["tickets",{"_index":1301,"title":{},"body":{"injectables/NotificationService.html":{}}}],["time",{"_index":452,"title":{},"body":{"injectables/CalendarFacade.html":{},"components/GroupDetailComponent.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/ViewGroupFacade.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["tmapi",{"_index":1367,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["to.length",{"_index":1281,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toastr",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/SearchPageComponent.html":{},"dependencies.html":{}}}],["toastr:toastrservice",{"_index":1472,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["toastrmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":1462,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["tocalendarevent",{"_index":1247,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["tocalendarevent(user",{"_index":1252,"title":{},"body":{"classes/NewCalendarEvent.html":{}}}],["today",{"_index":1574,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["today.toisostring",{"_index":1576,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["todo",{"_index":1346,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["top",{"_index":1224,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["top:0",{"_index":1208,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["toremove",{"_index":1123,"title":{},"body":{"injectables/GroupService.html":{}}}],["totalelements",{"_index":1309,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["totalelements:0",{"_index":1395,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["totalelements:number",{"_index":1311,"title":{},"body":{"interfaces/PageInterface.html":{}}}],["transform",{"_index":1165,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"pipes/InwatchlistPipe.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["transform(e",{"_index":1181,"title":{},"body":{"pipes/InwatchlistPipe.html":{}}}],["transform(members",{"_index":1166,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(members:userinterface",{"_index":1169,"title":{},"body":{"pipes/GroupmemberPipePipe.html":{}}}],["transform(value",{"_index":1172,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["transform(value:groupinterface",{"_index":1175,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["translate",{"_index":1210,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{}}}],["trigger",{"_index":1916,"title":{},"body":{"index.html":{}}}],["true",{"_index":1146,"title":{},"body":{"injectables/GroupService.html":{},"pipes/InwatchlistPipe.html":{}}}],["tslib",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CalanderComponent.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"components/ClassificationComponentComponent.html":{},"interfaces/ClassificationInterface.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/EventComponentComponent.html":{},"interfaces/EventInterface.html":{},"interfaces/EventPageInterface.html":{},"interfaces/GenreInterface.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/NotificationService.html":{},"interfaces/PageInterface.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"interfaces/SegmentInterface.html":{},"injectables/TicketmasterService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:calandertype.personal",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type:classtype",{"_index":700,"title":{},"body":{"interfaces/ClassificationInterface.html":{},"interfaces/GenreInterface.html":{},"interfaces/IdClassType.html":{},"interfaces/IdName.html":{},"interfaces/SegmentInterface.html":{}}}],["type:classtype.segment",{"_index":679,"title":{},"body":{"components/ClassificationComponentComponent.html":{}}}],["typeof",{"_index":534,"title":{},"body":{"injectables/CalendarService.html":{}}}],["uid",{"_index":545,"title":{},"body":{"injectables/CalendarService.html":{}}}],["uncomment",{"_index":1544,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["undefined",{"_index":324,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"injectables/TicketmasterService.html":{},"injectables/WatchlistService.html":{}}}],["under",{"_index":1875,"title":{},"body":{"index.html":{}}}],["up",{"_index":577,"title":{},"body":{"injectables/CalendarService.html":{},"index.html":{}}}],["update",{"_index":603,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/WatchlistService.html":{}}}],["update).then(_",{"_index":605,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["update[\"confirmed",{"_index":1130,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatecalendarevent",{"_index":486,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatecalendarevent(calendarevent",{"_index":511,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updated",{"_index":1157,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatedoc",{"_index":521,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/GroupService.html":{},"injectables/WatchlistService.html":{}}}],["updatedoc(caldoc",{"_index":604,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatedoc(grpdoc",{"_index":1119,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatedoc(watchdoc",{"_index":1773,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["updateeventinput",{"_index":1366,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateeventinput(s",{"_index":1385,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateeventinput(s:string",{"_index":1410,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["updateform",{"_index":711,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updateform(evt",{"_index":719,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updateform(evt:eventinterface",{"_index":741,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["updatepromise",{"_index":1147,"title":{},"body":{"injectables/GroupService.html":{}}}],["updatepromise.then(_",{"_index":1160,"title":{},"body":{"injectables/GroupService.html":{}}}],["ur@brother.com",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@father.com",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@mother.com",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ur@sister.com",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1923,"title":{},"body":{"index.html":{}}}],["user",{"_index":257,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{},"components/LoginPageComponent.html":{},"classes/NewCalendarEvent.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{}}}],["user.id",{"_index":1126,"title":{},"body":{"injectables/GroupService.html":{},"injectables/ViewGroupFacade.html":{}}}],["user1",{"_index":1809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user2",{"_index":1810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user3",{"_index":1811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user4",{"_index":1812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user:userinterface",{"_index":1116,"title":{},"body":{"injectables/GroupService.html":{},"pipes/GrouppipePipe.html":{}}}],["user:{name:\"john",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userinterface",{"_index":233,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/CalanderEvent.html":{},"interfaces/CalanderEventColor.html":{},"injectables/CalendarFacade.html":{},"injectables/CalendarService.html":{},"injectables/CreateGroupFacade.html":{},"components/GroupDetailComponent.html":{},"interfaces/GroupInterface.html":{},"components/GroupPageComponent.html":{},"injectables/GroupService.html":{},"pipes/GroupmemberPipePipe.html":{},"pipes/GrouppipePipe.html":{},"classes/NewCalendarEvent.html":{},"injectables/SearchFacadeService.html":{},"interfaces/UserInterface.html":{},"injectables/ViewGroupFacade.html":{},"injectables/WatchlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinterface|undefined",{"_index":1124,"title":{},"body":{"injectables/GroupService.html":{}}}],["username",{"_index":939,"title":{},"body":{"components/GroupDetailComponent.html":{}}}],["using",{"_index":1872,"title":{},"body":{"index.html":{}}}],["v",{"_index":1605,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["validators",{"_index":738,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["validators.required",{"_index":724,"title":{},"body":{"injectables/CreateGroupFacade.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"classes/EventClass.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{},"pipes/GrouppipePipe.html":{},"components/ListEventsComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.filter((e:groupinterface)=>e.admin.id!=user.id",{"_index":1179,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["value.filter((e:groupinterface)=>e.admin.id==user.id",{"_index":1178,"title":{},"body":{"pipes/GrouppipePipe.html":{}}}],["var",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CalanderComponent.html":{},"injectables/CalendarFacade.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/TicketmasterService.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{}}}],["variable",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1936,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1863,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["viewchild",{"_index":332,"title":{},"body":{"components/CalanderComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild(\"dp",{"_index":351,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild('content",{"_index":861,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewchild('dp",{"_index":326,"title":{},"body":{"components/CalanderComponent.html":{}}}],["viewchild(ngbnav",{"_index":865,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupPageComponent.html":{}}}],["viewgroupfacade",{"_index":896,"title":{"injectables/ViewGroupFacade.html":{}},"body":{"components/GroupDetailComponent.html":{},"components/GroupPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"coverage.html":{}}}],["void",{"_index":316,"title":{},"body":{"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"injectables/ViewGroupFacade.html":{},"components/WatchlistPageComponent.html":{}}}],["watchdoc",{"_index":1761,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"injectables/SearchFacadeService.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["watchlist$:behaviorsubject",{"_index":1405,"title":{},"body":{"injectables/SearchFacadeService.html":{}}}],["watchlist.push(this.dbwatchlisttoevent(event",{"_index":1766,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist/${user.id",{"_index":1762,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlist:eventinterface",{"_index":1183,"title":{},"body":{"pipes/InwatchlistPipe.html":{},"components/ListEventsComponent.html":{},"injectables/WatchlistService.html":{}}}],["watchlistevent",{"_index":1745,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.details",{"_index":1749,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.enddate",{"_index":1751,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.images",{"_index":1748,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.location",{"_index":1747,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.name",{"_index":1746,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistevent.startdate",{"_index":1750,"title":{},"body":{"injectables/WatchlistService.html":{}}}],["watchlistpagecomponent",{"_index":85,"title":{"components/WatchlistPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalanderComponent.html":{},"components/ClassificationComponentComponent.html":{},"components/EventComponentComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupDetailComponent.html":{},"components/GroupListComponent.html":{},"components/GroupPageComponent.html":{},"components/ListEventsComponent.html":{},"components/LoginPageComponent.html":{},"components/NavigationComponent.html":{},"components/PersonalCalenderPageComponent.html":{},"components/SearchPageComponent.html":{},"components/WatchlistPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["watchlistservice",{"_index":716,"title":{"injectables/WatchlistService.html":{}},"body":{"injectables/CreateGroupFacade.html":{},"components/EventComponentComponent.html":{},"injectables/SearchFacadeService.html":{},"injectables/WatchlistService.html":{},"coverage.html":{}}}],["watchlistsvc",{"_index":715,"title":{},"body":{"injectables/CreateGroupFacade.html":{},"injectables/SearchFacadeService.html":{}}}],["web",{"_index":1883,"title":{},"body":{"index.html":{}}}],["weight",{"_index":1501,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["where(\"alluuid\",\"array",{"_index":1102,"title":{},"body":{"injectables/GroupService.html":{}}}],["where(\"end",{"_index":584,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"grp.id",{"_index":616,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"start",{"_index":582,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"==\",user.id",{"_index":559,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"in",{"_index":614,"title":{},"body":{"injectables/CalendarService.html":{}}}],["where(\"uid\",\"in\",group.alluuid",{"_index":570,"title":{},"body":{"injectables/CalendarService.html":{}}}],["white",{"_index":400,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{}}}],["width",{"_index":390,"title":{},"body":{"components/CalanderComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["wrn",{"_index":1498,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["wtf",{"_index":444,"title":{},"body":{"injectables/CalendarFacade.html":{},"injectables/ViewGroupFacade.html":{}}}],["x",{"_index":1023,"title":{},"body":{"components/GroupPageComponent.html":{},"injectables/TicketmasterService.html":{}}}],["x._embedded",{"_index":1586,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x._embedded.classifications",{"_index":1557,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.end.getmonth()+1,x.end.getdate",{"_index":1332,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["x.events.map((e:any",{"_index":1588,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.page",{"_index":1442,"title":{},"body":{"injectables/SearchFacadeService.html":{},"injectables/TicketmasterService.html":{}}}],["x.page.totalelements>0",{"_index":1553,"title":{},"body":{"injectables/TicketmasterService.html":{}}}],["x.start.getmonth()+1,x.start.getdate",{"_index":1329,"title":{},"body":{"components/PersonalCalenderPageComponent.html":{}}}],["xxxxx",{"_index":1905,"title":{},"body":{"index.html":{}}}],["xxxxxxxxxxxx",{"_index":1901,"title":{},"body":{"index.html":{}}}],["y4q5tlebgb",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1648,"title":{},"body":{"injectables/ViewGroupFacade.html":{}}}],["z",{"_index":1212,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["zone.js",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ticketbuddy'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from './network/firebase/authentication/authentication.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ticketbuddy';\n  isAuth = false;\n  constructor(private authApi:AuthenticationService){\n    this.authApi.isAuthenticated().subscribe(\n      (n)=>this.isAuth = n\n    );\n  }\n}\n\n    \n\n    \n        \n\t\n \n\n\n  \n\t\n\t\t\n\t\n\n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t   \t\t\t\t  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nGrouppipePipe\n\nGrouppipePipe\n\nAppModule -->\n\nGrouppipePipe->AppModule\n\n\n\n\n\nInwatchlistPipe\n\nInwatchlistPipe\n\nAppModule -->\n\nInwatchlistPipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CalanderComponent\n                        \n                        \n                            ClassificationComponentComponent\n                        \n                        \n                            EventComponentComponent\n                        \n                        \n                            GroupCreateComponent\n                        \n                        \n                            GroupDetailComponent\n                        \n                        \n                            GroupListComponent\n                        \n                        \n                            GroupPageComponent\n                        \n                        \n                            GroupmemberPipePipe\n                        \n                        \n                            GrouppipePipe\n                        \n                        \n                            InwatchlistPipe\n                        \n                        \n                            ListEventsComponent\n                        \n                        \n                            LoginPageComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PersonalCalenderPageComponent\n                        \n                        \n                            SearchPageComponent\n                        \n                        \n                            WatchlistPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(firebaseConfig)).html\">provideFirebaseApp(() => initializeApp(firebaseConfig))\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ListEventsComponent } from './search-page/list-events/list-events.component';\nimport { EventComponentComponent } from './search-page/event-component/event-component.component';\n\n\nimport { ToastrModule } from 'ngx-toastr';\n\n// Firebase\nimport { firebaseConfig } from '../environments/env-prod'\nimport { provideFirebaseApp, initializeApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { getAuth, provideAuth } from '@angular/fire/auth';\n\nimport { provideAnimations, BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { GroupListComponent } from './group-page/group-list/group-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GrouppipePipe } from './group-page/grouppipe.pipe';\nimport { GroupDetailComponent } from './group-page/group-detail/group-detail.component';\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { CalanderComponent } from './common/calander/calander.component';\n\nimport { GroupmemberPipePipe } from './group-page/groupmember-pipe.pipe';\nimport { NavigationComponent } from './common/navigation/navigation.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { GroupCreateComponent } from './group-page/group-create/group-create.component';\nimport { ClassificationComponentComponent } from './search-page/classification-component/classification-component.component';\nimport { InwatchlistPipe } from './search-page/list-events/inwatchlist.pipe';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ListEventsComponent,\n        EventComponentComponent,\n        SearchPageComponent,\n        GroupPageComponent,\n        GroupListComponent,\n        GrouppipePipe,\n        GroupDetailComponent,\n        PersonalCalenderPageComponent,\n        WatchlistPageComponent,\n        GroupmemberPipePipe,\n        CalanderComponent,\n        NavigationComponent,\n        LoginPageComponent,\n        GroupCreateComponent,\n        ClassificationComponentComponent,\n        InwatchlistPipe\n    ],\n    providers: [provideAnimations()],\n    bootstrap: [AppComponent],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        NgbCarouselModule,\n        FormsModule,\n        ReactiveFormsModule,\n        // Firebase\n        provideFirebaseApp(() => initializeApp(firebaseConfig)),\n        provideAuth(()=>getAuth()),\n        provideFirestore(()=>getFirestore()),\n        \n        BrowserAnimationsModule,\n        ToastrModule.forRoot()\n\n    ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PersonalCalenderPageComponent } from './personal-calender-page/personal-calender-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { GroupPageComponent } from './group-page/group-page.component';\nimport { WatchlistPageComponent } from './watchlist-page/watchlist-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport {authGuard} from \"./guards/auth.guard\";\nconst routes: Routes = [\n  {path:\"personalcalender\", component:PersonalCalenderPageComponent, canActivate:[authGuard]},\n  {path:\"search\", component:SearchPageComponent, canActivate:[authGuard]},\n  {path:\"group\", component:GroupPageComponent, canActivate:[authGuard]},\n  {path:\"group/:id\", component:GroupPageComponent, canActivate:[authGuard]},//for joining via link\n  {path:\"watchlist\", component:WatchlistPageComponent, canActivate:[authGuard]},\n  {path:\"login\", component:LoginPageComponent},\n  {path:'', redirectTo:'/search', pathMatch:'full'}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                loginGoogle\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/authentication/authentication.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginGoogle\n                        \n                    \n                \n            \n            \n                \nloginGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/authentication/authentication.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Auth, GoogleAuthProvider} from '@angular/fire/auth';\nimport { signInWithPopup } from 'firebase/auth';\nimport { Observable } from 'rxjs';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  \n  constructor(private auth: Auth) { \n  \n  }\n  loginGoogle(): Promise {\n    return new Promise((res)=>{\n      let provider = new GoogleAuthProvider();\n      signInWithPopup(this.auth, provider).then((result)=>{\n        console.log(result);\n        res();\n      });\n    });\n  }\n\n  logOut(): Promise {\n    return new Promise((res)=>{\n      this.auth.signOut();\n      console.log(\"signout\")\n      res();\n    });\n  }\n\n  getCurrentUser():Promise{\n\n    return new Promise((res,rej)=>{\n      this.auth.authStateReady().then(_=>{\n        if (this.auth.currentUser === null) {\n          rej(\"eh buto login first lah cb\");\n          return;\n        }\n        let user =  {\n          id: this.auth.currentUser.uid,\n          name: this.auth.currentUser.displayName,\n          email: this.auth.currentUser.email\n        };\n        res(user);\n      })\n    })\n   \n  }\n\n  isAuthenticated(): Observable{\n    return new Observable(obs=>{\n      this.auth.onAuthStateChanged((user)=>{\n        obs.next(user!==null);\n      })\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalanderComponent.html":{"url":"components/CalanderComponent.html","title":"component - CalanderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalanderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/calander/calander.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calander\n            \n\n\n\n            \n                styleUrls\n                ./calander.component.css\n            \n\n\n\n            \n                templateUrl\n                ./calander.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                    \n                                    Private\n                                dp\n                            \n                            \n                                hoveredDate\n                            \n                            \n                                lastClickedDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToNgbDate\n                            \n                            \n                                    Private\n                                isBetween\n                            \n                            \n                                    Private\n                                isInside\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onClickDate\n                            \n                            \n                                setBGColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateColor\n                            \n                            \n                                events\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickedDate\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/calander/calander.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dateColor\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateTo\n                    \n                \n                \n                    \n                        Type :     NgbDate\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickedDate\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/calander/calander.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToNgbDate\n                        \n                    \n                \n            \n            \n                \nconvertToNgbDate(d: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBetween\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBetween(a: number, b: number, c: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                c\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInside\n                        \n                    \n                \n            \n            \n                \n                        \n                    isInside(start: NgbDate, date: NgbDate, end: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickDate\n                        \n                    \n                \n            \n            \n                \nonClickDate(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBGColor\n                        \n                    \n                \n            \n            \n                \nsetBGColor(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/calander/calander.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgbCalendar)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        dp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDatepicker | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dp')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoveredDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbDate | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastClickedDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/calander/calander.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild, inject} from '@angular/core';\nimport { NgbCalendar, NgbDate, NgbDatepicker } from '@ng-bootstrap/ng-bootstrap';\nimport { ReplaySubject, take } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor } from 'src/app/interfaces/enums/calenderenum';\n\n@Component({\n  selector: 'app-calander',\n  templateUrl: './calander.component.html',\n  styleUrls: ['./calander.component.css']\n})\nexport class CalanderComponent implements OnChanges{\n\t//list of events \n\t//then a map for date -> CalanderColor\n\t@Input() navigateTo!:NgbDate;\n\t@Input() dateColor!: [[NgbDate, NgbDate], CalanderColor][];\n\t@Input() events!:CalanderEvent[];//should have a listernere here so when events refresh will change the clickedDate output\n\t//return the listof event with regards to dates clicked \n\t@Output() clickedDate = new EventEmitter();\n\t@ViewChild(\"dp\") private dp:NgbDatepicker|undefined;\n\t\n\t//here the output will be changed if this calander is for \n\tlastClickedDate = new ReplaySubject();\n  \tcalendar = inject(NgbCalendar);\n\thoveredDate: NgbDate | null = null;\n\tconstructor(){\n\n\t}\n\t\n\t\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif(changes[\"events\"]){\n\t\t\tthis.lastClickedDate.pipe(\n\t\t\t\ttake(1),\n\t\t\t).subscribe((d:NgbDate)=>this.onClickDate(d));\n\t\t}\n\t\n\t}\n\n\t\n\t\n\tconvertToNgbDate(d:Date){\n\t\treturn new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n\t}\n\tonClickDate(date:NgbDate){\n\t\tthis.lastClickedDate.next(date);\n\t\tthis.clickedDate.next(date);\n\t}\n\tsetBGColor(date:NgbDate):string{\n\t\t//check amonst all keys in dateColor map\n\t\tfor( var e of this.dateColor){\n\t\t\tif(this.isInside(e[0][0],date,e[0][1])){\n\t\t\t\treturn e[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn \"\"\n\t}\n\tprivate isBetween(a:number, b:number, c:number){\n\t\treturn a\n    \n\n    \n        \n\n\n\n\n\t\n\t\t{{ date.day }}\n\t\n\n    \n\n    \n                \n                    ./calander.component.css\n                \n                .custom-day {\n    text-align: center;\n    padding: 0.185rem 0.25rem;\n    display: inline-block;\n    height: 2rem;\n    width: 2rem;\n}\n.custom-day.focused {\n    background-color: #e6e6e6;\n}\n.custom-day.range,\n.custom-day:hover {\n    background-color: rgb(2, 117, 216);\n    color: white;\n}\n.custom-day.faded {\n    background-color: rgba(2, 117, 216, 0.5);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ date.day }}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalanderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEvent.html":{"url":"interfaces/CalanderEvent.html","title":"interface - CalanderEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            detail\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         CalanderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n    groupId?: string,\n    groupName?: string\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalanderEventColor.html":{"url":"interfaces/CalanderEventColor.html","title":"interface - CalanderEventColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CalanderEventColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bgColor\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bgColor:         CalanderColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderColor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         CalanderEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CalanderEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CalanderColor, CalanderType } from \"../enums/calenderenum\";\nimport { UserInterface } from \"../user-interface\";\n\nexport interface CalanderEvent {\n    id?: string,\n    user: UserInterface,\n    start: Date,\n    end: Date,\n    detail: string,\n    type: CalanderType\n    groupId?: string,\n    groupName?: string\n}\n\nexport interface CalanderEventColor{\n    event:CalanderEvent,\n    bgColor:CalanderColor\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarFacade.html":{"url":"injectables/CalendarFacade.html","title":"injectable - CalendarFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/PersonalCalendarFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar$\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                dateColor$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                deleteEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, calSvc: CalendarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent(newCalEvent: NewCalendarEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newCalEvent\n                                            \n                                                            NewCalendarEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/PersonalCalendarFacade.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/PersonalCalendarFacade.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { NewCalendarEvent } from \"../class/NewCalendarEvent\"\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarFacade {\n\n    currentUser?: UserInterface;\n    calendar$: BehaviorSubject = new BehaviorSubject([]);\n    dateColor$: BehaviorSubject = new BehaviorSubject([]); //should be date range better // wtf does this mean\n\n    constructor(\n        private authSvc:AuthenticationService,\n        private calSvc: CalendarService\n    ) {\n        this.authSvc.getCurrentUser().then(user=>{\n            this.currentUser  = user;\n            this.calSvc.getCalendar(user).subscribe(\n            calEvents=>{\n                \n                calEvents.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n                    if(a.start {\n                        var start:NgbDate = new NgbDate(e.start.getFullYear() , e.start.getMonth()+1,e.start.getDate());\n                        var endDate:NgbDate = new NgbDate(e.end.getFullYear() , e.end.getMonth()+1,e.end.getDate());\n                        return [[start,endDate], CalanderTypeColor.get(e.type)||CalanderColor.Default]\n                    }\n                );\n                this.calendar$.next(calEvents);\n                this.dateColor$.next(dateColor);\n            });\n        });\n    }\n\n    deleteEvent(e:CalanderEvent): Promise{\n        return this.calSvc.removeCalendarEvent(e);\n    }\n\n    createEvent(newCalEvent: NewCalendarEvent): Promise{\n        return new Promise((res,rej)=>{\n            if(this.currentUser && newCalEvent.isValid()){\n                let calEvent = newCalEvent.toCalendarevent(this.currentUser);\n                this.calSvc.addCalendarEvent(calEvent).then(_=>res());\n            }\n            else {\n                rej(new Error(\"Invalid-Parameter\"));\n            }\n        })\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarService.html":{"url":"injectables/CalendarService.html","title":"injectable - CalendarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/calendar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCalendarEvent\n                            \n                            \n                                clash\n                            \n                            \n                                convertReservedToBooked\n                            \n                            \n                                    Private\n                                dbToCalendarEvent\n                            \n                            \n                                getCalendar\n                            \n                            \n                                getGroupCalendar\n                            \n                            \n                                removeCalendarEvent\n                            \n                            \n                                updateCalendarEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/calendar.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCalendarEvent\n                        \n                    \n                \n            \n            \n                \naddCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clash\n                        \n                    \n                \n            \n            \n                \nclash(event: EventInterface, calEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                calEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertReservedToBooked\n                        \n                    \n                \n            \n            \n                \nconvertReservedToBooked(grp: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                grp\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToCalendarEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToCalendarEvent(dbCalEnt: DocumentData | , user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbCalEnt\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderEvent\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalendar\n                        \n                    \n                \n            \n            \n                \ngetCalendar(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupCalendar\n                        \n                    \n                \n            \n            \n                \ngetGroupCalendar(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCalendarEvent\n                        \n                    \n                \n            \n            \n                \nremoveCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCalendarEvent\n                        \n                    \n                \n            \n            \n                \nupdateCalendarEvent(calendarEvent: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/calendar.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calendarEvent\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, and, deleteDoc, setDoc} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderType } from 'src/app/interfaces/enums/calenderenum';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n\n  constructor(private fs: Firestore) { }\n\n  private dbToCalendarEvent(dbCalEnt: DocumentData | DocumentData & {id: string;}, user: UserInterface): CalanderEvent \n  { \n\n    let calEvent: CalanderEvent = { \n      id: dbCalEnt[\"id\"],\n      user: user, \n      start: dbCalEnt[\"start\"].toDate(), \n      end: dbCalEnt[\"end\"].toDate(), \n      detail: dbCalEnt[\"detail\"], \n      type: CalanderType[dbCalEnt[\"type\"] as keyof typeof CalanderType] \n    } \n    \n    if (calEvent.type == CalanderType.ReservedForEvent || calEvent.type == CalanderType.BookedForEvent){\n      calEvent.groupId = dbCalEnt[\"grp\"][\"id\"];\n      calEvent.groupName = dbCalEnt[\"grp\"][\"name\"];\n    }\n\n    return calEvent;\n  } \n\n  addCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n\n    let calDoc: any = {\n      uid: calendarEvent.user.id,\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n\n    if (calendarEvent.type == CalanderType.ReservedForEvent || calendarEvent.type == CalanderType.BookedForEvent){\n      calDoc[\"grp\"] = {\n        id: calendarEvent.groupId,\n        name: calendarEvent.groupName\n      };\n    }\n\n    return new Promise(res=>{\n      addDoc(calCollection, calDoc).then((docRef: DocumentReference)=>{\n        res();\n      });\n    })\n  }\n\n  getCalendar(user: UserInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, where(\"uid\",\"==\",user.id));\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            result.push(this.dbToCalendarEvent(cal,user));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n\tclash(event: EventInterface, calEvent: CalanderEvent): boolean {\n\t\treturn calEvent.start = event.startDate!;\n\t}\n\n  getGroupCalendar(group: GroupInterface): Observable{\n    let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n    let q = query(calCollection, and(\n      where(\"uid\",\"in\",group.allUUID), //Limited to 29 members, can increase if we split the calls up.\n      // inequalities on multiple fields not allowed\n      // where(\"start\", \"=\", start)\n      // pulling calendar events that have yet to end\n      where(\"end\", \">\" , group.event.startDate)\n    ));\n\n    let allUserMap:any = {}\n    allUserMap[group.admin.id] = group.admin;\n    group.members.forEach(member => {\n      allUserMap[member.id] = member;\n    });\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: CalanderEvent[] = [];\n          data.forEach(cal=>{\n            let calEvent = this.dbToCalendarEvent(cal, allUserMap[cal[\"uid\"]]);\n\n            if(!group.event.endDate || !group.event.startDate)\n              return;\n\n            // Reserved/Booked for the group\n            if ((calEvent.type==CalanderType.ReservedForEvent || calEvent.type==CalanderType.BookedForEvent) && calEvent.groupId == group.id)\n              return;\n\n            // Clash with group date\n\t\t\t\t\t\tif (this.clash(group.event,calEvent))\n              result.push(calEvent);\n          });\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n  updateCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    let update = {\n      start: calendarEvent.start,\n      end: calendarEvent.end,\n      detail: calendarEvent.detail,\n      type: calendarEvent.type\n    }\n    return new Promise(res=>{\n      updateDoc(calDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n  \n  removeCalendarEvent(calendarEvent: CalanderEvent): Promise{\n    let calDoc = doc(this.fs, `calendar/${calendarEvent.id}`);\n    return new Promise(res=>{\n      deleteDoc(calDoc).then(birdbird=>{\n        res();\n      })\n    });\n  }\n\n\t// 1. Pull all \"Reserved\" calendar event of all who has confirmed\n\t// 2. Change type from \"ReservedForEvent\" to \"BookedForEvent\" & update detail\n  convertReservedToBooked(grp: GroupInterface): Promise{\n    return new Promise(res=>{\n      let calCollection: CollectionReference = collection(this.fs, \"calendar\");\n      let q = query(calCollection, and(\n        where(\"uid\",\"in\", grp.confirmed),\n        where(\"grp.id\", \"==\" , grp.id)\n      ));\n      let temp = collectionData(q, {idField: 'id'}).subscribe(data=>{\n\t\t\t\ttemp.unsubscribe();\n\t\t\t\tlet allProm: Promise[] = [];\n\t\t\t\tdata.forEach(cal=>{\n\t\t\t\t\tlet calDoc = doc(this.fs, `calendar/${cal.id}`);\n\t\t\t\t\tlet update = {\n\t\t\t\t\t\ttype: CalanderType.BookedForEvent,\n\t\t\t\t\t\tdetail: `Going to ${grp.event.name} with ${grp.name}.`\n\t\t\t\t\t}\n\t\t\t\t\tallProm.push(updateDoc(calDoc, update));\n\t\t\t\t});\n\t\t\t\tPromise.all(allProm).then(_=>{\n\t\t\t\t\treturn res();\n\t\t\t\t});\n\t\t\t});\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassificationComponentComponent.html":{"url":"components/ClassificationComponentComponent.html","title":"component - ClassificationComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassificationComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/classification-component/classification-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classification-component\n            \n\n\n\n            \n                styleUrls\n                ./classification-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./classification-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAddClassification\n                            \n                            \n                                onGenre\n                            \n                            \n                                onRemoveClassfication\n                            \n                            \n                                onSegment\n                            \n                            \n                                onSubGenre\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                classification\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/classification-component/classification-component.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        classification\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/classification-component/classification-component.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClassification\n                        \n                    \n                \n            \n            \n                \nonAddClassification(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGenre\n                        \n                    \n                \n            \n            \n                \nonGenre(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveClassfication\n                        \n                    \n                \n            \n            \n                \nonRemoveClassfication(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSegment\n                        \n                    \n                \n            \n            \n                \nonSegment(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubGenre\n                        \n                    \n                \n            \n            \n                \nonSubGenre(e: IdName)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/classification-component/classification-component.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdName\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/classification-component/classification-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { debounceTime, switchMap } from 'rxjs';\nimport { SearchFacadeService } from 'src/app/facade/search-facade.service';\nimport { ClassType, ClassificationInterface, IdClassType, IdName } from 'src/app/interfaces/clasification-interface';\nimport { TicketmasterService } from 'src/app/network/ticketmaster/ticketmaster.service';\n\n@Component({\n  selector: 'app-classification-component',\n  templateUrl: './classification-component.component.html',\n  styleUrls: ['./classification-component.component.css']\n})\nexport class ClassificationComponentComponent implements OnInit{\n  @Input() classification:EventEmitter = new EventEmitter();\n  \n  \n  constructor(public searchFacade:SearchFacadeService){\n    \n  }\n  ngOnInit(){\n    this.classification.pipe(\n      debounceTime(500),\n      switchMap((x:string)=> this.searchFacade.getClassification(x)\n      )\n    ).subscribe();\n  }\n  onSegment(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name, type:ClassType.Segment});\n  }\n  onGenre(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name,type:ClassType.Genre});\n  }\n  onSubGenre(e:IdName){\n    this.onAddClassification({id:e.id, name:e.name,type:ClassType.Subgenre});\n  }\n  onAddClassification(ie:IdClassType){\n    //code here\n    this.searchFacade.addClassification(ie);\n  }\n  onRemoveClassfication(ie:IdClassType){\n    console.log(\"REMOE INGHS\");\n    this.searchFacade.removeClassification(ie);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    {{c.name}}\n    {{c.name}}\n    {{c.name}}\n\n\n\n    {{c.name}}\n\n    \n\n    \n                \n                    ./classification-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{c.name}}    {{c.name}}    {{c.name}}    {{c.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClassificationComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassificationInterface.html":{"url":"interfaces/ClassificationInterface.html","title":"interface - ClassificationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassificationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            segment\n                                        \n                                \n                                \n                                        \n                                            subGenre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segment:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subGenre:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateGroupFacade.html":{"url":"injectables/CreateGroupFacade.html","title":"injectable - CreateGroupFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateGroupFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/CreateGroupFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                newGroupForm\n                            \n                            \n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroup\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, formBuilder: FormBuilder, grpSvc: GroupService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/CreateGroupFacade.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n            \n                \nupdateForm(evt: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/CreateGroupFacade.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newGroupForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n\t\tname:['', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['', Validators.required],\n\t\t\tdetails:new FormControl(\"\"),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/CreateGroupFacade.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { WatchlistService } from \"../network/firebase/firestore/watchlist.service\"\n\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { EventInterface } from \"../interfaces/event-interface\"\nimport { BehaviorSubject } from 'rxjs';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateGroupFacade {\n\n  \tcurrentUser?: UserInterface;\n    watchlist$: BehaviorSubject = new BehaviorSubject([]);\n\tnewGroupForm = this.formBuilder.group({\n\t\tname:['', Validators.required],\n\t\tevent:this.formBuilder.group({\n\t\t\tid:[\"\",Validators.required],\n\t\t\tlocation:this.formBuilder.array([]),\n\t\t\timages:this.formBuilder.array([]),\n\t\t\tname:['', Validators.required],\n\t\t\tdetails:new FormControl(\"\"),\n\t\t\tstartDate:new FormControl(\"\", Validators.required),\n\t\t\tendDate:new FormControl(\"\", Validators.required)\n\t\t})\n\t});\n\n    constructor(\n        private authSvc: AuthenticationService,\n\t\tprivate formBuilder: FormBuilder,\n        private grpSvc: GroupService,\n        private watchlistSvc: WatchlistService\n    ) {\n\n    this.authSvc.getCurrentUser().then(user=>{\n\t\tthis.currentUser = user;\n\t\tthis.watchlistSvc.getWatchlist(user).subscribe(watchlist=>{\n\t\t\tthis.watchlist$.next(watchlist);\n\t\t})\n    });\n  }\n\n\tupdateForm(evt:EventInterface){\n\t\tvar n:any = structuredClone(evt);\n\n\t\tif(evt.startDate) n.startDate = evt.startDate.toISOString().slice(0,-8);\n\t\tif(evt.endDate) n.startDate = evt.endDate.toISOString().slice(0,-8);\n\t\t\n\t\tthis.newGroupForm.patchValue({\n\t\t\tevent:n\n\t\t});\n\t}\n\n  \tcreateGroup(): Promise{\n\t\treturn new Promise((res,rej)=>{\n\t\t\tvar grp:any = this.newGroupForm.value;\n\t\t\tgrp.event.startDate = new Date(grp.event.startDate);\n\t\t\tgrp.event.endDate = new Date(grp.event.endDate);\n\t\t\tif(grp.event.startDate>=grp.event.endDate)\n\t\t\t\treturn rej(new Error(\"group-date-incompatible\"));\n\t\t\tif(this.currentUser) {\n\t\t\t\tthis.grpSvc.createGroup(grp.name, grp.event as EventInterface, this.currentUser).then(_=>{\n\t\t\t\t\treturn res(); // Group creation success;\n\t\t\t\t}).catch(err=>{\n\t\t\t\t\tif (err===\"group-name-taken\"){\n\t\t\t\t\t\treturn rej(new Error(\"group-name-taken\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\treturn rej(new Error(\"user-not-signed-in\"));\n\t\t\t}\n\t\t});\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventClass.html":{"url":"classes/EventClass.html","title":"class - EventClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                    Optional\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                images\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEquals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: EventInterface)\n                    \n                \n                        \n                            \n                                Defined in src/app/interfaces/event-interface.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        EventInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/interfaces/event-interface.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isEquals\n                        \n                    \n                \n            \n            \n                \nisEquals(other: EventClass)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interfaces/event-interface.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            EventClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\nexport class EventClass {\n    id: string=\"\";\n    name:string=\"\";\n    location:string[]=[];\n    images:string[]=[];\n    details:string=\"\";\n    startDate?:Date;\n    endDate?:Date;\n    constructor(e:EventInterface){\n        this.id = e.id;\n        this.name = e.id;\n        this.location = e.location;\n        this.images = e.images;\n        this.details = e.details;\n        this.startDate = e?.startDate;\n        this.endDate = e?.endDate;\n    }\n    isEquals(other:EventClass):boolean{\n        return other.id == this.id;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventComponentComponent.html":{"url":"components/EventComponentComponent.html","title":"component - EventComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/event-component/event-component.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-event-component\n            \n\n\n\n            \n                styleUrls\n                ./event-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./event-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                removeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                inWatchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/event-component/event-component.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inWatchlist\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/event-component/event-component.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEvent\n                        \n                    \n                \n            \n            \n                \naddEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEvent\n                        \n                    \n                \n            \n            \n                \nremoveEvent(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/event-component/event-component.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/event-component/event-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { EventInterface } from '../../interfaces/event-interface';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\nimport { WatchlistService } from 'src/app/network/firebase/firestore/watchlist.service';\nimport { SearchFacadeService } from 'src/app/facade/search-facade.service';\n\n@Component({\n  selector: 'app-event-component',\n  templateUrl: './event-component.component.html',\n  styleUrls: ['./event-component.component.css']\n})\nexport class EventComponentComponent {\n  @Input() inWatchlist!:boolean;\n  @Input() event!:EventInterface;\n  constructor(\n    public searchFacade:SearchFacadeService\n  ){}\n  \n  removeEvent(event:EventInterface){\n    this.searchFacade.removeFromWatchList(event);\n  }\n\n  addEvent(event:EventInterface){\n    this.searchFacade.addToWatchList(event);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            \n                \n                \n            \n        \n          \n                          \n    \n    \n      {{event.name}}\n      Location: {{event.location}}\n      {{event.details}}\n      \n      {{event.startDate | date:'medium'}} - {{event.endDate | date:'medium'}}\n      Add to watchlist\n    \n        Remove from watchlist\n      \n      \n  \n    \n\n    \n                \n                    ./event-component.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      {{event.name}}      Location: {{event.location}}      {{event.details}}            {{event.startDate | date:\\'medium\\'}} - {{event.endDate | date:\\'medium\\'}}      Add to watchlist            Remove from watchlist              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventInterface.html":{"url":"interfaces/EventInterface.html","title":"interface - EventInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/event-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            details\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventInterface {\n    id: string;\n    name:string;\n    location:string[];\n    images:string[];\n    details:string;\n    startDate?:Date;\n    endDate?:Date\n}\nexport class EventClass {\n    id: string=\"\";\n    name:string=\"\";\n    location:string[]=[];\n    images:string[]=[];\n    details:string=\"\";\n    startDate?:Date;\n    endDate?:Date;\n    constructor(e:EventInterface){\n        this.id = e.id;\n        this.name = e.id;\n        this.location = e.location;\n        this.images = e.images;\n        this.details = e.details;\n        this.startDate = e?.startDate;\n        this.endDate = e?.endDate;\n    }\n    isEquals(other:EventClass):boolean{\n        return other.id == this.id;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventPageInterface.html":{"url":"interfaces/EventPageInterface.html","title":"interface - EventPageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventPageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/eventpage-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            events\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events:         EventInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         PageInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { PageInterface } from \"./page-interface\";\n\nexport interface EventPageInterface {\n    page:PageInterface,\n    events:EventInterface[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenreInterface.html":{"url":"interfaces/GenreInterface.html","title":"interface - GenreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GenreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            subgenres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        subgenres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subgenres:         IdName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdName[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCreateComponent.html":{"url":"components/GroupCreateComponent.html","title":"component - GroupCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-create/group-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-create\n            \n\n\n\n            \n                styleUrls\n                ./group-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeResult\n                            \n                            \n                                    \n                                    Private\n                                content\n                            \n                            \n                                    Public\n                                grp\n                            \n                            \n                                    \n                                    Private\n                                navStuff\n                            \n                            \n                                    Optional\n                                selectedEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                em\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal, grp: CreateGroupFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-create/group-create.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        CreateGroupFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        em\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-create/group-create.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-create/group-create.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModal | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateGroupFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        navStuff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbNav | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgbNav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-create/group-create.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { CreateGroupFacade } from 'src/app/facade/CreateGroupFacade';\n\n\n@Component({\n  selector: 'app-group-create',\n  templateUrl: './group-create.component.html',\n  styleUrls: ['./group-create.component.css']\n})\nexport class GroupCreateComponent implements OnInit{\n\t@ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n\t@ViewChild('content') private content:NgbModal | undefined; \n\t\tcloseResult = '';\n\t@Input() em!:EventEmitter;\n\n\n\tselectedEvent?:EventInterface;\n\t\n\tconstructor(\n\t\tprivate modalService:NgbModal,\n\t\tpublic grp: CreateGroupFacade\n\t){}\n\t\n\tngOnInit(){\n\t\tthis.em.subscribe(()=>this.open());\n\t}\n\n\tcreateGroup(){\n\t\tthis.grp.createGroup().then(_=>{\n\t\t\tconsole.log(\"group create success\");\n\t\t}).catch(err=>{\n\t\t\tif (err.message === \"user-not-signed-in\")\n\t\t\t\tconsole.log(\"user not signed in\");\n\t\t\telse if (err.message === \"group-name-taken\")\n\t\t\t\tconsole.log(\"group name taken\");\n\t\t\telse if (err.message === \"group-date-incompatible\")\n\t\t\t\tconsole.log(\"group date invalid\");\n\t\t\telse\n\t\t\t\tconsole.log(err);\n\t\t})\n\t}\n\n\n\topen() {\n\t\tthis.modalService.open(this.content,{centered:true, fullscreen:true});\n\t}\n\n\tclose(){\n\t\tthis.modalService.dismissAll();\n\t}\n\t\n\t\n}\n\n    \n\n    \n        \n\t\n\t\tNew Group\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t  Group Name\n\t\t\t  \n\t\t\t\t\n\t\t\t  \n\t\t\t\n\t\t\t\n\t\t\t\tChooose Event\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{evt.name}}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t  \n\t\t\t  \n\t\t\t\n\t\t\t\tEvent Details\n\t\t\t\t\n\t\t\t\t\tEvent Name\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEvent details\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tStart Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t\tEnd Date\n\t\t\t\t\t\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t  \n\t\t\t\n\t\t  \n\t\n\t\n\t\tSave\n\t\n\n\n\n\n    \n\n    \n                \n                    ./group-create.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tNew Group\t\t\t\t\t\t\t\t\t\t\t\t  Group Name\t\t\t  \t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\tChooose Event\t\t\t\t\t\t\t\t\t\t\t\t\t{{evt.name}}\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t  \t\t\t\t\t\t\tEvent Details\t\t\t\t\t\t\t\t\tEvent Name\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEvent details\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tStart Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t  \t\t\t\t\tEnd Date\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t  \t\t\t\t\t  \t\t\t\tSave\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupDetailComponent.html":{"url":"components/GroupDetailComponent.html","title":"component - GroupDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-detail/group-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-detail\n            \n\n\n\n            \n                styleUrls\n                ./group-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                grp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGoing\n                            \n                            \n                                confirmGroupbooking\n                            \n                            \n                                copyInviteLink\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendGroupConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grp: ViewGroupFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        ViewGroupFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-detail/group-detail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGoing\n                        \n                    \n                \n            \n            \n                \nconfirmGoing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupbooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupbooking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyInviteLink\n                        \n                    \n                \n            \n            \n                \ncopyInviteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-detail/group-detail.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewGroupFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-detail/group-detail.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\nimport { ViewGroupFacade } from 'src/app/facade/ViewGroupFacade'\n\n\n@Component({\n  selector: 'app-group-detail',\n  templateUrl: './group-detail.component.html',\n  styleUrls: ['./group-detail.component.css']\n})\nexport class GroupDetailComponent implements OnInit {\n  @Input() group!:GroupInterface;\n\n  constructor(\n    public grp: ViewGroupFacade\n  ){}\n  \n  ngOnInit(){//given the events of that group\n    this.grp.getCurrentUser();\n    this.grp.getGroup(this.group.id);\n    this.grp.getGroupCalander(this.group);\n  }\n\n  deleteGroup(){\n    this.grp.deleteGroup().then(_=>{\n      console.log(\"group deleted\");\n    })\n  }\n  kickUser(user:UserInterface){\n    this.grp.kickUser(user).then(_=>{\n      console.log(\"group kick success\")\n    })\n  }\n  copyInviteLink() {\n    this.grp.copyInviteLink();\n  }\n  joinGroup(){\n    this.grp.joinGroup(this.grp.group$.value!.id).subscribe(_=>{\n      console.log(\"join grp success\");\n    })\n  }\n  sendGroupConfirmation(){\n    this.grp.sendGroupConfirmation().then(_=>{\n      console.log(\"group confirmation email success\");\n    })\n  }\n  confirmGroupbooking(){\n    //calaa fascase\n    this.grp.confirmGroupbooking().then(_=>{\n      console.log(\"group booking confirm success\")\n    })\n  }\n  confirmGoing(){\n    this.grp.confirmGroupEvent().subscribe({\n      next:()=>{\n        console.log(\"SJUCCES\");\n      },\n      error:(err)=>{\n        console.log(err);\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \n\n\n    {{grp.group$.value?.name}}\n\n\n    {{grp.group$.value?.event?.name}}\n\n\n    {{grp.group$.value?.event?.location}}\n\n\n    {{grp.group$.value?.event?.startDate|date:'medium'}} - {{grp.group$.value?.event?.endDate|date:'medium'}}\n\n\nInvite Link\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n                        Username\n                        Kick\n                        Status\n                        \n                    \n                \n                \n                    \n                        {{(grp.group$|async)!.admin.name}}\n                        \n                        {{(grp.group$.value)!.confirmed.includes(grp.group$.value!.admin.id)?\"Going\":\"Not Going\" }}\n                    \n                    \n                        {{ m.name }} \n                        Kick\n                        {{(grp.group$.value)!.confirmed.includes(m.id)?\"Going\":\"Not Going\" }}\n                          \n                \n            \n        \n        \n            Delete Group\n            Request confirmation\n            Confirm booking\n        \n    \n\n\n    \n        \n            \n                \n                    \n                        Username\n                        Status\n                        \n                    \n                \n                \n                    \n                        {{(grp.group$|async)!.admin.name}}\n                        \n                        {{(grp.group$.value)!.confirmed.includes(grp.group$.value!.admin.id)?\"Going\":\"Not Going\" }}\n                    \n                    \n                        {{ m.name }} \n                        \n                        {{(grp.group$.value)!.confirmed.includes(m.id)?\"Going\":\"Not Going\" }}\n                          \n                \n            \n        \n        \n            Confirm going\n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n    \n        \n            \n                Username\n                Event Detail\n                Start Time\n                End Time\n            \n        \n        \n           \n                {{e.user.name}}\n                {{e.detail}}\n                {{e.start|date:\"medium\"}}\n                {{e.end|date:\"medium\"}}     \n           \n           \n        \n    \n\n\n\n\n    JOIN GROUP\n\n\n\n\n    \n\n    \n                \n                    ./group-detail.component.css\n                \n                .invite{\n    cursor: pointer;\n    user-select: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{grp.group$.value?.name}}    {{grp.group$.value?.event?.name}}    {{grp.group$.value?.event?.location}}    {{grp.group$.value?.event?.startDate|date:\\'medium\\'}} - {{grp.group$.value?.event?.endDate|date:\\'medium\\'}}Invite Link                                                                                    Username                        Kick                        Status                                                                                                                        {{(grp.group$|async)!.admin.name}}                                                {{(grp.group$.value)!.confirmed.includes(grp.group$.value!.admin.id)?\"Going\":\"Not Going\" }}                                                                {{ m.name }}                         Kick                        {{(grp.group$.value)!.confirmed.includes(m.id)?\"Going\":\"Not Going\" }}                                                                                  Delete Group            Request confirmation            Confirm booking                                                                                                Username                        Status                                                                                                                        {{(grp.group$|async)!.admin.name}}                                                {{(grp.group$.value)!.confirmed.includes(grp.group$.value!.admin.id)?\"Going\":\"Not Going\" }}                                                                {{ m.name }}                                                 {{(grp.group$.value)!.confirmed.includes(m.id)?\"Going\":\"Not Going\" }}                                                                                  Confirm going                                                                    Username                Event Detail                Start Time                End Time                                                       {{e.user.name}}                {{e.detail}}                {{e.start|date:\"medium\"}}                {{e.end|date:\"medium\"}}                                           JOIN GROUP'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupInterface.html":{"url":"interfaces/GroupInterface.html","title":"interface - GroupInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GroupInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/group-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            allUUID\n                                        \n                                \n                                \n                                        \n                                            booked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         UserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allUUID:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        booked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        booked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         EventInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         UserInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventInterface } from \"./event-interface\";\nimport { UserInterface } from \"./user-interface\";\n\nexport interface GroupInterface {\n    id: string;\n    name:string;\n    event:EventInterface;\n    admin: UserInterface;\n    members:UserInterface[];\n    confirmed:string[];\n    booked: boolean;\n    allUUID: string[]; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupListComponent.html":{"url":"components/GroupListComponent.html","title":"component - GroupListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-list/group-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-list\n            \n\n\n\n            \n                styleUrls\n                ./group-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groups\n                    \n                \n                \n                    \n                        Type :         GroupInterface[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group-page/group-list/group-list.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-list/group-list.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-list/group-list.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Component({\n  selector: 'app-group-list',\n  templateUrl: './group-list.component.html',\n  styleUrls: ['./group-list.component.css']\n})\nexport class GroupListComponent {\n  @Input() groups!:GroupInterface[];\n  @Output() groupClicked = new EventEmitter();\n  onClick(group:GroupInterface){\n    this.groupClicked.emit(group);\n  }\n\n  ngOnInit(){\n    console.log(\"dasdas\")\n    console.log(this.groups);\n  }\n}\n\n    \n\n    \n        \n\n\n\t\n\t\t\n\n\t\t\tGroupName\n\t\t\tEventName\n\t\t\tmembers\n\t\t\n\t\n\t\n        \n\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{ g.name }}\n\t\t\t\t\n\t\t\t\t{{ g.event.name }}\n\t\t\t\t{{ g.members |groupmemberPipe}}\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./group-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\tGroupName\t\t\tEventName\t\t\tmembers\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t{{ g.name }}\t\t\t\t\t\t\t\t{{ g.event.name }}\t\t\t\t{{ g.members |groupmemberPipe}}\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupPageComponent.html":{"url":"components/GroupPageComponent.html","title":"component - GroupPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-page/group-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-page\n            \n\n\n\n            \n                styleUrls\n                ./group-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chosen\n                            \n                            \n                                    \n                                    Private\n                                content\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                groupID\n                            \n                            \n                                    Public\n                                grp\n                            \n                            \n                                    \n                                    Private\n                                navStuff\n                            \n                            \n                                openModalEmitter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                choseGroup\n                            \n                            \n                                convertToListofStrings\n                            \n                            \n                                joinGroup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(grp: ViewGroupFacade, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-page/group-page.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        grp\n                                                  \n                                                        \n                                                                        ViewGroupFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        choseGroup\n                        \n                    \n                \n            \n            \n                \nchoseGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToListofStrings\n                        \n                    \n                \n            \n            \n                \nconvertToListofStrings(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/group-page.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chosen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModal | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('content')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        grp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewGroupFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        navStuff\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbNav | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgbNav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/group-page/group-page.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, OnInit, ViewChild } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { NgbModal, NgbNav } from '@ng-bootstrap/ng-bootstrap';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { ViewGroupFacade } from '../facade/ViewGroupFacade';\n\n@Component({\n  selector: 'app-group-page',\n  templateUrl: './group-page.component.html',\n  styleUrls: ['./group-page.component.css']\n})\n\nexport class GroupPageComponent implements OnInit, AfterViewInit{\n  \n  @ViewChild(NgbNav) private navStuff: NgbNav | undefined;\n  @ViewChild('content') private content:NgbModal | undefined; \n  openModalEmitter = new EventEmitter();\n  chosen:GroupInterface | undefined;\n  currentUser?:UserInterface;\n  groupID:string =\"\";\n\n\n  constructor(\n    public grp: ViewGroupFacade,\n    private route:ActivatedRoute, \n  ){}\n\n  ngOnInit(): void {\n    this.grp.getGroups();\n  }\n  \n  joinGroup(){\n    this.grp.joinGroup(this.groupID).subscribe();\n  }\n  ngAfterViewInit(): void {\n    this.route.paramMap.subscribe(params=>{\n      var id:string|null;\n      id =  params.get('id');\n      //should get the info here from firebase\n      // if(id) this.grp.get.getGroupById(id).subscribe({next:(x)=>{\n      //   this.chosen = x;\n      //   this.navStuff?.select(2);\n      // },\n      // error:(e)=>{\n      //   console.log(\"ERROR HERE:\", e);\n      // }});\n\n      if (id){\n        this.grp.getGrpById(id).subscribe({\n          next: (group) => this.choseGroup(group),\n          error: (err) => console.log(err)\n        })\n      }\n    });\n\n\n  }\n  choseGroup(group:GroupInterface){\n    this.chosen = group;\n    this.navStuff?.select(2);\n  }\n\n  convertToListofStrings(members:UserInterface[]){\n    return members.map((x)=>x.name);\n  }\n  \n  \n}\n\n    \n\n    \n        \n\n\n  \n    Groups\n    \n      \n        \n          \n        \n        \n            JOIN\n        \n      \n      \n        Create Group\n      \n      Admin\n      \n      Member\n      \n    \n  \n  \n    {{chosen.name}}\n    \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./group-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Groups                                                        JOIN                            Create Group            Admin            Member                  {{chosen.name}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/group.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGroupBooking\n                            \n                            \n                                confirmGroupEvent\n                            \n                            \n                                createGroup\n                            \n                            \n                                    Private\n                                dbToGroupInterface\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                getGroupById\n                            \n                            \n                                getGroups\n                            \n                            \n                                joinGroup\n                            \n                            \n                                removeFromGroup\n                            \n                            \n                                sendGroupConfirmation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(calSvc: CalendarService, fs: Firestore, noti: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/group.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noti\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupBooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupBooking(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupEvent\n                        \n                    \n                \n            \n            \n                \nconfirmGroupEvent(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(name: string, event: EventInterface, admin: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                admin\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbToGroupInterface\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbToGroupInterface(dbGroup: DocumentData | )\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbGroup\n                                            \n                                                        DocumentData | \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupById\n                        \n                    \n                \n            \n            \n                \ngetGroupById(groupId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(groupId: string, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromGroup\n                        \n                    \n                \n            \n            \n                \nremoveFromGroup(group: GroupInterface, user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/group.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\n\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference, query, where, collectionData, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, deleteDoc, FirestoreError} from '@angular/fire/firestore';\nimport { Observable, forkJoin, from, iif, mergeMap, of, switchMap, take, tap, throwError } from 'rxjs';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\nimport { NotificationService } from './notification.service';\nimport { CalanderType } from 'src/app/interfaces/enums/calenderenum';\nimport { CalendarService } from './calendar.service';\nimport { CalanderEvent } from 'src/app/interfaces/calander-interface/CalanderEvent-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  constructor(private calSvc: CalendarService, private fs: Firestore, private noti: NotificationService) { }\n\n  private dbToGroupInterface(dbGroup: DocumentData | DocumentData & {id: string;}): GroupInterface\n  {\n    let grp: GroupInterface = {\n      id: dbGroup[\"id\"],\n      name: dbGroup[\"name\"],\n      event: {\n        id: dbGroup[\"event\"].id,\n        name: dbGroup[\"event\"].name,\n        startDate: dbGroup[\"event\"].start.toDate(),\n        endDate: dbGroup[\"event\"].end.toDate(),\n        details: dbGroup[\"details\"],\n        images: dbGroup[\"imageUrls\"],\n        location: dbGroup[\"locations\"]\n      },\n      admin: dbGroup[\"admin\"],\n      members: dbGroup[\"members\"],\n      confirmed: dbGroup[\"confirmed\"],\n      booked: dbGroup[\"booked\"],\n      allUUID: dbGroup[\"allUUID\"]\n    }\n\n    return grp;\n  }\n\n  createGroup(name: string, event: EventInterface, admin: UserInterface): Promise\n  {\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n\n    let groupDoc = {\n      name: name,\n      event: {\n        id: event.id,\n        name: event.name,\n        start: event.startDate,\n        end: event.endDate,\n        details: event.details,\n        imageUrls: event.images,\n        locations: event.location\n      },\n      admin: admin,\n      members: [],\n      confirmed: [],\n      booked: false,\n      allUUID: [admin.id]\n    }\n\n    return new Promise((res,rej)=>{\n      addDoc(grpCollection, groupDoc).then((docRef: DocumentReference)=>{\n        \n        res();\n      }).catch(err =>{\n        if (err.code === \"permission-denied\")\n          rej(\"group-name-taken\");\n      })\n    })\n  }\n\n  getGroups(user: UserInterface): Observable\n  {\n    let grpCollection: CollectionReference = collection(this.fs, \"group\");\n    let q = query(grpCollection, where(\"allUUID\",\"array-contains\",user.id));\n\n    return new Observable(obs=>{\n      collectionData(q, {idField: 'id'}).subscribe(\n        data=>{\n          let result: GroupInterface[] = [];\n          data.forEach(grp=>{\n            result.push(this.dbToGroupInterface(grp));\n          })\n          obs.next(result);\n        }\n      )\n    })\n  }\n\n\n\n  getGroupById(groupId: string): Observable\n  {\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n\n    return new Observable(obs=>{\n      docData(grpDoc, {idField: \"id\"}).subscribe(data=>{\n        if (data===undefined){\n          obs.error(\"Group not found\");\n          return;\n        } \n        obs.next(this.dbToGroupInterface(data));\n      });\n    });\n\n  }\n\n  // Currently does not check if user is already in group\n  joinGroup(groupId: string, user:UserInterface): Promise\n  {\n    let grpDoc = doc(this.fs, `group/${groupId}`);\n    let update = {\n      members: arrayUnion(user),\n      allUUID: arrayUnion(user.id),\n    }\n    \n    return new Promise(res=>{\n      updateDoc(grpDoc, update).then(_=>{\n        res();\n      })\n    })\n  }\n\n  removeFromGroup(group: GroupInterface, user: UserInterface): Promise\n  {\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    \n    // Protection against display name change\n    let toRemove: UserInterface|undefined = undefined;\n    group.members.forEach(member=>{\n      if (member.id === user.id){\n        toRemove = member;\n        return;\n      }\n    })\n\n    return new Promise(res=>{\n      // Check if user is a member in group\n      if (toRemove === undefined) res();\n      \n      let update: any = {\n        members: arrayRemove(toRemove),\n        allUUID: arrayRemove(user.id),\n      }\n\n      if (group.confirmed.includes(user.id))\n        update[\"confirmed\"] = arrayRemove(user.id);\n\n      updateDoc(grpDoc, update).then(_=>{\n        res();\n      })\n    })\n  }\n\n  deleteGroup(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    return new Promise(res=>{\n      deleteDoc(grpDoc).then(_=>{\n        res();\n      })\n    });\n  }\n\n  sendGroupConfirmation(group: GroupInterface): Promise{\n    return this.noti.sendConfirmationRequest(group);\n  }\n  /*\n  forkJoin(\n    {first:from(this.calSvc.addCalendarEvent({\n            user: user,\n            start: group.event.startDate!,\n            end: group.event.endDate!,\n            detail: `Reserved for ${group.name}.`,\n            type: CalanderType.ReservedForEvent,\n            groupId: group.id,\n            groupName: group.name\n          })).pipe(tap(()=>console.log(\"GOT NO ERROR\"))), second:from(updateDoc(grpDoc, update))})\n  \n  */\n//grpCal.map(e=>e.user.id).includes(user.id)\n  confirmGroupEvent(group: GroupInterface, user: UserInterface): Observable{\n    \n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {confirmed: arrayUnion(user.id)};\n    return this.calSvc.getGroupCalendar(group).pipe(\n      take(1),\n      mergeMap((grpCal:CalanderEvent[])=>\n        iif(\n          ()=> grpCal.map(e=>e.user.id).includes(user.id), \n          throwError(()=>\"User not available at that time\"), \n          of(1).pipe(switchMap(()=>forkJoin(\n            {first:from(this.calSvc.addCalendarEvent({\n              user: user,\n              start: group.event.startDate!,\n              end: group.event.endDate!,\n              detail: `Reserved for ${group.name}.`,\n              type: CalanderType.ReservedForEvent,\n              groupId: group.id,\n              groupName: group.name\n            })), second:from(updateDoc(grpDoc, update))}\n\n          ).pipe(switchMap(()=>of(void 0))))\n          \n          )\n          ,\n        )\n      )\n    );\n\n\n    // Check if can confirm\n\n    // Update user calendar\n\n    // Update group\n\n\n  }\n\n  confirmGroupBooking(group: GroupInterface): Promise{\n    let grpDoc = doc(this.fs, `group/${group.id}`);\n    let update = {booked: true};\n\n    return new Promise(res=>{\n\n      let updatePromise = updateDoc(grpDoc, update);\n\n      // Do both at same time\n      // let notiPromise = this.noti.sendConfirmation(group);\n      // Promise.all([updatePromise, notiPromise]).then(_=>{\n      //   res();\n      // })\n\n      // Ensure database is properly updated, then send notification\n      updatePromise.then(_=>{\n        this.noti.sendBookingConfirmation(group).then(_=>{\n          res();\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupmemberPipePipe.html":{"url":"pipes/GroupmemberPipePipe.html","title":"pipe - GroupmemberPipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupmemberPipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/groupmember-pipe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        groupmemberPipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(members: UserInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/groupmember-pipe.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                            UserInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     String[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Pipe({\n  name: 'groupmemberPipe'\n})\nexport class GroupmemberPipePipe implements PipeTransform {\n\n  transform(members:UserInterface[]): String[] {\n    return members.map((x)=>x.name);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GrouppipePipe.html":{"url":"pipes/GrouppipePipe.html","title":"pipe - GrouppipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GrouppipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group-page/grouppipe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        grouppipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: GroupInterface[], user: UserInterface, isAdmin: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/group-page/grouppipe.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            GroupInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isAdmin\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GroupInterface[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { GroupInterface } from '../interfaces/group-interface';\nimport { UserInterface } from '../interfaces/user-interface';\n\n@Pipe({\n  name: 'grouppipe'\n})\nexport class GrouppipePipe implements PipeTransform {\n  transform(value:GroupInterface[], user:UserInterface, isAdmin:boolean): GroupInterface[]{\n    if(isAdmin )return value.filter((e:GroupInterface)=>e.admin.id==user.id);\n    return  value.filter((e:GroupInterface)=>e.admin.id!=user.id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdClassType.html":{"url":"interfaces/IdClassType.html","title":"interface - IdClassType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdClassType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ClassType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClassType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdName.html":{"url":"interfaces/IdName.html","title":"interface - IdName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IdName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/InwatchlistPipe.html":{"url":"pipes/InwatchlistPipe.html","title":"pipe - InwatchlistPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  InwatchlistPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search-page/list-events/inwatchlist.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        inwatchlist\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(e: EventInterface, watchlist: EventInterface[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/list-events/inwatchlist.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                watchlist\n                                            \n                                                            EventInterface[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\n\n@Pipe({\n  name: 'inwatchlist'\n})\nexport class InwatchlistPipe implements PipeTransform {\n\n  transform(e: EventInterface, watchlist:EventInterface[]): boolean {\n    for( var i of watchlist){\n      if(i.id == e.id) return true;\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListEventsComponent.html":{"url":"components/ListEventsComponent.html","title":"component - ListEventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListEventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/list-events/list-events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-events\n            \n\n\n\n            \n                styleUrls\n                ./list-events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                watchlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        events\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        watchlist\n                    \n                \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/search-page/list-events/list-events.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component ,Input } from '@angular/core';\nimport {EventInterface} from '../../interfaces/event-interface';\n@Component({\n  selector: 'app-list-events',\n  templateUrl: './list-events.component.html',\n  styleUrls: ['./list-events.component.css']\n})\nexport class ListEventsComponent {\n  @Input() events:EventInterface[]=[];\n  @Input() watchlist:EventInterface[] = [];\n  \n}\n\n    \n\n    \n        \n      \n          \n                  \n                    \n          \n      \n\n    \n\n    \n                \n                    ./list-events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListEventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n\n\n            \n                styleUrls\n                ./login-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                googleSignIn\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthenticationService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/login-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        googleSignIn\n                        \n                    \n                \n            \n            \n                \ngoogleSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  constructor(\n    private auth: AuthenticationService,\n    private router:Router,\n    private route:ActivatedRoute\n  ) {}\n  \n  googleSignIn(){\n    this.auth.loginGoogle().then(_=>{\n      this.router.navigateByUrl( this.route.snapshot.queryParams['returnUrl'] || '/');\n    })\n  }\n\n  logOut(){\n    this.auth.logOut().then(_=>{\n      console.log(\"logout\");\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    Sign in with Google\n\n    \n\n    \n                \n                    ./login-page.component.css\n                \n                .bgImg, .bgImgStrip{\n    height:80vh;\n    position: absolute;\n    top:0;\n}\n\n.bgImg {\n    left:50%;\n    transform: translate(-50%);\n    z-index: -1;\n}\n\n.bgImgStrip {\n    z-index: -2;\n    width: 50vw;\n}\n\n.bgLeft {\n    left:0;\n}\n\n.bgRight {\n    right:0;\n}\n\n.loginBtn{\n    background-color: #2A2568;\n    color: white;\n    position: absolute;\n    padding: 1em;\n    border-radius: 2px;\n    top: 80vh;\n    left: 50%;\n    transform: translate(-50%);\n    cursor: pointer;\n    user-select: none;\n}\n\n.loginBtn:active {\n    top: calc(80vh + 5px);\n    left: calc(50% + 5px);\n}\n\n.googleImg {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Sign in with Google'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/navigation/navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/navigation/navigation.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/navigation/navigation.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/network/firebase/authentication/authentication.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n  constructor(private authApi:AuthenticationService,private router:Router){\n\n  }\n  logout(){\n    this.authApi.logOut();\n    this.router.navigate([\"login\"]);\n  }\n}\n\n    \n\n    \n        \n    Ticket Buddy\n    \n      \n    \n  \n    \n      \n        \n          Search (current)\n        \n        \n          Groups\n        \n        \n            Personal Calendar\n        \n        \n            Watchlist\n        \n        \n        \n      \n      Logout\n    \n  \n    \n\n    \n                \n                    ./navigation.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Ticket Buddy                                            Search (current)                          Groups                            Personal Calendar                            Watchlist                                    Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewCalendarEvent.html":{"url":"classes/NewCalendarEvent.html","title":"class - NewCalendarEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewCalendarEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/class/NewCalendarEvent.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detail\n                            \n                            \n                                end\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                            \n                                toCalendarevent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/class/NewCalendarEvent.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        detail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/class/NewCalendarEvent.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/class/NewCalendarEvent.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCalendarevent\n                        \n                    \n                \n            \n            \n                \ntoCalendarevent(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/class/NewCalendarEvent.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderEvent\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\nimport { CalanderType } from '../interfaces/enums/calenderenum';\nimport { UserInterface } from '../interfaces/user-interface';\n\nexport class NewCalendarEvent{\n    start:string;\n    end:string;\n    detail:string;\n\n    constructor(){\n        this.start = \"\";\n        this.end = \"\";\n        this.detail = \"\";\n    }\n\n    isValid() {\n        return this.start && this.end && this.detail;\n    }\n\n    toCalendarevent(user: UserInterface): CalanderEvent {\n        return {\n            user: user, \n            start:new Date(this.start),\n            end:new Date(this.end),\n            detail: this.detail,\n            type: CalanderType.Personal\n          };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendBookingConfirmation\n                            \n                            \n                                sendConfirmationRequest\n                            \n                            \n                                    Private\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/notification.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendBookingConfirmation\n                        \n                    \n                \n            \n            \n                \nsendBookingConfirmation(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendConfirmationRequest\n                        \n                    \n                \n            \n            \n                \nsendConfirmationRequest(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(to: string[], message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/notification.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DocumentReference, Firestore, collection, addDoc, CollectionReference} from '@angular/fire/firestore';\nimport { GroupInterface } from 'src/app/interfaces/group-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private fs: Firestore) { }\n\n\n  private sendEmail(to: string[], message:any): Promise{\n    let mailCol: CollectionReference = collection(this.fs, \"mail\");\n    let mailDoc = {\n      to: to,\n      message: message\n    }\n    return new Promise(res=>{\n      if (to.length{\n        // technically this is not success yet\n        // this means \"request to send email has been successfully sent\"\n        res();\n      });\n    })\n  }\n\n  sendConfirmationRequest(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      if (!group.confirmed.includes(member.id))\n        emailList.push(member.email);\n    });\n\n    let content = `\n    Hello! ${group.admin.name} is asking for your confirmation to go to ${group.event.name||'the concert'} with ${group.name} on ${group.event.startDate!.toDateString()}.\n    Please click here to confirm your availability before ${group.admin.name} books the tickets!\n    -Ticket Buddy\n    `\n\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Confirmation`, html: content})\n  }\n\n  sendBookingConfirmation(group: GroupInterface): Promise{\n    let emailList: string[] = [];\n    group.members.forEach(member=>{\n      if (group.confirmed.includes(member.id))\n        emailList.push(member.email);\n    });\n\n    let content = `\n    Booking confirmed for ${group.event.name||'the concert'}!\n    Congratulations! ${group.name} has booked the tickets for ${group.event.name||'the concert'}.\n    Contact ${group.admin.name} for details regarding the booking!\n    - Ticket Buddy\n    `\n\n    return this.sendEmail(emailList,{subject: `${group.event.name||'Concert'} Booking Confirmed!`, html: content})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageInterface.html":{"url":"interfaces/PageInterface.html","title":"interface - PageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/page-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            totalElements\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PageInterface {\n    size:number;\n    totalElements:number;\n    number:number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalCalenderPageComponent.html":{"url":"components/PersonalCalenderPageComponent.html","title":"component - PersonalCalenderPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonalCalenderPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/personal-calender-page/personal-calender-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personal-calender-page\n            \n\n\n\n            \n                styleUrls\n                ./personal-calender-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./personal-calender-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cal\n                            \n                            \n                                calendarOnDisplay\n                            \n                            \n                                newEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEvent\n                            \n                            \n                                dateClicked\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                isBetween\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cal: CalendarFacade)\n                    \n                \n                        \n                            \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cal\n                                                  \n                                                        \n                                                                        CalendarFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEvent\n                        \n                    \n                \n            \n            \n                \ncreateEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateClicked\n                        \n                    \n                \n            \n            \n                \ndateClicked(date: NgbDate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEvent\n                        \n                    \n                \n            \n            \n                \ndeleteEvent(e: CalanderEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            CalanderEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBetween\n                        \n                    \n                \n            \n            \n                \nisBetween(a: number, b: number, c: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                c\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/personal-calender-page/personal-calender-page.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalendarFacade\n\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarOnDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewCalendarEvent\n\n                    \n                \n                \n                    \n                        Default value : new NewCalendarEvent()\n                    \n                \n                    \n                        \n                                Defined in src/app/personal-calender-page/personal-calender-page.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { CalanderEvent } from '../interfaces/calander-interface/CalanderEvent-interface';\n\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarFacade } from '../facade/PersonalCalendarFacade';\nimport { NewCalendarEvent } from '../class/NewCalendarEvent';\n\n\n@Component({\n  selector: 'app-personal-calender-page',\n  templateUrl: './personal-calender-page.component.html',\n  styleUrls: ['./personal-calender-page.component.css'],\n\n})\nexport class PersonalCalenderPageComponent implements OnInit{\n\n  calendarOnDisplay: CalanderEvent[] = [];\n\n  newEvent: NewCalendarEvent = new NewCalendarEvent();\n  \n  constructor(\n    public cal: CalendarFacade\n  ){}\n  \n  ngOnInit(): void {\n  \n  }\n  \n  isBetween(a:number, b:number, c:number):boolean{\n\t\treturn a{\n      var start:NgbDate = new NgbDate(x.start.getFullYear() , x.start.getMonth()+1,x.start.getDate());\n      var end:NgbDate = new NgbDate(x.end.getFullYear() , x.end.getMonth()+1,x.end.getDate());\n      return this.isBetween(start.year, date.year, end.year) && \n        this.isBetween(start.month, date.month, end.month) && \n        this.isBetween(start.day, date.day, end.day)\n    });\n  }\n\n  deleteEvent(e: CalanderEvent){\n    this.cal.deleteEvent(e).then(_=>{\n      console.log(\"delete event success\");\n    })\n  }\n\n  createEvent(){\n    this.cal.createEvent(this.newEvent).then(_=>{\n      console.log(\"create event successs\");\n    }).catch(err=>{\n      if (err.message === \"Invalid-Parameter\"){\n        // TODO: Handle Error\n        console.log(\"invalid parameter\")\n      }\n    })\n  }\n}\n\n  \n\n    \n\n    \n        \n\n    \n        \n    \n\n\n    \n        \n            \n                Event Detail\n                Start Time\n                End Time\n                Action\n                Delete\n            \n        \n        \n           \n                {{e.detail}}\n                {{e.start}}\n                {{e.end}}\n                Update\n                Delete\n                \n           \n           \n            \n            \n            \n            Add\n            \n           \n        \n    \n\n    \n\n    \n                \n                    ./personal-calender-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Event Detail                Start Time                End Time                Action                Delete                                                       {{e.detail}}                {{e.start}}                {{e.end}}                Update                Delete                                                                                      Add                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalCalenderPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFacadeService.html":{"url":"injectables/SearchFacadeService.html","title":"injectable - SearchFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/search-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cat$\n                            \n                            \n                                    Public\n                                cid$\n                            \n                            \n                                    Public\n                                error$\n                            \n                            \n                                    Public\n                                eventInput$\n                            \n                            \n                                    Public\n                                loadedEvents$\n                            \n                            \n                                    Public\n                                pageInfo$\n                            \n                            \n                                    Private\n                                query\n                            \n                            \n                                    Public\n                                watchlist$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClassification\n                            \n                            \n                                addToWatchList\n                            \n                            \n                                changePage\n                            \n                            \n                                getClassification\n                            \n                            \n                                getWatchList\n                            \n                            \n                                removeClassification\n                            \n                            \n                                removeFromWatchList\n                            \n                            \n                                searchEvent\n                            \n                            \n                                updateEventInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authApi: AuthenticationService, tmApi: TicketmasterService, watchlistSvc: WatchlistService)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/search-facade.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authApi\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tmApi\n                                                  \n                                                        \n                                                                        TicketmasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        watchlistSvc\n                                                  \n                                                        \n                                                                        WatchlistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClassification\n                        \n                    \n                \n            \n            \n                \naddClassification(e: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToWatchList\n                        \n                    \n                \n            \n            \n                \naddToWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchList\n                        \n                    \n                \n            \n            \n                \ngetWatchList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClassification\n                        \n                    \n                \n            \n            \n                \nremoveClassification(ie: IdClassType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ie\n                                            \n                                                            IdClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromWatchList\n                        \n                    \n                \n            \n            \n                \nremoveFromWatchList(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEventInput\n                        \n                    \n                \n            \n            \n                \nupdateEventInput(s: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/search-facade.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                s\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cat$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({segment:[], genre:[], subGenre:[]})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cid$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventInput$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedEvents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({size:20, totalElements:0, number:0})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        watchlist$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/search-facade.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { EventInterface } from '../interfaces/event-interface';\n\nimport { ClassType, ClassificationInterface, IdClassType } from '../interfaces/clasification-interface';\nimport { AuthenticationService } from '../network/firebase/authentication/authentication.service';\nimport { TicketmasterService } from '../network/ticketmaster/ticketmaster.service';\nimport { WatchlistService } from '../network/firebase/firestore/watchlist.service';\nimport { PageInterface } from '../interfaces/page-interface';\nimport { UserInterface } from '../interfaces/user-interface';\nimport { BehaviorSubject, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchFacadeService {\n  private query:any = {};\n  \n  public eventInput$:BehaviorSubject = new BehaviorSubject(\"\");\n  public loadedEvents$:BehaviorSubject = new BehaviorSubject([]);\n  public watchlist$:BehaviorSubject = new BehaviorSubject([]);\n  public cid$:BehaviorSubject = new BehaviorSubject([]); \n  public error$:EventEmitter = new EventEmitter();\n  public cat$:BehaviorSubject = new BehaviorSubject({segment:[], genre:[], subGenre:[]});\n  public pageInfo$:BehaviorSubject = new BehaviorSubject({size:20, totalElements:0, number:0});\n  \n  constructor( private authApi:AuthenticationService,\n    private tmApi: TicketmasterService,\n    private watchlistSvc: WatchlistService) {\n  }\n  updateEventInput(s:string){\n    this.eventInput$.next(s);\n  }\n  getWatchList(){\n    this.authApi.getCurrentUser().then((x:UserInterface)=>{\n      this.watchlistSvc.getWatchlist(x).subscribe(\n        (n)=> this.watchlist$.next(n)\n      )\n    });\n  }\n  getClassification(kw:string){\n    return this.tmApi.getClassification(kw).pipe(\n      tap((x:ClassificationInterface)=>{\n        this.cat$.next(x);\n      })\n    );\n  }\n  addClassification(e:IdClassType){\n    var n:IdClassType[] = this.cid$.value;\n    for(var i of n){\n      if(i.id == e.id)return;\n    }\n    n.push(e);\n    this.cid$.next(n);\n  }\n  removeClassification(ie:IdClassType){\n    var n:IdClassType[] = this.cid$.value;\n    this.cid$.next(n.filter((c)=>c.id!=ie.id));\n      \n  }\n  searchEvent(){//this one got the queries\n    this.query.segmentId = this.cid$.value.filter((c)=>c.type==ClassType.Segment).map((x)=>x.id);\n    this.query.genreId = this.cid$.value.filter((c)=>c.type==ClassType.Genre).map((x)=>x.id);\n    this.query.subGenreId = this.cid$.value.filter((c)=>c.type==ClassType.Subgenre).map((x)=>x.id);\n    this.query.keyword = this.eventInput$.value;\n    this.query.page = 0;\n    \n    this.tmApi.getEventsQuery(this.query).subscribe((x)=>{\n      \n      var p:PageInterface = x.page;\n      p.number +=1;\n      this.pageInfo$.next(p);\n      this.loadedEvents$.next(x.events); \n      if(x.events.length == 0){\n        this.error$.emit(\"No events fit that query\");\n      }\n    });\n  }\n  changePage(pgNum:number){\n    this.query.page = pgNum-1;\n    this.tmApi.getEventsQuery(this.query).subscribe({\n      next:(n)=>{\n        var p:PageInterface = n.page;\n        p.number = pgNum;\n        this.pageInfo$.next(p);\n        this.loadedEvents$.next(n.events);   \n      }\n    });\n  }\n  removeFromWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.removeWatchlistEvent(u,event);\n    });\n  }\n  addToWatchList(event:EventInterface){\n    this.authApi.getCurrentUser().then((u)=>{\n      this.watchlistSvc.addWatchlistEvent(u,event);\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchPageComponent.html":{"url":"components/SearchPageComponent.html","title":"component - SearchPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search-page/search-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-page\n            \n\n\n\n            \n                styleUrls\n                ./search-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classificationEmitter\n                            \n                            \n                                classInput\n                            \n                            \n                                eventInput\n                            \n                            \n                                eventInputEmitter\n                            \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search-page/search-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(pgNum: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pgNum\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchEvent\n                        \n                    \n                \n            \n            \n                \nsearchEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/search-page/search-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classificationEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventInputEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/search-page/search-page.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { SearchFacadeService } from '../facade/search-facade.service';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent {\n  classInput:string = \"\";\n  eventInput:string = \"\";\n  \n  classificationEmitter:EventEmitter = new EventEmitter();\n  eventInputEmitter:EventEmitter = new EventEmitter();\n  constructor(\n    public searchFacade:SearchFacadeService,\n    private toastr:ToastrService\n  ){\n\n  }\n  ngOnInit(){\n    \n    this.searchEvent();  \n    this.searchFacade.getWatchList();\n    this.searchFacade.error$.subscribe(\n      (n)=>{\n        this.toastr.error(\"No events fit this query\",\"Error\");\n      }\n    );\n  }\n  \n  changePage(pgNum:number){\n    this.searchFacade.changePage(pgNum);\n  }\n  searchEvent(){//this one got the queries\n    this.searchFacade.searchEvent();\n  }\n  \n\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    Search\n                \n                \n            \n        \n    \n\n\n\n\n\n\n   \n 0\">\n    \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./search-page.component.css\n                \n                /*search box css start here*/\n.search-sec{\n    padding: 2rem;\n}\n.search-slt{\n    display: block;\n    width: 100%;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    color: #55595c;\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid #ccc;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n.wrn-btn{\n    width: 100%;\n    font-size: 16px;\n    font-weight: 400;\n    text-transform: capitalize;\n    height: calc(3rem + 2px) !important;\n    border-radius:0;\n}\n@media (min-width: 992px){\n    .search-sec{\n        position: relative;\n        top: -114px;\n        background: rgba(26, 70, 104, 0.51);\n    }\n}\n\n@media (max-width: 992px){\n    .search-sec{\n        background: #1A4668;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                    Search                                                            0\">                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentInterface.html":{"url":"interfaces/SegmentInterface.html","title":"interface - SegmentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/clasification-interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdName\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            genres\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:         GenreInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GenreInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClassificationInterface{\n    \n    segment:IdName[],\n    genre:IdName[],\n    subGenre:IdName[]\n}\nexport enum ClassType{\n    Segment,\n    Genre,\n    Subgenre\n}\nexport interface IdClassType extends IdName {\n    type:ClassType\n}\nexport interface SegmentInterface extends IdName{\n    genres:GenreInterface[];   \n}\nexport interface GenreInterface extends IdName{\n    subgenres:IdName[]\n}\nexport interface IdName{\n    id:string,\n    name:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketmasterService.html":{"url":"injectables/TicketmasterService.html","title":"injectable - TicketmasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketmasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/ticketmaster/ticketmaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseurl\n                            \n                            \n                                header\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClassification\n                            \n                            \n                                getEvents\n                            \n                            \n                                getEventsQuery\n                            \n                            \n                                invalidDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, platformLocation: PlatformLocation, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClassification\n                        \n                    \n                \n            \n            \n                \ngetClassification(kw: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kw\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEvents\n                        \n                    \n                \n            \n            \n                \ngetEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventsQuery\n                        \n                    \n                \n            \n            \n                \ngetEventsQuery(query: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidDate\n                        \n                    \n                \n            \n            \n                \ninvalidDate(d: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/ticketmaster/ticketmaster.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseurl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        header\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n                    \n                \n                    \n                        \n                                Defined in src/app/network/ticketmaster/ticketmaster.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { PlatformLocation } from '@angular/common';\n\nimport { ticketMasterApi } from 'src/environments/env-prod';\nimport { Observable, concatMap, filter, iif, map, mergeMap, of, take, throwError } from 'rxjs';\nimport { EventPageInterface } from 'src/app/interfaces/eventpage-interface';\nimport { ClassificationInterface } from 'src/app/interfaces/clasification-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketmasterService {\n  private baseurl:string;\n  constructor(private http: HttpClient,\n    private platformLocation: PlatformLocation,\n    private router: Router) {\n      this.baseurl = (this.platformLocation as any)._location.origin+\"/ticketmaster\";\n      // uncomment for production build\n      // this.baseurl = \"https://app.ticketmaster.com/discovery/v2\";\n    }\n    \n    header = \n      new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n\n    getClassification(kw:string):Observable{\n      return this.http.get(this.baseurl+\"/\"+\"classifications.json\", {params:{apikey:ticketMasterApi, keyword:kw}}).pipe(\n        filter((x:any)=>{\n          return x.page.totalElements>0 && kw.length > 0;\n        }),\n        map((x:any)=>{\n          var cs:any[] = x._embedded.classifications;\n          var ans:ClassificationInterface = {segment:[], subGenre:[], genre:[]};//must\n          cs.forEach((a)=>{\n            if(!a?.segment?.id) return;\n            ans.segment.push({id:a.segment.id, name:a.segment.name});\n            a.segment._embedded.genres.forEach((g:any)=> {\n              if(!g?.id) return;\n              ans.genre.push({id:g.id, name:g.name});\n              g._embedded.subgenres.forEach((sg:any)=>{\n                if(!sg?.id) return;\n                ans.subGenre.push({id:sg.id, name:sg.name});\n              });\n            });\n          });\n          return ans;\n        })\n      );\n    }\n    getEvents():Observable{\n      var today  =new Date();\n      var str = today.toISOString();\n      str = str.slice(0, str.length-5).concat(\"Z\");\n      return this.http.get(this.baseurl+\"/events.json\", {params:{apikey:ticketMasterApi, startDateTime:str}}).pipe(\n        map((x:any)=>{\n          \n          var rtn:any = {page:undefined, events:undefined};\n          rtn.page = x.page;\n\n          x = x._embedded;\n          \n          rtn.events = x.events.map((e:any)=>{\n            var sd = new Date(e.dates?.start.dateTime);\n            var ed:Date = new Date(e.dates?.end);\n            \n            \n            return {\n              id:e.id, details:e.description, \n              images:e.images.map((img:any)=>img.url),\n              location:e._embedded?.venues.map((v:any)=>v.name), \n              name:e.name, \n              startDate: (!this.invalidDate(sd))? sd: undefined, \n              endDate:(!this.invalidDate(ed))? ed: undefined\n            };\n          });\n          return (rtn as EventPageInterface);\n        \n        }),\n        take(1)\n        \n        );\n    }\n    getEventsQuery(query:any):Observable{\n      query.apikey = ticketMasterApi;\n      console.log(query);\n      //.pipe(mergeMap(v => iif(() => v % 4 === 0, r$, x$)))\n      return this.http.get(this.baseurl+\"/events.json\", {params:query}).pipe(\n        map((x:any)=>{\n          //here check that the page.totalElements if ==0 throw error\n          var rtn:any = {page:undefined, events:undefined};\n          rtn.page = x.page;\n          if(rtn.page.totalElements==0){\n            return {page:rtn.page, events:[]}\n          }\n          x = x._embedded;\n        \n          rtn.events = x.events.map((e:any)=>{\n            var sd = new Date(e.dates?.start.dateTime);\n            var ed:Date = new Date(e.dates?.end);\n            return {\n              id:e.id, details:e.description, \n              images:e.images.map((img:any)=>img.url),\n              location:e._embedded?.venues.map((v:any)=>v.name), \n              name:e.name, \n              startDate: (!this.invalidDate(sd))? sd: undefined, \n              endDate:(!this.invalidDate(ed))? ed: undefined\n            };\n          });\n          var rtnn:EventPageInterface = rtn as EventPageInterface;\n          rtnn.page.totalElements = Math.min(20*20, rtnn.page.totalElements)\n          return rtnn;\n        }), \n        take(1))\n    }\n    invalidDate(d:Date){\n      return Number.isNaN(d.valueOf());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n    readonly id: string;\n    readonly name: string;\n    readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewGroupFacade.html":{"url":"injectables/ViewGroupFacade.html","title":"injectable - ViewGroupFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViewGroupFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/facade/ViewGroupFacade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adminGroups$\n                            \n                            \n                                currentUser$\n                            \n                            \n                                dateColor$\n                            \n                            \n                                group$\n                            \n                            \n                                groupById$\n                            \n                            \n                                groupCalendar$\n                            \n                            \n                                memberGroups$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmGroupbooking\n                            \n                            \n                                confirmGroupEvent\n                            \n                            \n                                copyInviteLink\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                getGroup\n                            \n                            \n                                getGroupCalander\n                            \n                            \n                                getGroups\n                            \n                            \n                                getGrpById\n                            \n                            \n                                getStartDate\n                            \n                            \n                                isInGroup\n                            \n                            \n                                joinGroup\n                            \n                            \n                                kickUser\n                            \n                            \n                                sendGroupConfirmation\n                            \n                            \n                                    Private\n                                setGroupCalanderColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthenticationService, calSvc: CalendarService, clipboard: Clipboard, grpSvc: GroupService, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/facade/ViewGroupFacade.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calSvc\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipboard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grpSvc\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupbooking\n                        \n                    \n                \n            \n            \n                \nconfirmGroupbooking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:153\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmGroupEvent\n                        \n                    \n                \n            \n            \n                \nconfirmGroupEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:170\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyInviteLink\n                        \n                    \n                \n            \n            \n                \ncopyInviteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroup\n                        \n                    \n                \n            \n            \n                \ngetGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupCalander\n                        \n                    \n                \n            \n            \n                \ngetGroupCalander(g: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrpById\n                        \n                    \n                \n            \n            \n                \ngetGrpById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStartDate\n                        \n                    \n                \n            \n            \n                \ngetStartDate(d?: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NgbDate\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInGroup\n                        \n                    \n                \n            \n            \n                \nisInGroup(group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \njoinGroup(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kickUser\n                        \n                    \n                \n            \n            \n                \nkickUser(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGroupConfirmation\n                        \n                    \n                \n            \n            \n                \nsendGroupConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGroupCalanderColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGroupCalanderColor(grpCal: CalanderEvent[], group: GroupInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/facade/ViewGroupFacade.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                grpCal\n                                            \n                                                            CalanderEvent[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                group\n                                            \n                                                            GroupInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CalanderColor\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adminGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({id:\"\",email:\"\",name:\"\"})\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupById$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupCalendar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberGroups$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/facade/ViewGroupFacade.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthenticationService } from \"../network/firebase/authentication/authentication.service\"\nimport { GroupService } from \"../network/firebase/firestore/group.service\"\nimport { UserInterface } from \"../interfaces/user-interface\"\nimport { GroupInterface } from \"../interfaces/group-interface\"\nimport { CalendarService } from '../network/firebase/firestore/calendar.service';\nimport { PlatformLocation } from '@angular/common';\nimport { BehaviorSubject, Observable, from, iif, map, of, switchMap, tap } from 'rxjs';\nimport { CalanderEvent } from \"../interfaces/calander-interface/CalanderEvent-interface\"\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { CalanderColor, CalanderType, CalanderTypeColor, CalanderTypePriority } from '../interfaces/enums/calenderenum';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewGroupFacade {\n\n  \t\n    group$: BehaviorSubject = new BehaviorSubject(undefined);\n    dateColor$: BehaviorSubject = new BehaviorSubject([]); //should be date range better // wtf does this mean\n    groupCalendar$: BehaviorSubject = new BehaviorSubject([]);\n    adminGroups$: BehaviorSubject = new BehaviorSubject([]);\n    memberGroups$: BehaviorSubject = new BehaviorSubject([]);\n    groupById$: BehaviorSubject = new BehaviorSubject(undefined);\n    currentUser$:BehaviorSubject = new BehaviorSubject({id:\"\",email:\"\",name:\"\"});\n    constructor(\n        private authSvc:AuthenticationService, \n        private calSvc: CalendarService,\n        private clipboard:Clipboard,\n        private grpSvc: GroupService,\n        private platformLocation: PlatformLocation,\n    ) {\n\n    \n  }\n    getCurrentUser(){\n        return this.authSvc.getCurrentUser().then(u=>this.currentUser$.next(u));\n    }\n    getGroup(id:string){        \n        return this.grpSvc.getGroupById(id).subscribe(group=>{\n            this.group$.next(group);\n        });    \n    }\n    getGroups(){\n        this.authSvc.getCurrentUser().then(user=>{\n            this.grpSvc.getGroups(user).subscribe(grps=>{\n                let adm: GroupInterface[] = [];\n                let nadm: GroupInterface[] = [];\n                grps.forEach(grp=>{\n                    if (grp.admin.id === user.id)\n                        adm.push(grp);\n                    else \n                        nadm.push(grp);\n                });     \n                this.adminGroups$.next(adm);\n                this.memberGroups$.next(nadm);\n            })\n        });\n    }\n    getGroupCalander(g:GroupInterface){\n        // Get latest group\n        this.grpSvc.getGroupById(g.id).pipe(\n            switchMap((group:GroupInterface)=>this.calSvc.getGroupCalendar(group).pipe(\n                tap((grpCal:CalanderEvent[])=>{\n                    grpCal.sort((a,b)=>{//sort by time then sort by calanderType, Booked for event is the highest priority\n                        if(a.start {\n\n        return from(this.authSvc.getCurrentUser()).pipe(\n            switchMap(u=>this.grpSvc.getGroupById(group.id).pipe(\n                switchMap((grp:GroupInterface)=>{\n                    return iif(()=>grp.allUUID.includes(u.id), of(true), of(false))\n                })\n\n            ))\n        );\n    }\n\n    private setGroupCalanderColor(grpCal:CalanderEvent[],group:GroupInterface):CalanderColor{\n        if(grpCal.length==0) return CalanderColor.AllAvailable;\n        var cmiCount = [...new Set(grpCal.map(i=>i.user.id))].length;\n        console.log(cmiCount+\"/\"+group.allUUID.length);\n        if (cmiCount==group.allUUID.length)return CalanderColor.NotFreeAtAll\n        return CalanderColor.SomeFree\n        \n    }\n\n    copyInviteLink() {\n        var base_url = (this.platformLocation as any)._location.origin+\"/group\"+\"/\"+this.group$.value!.id;\n        this.clipboard.copy(base_url);\n    }\n\n    deleteGroup(): Promise {\n        return this.grpSvc.deleteGroup(this.group$.value!);\n    }\n\n    kickUser(user: UserInterface): Promise {\n        return this.grpSvc.removeFromGroup(this.group$.value!, user);\n    }\n\n    joinGroup(id: string): Observable {\n        return from(this.authSvc.getCurrentUser()).pipe(\n            switchMap((user:UserInterface)=>from(this.grpSvc.joinGroup(id, user)))\n        );\n        \n    \n    }\n\n    getStartDate(d?: Date): NgbDate{\n        if (!d)\n            d = new Date();\n        return new NgbDate(d.getFullYear(), d.getMonth()+1, d.getDate());\n    }\n\n    getGrpById(id: string): Observable{\n        let obs: Observable = this.grpSvc.getGroupById(id);\n        obs.subscribe(grp=>{\n            this.groupById$.next(grp);\n        });\n        return obs;\n    }\n    sendGroupConfirmation(): Promise{\n        //groupInterface\n        return new Promise((res,rej)=>{\n            if (!this.group$.value)\n                return rej(new Error(\"Group invalid.\"));\n            if (this.group$.value.confirmed.length === this.group$.value.allUUID.length)\n                return rej(new Error(\"Group all members confirmed\"));\n            this.grpSvc.sendGroupConfirmation(this.group$.value!).then(_=>{\n                return res();\n            });\n        });\n    }   \n    confirmGroupbooking(): Promise{\n        //groupInterface\n        return new Promise((res,rej)=>{\n            if (!this.group$.value)\n                return rej(new Error(\"Group invalid.\"));\n            if (this.group$.value.confirmed.length === 0)\n                return rej(new Error(\"Group no members confirmed\"));\n            let calUpdateProm = this.calSvc.convertReservedToBooked(this.group$.value);\n            let grpUpdateProm = this.grpSvc.confirmGroupBooking(this.group$.value!)\n\n            Promise.all([calUpdateProm,grpUpdateProm]).then(_=>{\n                return res();\n            })\n        });\n        \n    }\n\n    confirmGroupEvent(): Observable{\n        return this.grpSvc.confirmGroupEvent(this.group$.value!, this.currentUser$.value);\n       \n    }\n\t\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WatchlistPageComponent.html":{"url":"components/WatchlistPageComponent.html","title":"component - WatchlistPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WatchlistPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/watchlist-page/watchlist-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-watchlist-page\n            \n\n\n\n            \n                styleUrls\n                ./watchlist-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./watchlist-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchFacade: SearchFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchFacade\n                                                  \n                                                        \n                                                                        SearchFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/watchlist-page/watchlist-page.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchFacadeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/watchlist-page/watchlist-page.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SearchFacadeService } from '../facade/search-facade.service';\n\n@Component({\n  selector: 'app-watchlist-page',\n  templateUrl: './watchlist-page.component.html',\n  styleUrls: ['./watchlist-page.component.css']\n})\nexport class WatchlistPageComponent {\n  constructor(\n    public searchFacade:SearchFacadeService){}\n\n  ngOnInit(){\n    this.searchFacade.getWatchList();  \n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n    \n    \n\n    \n\n    \n                \n                    ./watchlist-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalanderComponent', 'selector': 'app-calander'},{'name': 'ClassificationComponentComponent', 'selector': 'app-classification-component'},{'name': 'EventComponentComponent', 'selector': 'app-event-component'},{'name': 'GroupCreateComponent', 'selector': 'app-group-create'},{'name': 'GroupDetailComponent', 'selector': 'app-group-detail'},{'name': 'GroupListComponent', 'selector': 'app-group-list'},{'name': 'GroupPageComponent', 'selector': 'app-group-page'},{'name': 'ListEventsComponent', 'selector': 'app-list-events'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PersonalCalenderPageComponent', 'selector': 'app-personal-calender-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'WatchlistPageComponent', 'selector': 'app-watchlist-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WatchlistPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WatchlistService.html":{"url":"injectables/WatchlistService.html","title":"injectable - WatchlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WatchlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/firebase/firestore/watchlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addWatchlistEvent\n                            \n                            \n                                    Private\n                                dbwatchlistToEvent\n                            \n                            \n                                    Private\n                                eventToDbWatchlist\n                            \n                            \n                                getWatchlist\n                            \n                            \n                                removeWatchlistEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/firebase/firestore/watchlist.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addWatchlistEvent\n                        \n                    \n                \n            \n            \n                \naddWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dbwatchlistToEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    dbwatchlistToEvent(dbEvent: DocumentData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbEvent\n                                            \n                                                        DocumentData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         EventInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventToDbWatchlist\n                        \n                    \n                \n            \n            \n                \n                        \n                    eventToDbWatchlist(event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchlist\n                        \n                    \n                \n            \n            \n                \ngetWatchlist(user: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeWatchlistEvent\n                        \n                    \n                \n            \n            \n                \nremoveWatchlistEvent(user: UserInterface, event: EventInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/network/firebase/firestore/watchlist.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EventInterface } from 'src/app/interfaces/event-interface';\nimport { UserInterface } from 'src/app/interfaces/user-interface';\nimport { Firestore, docData, doc, DocumentData, updateDoc, arrayUnion, arrayRemove, setDoc} from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatchlistService {\n\n  constructor(private fs: Firestore) { }\n\n  private eventToDbWatchlist(event:EventInterface): any{\n    let watchListEvent: any = {id: event.id}\n\n    if (event.name !== undefined)\n      watchListEvent.name = event.name\n    if (event.location !== undefined)\n      watchListEvent.location = event.location\n    if (event.images !== undefined)\n      watchListEvent.images = event.images\n    if (event.details !== undefined)\n      watchListEvent.details = event.details\n    if (event.startDate !== undefined)\n      watchListEvent.startDate = event.startDate\n    if (event.endDate !== undefined)\n      watchListEvent.endDate = event.endDate\n\n    return watchListEvent;\n  }\n\n  private dbwatchlistToEvent(dbEvent: DocumentData ): EventInterface{\n    let event: EventInterface = {\n      id: dbEvent['id'],\n      name: dbEvent['name'],\n      location: dbEvent['location'],\n      images: dbEvent['images'],\n      details: dbEvent['details'],\n      startDate: dbEvent['startDate']? new Date(dbEvent['startDate']?.toDate()): undefined,\n      endDate: dbEvent['endDate']? new Date(dbEvent['endDate']?.toDate()): undefined\n    }\n    \n\n    return event\n  }\n\n  getWatchlist(user: UserInterface): Observable{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n\n    return new Observable(obs=>{\n      docData(watchDoc).subscribe(data=>{\n        let watchlist:EventInterface[] = [];\n        if (data===undefined){\n          obs.next(watchlist);\n          return;\n        } \n        data['saved'].forEach((event: DocumentData)=>{\n          \n          watchlist.push(this.dbwatchlistToEvent(event))\n        })\n        obs.next(watchlist);\n      });\n    });\n  }\n\n  addWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    \n    let update = {saved: arrayUnion(this.eventToDbWatchlist(event))}\n    \n    // Attempt to append to document, if not found, initialise a new one.\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      }).catch(rej=>{\n        if (rej.code == \"not-found\"){\n          setDoc(watchDoc,update).then(_=>{\n            res();\n          })\n        } else {\n          throw(rej);\n        }\n      })\n    })\n  }\n\n  removeWatchlistEvent(user: UserInterface, event: EventInterface): Promise{\n    let watchDoc = doc(this.fs, `watchlist/${user.id}`);\n    let update = {saved: arrayRemove(this.eventToDbWatchlist(event))}\n\n    return new Promise(res=>{\n      updateDoc(watchDoc, update).then(_=>{\n        res();\n      })\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/class/NewCalendarEvent.ts\n            \n            class\n            NewCalendarEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/common/calander/calander.component.ts\n            \n            component\n            CalanderComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/common/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/facade/CreateGroupFacade.ts\n            \n            injectable\n            CreateGroupFacade\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/facade/PersonalCalendarFacade.ts\n            \n            injectable\n            CalendarFacade\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/facade/ViewGroupFacade.ts\n            \n            injectable\n            ViewGroupFacade\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/facade/search-facade.service.ts\n            \n            injectable\n            SearchFacadeService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/group-page/group-create/group-create.component.ts\n            \n            component\n            GroupCreateComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/group-page/group-detail/group-detail.component.ts\n            \n            component\n            GroupDetailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/group-page/group-list/group-list.component.ts\n            \n            component\n            GroupListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/group-page/group-page.component.ts\n            \n            component\n            GroupPageComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/group-page/groupmember-pipe.pipe.ts\n            \n            pipe\n            GroupmemberPipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/group-page/grouppipe.pipe.ts\n            \n            pipe\n            GrouppipePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEvent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/calander-interface/CalanderEvent-interface.ts\n            \n            interface\n            CalanderEventColor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            ClassificationInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            GenreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdClassType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            IdName\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/clasification-interface.ts\n            \n            interface\n            SegmentInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypeColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/enums/calenderenum.ts\n            \n            variable\n            CalanderTypePriority\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            class\n            EventClass\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/event-interface.ts\n            \n            interface\n            EventInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/eventpage-interface.ts\n            \n            interface\n            EventPageInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/group-interface.ts\n            \n            interface\n            GroupInterface\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/page-interface.ts\n            \n            interface\n            PageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            dates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            e2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            end3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            g2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            start3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            user4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/testdata.ts\n            \n            variable\n            watchlist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/user-interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/network/firebase/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/calendar.service.ts\n            \n            injectable\n            CalendarService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/network/firebase/firestore/watchlist.service.ts\n            \n            injectable\n            WatchlistService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/network/ticketmaster/ticketmaster.service.ts\n            \n            injectable\n            TicketmasterService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/personal-calender-page/personal-calender-page.component.ts\n            \n            component\n            PersonalCalenderPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/search-page/classification-component/classification-component.component.ts\n            \n            component\n            ClassificationComponentComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/search-page/event-component/event-component.component.ts\n            \n            component\n            EventComponentComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/inwatchlist.pipe.ts\n            \n            pipe\n            InwatchlistPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search-page/list-events/list-events.component.ts\n            \n            component\n            ListEventsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/search-page/search-page.component.ts\n            \n            component\n            SearchPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/watchlist-page/watchlist-page.component.ts\n            \n            component\n            WatchlistPageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/env-prod.ts\n            \n            variable\n            ticketMasterApi\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.12\n        \n            @angular/cdk : ^16.2.14\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/fire : ^16.0.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @ng-bootstrap/ng-bootstrap : ^15.1.2\n        \n            @popperjs/core : ^2.11.8\n        \n            angular-calendar : ^0.31.0\n        \n            bootstrap : ^5.2.3\n        \n            ngx-toastr : ^18.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CalanderColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderType   (src/.../calenderenum.ts)\n                        \n                        \n                            ClassType   (src/.../clasification-interface.ts)\n                        \n                        \n                            GroupMemberStatus   (src/.../GroupStatus.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n            \n                \n                    \n                        \n                        CalanderColor\n                    \n                \n                        \n                            \n                                 NotFreeAtAll\n                            \n                        \n                        \n                            \n                                Value : #d9534f\n                            \n                        \n                        \n                            \n                                 SomeFree\n                            \n                        \n                        \n                            \n                                Value : #f0ad4e\n                            \n                        \n                        \n                            \n                                 AllAvailable\n                            \n                        \n                        \n                            \n                                Value : #5cb85c\n                            \n                        \n                        \n                            \n                                 Default\n                            \n                        \n                        \n                            \n                                Value : #0275D8\n                            \n                        \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : #00a2a8\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : #efcb00\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : #b0d04a\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CalanderType\n                    \n                \n                        \n                            \n                                 Personal\n                            \n                        \n                        \n                            \n                                Value : Personal\n                            \n                        \n                        \n                            \n                                 ReservedForEvent\n                            \n                        \n                        \n                            \n                                Value : ReservedForEvent\n                            \n                        \n                        \n                            \n                                 BookedForEvent\n                            \n                        \n                        \n                            \n                                Value : BookedForEvent\n                            \n                        \n            \n        \n\n    src/app/interfaces/clasification-interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ClassType\n                    \n                \n                        \n                            \n                                 Segment\n                            \n                        \n                        \n                            \n                                 Genre\n                            \n                        \n                        \n                            \n                                 Subgenre\n                            \n                        \n            \n        \n\n    src/app/interfaces/enums/GroupStatus.ts\n    \n        \n            \n                \n                    \n                        \n                        GroupMemberStatus\n                    \n                \n                        \n                            \n                                 Going\n                            \n                        \n                        \n                            \n                                Value : Going\n                            \n                        \n                        \n                            \n                                 NotGoing\n                            \n                        \n                        \n                            \n                                Value : Not Going\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTicketbuddy\nThis project was generated with Angular CLI version 16.1.5.\nInstallation\n\nDownload and install Node.js and npm.\nClone the project.\nInstall libraries using npm install\n\nSet up\nCreate a file 'env-prod.ts' under './src/environments'.\n1. Ticketmaster\n\nGet an API key from Ticketmaster.\nAdd the following line into env-prod.ts with the ticket master api key.\nexport const ticketMasterApi = \"your-ticket-master-api-key\";\n\n2. Firebase config\n\nCreate a new Firebase project.\nAdd Firebase to your Web App.\nIgnore any npm install commands, this is already completed earlier.\nCopy the firebaseConfig provided.\nPaste the config into env-prod.ts with the export keyword. It should look like the following.\nexport const firebaseConfig = {\n apiKey: \"your-proj-api-key\",\n authDomain: \"your-proj-id.firebaseapp.com\",\n  projectId: \"your-proj-id\",\n  storageBucket: \"your-proj-id.appspot.com\",\n  messagingSenderId: \"XXXXXXXXXXXX\",\n  appId: \"1:XXXXXXXXXXXX:web:XXXXXXXXXXXXXXXXXXXXXXXX\",\n  measurementId: \"G-XXXXX\"\n};\n\n3. Firebase Authentication set up\n\nOpen firebase console, navigate to the project created earlier.\nSelect Authentication. \nEnable Google as a sign-in provider.\n\n4. Firebase Firestore set up\n\nOpen firebase console, navigate to the project created earlier.\nCreate Cloud Firestore database in test mode.\nUnder Extensions, install the \"Trigger Email from Firestore\" extension.\n\nRunning the project\nRun the project using npm start\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCalanderComponent\n\nCalanderComponent\n\nAppModule -->\n\nCalanderComponent->AppModule\n\n\n\n\n\nClassificationComponentComponent\n\nClassificationComponentComponent\n\nAppModule -->\n\nClassificationComponentComponent->AppModule\n\n\n\n\n\nEventComponentComponent\n\nEventComponentComponent\n\nAppModule -->\n\nEventComponentComponent->AppModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\nAppModule -->\n\nGroupCreateComponent->AppModule\n\n\n\n\n\nGroupDetailComponent\n\nGroupDetailComponent\n\nAppModule -->\n\nGroupDetailComponent->AppModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nAppModule -->\n\nGroupListComponent->AppModule\n\n\n\n\n\nGroupPageComponent\n\nGroupPageComponent\n\nAppModule -->\n\nGroupPageComponent->AppModule\n\n\n\n\n\nGroupmemberPipePipe\n\nGroupmemberPipePipe\n\nAppModule -->\n\nGroupmemberPipePipe->AppModule\n\n\n\n\n\nGrouppipePipe\n\nGrouppipePipe\n\nAppModule -->\n\nGrouppipePipe->AppModule\n\n\n\n\n\nInwatchlistPipe\n\nInwatchlistPipe\n\nAppModule -->\n\nInwatchlistPipe->AppModule\n\n\n\n\n\nListEventsComponent\n\nListEventsComponent\n\nAppModule -->\n\nListEventsComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPersonalCalenderPageComponent\n\nPersonalCalenderPageComponent\n\nAppModule -->\n\nPersonalCalenderPageComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nWatchlistPageComponent\n\nWatchlistPageComponent\n\nAppModule -->\n\nWatchlistPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(firebaseConfig)) -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))\n\n initializeApp(firebaseConfig))->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(firebaseConfig))->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            CalanderTypeColor   (src/.../calenderenum.ts)\n                        \n                        \n                            CalanderTypePriority   (src/.../calenderenum.ts)\n                        \n                        \n                            dates   (src/.../testdata.ts)\n                        \n                        \n                            e1   (src/.../testdata.ts)\n                        \n                        \n                            e2   (src/.../testdata.ts)\n                        \n                        \n                            end   (src/.../testdata.ts)\n                        \n                        \n                            end2   (src/.../testdata.ts)\n                        \n                        \n                            end3   (src/.../testdata.ts)\n                        \n                        \n                            firebaseConfig   (src/.../env-prod.ts)\n                        \n                        \n                            g1   (src/.../testdata.ts)\n                        \n                        \n                            g2   (src/.../testdata.ts)\n                        \n                        \n                            start   (src/.../testdata.ts)\n                        \n                        \n                            start2   (src/.../testdata.ts)\n                        \n                        \n                            start3   (src/.../testdata.ts)\n                        \n                        \n                            ticketMasterApi   (src/.../env-prod.ts)\n                        \n                        \n                            user1   (src/.../testdata.ts)\n                        \n                        \n                            user2   (src/.../testdata.ts)\n                        \n                        \n                            user3   (src/.../testdata.ts)\n                        \n                        \n                            user4   (src/.../testdata.ts)\n                        \n                        \n                            watchlist   (src/.../testdata.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authApi:AuthenticationService = inject(AuthenticationService);\n  const router:Router = inject(Router);\n  return authApi.isAuthenticated().pipe(\n    tap((x:boolean)=>{\n      if(!x){\n        router.navigate(['login'], {queryParams: {returnUrl: state.url }});\n        \n      }\n      \n    })\n  );\n  \n}\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/enums/calenderenum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CalanderTypeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, CalanderColor.BookedForEvent],\n    [CalanderType.ReservedForEvent, CalanderColor.ReservedForEvent],\n    [CalanderType.Personal, CalanderColor.Personal]  \n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CalanderTypePriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n    [CalanderType.BookedForEvent, 1],\n    [CalanderType.ReservedForEvent, 2],\n    [CalanderType.Personal, 3]  \n])\n                    \n                \n\n\n        \n    \n\n    src/app/interfaces/testdata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CalanderEvent[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start, \n    end:end, \n    detail:\"Doctors Appointment\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start2, \n    end:end2, \n    detail:\"School project meeting\", \n    type:CalanderType.Personal},\n    {user:{name:\"john\", id:\"user1\", email: \"ur@mother.com\"}, \n    start:start3, \n    end:end3, \n    detail:\"Dental Checkup\", \n    type:CalanderType.Personal}\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt1\", name:\"Superbowl\", location:[\"Seatle stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event\", startDate: new Date(2024, 3, 27, 17,30), endDate:new Date(2024, 3, 27, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        e2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"evt2\", name:\"Taylor Swift\", location:[\"Singpoare Stadium\"], \n    images:[\"https://picsum.photos/id/0/900/500\", \"https://picsum.photos/id/1/900/500\", \"https://picsum.photos/id/2/900/500\"], \n    details:\"Fake event 2\", startDate: new Date(2024, 3, 17, 17,30), endDate:new Date(2024, 3, 17, 19,30)}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start3.getTime() + 2*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp1\", name:\"TS fan group\", \n    event: e2, admin:user1, members:[user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        g2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:\"grp2\", name:\"GO Patriots Group\", \n    event: e1, admin:user4, members:[user1, user2, user3], \n    confirmed:[], booked:false, allUUID:[\"user4\",\"user1\", \"user2\", \"user3\"]}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(2024, 2, 27, 3 ,30,0)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(start2.getTime() + 5*60*60*1000)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"john\", email: \"ur@mother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"becca\", email: \"ur@father.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Tom\", email: \"ur@sister.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInterface\n\n                    \n                \n                \n                    \n                        Default value : {id:\"user1id\", name:\"Rick\", email: \"ur@brother.com\"}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchlist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventInterface[]\n\n                    \n                \n                \n                    \n                        Default value : [e1, e2]\n                    \n                \n\n\n        \n    \n\n    src/environments/env-prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiKey: \"AIzaSyDjqnG3Ye8IF6TcSPj_psTFYMizlnFvoOw\",\n    authDomain: \"ticket-bud.firebaseapp.com\",\n    projectId: \"ticket-bud\",\n    storageBucket: \"ticket-bud.appspot.com\",\n    messagingSenderId: \"297938436292\",\n    appId: \"1:297938436292:web:f09902d21ddd4fde388991\",\n    measurementId: \"G-Y4Q5TLEBGB\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticketMasterApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"5Jqei2SXCUbEHOfAy9F6vyC4wA8Pj6s0\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
